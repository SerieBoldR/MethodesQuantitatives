[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Méthodes quantitatives en sciences sociales : un grand bol d’R",
    "section": "",
    "text": "Préface\nCe livre vise à décrire une panoplie de méthodes quantitatives utilisées en sciences sociales avec le logiciel ouvert R. Il a d’ailleurs été écrit intégralement dans R avec Quatro. Le contenu est pensé pour être accessible à tous et toutes, même à ceux et celles n’ayant presque aucune base en statistique ou en programmation. Les personnes plus expérimentées y découvriront des sections sur des méthodes plus avancées comme les modèles à effets mixtes, les modèles multiniveaux, les modèles généralisés additifs ainsi que les méthodes factorielles et de classification. Ceux et celles souhaitant migrer progressivement d’un autre logiciel statistique vers R trouveront dans cet ouvrage les éléments pour une transition en douceur. La philosophie de ce livre est de donner toutes les clefs de compréhension et de mise en œuvre des méthodes abordées dans R. La présentation des méthodes est basée sur une approche compréhensive et intuitive plutôt que mathématique, sans pour autant que la rigueur statistique ne soit négligée. Servez-vous votre boisson chaude ou froide favorite et installez-vous dans votre meilleur fauteuil. Bonne lecture!"
  },
  {
    "objectID": "index.html#sect001",
    "href": "index.html#sect001",
    "title": "Méthodes quantitatives en sciences sociales : un grand bol d’R",
    "section": "Un manuel sous la forme d’une ressource éducative libre",
    "text": "Un manuel sous la forme d’une ressource éducative libre\nPourquoi un manuel sous licence libre?\nLes logiciels libres sont aujourd’hui très répandus. Comparativement aux logiciels propriétaires, l’accès au code source permet à quiconque de l’utiliser, de le modifier, de le dupliquer et de le partager. Le logiciel R, dans lequel sont mises en œuvre les méthodes quantitatives décrites décrites dans ce livre, est d’ailleurs à la fois un langage de programmation et un logiciel libre (sous la licence publique générale GNU GPL2). Par analogie aux logiciels libres, il existe aussi des ressources éducatives libres (REL) « dont la licence accorde les permissions désignées par les 5R (Retenir — Réutiliser — Réviser — Remixer — Redistribuer) et donc permet nécessairement la modification » (fabriqueREL). La licence de ce livre, CC BY-SA (figure 1), permet donc de :\n\nRetenir, c’est-à-dire télécharger et imprimer gratuitement le livre. Notez qu’il aurait été plutôt surprenant d’écrire un livre payant sur un logiciel libre et donc gratuit. Aussi, nous aurions été très embarrassés que des personnes étudiantes avec des ressources financières limitées doivent payer pour avoir accès au livre, sans pour autant savoir préalablement si le contenu est réellement adapté à leurs besoins.\nRéutiliser, c’est-à-dire utiliser la totalité ou une section du livre sans limitation et sans compensation financière. Cela permet ainsi à d’autres personnes enseignantes de l’utiliser dans le cadre d’activités pédagogiques.\nRéviser, c’est-à-dire modifier, adapter et traduire le contenu en fonction d’un besoin pédagogique précis puisqu’aucun manuel n’est parfait, tant s’en faut! Le livre a d’ailleurs été écrit intégralement dans R avec Quatro. Quiconque peut ainsi télécharger gratuitement le code source du livre sur github et le modifier à sa guise (voir l’encadré intitulé Suggestions d’adaptation du manuel).\nRemixer, c’est-à-dire « combiner la ressource avec d’autres ressources dont la licence le permet aussi pour créer une nouvelle ressource intégrée » (fabriqueREL).\nRedistribuer, c’est-à-dire distribuer, en totalité ou en partie, le manuel ou une version révisée sur d’autres canaux que le site Web du livre (par exemple, sur le site Moodle de votre université ou en faire une version imprimée).\n\nLa licence de ce livre, CC BY-SA (figure 1), oblige donc à :\n\nAttribuer la paternité de l’auteur dans vos versions dérivées, ainsi qu’une mention concernant les grandes modifications apportées, en utilisant la formulation suivante : Apparicio Philippe et Jérémy Gelb (2024). Méthodes quantitatives en sciences sociales : un grand bol d’R. Université de Sherbrooke. fabriqueREL. Licence CC BY-SA.\nUtiliser la même licence ou une licence similaire à toutes versions dérivées.\n\n\n\nFigure 1: Licence Creative Commons du livre\n\n\n\n\n\n\nSuggestions d’adaptation du manuel\n\n\nPour chaque méthode d’analyse spatiale abordée dans le livre, une description détaillée et une mise en œuvre dans R sont disponibles. Par conséquent, plusieurs adaptations du manuel sont possibles :\n\nConserver uniquement les chapitres sur les méthodes ciblées dans votre cours.\nEn faire une version imprimée et la distribuer aux personnes étudiantes.\nModifier la description d’une ou de plusieurs méthodes en effectuant les mises à jour directement dans les chapitres.\nInsérer ses propres jeux de données dans les sections intitulées Mise en œuvre dans R.\nModifier les tableaux et figures.\nAjouter une série d’exercices.\nModifier les quiz de révision.\nRédiger un nouveau chapitre.\nModifier des syntaxes R. Plusieurs packages R peuvent être utilisés pour mettre en œuvre telle ou telle méthode. Ces derniers évoluent aussi très vite et de nouveaux packages sont proposés fréquemment. Par conséquent, il peut être judicieux de modifier une syntaxe R du livre en fonction de ses habitudes de programmation dans R (utilisation d’autres packages que ceux utilisés dans le manuel par exemple) ou de bien mettre à jour une syntaxe à la suite de la parution d’un nouveau package plus performant ou intéressant.\nToute autre adaptation qui permet de répondre au mieux à un besoin pédagogique."
  },
  {
    "objectID": "index.html#sect002",
    "href": "index.html#sect002",
    "title": "Méthodes quantitatives en sciences sociales : un grand bol d’R",
    "section": "Un manuel conçu comme un projet collaboratif",
    "text": "Un manuel conçu comme un projet collaboratif\nIl existe actuellement de nombreux livres sous licence ouverte écrits avec rmarkdown ou Quarto, répertoriés sur les sites de https://bookdown.org/ et de https://quarto.org/docs/gallery/#books. Sans surprise, R étant un logiciel libre dédié aux méthodes statistiques et à la science des données, plusieurs abordent les méthodes quantitatives, notamment :\n\nBeyond Multiple Linear Regression: Applied Generalized Linear Models and Multilevel Models in R (Roback et Legler 2021), CC BY-NC-SA.\nIntroduction to Econometrics with R (Hanck et al. 2019), CC BY-NC-SA.\nStatistical Inference via Data Science: A ModernDive into R and the Tidyverse (Ismay et Kim 2019), CC BY-NC-SA.\nR Graphics Cookbook, 2nd edition (Chang 2018), CC BY.\n\nPar contre, la grande majorité de ces livres numériques rédigés avec R sont en anglais. À notre connaissance, ce projet constitue le premier manuel numérique en français sur les méthodes quantitatives appliquées aux sciences sociales réalisé avec Quatro. La première version du livre étant lancée, il est grand temps de planifier les suivantes! Pour ce faire, nous considérons ce livre comme un projet collaboratif visant à mobiliser la communauté universitaire francophone qui enseigne les statistiques en sciences sociales avec R. Plusieurs raisons motivent cette vision collaborative :\n\nRien n’est parfait! Cette première version comprend sûrement des coquilles et certaines sections mériteraient d’être améliorées. Les commentaires et suggestions visant à améliorer son contenu sont les bienvenus.\nLa table des matières doit être impérativement extensible! De nombreuses méthodes statistiques très utilisées en sciences sociales ne sont pas abordées dans ce livre et mériteraient d’être ajoutées dans une version ultérieure : certaines extensions des régressions linéaires (régressions Rigge et Lasso, Tobit, quantile, etc.), les modèles d’équations simultanées, les analyses de données longitudinales (entre autres, modèles de survie, régression par panel), les modèles d’équations structurelles et bien d’autres! Par conséquent, si vous êtes intéressé(e)s, à ajouter un nouveau chapitre ou une partie du livre, nous vous invitons vivement à communiquer avec nous ou à diffuser sous une licence similaire votre version dérivée. L’objectif étant de continuer à faire tourner la roue du libre et, idéalement, que les futures versions soient corédigées par une communauté d’auteurs et d’autrices spécialistes en méthodes quantitatives."
  },
  {
    "objectID": "index.html#sect003",
    "href": "index.html#sect003",
    "title": "Méthodes quantitatives en sciences sociales : un grand bol d’R",
    "section": "Comment lire ce livre?",
    "text": "Comment lire ce livre?\nLe livre comprend plusieurs types de blocs de texte qui en facilitent la lecture.\n\n\n\n\n\nBloc packages\n\n\nHabituellement localisé au début d’un chapitre, il comprend la liste des packages R utilisés pour un chapitre.\n\n\n\n\n\n\n\nBloc objectif\n\n\nIl comprend une description des objectifs d’un chapitre ou d’une section.\n\n\n\n\n\n\n\nBloc notes\n\n\nIl comprend une information secondaire sur une notion, une idée abordée dans une section.\n\n\n\n\n\n\n\nBloc pour aller plus loin\n\n\nIl comprend des références ou des extensions d’une méthode abordée dans une section.\n\n\n\n\n\n\n\nBloc astuce\n\n\nIl décrit un élément qui vous facilitera la vie : une propriété statistique, un package, une fonction, une syntaxe R.\n\n\n\n\n\n\n\nBloc attention\n\n\nIl comprend une notion ou un élément important à bien maîtriser.\n\n\n\n\n\n\n\nBloc exercice\n\n\nIl comprend un court exercice de révision à la fin de chaque chapitre."
  },
  {
    "objectID": "index.html#sect003B",
    "href": "index.html#sect003B",
    "title": "Méthodes quantitatives en sciences sociales : un grand bol d’R",
    "section": "Comment utiliser les données du livre pour reproduire les exemples?",
    "text": "Comment utiliser les données du livre pour reproduire les exemples?\nCe livre comprend des exemples détaillés et appliqués dans R pour chacune des méthodes abordées. Ces exemples se basent sur des jeux de données structurés et mis à disposition avec le livre. Ils sont disponibles sur le repo github dans le sous-dossier data, à l’adresse https://github.com/SerieBoldR/MethodesQuantitatives/tree/main/data.\nUne autre option est de télécharger le repo complet du livre directement sur github (https://github.com/SerieBoldR/MethodesQuantitatives) en cliquant sur le bouton Code, puis le bouton Download ZIP (figure 2). Les données se trouvent alors dans le sous-dossier nommé data.\n\n\nFigure 2: Téléchargement de l’intégralité du livre"
  },
  {
    "objectID": "index.html#sect004",
    "href": "index.html#sect004",
    "title": "Méthodes quantitatives en sciences sociales : un grand bol d’R",
    "section": "Liste des packages utilisés",
    "text": "Liste des packages utilisés\nPour écrire ce livre, nous avons utilisé de nombreux packages que vous pouvez installer avec le code ci-dessous.\n\n# Liste des packages\nListePackages &lt;- c(\"actuar\", \"AER\", \"apaTables\", \"boot\", \"car\", \"caret\", \"chorddiag\", \"classInt\", \n                   \"cluster\", \"clusterCrit\", \"correlation\", \"corrplot\", \"DescTools\", \"DHARMa\", \n                   \"dplyr\", \"effectsize\",  \"ellipse\", \"FactoMineR\", \"fastDummies\", \"fitdistrplus\", \n                   \"fmsb\", \"foreign\", \"gamlss\", \"gamlss.add\", \"gamlss.dist\", \"geocmeans\", \"gganimate\",\n                   \"ggeffects\", \"ggplot2\", \"ggpubr\", \"ggpubr\", \"ggpubr\", \"ggpubr\", \"ggspatial\",\n                   \"ggthemes\", \"gmodels\", \"grid\", \"gridExtra\", \"Hmisc\", \"itsadug\", \"kableExtra\", \n                   \"LaplacesDemon\", \"lme4\", \"lmtest\", \"lubridate\", \"MASS\", \"merTools\", \"metR\", \n                   \"mgcv\", \"moments\", \"MuMIn\", \"NbClust\", \"nortest\", \"pdftools\", \"performance\", \n                   \"ppcor\", \"proxy\", \"qqplotr\", \"QuantPsyc\", \"QuantPsyc\", \"QuantPsyc\",\n                   \"RColorBrewer\", \"reshape2\", \"ROCR\", \"rstatix\", \"sandwich\", \"sas7bdat\", \"segmented\",\n                   \"sf\", \"SimDesign\", \"sjstats\", \"snow\", \"splines2\", \"stargazer\", \"stats\", \"stringr\", \n                   \"textrank\", \"tmap\", \"tmap\", \"treemap\", \"udpipe\", \"vcd\", \"VGAM\", \"VGAM\", \"viridis\", \n                   \"Weighted.Desc.Stat\", \"wordcloud2\", \"xlsx\")\n# Packages non installés dans la liste\nPackagesNonInstalles &lt;- ListePackages[!(ListePackages %in% installed.packages()[,\"Package\"])]\n# Installation des packages manquants\nif(length(new.packages)) install.packages(PackagesNonInstalles)"
  },
  {
    "objectID": "index.html#sect005",
    "href": "index.html#sect005",
    "title": "Méthodes quantitatives en sciences sociales : un grand bol d’R",
    "section": "Structure du livre",
    "text": "Structure du livre\nLe livre est organisé autour de cinq grandes parties.\nPartie 1. La découverte de R. Dans cette première partie, nous discutons brièvement de l’histoire et de la philosophie de R. Nous voyons ensuite comment installer R et RStudio. Les bases du langage R (particulièrement les principaux objets que sont le vecteur, la matrice, la liste et le dataframe) ainsi que la manipulation des données avec R sont aussi largement abordés dans le chapitre 1.\nPartie 2. Analyses univariées et représentations graphiques. Cette seconde partie comprend deux chapitres. Dans le chapitre 2, nous décrivons dans un premier temps les différents types de données (primaires versus secondaires, transversales versus longitudinales, spatiales versus aspatiales, individuelles versus agrégées), les différents types de variables quantitatives (discrètes et continues) et qualitatives (nominales et ordinales) et les principales distributions de variables utilisées en sciences sociales (uniforme, Bernoulli, binomiale, géométrique, binomiale négative, poisson, poisson avec excès de zéros, gaussienne, gaussienne asymétrique, log-normale, Student, Cauchy, Chi-carré, exponentielle, Gamma, bêta, Weibull et Pareto). Dans un second temps, nous abordons les statistiques descriptives pour des variables quantitatives (paramètres de tendance centrale, paramètres de position, paramètres de dispersion, paramètres de forme), puis qualitatives (fréquences absolues, relatives et cumulées).\nDans le chapitre 3, nous illustrons les incroyables capacités graphiques de R en mettant en œuvre les principaux graphiques (histogramme, graphique de densité, nuage de points, graphique en lignes, boîtes à moustache, graphique en violon, graphique en barre, graphique circulaire), quelques graphiques particuliers (graphique en radar, diagramme d’accord, nuage de mots, carte proportionnelle) et une initiation aux cartes choroplèthes.\nPartie 3. Analyses bivariées. Cette troisième partie comprend trois chapitres dans lesquelles sont présentées les principales méthodes exploratoires et confirmatoires bivariées permettant d’évaluer la relation entre deux variables. Plus spécifiquement, nous présentons puis mettons en œuvre dans R les méthodes permettant d’explorer les relations entre deux variables quantitatives (covariance, corrélation et régression linéaire simple) dans le chapitre 4, deux variables qualitatives (tableau de contingence et test du khi-deux) dans le chapitre 5 et une variable quantitative avec une variable qualitative avec deux modalités (tests de Student, de Welch et de Wilcoxon) ou avec plus de deux modalités (ANOVA et test de Kruskal-Wallis) dans le chapitre 6.\nPartie 4. Modèles de régression. Dans cette quatrième partie sont présentées les principales méthodes de statistique inférentielle utilisées en sciences sociales : la régression linéaire multiple (chapitre 7), les régressions linéaires généralisées (chapitre 8), les régressions à effets mixtes (chapitre 9), les régressions multiniveaux (chapitre 10), et les modèles généralisés additifs (chapitre 11).\nPartie 5. Analyses exploratoires multivariées. Dans cette cinquième partie sont abordées les méthodes de statistique exploratoire et descriptive permettant de décrire des tableaux de données comprenant plusieurs variables. Nous décrivons d’abord les méthodes de réduction de données : les méthodes factorielles dans le chapitre 12 (analyses de composantes principales, analyses factorielles de correspondances, analyses factorielles de correspondances multiples) et les méthodes de classification non supervisées dans le chapitre 13 (classification ascendante hiérarchique, k-moyennes, k-médianes, k-médoïdes et leurs extensions en logique floue comme les c-moyennes et c-médianes)."
  },
  {
    "objectID": "index.html#sect006",
    "href": "index.html#sect006",
    "title": "Méthodes quantitatives en sciences sociales : un grand bol d’R",
    "section": "Pourquoi faut-il programmer en sciences sociales?",
    "text": "Pourquoi faut-il programmer en sciences sociales?\nVous contrasterez rapidement que R est un véritable langage de programmation. L’apprentissage de ce langage de programmation est-il pour autant pertinent pour les étudiants et étudiantes en sciences sociales? Il est vrai que la programmation n’est pas une compétence qui vient d’emblée à l’esprit lorsque l’on s’intéresse à la recherche aux sciences sociales. Pourtant, elle est de plus en plus importante, et ce, pour plusieurs raisons :\n\nUne part toujours plus grande des phénomènes sociaux se produisent ou peuvent s’observer au travers d’environnements numériques. Être capable d’exploiter efficacement ces outils permet d’extraire des données riches sur des phénomènes complexes, tel qu’en témoignent des études récentes sur la propagation de la désinformation sur les réseaux sociaux (Allcott et Gentzkow 2017), la migration des personnes (Spyratos et al. 2019), la propagation et les risques de contamination de la COVID-19 (Boulos et Geraghty 2020). Le plus souvent, les interfaces (API par exemple) permettant d’accéder à ces données nécessitent des habiletés en programmation.\nLa quantité de données numériques ouvertes et accessibles en ligne croit chaque année sur des sujets très divers. La plupart des villes et des gouvernements ont maintenant leur portail de données ouvertes auxquelles s’ajoutent les données produites par des projets collaboratifs comme OpenStreetMap ou NoisePlanet. Récupérer ces données et les structurer pour les utiliser à des fins de recherche nécessitent le plus souvent des compétences en programmation.\nLes méthodes quantitatives connaissent également un développement très important. Les logiciels propriétaires peinent à suivre la cadence de ce développement, contrairement aux logiciels à code source ouvert (comme R) qui permettent d’avoir accès aux dernières méthodes. Il est souvent long et coûteux de développer une interface graphique pour un logiciel, ce qui explique que la plupart de ces programmes en sont dépourvus et nécessitent alors de savoir programmer pour les utiliser.\nSavoir programmer donne une liberté considérable en recherche. Cette compétence permet notamment de ne plus être limité(e) aux fonctionnalités proposées par des logiciels spécifiques. Il devient possible d’innover tant en matière de structuration, d’exploration et d’analyse des données que de représentation des résultats en écrivant ses propres fonctions. Cette flexibilité contribue directement à la production d’une recherche de meilleure qualité et plus diversifiée.\nProgrammer permet également d’automatiser des tâches qui autrement seraient extrêmement répétitives comme : déplacer et renommer une centaine de fichiers; retirer les lignes inutiles dans un ensemble de fichiers et les compiler dans une seule base de données; vérifier parmi des milliers d’adresses lesquelles sont valides; récupérer chaque jour les messages postés sur un forum. Autant de tâches faciles à automatiser si l’on sait programmer.\nDans un logiciel avec une interface graphique, il est compliqué de conserver un historique des opérations effectuées. Programmer permet au contraire de garder une trace de l’ensemble des actions effectuées au cours d’un projet de recherche. En effet, le code utilisé reste disponible et permet de reproduire (ou d’adapter) la méthode et les résultats obtenus, ce qui est essentiel dans le monde de la recherche. À cela s’ajoute le fait que chaque ligne de code que vous écrivez vient s’ajouter à un capital de code que vous possédez, car elles pourront être réutilisées dans d’autres projets!"
  },
  {
    "objectID": "index.html#sect007",
    "href": "index.html#sect007",
    "title": "Méthodes quantitatives en sciences sociales : un grand bol d’R",
    "section": "Remerciements",
    "text": "Remerciements\nDe nombreuses personnes ont contribué à l’élaboration de ce manuel. Ce projet a bénéficié du soutien pédagogique et financier de la fabriqueREL (ressources éducatives libres). Les différentes rencontres avec le comité de suivi nous ont permis de comprendre l’univers des ressources éducatives libres (REL) et notamment leurs fameux 5R (Retenir — Réutiliser — Réviser — Remixer — Redistribuer), de mieux définir le besoin pédagogique visé par ce manuel, d’identifier des outils et des ressources pédagogiques pertinents pour son élaboration. Ainsi, nous remercions chaleureusement les membres de suivi de la fabriqueREL pour leur support inconditionnel :\n\nMyriam Beaudet, bibliothécaire à l’Université de Sherbrooke.\nMarianne Dubé, conseillère pédagogique à l’Université de Sherbrooke et coordonnatrice de la fabriqueREL.\nMyrian Grondin, bibliothécaire à l’Institut national de la recherche scientifique (INRS).\nClaude Potvin, conseiller en formation à l’Université Laval.\nSerge Allary, vice-recteur adjoint aux études de l’Université de Sherbrooke.\n\nNous tenons aussi à remercier sincèrement les étudiants et étudiantes du cours Méthodes quantitatives appliquées aux études urbaines (EUR8219) du programme de maîtrise en études urbaines de l’INRS. Leurs commentaires et suggestions nous ont permis d’améliorer grandement les versions préliminaires de ce manuel qui ont été utilisées dans le cadre de ce cours.\nNous remercions les membres du comité de révision pour leurs commentaires et suggestions très constructifs. Ce comité est composé de trois étudiantes et deux professeurs de l’INRS :\n\nVictoria Gay-Gauvin, étudiante à la maîtrise en études urbaines.\nSalomé Vallette, étudiante au doctorat en études urbaines.\nDiana Pena Ruiz, étudiante au doctorat en études des populations.\n\nBenoît Laplante, professeur enseignant aux programmes de maîtrise et de doctorat en études des populations.\n\nXavier Leloup, professeur enseignant au programme de doctorat en études urbaines.\n\nFinalement, nous remercions Denise Latreille, réviseure linguistique et chargée de cours à l’Université Sherbrooke, pour la révision du manuel."
  },
  {
    "objectID": "index.html#sect008",
    "href": "index.html#sect008",
    "title": "Méthodes quantitatives en sciences sociales : un grand bol d’R",
    "section": "Dédicace toute spéciale à Cargo et Ambrée",
    "text": "Dédicace toute spéciale à Cargo et Ambrée\nFait cocasse, l’écriture de ce livre a démarré lorsque Philippe Apparicio était famille d’accueil d’un chiot de la Fondation Mira, un organisme à but non lucratif qui forme des chiens-guides et d’assistance pour accroître l’autonomie et l’inclusion sociale des personnes vivant avec un handicap visuel ou moteur, ainsi que des jeunes présentant un trouble du spectre de l’autisme (TSA). En fin de rédaction du livre, ce fut au tour de Jérémy Gelb d’être famille d’accueil d’un autre chiot Mira. Nous remercions chaleureusement la Fondation Mira pour nous avoir donné l’occasion de vivre cette expérience incroyable. Ce livre est donc dédié au beau Cargo et à la belle Ambrée qui nous ont tant supportés dans l’écriture du livre. Il n’y a rien de plus relaxant que d’écrire un livre de statistique avec un chiot qui dort à ses pieds!\n\n\nFigure 3: Cargo et Ambrée, chiots de la Fondation Mira\n\n\n\n\n\nAllcott, Hunt et Matthew Gentzkow. 2017. « Social media and fake news in the 2016 election. » Journal of economic perspectives 31 (2): 211‑36. https://doi.org/10.1257/jep.31.2.211.\n\n\nBoulos, Maged N Kamel et Estella M Geraghty. 2020. « Geographical tracking and mapping of coronavirus disease COVID-19/severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2) epidemic and associated events around the world: how 21st century GIS technologies are supporting the global fight against outbreaks and epidemics. » International journal of health geographics 19 (1): 1‑12. https://doi.org/10.1186/s12942-020-00202-8.\n\n\nChang, Winston. 2018. R Graphics Cookbook, 2nd edition. CRC Press.\n\n\nHanck, Christoph, Martin Arnold, Alexander Gerber et Martin Schmelzer. 2019. Introduction to econometrics with R. s.n. https://www.econometrics-with-r.org/ITER.pdf.\n\n\nIsmay, Chester et Albert Y Kim. 2019. Statistical inference via data science: a ModernDive into R and the tidyverse. CRC Press.\n\n\nRoback, Paul et Julie Legler. 2021. Beyond multiple linear regression: Applied generalized linear models and multilevel models in R. CRC Press.\n\n\nSpyratos, Spyridon, Michele Vespe, Fabrizio Natale, Ingmar Weber, Emilio Zagheni et Marzia Rango. 2019. « Quantifying international human mobility patterns using Facebook Network data. » PloS one 14 (10): e0224134. https://doi.org/10.1371/journal.pone.0224134."
  },
  {
    "objectID": "00-auteurs.html",
    "href": "00-auteurs.html",
    "title": "À propos des auteurs",
    "section": "",
    "text": "Philippe Apparicio est professeur titulaire au Département de géomatique appliquée de l’Université de Sherbrooke. Il y enseigne aux programmes de 1er et 2e cycles de géomatique les cours Transport et mobilité durable, Modélisation et analyse spatiale et Géomatique appliquée à la gestion urbaine. Durant les dernières années, il a offert plusieurs formations aux Écoles d’été du Centre interuniversitaire québécois de statistiques sociales (CIQSS). Géographe de formation, ses intérêts de recherche incluent la justice et l’équité environnementale, la mobilité durable, les pollutions atmosphérique et sonore, et le vélo en ville. Il a publié une centaine d’articles scientifiques dans différents domaines des études urbaines et de la géographie mobilisant la géomatique et l’analyse spatiale.\nJérémy Gelb a obtenu un doctorat en études urbaines à l’INRS en 2022 (L’exposition des cyclistes aux pollutions atmosphérique et sonore en milieu urbain : comparaison empirique de plusieurs villes à travers le monde), sous la supervision de Philippe Apparicio. Il utilise quotidiennement des systèmes d’information géographique (SIG) et des méthodes d’analyses spatiales. Il est tombé dans la marmite de l’open source avec le triptyque QGIS, R et Python au début de sa maîtrise. Il a développé deux packages : geocmeans et spNetwork, permettant respectivement d’effectuer des analyses de classification floue non supervisée pondérée spatialement et des estimations de densité par kernel sur réseau. Il travaille actuellement comme conseiller en science des données à l’Autorité régionale de transport métropolitain qui gère la planification du transport collectif dans la région de Montréal. Ces travaux portent sur la qualité des milieux urbains, l’accessibilité spatiale, le transport, l’équité environnementale, les SIG et l’analyse spatiale.\nPhilippe et Jérémy travaillent étroitement ensemble depuis plusieurs années. Avec d’autres collègues, ils ont copublié une vingtaine d’articles scientifiques et un autre manuel intitulé Méthodes d’analyse spatiale : un grand bol d’R, avec le soutien de la fabriqueREL."
  },
  {
    "objectID": "01-priseenmainR.html#sec-011",
    "href": "01-priseenmainR.html#sec-011",
    "title": "1  Prise en main de R",
    "section": "\n1.1 Histoire et philosophie de R",
    "text": "1.1 Histoire et philosophie de R\nR est à la fois un langage de programmation et un logiciel libre (sous la licence publique générale GNU) dédié à l’analyse statistique et soutenu par une fondation : R Foundation for Statistical Computing. Il est principalement écrit en C et en Fortran, deux langages de programmation de « bas niveau », proches du langage machine. À l’inverse, R est un langage de « haut niveau », car plus proche du langage humain.\nR a été créé par Ross Ihaka et Robert Gentleman à l’Université d’Auckland en Nouvelle-Zélande. Si vous avez un jour l’occasion de passer dans le coin, une plaque est affichée dans le département de statistique de l’université; ça mérite le détour (figure 1.1). Une version expérimentale a été publiée en 1996, mais la première version stable ne date que de 2000. Il s’agit donc d’un logiciel relativement récent si nous le comparons à ses concurrents SPSS (1968), SAS (1976) et Stata (1984).\n\n\nFigure 1.1: Lieu de pèlerinage de R\n\nR a cependant réussi à s’imposer tant dans le milieu de la recherche que dans le secteur privé. Pour s’en convaincre, il suffit de lire l’excellent article concernant la popularité des logiciels d’analyse de données tiré du site r4stats.com (figure 1.2).\n\n\nFigure 1.2: Nombre d’articles trouvés sur Google Scholar (source : Robert A. Muenchen)\n\nLes nombreux atouts de R justifient largement sa popularité sans cesse croissante :\n\nR est un logiciel à code source ouvert (open source) et ainsi accessible à tous gratuitement.\nLe développement du langage R est centralisé, mais la communauté peut créer et partager facilement des packages. Les nouvelles méthodes sont ainsi rapidement implémentées comparativement aux logiciels propriétaires.\nR est un logiciel multiplateforme, fonctionnant sur Linux, Unix, Windows et Mac.\nComparativement à ses concurrents, R dispose d’excellentes solutions pour manipuler des données et réaliser des graphiques.\nR dispose de nombreuses interfaces lui permettant de communiquer, notamment avec des systèmes de bases de données SQL et non SQL (MySQL, PostgresSQL, MongoDB, etc.), avec des systèmes de big data (Spark, Hadoop), avec des systèmes d’information géographique (QGIS, ArcGIS) et même avec des services en ligne comme Microsoft Azure ou Amazon AWS.\nR est un langage de programmation à part entière, ce qui lui donne plus de flexibilité que ses concurrents commerciaux (SPSS, SAS, STATA). Avec R, vous pouvez accomplir de nombreuses tâches : monter un site web, créer un robot collectant des données en ligne, combiner des fichiers PDF, composer des diapositives pour une présentation ou même éditer un livre (comme celui-ci), mais aussi, et surtout, réaliser des analyses statistiques.\n\nUn des principaux attraits de R est la quantité astronomique de packages actuellement disponibles. Un package est un ensemble de nouvelles fonctionnalités développées par des personnes utilisatrices de R et mises à disposition de l’ensemble de la communauté. Par exemple, le package ggplot2 est dédié à la réalisation de graphiques; les packages data.table et dplyr permettent de manipuler des tableaux de données; le package car offre de nombreux outils pour faciliter l’analyse de modèles de régressions, etc. Ce partage de packages rend accessible à tous des méthodes d’analyses complexes et récentes et favorise grandement la reproductibilité de la recherche. Cependant, ce fonctionnement implique quelques désavantages :\n\nIl existe généralement plusieurs packages pour effectuer le même type d’analyse, ce qui peut devenir une source de confusion.\nCertains packages cessent d’être mis à jour au fil des années, ce qui nécessite de trouver des solutions de rechange (et ainsi apprendre la syntaxe de nouveaux packages).\nIl est impératif de s’assurer de la fiabilité des packages que vous souhaitez utiliser, car n’importe qui peut proposer un package.\n\nIl nous semble important de relativiser d’emblée la portée du dernier point. Il est rarement nécessaire de lire et d’analyser le code source d’un package pour s’assurer de sa fiabilité. Nous ne sommes pas des spécialistes de tous les sujets et il peut être extrêmement ardu de comprendre la logique d’un code écrit par une autre personne. Nous vous recommandons donc de privilégier l’utilisation de packages qui :\n\nont fait l’objet d’une publication dans une revue à comité de lecture ou qui ont déjà été cités dans des études ayant fait l’objet d’une publication revue par les pairs;\nfont partie de projets comme ROpensci prônant la vérification par les pairs ou subventionnés par des organisations comme R Consortium;\nsont disponibles sur l’un des deux principaux répertoires de packages R, soit CRAN et Bioconductor.\n\nToujours pour nuancer notre propos, il convient de distinguer package de package! Certains d’entre eux sont des ensembles très complexes de fonctions permettant de réaliser des analyses poussées alors que d’autres sont des projets plus modestes dont l’objectif principal est de simplifier le travail des personnes utilisant R. Ces derniers ressemblent à de petites boîtes à outils et font généralement moins l’objet d’une vérification intensive.\nPour conclure cette section, l’illustration partagée sur Twitter par Darren L Dahly résume avec humour la force du logiciel R et de sa communauté (figure 1.3) : R apparaît clairement comme une communauté hétéroclite, mais diversifiée et adaptable.\n\n\nFigure 1.3: Métaphore sur les langages et programmes d’analyse statistique\n\nDans ce livre, nous détaillons les packages utilisés dans chaque section avec un encadré spécifique.\n\n\n\n\n\nBloc packages\n\n\nHabituellement localisé au début d’un chapitre, il comprend la liste des packages R utilisés pour un chapitre."
  },
  {
    "objectID": "01-priseenmainR.html#sec-012",
    "href": "01-priseenmainR.html#sec-012",
    "title": "1  Prise en main de R",
    "section": "\n1.2 Environnement de travail",
    "text": "1.2 Environnement de travail\nDans cette section, nous vous proposons une visite de l’environnement de travail de R.\n\n1.2.1 Installation de R\nLa première étape pour travailler avec R est bien sûr de l’installer. Pour cela, il suffit de visiter le site web de CRAN et de télécharger la dernière version de R en fonction de votre système d’exploitation : Windows, Linux ou Mac. Une fois installé, si vous démarrez R immédiatement, vous aurez accès à une console, plutôt rudimentaire, attendant sagement vos instructions (figure 1.4).\n\n\nFigure 1.4: Console de base de R\n\nNotez que vous pouvez aussi télécharger des versions plus anciennes de R en allant sur ce lien. Cela peut être intéressant lorsque vous voulez reproduire des résultats d’une autre étude ou que certains packages ne sont plus disponibles dans les nouvelles versions.\n\n1.2.2 Environnement RStudio\nRares sont les adeptes de R qui préfèrent travailler directement avec la console classique. Nous vous recommandons vivement d’utiliser RStudio, un environnement de développement (IDE) dédié à R offrant une intégration très intéressante d’une console, d’un éditeur de texte, d’une fenêtre de visualisation des données et d’une autre pour les graphiques, d’un accès à la documentation, etc. En d’autres termes, si R est un vélo minimaliste, RStudio permet d’y rajouter des freins, des vitesses, un porte-bagages, des garde-boues et une selle confortable. Vous pouvez télécharger et installer RStudio sur Windows, Linux et Mac. La version de base est gratuite, mais l’entreprise qui développe ce logiciel propose aussi des versions commerciales du logiciel qui assurent essentiellement une assistance technique. Il existe d’autres environnements de développement pour travailler avec R (Visual Studio Code, Jupyter, Tinn-R, Radiant, RIDE, etc.), mais RStudio offre à ce jour la meilleure option en termes de facilité d’installation, de prise en main et de fonctionnalités proposées (voir l’interface de RStudio à la figure 1.5).\n\n\nFigure 1.5: Environnement de base de RStudio\n\nAvant d’aller plus loin, notez que :\n\nLa console actuellement ouverte dans RStudio vous informe de la version de R que vous utilisez. Vous pouvez en effet avoir plusieurs versions de R installées sur votre ordinateur et passer de l’une à l’autre avec RStudio. Pour cela, naviguez dans l’onglet Tools/Global Options et dans le volet General, puis sélectionnez la version de R que vous souhaitez utiliser.\nL’aspect de RStudio peut être modifié en naviguant dans l’onglet Tools/Global Options et dans le volet Appearance. Nous avons une préférence pour le mode sombre avec le style pastel on dark (figure 1.6), mais libre à vous de choisir le style qui vous convient.\n\n\n\nFigure 1.6: RStudio avec le style pastel on dark\n\nUne fois ces détails réglés, vous pouvez ouvrir votre première feuille de code en allant dans l’onglet File/New File/R Script. Votre environnement est maintenant découpé en quatre fenêtres (figure 1.7) :\n\nL’éditeur de code, vous permettant d’écrire le script que vous voulez exécuter et de garder une trace de votre travail. Ce script peut être enregistré sur votre ordinateur avec l’extension .R, mais ce n’est qu’un simple fichier texte.\nLa console vous permettant d’exécuter votre code R et de voir les résultats s’afficher au fur et à mesure.\nLa fenêtre d’environnement vous montrant les objets, les fonctions et les jeux de données actuellement disponibles dans votre session (chargés dans la mémoire vive).\nLa fenêtre de l’aide, des graphiques et de l’explorateur de fichiers. Vous pouvez accéder ici à la documentation de R et des packages que vous utilisez, aux sorties graphiques que vous produisez et aux dossiers de votre environnement de travail.\n\n\n\nFigure 1.7: Fenêtres de RStudio\n\nPrenons un bref exemple : tapez la syntaxe suivante dans l’éditeur de code (fenêtre 1 à la figure 1.7) :\n\nma_somme &lt;- 4+4\n\nSélectionnez ensuite cette syntaxe (mettre en surbrillance avec la souris) et utilisez le raccourci Ctrl+Entrée ou cliquez sur le bouton Run (avec la flèche verte) pour envoyer cette syntaxe à la console qui l’exécutera immédiatement. Notez que rien ne se passe tant que le code n’est pas envoyé à la console. Il s’agit donc de deux étapes distinctes : écrire son code, puis l’envoyer à la console. Constatez également qu’un objet ma_somme est apparu dans votre environnement et que sa valeur est bien 8. Votre console se « souvient » de cette valeur : elle est actuellement stockée dans votre mémoire vive sous le nom de ma_somme (figure 1.8).\n\n\nFigure 1.8: Exécuter du code dans RStudio\n\nPour conclure cette section, nous vous invitons à enregistrer votre première syntaxe R (File/Save As) dans un fichier .R que vous pouvez appeler mon_premier_script.R par exemple. Fermez ensuite RStudio, redémarrez-le et ouvrez (File/Open File) votre fichier mon_premier_script.R. Vous pouvez constater que votre code est toujours présent, mais que votre environnement est vide tant que vous n’exécutez pas votre syntaxe. En effet, lorsque vous fermez RStudio, l’environnement est vidé pour libérer de la mémoire vive. Cela peut poser problème lorsque certains codes sont très longs à exécuter, nous verrons donc plus tard comment enregistrer l’environnement en cours pour le recharger par la suite.\n\n1.2.3 Installation et chargement un package\n\nDans la section sur la Philosophie de R, nous avons souligné la place centrale jouée par les packages. Notez que les termes paquet et plus rarement librairie sont parfois utilisés en français. Voyons ensemble comment installer un package, par exemple celui intitulé lubridate, qui nous permettra plus tard de manipuler des données temporelles.\n\n1.2.3.1 Installation d’un package depuis CRAN\n\nPour installer un package, il est nécessaire d’être connecté à Internet puisque R va accéder au répertoire de packages CRAN pour télécharger le package et l’installer sur votre machine. Cette opération est réalisée avec la fonction install.packages.\n\ninstall.packages(\"lubridate\")\n\nNotez qu’une fois que le package est installé, il demeure disponible localement sur votre ordinateur, à moins de le désinstaller explicitement avec la fonction remove.packages.\n\n1.2.3.2 Installation d’un package depuis GitHub\nCRAN est le répertoire officiel des packages de R. Vous pouvez cependant télécharger des packages provenant d’autres sources. Très souvent, les packages sont disponibles sur le site web GitHub et nous pouvons même y trouver des versions en développement avec des fonctionnalités encore non intégrées dans la version sur CRAN. Reprenons le cas de lubridate, mais sur GitHub (il est disponible ici). Pour l’installer, nous devons d’abord installer un autre package appelé remotes (depuis CRAN).\n\ninstall.packages(\"remotes\")\n\nMaintenant que nous disposons de remotes, nous pouvons utiliser la fonction d’installation remotes::install_github pour directement télécharger lubridate depuis GitHub.\n\nremotes::install_github(\"tidyverse/lubridate\")\n\n\n1.2.3.3 Chargement d’un package\n\nMaintenant que lubridate est installé, nous pouvons le charger dans notre session actuelle de R et accéder aux fonctions qu’il propose. Pour cela, il suffit d’utiliser la fonction library. Conventionnellement, l’appel des packages se fait au tout début du script que vous rédigez. Rien ne vous empêche de le faire au fur et à mesure de votre code, mais ce dernier perd alors en lisibilité. Notez que pour chaque nouvelle session (redémarrage de R), il faut recharger les packages dont vous avez besoin avec la fonction library.\n\nlibrary(lubridate)\n\nSi vous obtenez un message d’erreur du type :\nError in library(monPackage) : aucun package nommé ‘monPackage’ n'est trouvé\nCela signifie que le package que vous tentez de charger n’est pas encore installé sur votre ordinateur. Dans ce cas, réessayer de l’installer avec la fonction install.packages. Si le problème persiste, vérifiez que vous n’avez pas fait une faute de frappe dans le nom du package. Vous pouvez également redémarrer RStudio et réessayer d’installer ce package.\n\n1.2.4 Aide disponible\nLorsque vous installez des packages dans R, vous téléchargez aussi leur documentation. Tous les packages de CRAN disposent d’une documentation, ce qui n’est pas forcément vrai pour ceux sur GitHub. Dans RStudio, vous pouvez accéder à la documentation des packages dans l’onglet Packages (figure 1.9). Vous pouvez utiliser la barre de recherche pour retrouver rapidement un package installé. Si vous cliquez sur le nom du package, vous accédez directement à sa documentation dans cette fenêtre.\n\n\nFigure 1.9: Description des packages\n\nVous pouvez également accéder à ces informations en utilisant la syntaxe suivante dans votre console :\n\nhelp(package = 'lubridate')\n\nSouvent, vous aurez besoin d’accéder à la documentation d’une fonction spécifique d’un package. Affichons la documentation de la fonction now de lubridate :\n\nhelp(now, package = 'lubridate')\n\nou plus simplement :\n\n?lubridate::now\n\nVous pouvez aussi utiliser le raccourci suivant.\n\n?now\n\nSi vous ne vous souvenez plus à quel package la fonction appartient, lancez une recherche en utilisant un double point d’interrogation :\n\n??now\n\nVous découvrirez ainsi que la fonction now n’existe pas que dans lubridate, ce qui souligne l’importance de bien connaître les packages que nous installons et que nous chargeons dans notre session !\nMaintenant que nous avons fait le tour de l’environnement de travail, nous pouvons passer aux choses sérieuses, soit les bases du langage R."
  },
  {
    "objectID": "01-priseenmainR.html#sec-013",
    "href": "01-priseenmainR.html#sec-013",
    "title": "1  Prise en main de R",
    "section": "\n1.3 Bases du langage R",
    "text": "1.3 Bases du langage R\nR est un langage de programmation. Il vous permet de communiquer avec votre ordinateur pour lui donner des tâches à accomplir. Dans cette section, nous abordons les bases du langage. Ce type de section introductive à R est présente dans tous les manuels sur R; elle est donc incontournable. À la première lecture, elle vous semblera probablement aride, et ce, d’autant plus que nous ne réalisons pas d’analyse à proprement parler. Gardez en tête que l’analyse de données requiert au préalable une phase de structuration de ces dernières, opération qui nécessite la maîtrise des notions abordées dans cette section. Nous vous recommandons une première lecture de ce chapitre pour comprendre les manipulations que vous pouvez effectuer avec R, avant de poursuivre avec de la lecture des chapitres suivants dédiés aux analyses statistiques. Vous pourrez revenir consulter cette section au besoin. Notez aussi que la maîtrise des différents objets et des différentes opérations de base de R ne s’acquiert qu’en pratiquant. Vous gagnerez cette expertise au fil de vos prochains codes R, période durant laquelle vous pourrez consulter ce chapitre tel un guide de référence des objets et des notions fondamentales de R.\n\n1.3.1 Hello World!\nUne introduction à un langage de programmation se doit de commencer par le rite de passage Hello World. Il s’agit d’une forme de tradition consistant à montrer aux néophytes comment afficher le message Hello World à l’écran avec le langage en question.\n\nprint(\"Hello World\")\n\n[1] \"Hello World\"\n\n\nBravo! Vous venez officiellement de faire votre premier pas dans R!\n\n1.3.2 Objets et expressions\nDans R, nous passons notre temps à manipuler des objets à l’aide d’expressions. Prenons un exemple concret : si vous tapez la syntaxe 4 + 3, vous manipulez deux objets (4 et 3) avec une expression indiquant que vous souhaitez obtenir la somme des deux objets.\n\n4 + 3\n\n[1] 7\n\n\nCette expression est correcte, R comprend vos indications et effectue le calcul.\nIl est possible d’enregistrer le résultat d’une expression et de le conserver dans un nouvel objet. On appelle cette opération : « déclarer une variable ».\n\nma_somme &lt;- 4 + 3\n\nConcrètement, nous venons de demander à R d’enregistrer le résultat de 4 + 3 dans un espace spécifique de notre mémoire vive. Si vous regardez dans votre fenêtre Environment, vous verrez en effet qu’un objet appelé ma_somme est actuellement en mémoire et a pour valeur 7.\nNotez ici que le nom des variables ne peut être composé que de lettres, de chiffres, de points (.) et de tirets bas (_) et doit commencer par une lettre. R est sensible à la casse; en d’autres termes, les variables Ma_somme, ma_sommE, ma_SOMME, et MA_SOMME renvoient toutes à un objet différent. Attention donc aux fautes de frappe. Si vous déclarez une variable en utilisant le nom d’une variable existante, la première est écrasée par la seconde :\n\nage &lt;- 35\nage\n\n[1] 35\n\nage &lt;- 45\nage\n\n[1] 45\n\n\nPortez alors attention aux noms de variables que vous utilisez et réutilisez. Réutilisons notre objet ma_somme dans une nouvelle expression :\n\nma_somme2 &lt;- ma_somme + ma_somme\n\nAvec cette nouvelle expression, nous indiquons à R que nous souhaitons déclarer une nouvelle variable appelée ma_somme2, et que cette variable aura pour valeur ma_somme + ma_somme, soit 7 + 7. Sans surprise, ma_somme2 a pour valeur 14.\nNotez que la mémoire vive (l’environnement) est vidée lorsque vous fermez R. Autrement dit, R perd complètement la mémoire lorsque vous le fermez. Vous pouvez bien sûr recréer vos objets en relançant les mêmes syntaxes. C’est pourquoi vous devez conserver vos feuilles de codes et ne pas seulement travailler dans la console. La console ne garde aucune trace de votre travail. Pensez donc à bien enregistrer votre code!\nNous verrons dans une prochaine section comment sauvegarder des objets et les recharger dans une session ultérieure de R (section 1.6). Ce type d’opération est pertinent quand le temps de calcul nécessaire à la production de certains objets est très long.\n\n1.3.3 Fonctions et arguments\nDans R, nous manipulons le plus souvent nos objets avec des fonctions. Une fonction est elle-même un objet, mais qui a la particularité de pouvoir effectuer des opérations sur d’autres objets. Par exemple, déclarons l’objet taille avec une valeur de 175,897 :\n\ntaille &lt;- 175.897\n\nNous utilisons la fonction round, dont l’objectif est d’arrondir un nombre avec décimales pour obtenir un nombre entier.\n\nround(taille)\n\n[1] 176\n\n\nPour effectuer leurs opérations, les fonctions ont généralement besoin d’arguments. Ici, taille est un argument passé à la fonction round. Si nous regardons la documentation de round avec help(round) (figure 1.10), nous constatons que cette fonction prend en réalité deux arguments : x et digits. Le premier est le nombre que nous souhaitons arrondir et le second est le nombre de décimales à conserver. Nous pouvons lire dans la documentation que la valeur par défaut de digits est 0, ce qui explique que round(taille) a produit le résultat de 176.\n\n\nFigure 1.10: Arguments de la fonction round\n\nRéutilisons maintenant la fonction round, mais en gardant une décimale :\n\nround(taille, digits = 1)\n\n[1] 175.9\n\n\nIl est aussi possible que certaines fonctions ne requièrent pas d’argument. Par exemple, la fonction now indique la date précise (avec l’heure) et n’a besoin d’aucun argument pour le faire :\n\nnow()\n\n[1] \"2024-07-05 19:09:37 EDT\"\n\n\nPar contre, si nous essayons de lancer la fonction round sans argument, nous obtenons une erreur :\n\nround()\n\nErreur : 0 argument passé à 'round' qui en exige 1 ou 2\nLe message est très clair, round a besoin d’au moins un argument pour fonctionner. Si, au lieu d’un nombre, nous avions donné du texte à la fonction round, nous aurions aussi obtenu une erreur :\n\nround(\"Hello World\")\n\nErreur dans round(\"Hello World\") : argument non numérique pour une fonction mathématique\nÀ nouveau le message est très explicite : nous avons passé un argument non numérique à une fonction mathématique. Lisez toujours vos messages d’erreurs : ils permettent de repérer les coquilles et de corriger votre code!\nNous terminons cette section avec une fonction essentielle, print, qui permet d’afficher la valeur d’une variable.\n\nprint(ma_somme)\n\n[1] 7\n\n\n\n1.3.4 Principaux types de données\nDepuis le début de ce chapitre, nous avons déclaré plusieurs variables et essentiellement des données numériques. Dans R, il existe trois principaux types de données de base :\n\nLes données numériques qui peuvent être des nombres entiers (appelés integers) ou des nombres décimaux (appelés floats ou doubles), par exemple 15 et 15.3.\nLes données de type texte qui sont des chaînes de caractères (appelées strings) et déclarées entre guillemets \"abcdefg\".\nLes données booléennes (booleans) qui peuvent n’avoir que deux valeurs : vrai (TRUE) ou faux (FALSE).\n\nDéclarons une variable pour chacun de ces types :\n\nage &lt;- 35\ntaille &lt;- 175.5\nadresse &lt;- '4225 rue de la gauchetiere'\nproprietaire &lt;- TRUE\n\n\n\n\n\n\nSimples ou doubles quotes?\n\n\nPour déclarer des données de type texte, il est possible d’utiliser des quotes simples ' (apostrophe) ou des quotes doubles \" (guillemets), cela ne fait aucune différence pour R. Cependant, si la chaîne de caractères que vous créez contient une apostrophe, il est nécessaire d’utiliser des quotes doubles et inversement si votre chaîne de caractère contient des guillemets.\n\nphrase1 &lt;- \"J'adore le langage R!\"\nphrase2 &lt;- 'Je cite : \"il est le meilleur langage de statistique\".'\n\nSi la chaîne de caractère contient des guillemets et des apostrophes, il est nécessaire d’utiliser la barre oblique inversée \\ pour indiquer à R que ces apostrophes ou ces guillemets ne doivent pas être considérés comme la fin de la chaîne de caractère.\n\nphrase3 &lt;- \"Je cite : \\\"j'en rêve la nuit\\\".\"\ncat(phrase3)\n\nJe cite : \"j'en rêve la nuit\".\n\n\nLes barres obliques inversées ne font pas partie de la chaîne de caractère, ils sont là pour “échapper” les guillemets qui doivent rester dans la chaîne de caractère. Si une chaîne de caractère doit contenir une barre oblique inversée, alors il faut l’échapper également en utilisant une deuxième barre oblique inversée.\n\nphrase4 &lt;- \"Une phrase avec une barre oblique inversée : \\\\\"\ncat(phrase4)\n\nUne phrase avec une barre oblique inversée : \\\n\n\nFaites attention à la coloration syntaxique de RStudio! Elle peut vous aider à repérer facilement une chaîne de caractère qui aurait été interrompue par un guillemet ou une apostrophe mal placés.\n\n\nSi vous avez un doute sur le type de données stockées dans une variable, vous pouvez utiliser la fonction typeof. Par exemple, cela permet de repérer si des données qui sont censées être numériques sont en fait stockées sous forme de texte comme dans l’exemple ci-dessous.\n\ntypeof(age)\n\n[1] \"double\"\n\ntypeof(taille)\n\n[1] \"double\"\n\n# Ici tailletxt est définie comme une chaîne de caractère car la valeur est \n# définie entre des guillemets.\ntailletxt &lt;- \"175.5\"\ntypeof(tailletxt)\n\n[1] \"character\"\n\n\nNotez également qu’il existe des types pour représenter l’absence de données :\n\npour représenter un objet vide, nous utilisons l’objet NULL,\npour représenter une donnée manquante, nous utilisons l’objet NA,\npour représenter un texte vide, nous utilisons une chaîne de caractère de longueur 0, soit \"\".\n\n\nage2 &lt;- NULL\ntaille2 &lt;- NA\nadresse2 &lt;- ''\n\n\n1.3.5 Opérateurs\nNous avons vu que les fonctions permettent de manipuler des objets. Nous pouvons également effectuer un grand nombre d’opérations avec les opérateurs.\n\n1.3.5.1 Opérateurs mathématiques\nLes opérateurs mathématiques (tableau 1.1) permettent d’effectuer des calculs avec des données de type numérique.\n\n\n\n\nTableau 1.1: Opérateurs mathématiques\n\nOpérateur\nDescription\nSyntaxe\nRésultat\n\n\n\n+\nAddition\n4 + 4\n8,0\n\n\n-\nSoustraction\n4 - 3\n1,0\n\n\n*\nMultiplication\n4 * 3\n12,0\n\n\n/\nDivision\n12 / 4\n3,0\n\n\n^\nExponentiel\n4 ^ 3\n64,0\n\n\n**\nExponentiel\n4 ** 3\n64,0\n\n\n%%\nReste de division\n15,5 %% 2\n1,5\n\n\n%/%\nDivision entière\n15,5 %/% 2\n7,0\n\n\n\n\n\n\n\n1.3.5.2 Opérateurs relationnels\nLes opérateurs relationnels (tableau 1.2) permettent de vérifier des conditions dans R. Ils renvoient un booléen, TRUE si la condition est vérifiée et FALSE si ce n’est pas le cas.\n\n\n\n\nTableau 1.2: Opérateurs relationnels\n\nOpérateur\nDescription\nSyntaxe\nRésultat\n\n\n\n==\nÉgalité\n4 == 4\nTRUE\n\n\n!=\nDifférence\n4 != 4\nFALSE\n\n\n&gt;\nEst supérieur\n5 &gt; 4\nTRUE\n\n\n&lt;\nEst inférieur\n5 &lt; 4\nFALSE\n\n\n&gt;=\nEst supérieur ou égal\n5 &gt;= 4\nTRUE\n\n\n&lt;=\nEst inférieur ou égal\n5 &lt;= 4\nFALSE\n\n\n\n\n\n\n\n1.3.5.3 Opérateurs logiques\nLes opérateurs logiques (tableau 1.3) permettent de combiner plusieurs conditions :\n\nL’opérateur ET (&) permet de vérifier que deux conditions (l’une ET l’autre) sont TRUE. Si l’une des deux est FALSE, il renvoie FALSE.\nL’opérateur OU (|) permet de vérifier que l’une des deux conditions est TRUE (l’une OU l’autre). Si les deux sont FALSE, alors il renvoie FALSE.\nL’opérateur NOT (!) permet d’inverser une condition. Ainsi, NOT TRUE donne FALSE et NOT FALSE donne TRUE.\n\n\n\n\n\nTableau 1.3: Opérateurs logiques\n\nOpérateur\nDescription\nSyntaxe\nRésultat\n\n\n\n&\nET\nTRUE & FALSE\nFALSE\n\n\n&#124;\nOU\nTRUE &#124; FALSE\nTRUE\n\n\n!\nNOT\n! TRUE\nFALSE\n\n\n\n\n\n\nPrenons le temps pour un rapide exemple :\n\nA &lt;- 4 \nB &lt;- 10\nC &lt;- -5\n\n# Produit TRUE car A est bien plus petit que B et C est bien plus petit que A\nA &lt; B & C &lt; A\n\n[1] TRUE\n\n# Produit FALSE car si A est bien plus petit que B, \n# B est en revanche plus grand que c\nA &lt; B & B &lt; C\n\n[1] FALSE\n\n# Produit TRUE car la seconde condition est inversée\nA &lt; B &  ! B &lt; C\n\n[1] TRUE\n\n# Produit TRUE car au moins une des deux conditions est juste\nA &lt; B |  B &lt; C\n\n[1] TRUE\n\n\nNotez que l’opérateur ET est prioritaire sur l’opérateur OU et que les parenthèses sont prioritaires sur tous les opérateurs :\n\n# Produit TRUE car nous commençons par tester A &lt; B puis B &lt; C ce qui donne FALSE\n# On obtient ensuite\n# FALSE |  A &gt; C\n# Enfin, A est bien supérieur à C, donc l'une des deux conditions est vraie\nA &lt; B & B &lt; C |  A &gt; C\n\n[1] TRUE\n\n\nNotez qu’en arrière-plan, les opérateurs sont en réalité des fonctions déguisées. Il est donc possible de définir de nouveaux comportements pour les opérateurs. Il est par exemple possible d’additionner ou de comparer des objets spéciaux comme des dates, des géométries, des graphes, etc.\n\n1.3.6 Structures de données\nJusqu’à présent, nous avons utilisé des objets ne comprenant qu’une seule valeur. Or, des analyses statistiques nécessitent de travailler avec des volumes de données bien plus grands. Pour stocker des valeurs, nous travaillons avec différentes structures de données : les vecteurs, les matrices, les tableaux de données et les listes.\n\n1.3.6.1 Vecteurs\nLes vecteurs sont la brique élémentaire de R. Ils permettent de stocker une série de valeurs du même type dans une seule variable. Pour déclarer un vecteur, nous utilisons la fonction c() :\n\nages &lt;- c(35,45,72,56,62)\ntailles &lt;- c(175.5,180.3,168.2,172.8,167.6)\nadresses &lt;- c('4225 rue de la gauchetiere',\n              '4223 rue de la gauchetiere',\n              '4221 rue de la gauchetiere',\n              '4219 rue de la gauchetiere',\n              '4217 rue de la gauchetiere')\nproprietaires &lt;- c(TRUE, TRUE, FALSE, TRUE, TRUE)\n\nNous venons ainsi de déclarer quatre nouvelles variables étant chacune un vecteur de longueur cinq (comprenant chacun cinq valeurs). Ces vecteurs représentent, par exemple, les réponses de plusieurs personnes à un questionnaire.\n\n\n\n\n\nDistinction entre un vecteur de type texte et un vecteur de type facteur\n\n\nIl existe dans R une subtilité à l’origine de nombreux malentendus : la distinction entre un vecteur de type texte et un vecteur de type facteur. Dans l’exemple précédent, le vecteur adresses est un vecteur de type texte. Chaque nouvelle valeur ajoutée dans le vecteur peut être n’importe quelle nouvelle adresse. Déclarons un nouveau vecteur qui contient cette fois-ci la couleur des yeux de personnes ayant répondu au questionnaire.\n\ncouleurs_yeux &lt;- c('marron', 'marron', 'bleu', 'bleu', 'marron', 'vert')\n\nContrairement aux adresses, il y a un nombre limité de couleurs que nous pouvons mettre dans ce vecteur. Il est donc intéressant de fixer les valeurs possibles du vecteur pour éviter d’en ajouter de nouvelles par erreur. Pour cela, nous devons convertir ce vecteur texte en vecteur de type facteur, ci-après nommé simplement facteur, avec la fonction as.factor.\n\ncouleurs_yeux_facteur &lt;- as.factor(couleurs_yeux)\n\nNotez qu’à présent, nous pouvons ajouter une nouvelle couleur dans le premier vecteur, mais pas dans le second.\n\ncouleurs_yeux[7] &lt;- \"rouge\"\ncouleurs_yeux_facteur[7] &lt;- \"rouge\"\n\nWarning in `[&lt;-.factor`(`*tmp*`, 7, value = \"rouge\"): niveau de facteur\nincorrect, NAs générés\n\n\nLe message d’erreur nous informe que nous avons tenté d’introduire une valeur invalide dans le facteur.\nLes facteurs peuvent sembler restrictifs et, très régulièrement, nous préférons travailler avec de simples vecteurs de type texte plutôt que des facteurs. Cependant, de nombreuses fonctions d’analyse nécessitent d’utiliser des facteurs, car ils assurent une certaine cohérence dans les données. Il est donc essentiel de savoir passer du texte au facteur avec la fonction as.factor. À l’inverse, il est parfois nécessaire de revenir à une variable de type texte avec la fonction as.character.\nNotez que des vecteurs numériques peuvent aussi être convertis en facteurs :\n\ntailles_facteur &lt;- as.factor(tailles)\n\nCependant, si vous souhaitez reconvertir ce facteur en format numérique, il faudra passer dans un premier temps par le format texte :\n\nas.numeric(tailles_facteur)\n\n[1] 4 5 2 3 1\n\n\nComme vous pouvez le voir, convertir un facteur en valeur numérique renvoie des nombres entiers. Ceci est dû au fait que les valeurs dans un facteur sont recodées sous forme de nombres entiers, chaque nombre correspondant à une des valeurs originales (appelées niveaux). Si nous convertissons un facteur en valeurs numériques, nous obtenons donc ces nombres entiers.\n\nas.numeric(as.character(tailles_facteur))\n\n[1] 175.5 180.3 168.2 172.8 167.6\n\n\nMorale de l’histoire : ne confondez pas les données de type texte et de type facteur. Dans le doute, vous pouvez demander à R quel est le type d’un vecteur avec la fonction class.\n\nclass(tailles)\n\n[1] \"numeric\"\n\nclass(tailles_facteur)\n\n[1] \"factor\"\n\nclass(couleurs_yeux)\n\n[1] \"character\"\n\nclass(couleurs_yeux_facteur)\n\n[1] \"factor\"\n\n\n\n\nQuasiment toutes les fonctions utilisent des vecteurs. Par exemple, nous pouvons calculer la moyenne du vecteur ages en utilisant la fonction mean présente de base dans R.\n\nmean(ages)\n\n[1] 54\n\n\nCela démontre bien que le vecteur est la brique élémentaire de R! Toutes les variables que nous avons déclarées dans les sections précédentes sont aussi des vecteurs, mais de longueur 1.\n\n1.3.6.2 Matrices\nIl est possible de combiner des vecteurs pour former des matrices. Une matrice est un tableau en deux dimensions (colonnes et lignes) et est généralement utilisée pour représenter certaines structures de données comme des images (pixels), effectuer du calcul matriciel ou plus simplement présenter des matrices de corrélations. Vous aurez rarement à travailler directement avec des matrices, mais il est bon de savoir ce qu’elles sont. Créons deux matrices à partir de nos précédents vecteurs.\n\nmatrice1 &lt;- cbind(ages, tailles)\n# Afficher la matrice 1\nprint(matrice1)\n\n     ages tailles\n[1,]   35   175.5\n[2,]   45   180.3\n[3,]   72   168.2\n[4,]   56   172.8\n[5,]   62   167.6\n\n# Afficher les dimensions de la matrice 1 (1er chiffre : lignes; 2e chiffre : colonnes)\nprint(dim(matrice1))\n\n[1] 5 2\n\nmatrice2 &lt;- rbind(ages, tailles)\n# Afficher la matrice 2\nprint(matrice2)\n\n         [,1]  [,2]  [,3]  [,4]  [,5]\nages     35.0  45.0  72.0  56.0  62.0\ntailles 175.5 180.3 168.2 172.8 167.6\n\n# Afficher les dimensions de la matrice 2\nprint(dim(matrice2))\n\n[1] 2 5\n\n\nComme vous pouvez le constater, la fonction cbind permet de concaténer des vecteurs comme s’ils étaient les colonnes d’une matrice, alors que rbind les combine comme s’ils étaient les lignes d’une matrice. La figure 1.11 présente graphiquement le passage du vecteur à la matrice.\n\n\nFigure 1.11: Du vecteur à la matrice\n\nNotez que vous pouvez transposer une matrice avec la fonction t. Si nous essayons maintenant de comparer la matrice 1 à la matrice 2 nous allons avoir une erreur, car elles n’ont pas les mêmes dimensions.\n\nmatrice1 == matrice2\n\nErreur dans matrice1 == matrice2 : tableaux de tailles inadéquates\nEn revanche, nous pouvons transposer la matrice 1 et refaire cette comparaison :\n\nt(matrice1) == matrice2\n\n        [,1] [,2] [,3] [,4] [,5]\nages    TRUE TRUE TRUE TRUE TRUE\ntailles TRUE TRUE TRUE TRUE TRUE\n\n\nLe résultat souligne bien que nous avons les mêmes valeurs dans les deux matrices. Il est aussi possible de construire des matrices directement avec la fonction matrix, ce que nous montrons dans la prochaine section.\n\n1.3.6.3 Arrays\n\nS’il est rare de travailler avec des matrices, il est encore plus rare de manipuler des arrays. Un array est une matrice spéciale qui peut avoir plus que deux dimensions. Un cas simple serait un array en trois dimensions : lignes, colonnes, profondeur, que nous pourrions représenter comme un cube, ou une série de matrices de mêmes dimensions et empilées. Au-delà de trois dimensions, il devient difficile de les représenter mentalement. Cette structure de données peut être utilisée pour représenter les différentes bandes spectrales d’une image satellitaire. Les lignes et les colonnes délimiteraient les pixels de l’image et la profondeur délimiterait les différentes bandes composant l’image (figure 1.11).\n\n\nFigure 1.12: Un array avec trois dimensions\n\nCréons un array en combinant trois matrices avec la fonction array. Chacune de ces matrices est composée respectivement de 1, de 2 et de 3 et a une dimension de 5 x 5. L’array final a donc une dimension de 5 x 5 x 3.\n\nmat1 &lt;- matrix(1, nrow = 5, ncol = 5)\nmat2 &lt;- matrix(2, nrow = 5, ncol = 5)\nmat3 &lt;- matrix(3, nrow = 5, ncol = 5)\n\nmon_array &lt;- array(c(mat1, mat2, mat3), dim = c(5,5,3))\n\nprint(mon_array)\n\n, , 1\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    1    1    1    1    1\n[2,]    1    1    1    1    1\n[3,]    1    1    1    1    1\n[4,]    1    1    1    1    1\n[5,]    1    1    1    1    1\n\n, , 2\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    2    2    2    2    2\n[2,]    2    2    2    2    2\n[3,]    2    2    2    2    2\n[4,]    2    2    2    2    2\n[5,]    2    2    2    2    2\n\n, , 3\n\n     [,1] [,2] [,3] [,4] [,5]\n[1,]    3    3    3    3    3\n[2,]    3    3    3    3    3\n[3,]    3    3    3    3    3\n[4,]    3    3    3    3    3\n[5,]    3    3    3    3    3\n\n\n\n1.3.6.4 DataFrames\n\nS’il est rare de manipuler des matrices et des arrays, le DataFrame (tableau de données en français) est la structure de données la plus souvent utilisée. Dans cette structure, chaque ligne du tableau représente un individu et chaque colonne représente une caractéristique de cet individu. Ces colonnes ont des noms qui permettent facilement d’accéder à leurs valeurs. Créons un DataFrame (tableau 1.4) à partir de nos quatre vecteurs et de la fonction data.frame.\n\ndf &lt;- data.frame(\n  \"age\" = ages,\n  \"taille\" = tailles,\n  \"adresse\" = adresses,\n  \"proprietaire\" = proprietaires\n)\n\n\n\n\n\nTableau 1.4: Premier DataFrame\n\nage\ntaille\nadresse\nproprietaire\n\n\n\n35\n175,5\n4225 rue de la gauchetiere\nTRUE\n\n\n45\n180,3\n4223 rue de la gauchetiere\nTRUE\n\n\n72\n168,2\n4221 rue de la gauchetiere\nFALSE\n\n\n56\n172,8\n4219 rue de la gauchetiere\nTRUE\n\n\n62\n167,6\n4217 rue de la gauchetiere\nTRUE\n\n\n\n\n\n\nDans RStudio, vous pouvez visualiser votre tableau de données avec la fonction View(df). Comme vous pouvez le constater, chaque vecteur est devenu une colonne de votre tableau de données df. La figure 1.13 résume ce passage d’une simple donnée à un DataFrame en passant par un vecteur.\n\n\nFigure 1.13: De la donnée au DataFrame\n\nPlusieurs fonctions de base de R fournissent des informations importantes sur un DataFrame :\n\n\nnames renvoie les noms des colonnes du DataFrame;\n\nnrow renvoie le nombre de lignes;\n\nncol renvoie le nombre de colonnes.\n\n\nnames(df)\n\n[1] \"age\"          \"taille\"       \"adresse\"      \"proprietaire\"\n\nnrow(df)\n\n[1] 5\n\nncol(df)\n\n[1] 4\n\n\nVous pouvez accéder à chaque colonne de df en utilisant le symbole $ ou [[\"nom_de_la_colonne\"]]. Recalculons ainsi la moyenne des âges :\n\nmean(df$age)\n\n[1] 54\n\nmean(df[[\"age\"]])\n\n[1] 54\n\n\n\n1.3.6.5 Listes\nLa dernière structure de données à connaître est la liste. Elle ressemble à un vecteur, au sens où elle permet de stocker un ensemble d’objets les uns à la suite des autres. Cependant, une liste peut contenir n’importe quel type d’objets. Vous pouvez ainsi construire des listes de matrices, des listes d’arrays, des listes mixant des vecteurs, des graphiques, des DataFrames, des listes de listes…\nCréons ensemble une liste qui va contenir des vecteurs et des matrices à l’aide de la fonction list.\n\nma_liste &lt;- list(c(1,2,3,4),\n                 matrix(1, ncol = 3, nrow = 5),\n                 matrix(5, ncol = 3, nrow = 7),\n                 'A'\n                 )\n\nIl est possible d’accéder aux éléments de la liste par leur position dans cette dernière en utilisant les doubles crochets [[ ]] :\n\nprint(ma_liste[[1]])\n\n[1] 1 2 3 4\n\nprint(ma_liste[[4]])\n\n[1] \"A\"\n\n\nIl est aussi possible de donner des noms aux éléments de la liste et d’utiliser le symbole $ pour y accéder. Créons une nouvelle liste de vecteurs et donnons-leur des noms avec la fonction names.\n\nliste2 &lt;- list(c(35, 45, 72, 56, 62), \n               c(175.5, 180.3, 168.2, 172.8, 167.6),\n               c(TRUE, TRUE, FALSE, TRUE, TRUE)\n)\nnames(liste2) &lt;- c(\"age\", \"taille\", \"proprietaire\")\n\nprint(liste2$age)\n\n[1] 35 45 72 56 62\n\n\nSi vous avez bien suivi, vous devriez avoir compris qu’un DataFrame n’est en fait rien d’autre qu’une liste de vecteurs avec des noms!\nBravo! Vous venez de faire le tour des bases du langage R. Vous allez apprendre désormais à manipuler des données dans des DataFrames!"
  },
  {
    "objectID": "01-priseenmainR.html#sec-014",
    "href": "01-priseenmainR.html#sec-014",
    "title": "1  Prise en main de R",
    "section": "\n1.4 Manipulation de données",
    "text": "1.4 Manipulation de données\nDans cette section, vous apprendrez à charger et à manipuler des DataFrames en vue d’effectuer des opérations classiques de gestion de données.\n\n1.4.1 Chargement d’un DataFrame depuis un fichier\nIl est rarement nécessaire de créer vos DataFrames manuellement. Le plus souvent, vous disposerez de fichiers contenant vos données et utiliserez des fonctions pour les importer dans R sous forme d’un DataFrame. Les formats à importer les plus répandus sont :\n\n.csv, soit un fichier texte dont chaque ligne représente une ligne du tableau de données et dont les colonnes sont séparées par un délimiteur (généralement une virgule ou un point-virgule);\n.dbf, ou fichier dBase, souvent associés à des fichiers d’information géographique au format ShapeFile;\n.xls et .xlsx, soit des fichiers générés par Excel;\n.json, soit un fichier texte utilisant la norme d’écriture propre au langage JavaScript.\n\nPlus rarement, il se peut que vous ayez à charger des fichiers provenant de logiciels propriétaires :\n\n\n.sas7bdat (SAS);\n\n.sav (SPSS);\n\n.dta (STATA).\n\nPour lire la plupart de ces fichiers, nous utilisons le package foreign dédié à l’importation d’une multitude de formats. Nous commençons donc par l’installer (install.packages(\"foreign\")). Ensuite, nous chargeons cinq fois le même jeu de données enregistré dans des formats différents (csv, dbf, dta, sas7bdat et xlsx) et nous mesurons le temps nécessaire pour importer chacun de ces fichiers avec la fonction Sys.time.\n\n1.4.1.1 Lecture d’un fichier csv\n\nPour le format csv, il n’est pas nécessaire d’utiliser un package puisque R dispose d’une fonction de base pour lire ce format.\n\nt1 &lt;- Sys.time()\ndf1 &lt;- read.csv(\"data/priseenmain/SR_MTL_2016.csv\", \n         header = TRUE, sep = \",\", dec = \".\",\n         stringsAsFactors = FALSE)\nt2 &lt;- Sys.time()\nd1 &lt;- as.numeric(difftime(t2, t1, units = \"secs\"))\ncat(\"Le DataFrame df1 a \", nrow(df1),\" observations\",\n    'et ', ncol(df1),\" colonnes\\n\")\n\nLe DataFrame df1 a  951  observations et  48  colonnes\n\n\nRien de bien compliqué! Notez tout de même que :\n\nLorsque vous chargez un fichier csv, vous devez connaître le délimiteur (ou séparateur), soit le caractère utilisé pour délimiter les colonnes. Dans le cas présent, il s’agit d’une virgule (spécifiez avec l’argument sep = \",\"), mais il pourrait tout aussi bien être un point virgule (sep = \";\"), une tabulation (sep = \"    \"), etc.\nVous devez également spécifier le caractère utilisé comme séparateur de décimales. Le plus souvent, ce sera le point (dec = \".\"), mais certains logiciels avec des paramètres régionaux de langue française (notamment Excel) exportent des fichiers csv avec des virgules comme séparateur de décimales (utilisez alors dec = \",\").\nL’argument header indique si la première ligne (l’entête) du fichier comprend ou non les noms des colonnes du jeu de données (avec les valeurs TRUE ou FALSE). Il arrive que certains fichiers csv soient fournis sans entête et que le nom et la description des colonnes soient fournis dans un autre fichier.\nL’argument stringsAsFactors permet d’indiquer à R que les colonnes comportant du texte doivent être chargées comme des vecteurs de type texte et non de type facteur.\n\n1.4.1.2 Lecture d’un fichier dbase\n\nPour lire un fichier dbase (.dbf), nous utilisons la fonction read.dbf du package foreign installé précédemment :\n\nlibrary(foreign)\n\nt1 &lt;- Sys.time()\ndf2 &lt;- read.dbf(\"data/priseenmain/SR_MTL_2016.dbf\")\nt2 &lt;- Sys.time()\nd2 &lt;- as.numeric(difftime(t2, t1, units = \"secs\"))\ncat(\"Le DataFrame df2 a \", nrow(df2),\" observations\",\n    \"et \", ncol(df2),\" colonnes\\n\")\n\nLe DataFrame df2 a  951  observations et  48  colonnes\n\n\nComme vous pouvez le constater, nous obtenons les mêmes résultats qu’avec le fichier csv.\n\n1.4.1.3 Lecture d’un fichier dta (Stata)\nSi vous travaillez avec des collègues utilisant le logiciel Stata, il se peut que ces derniers vous partagent des fichiers dta. Toujours en utilisant le package foreign, vous serez en mesure de les charger directement dans R.\n\nt1 &lt;- Sys.time()\ndf3 &lt;- read.dta(\"data/priseenmain/SR_MTL_2016.dta\")\nt2 &lt;- Sys.time()\nd3 &lt;- as.numeric(difftime(t2, t1, units = \"secs\"))\ncat(\"Le DataFrame df3 a \", nrow(df3),\" observations \",\n    \"et \", ncol(df3), \" colonnes\\n\", sep = \"\")\n\nLe DataFrame df3 a 951 observations et 48 colonnes\n\n\n\n1.4.1.4 Lecture d’un fichier sav (SPSS)\nPour importer un fichier sav provenant du logiciel statistique SPSS, utilisez la fonction read.spss du package foreign.\n\nt1 &lt;- Sys.time()\ndf4 &lt;- as.data.frame(read.spss(\"data/priseenmain/SR_MTL_2016.sav\"))\nt2 &lt;- Sys.time()\nd4 &lt;- as.numeric(difftime(t2, t1, units = \"secs\"))\ncat(\"Le DataFrame df4 a \", nrow(df4),\" observations \",\n    \"et \", ncol(df4), \" colonnes\\n\", sep = \"\")\n\nLe DataFrame df4 a 951 observations et 48 colonnes\n\n\n\n1.4.1.5 Lecture d’un fichier sas7bdat (SAS)\nPour importer un fichier sas7bdat provenant du logiciel statistique SAS, utilisez la fonction read.sas7bdat du package sas7bdat. Installez préalablement le package (install.packages(\"sas7bdat\")) et chargez-le (library(sas7bdat)).\n\nlibrary(sas7bdat)\n\nt1 &lt;- Sys.time()\ndf5 &lt;- read.sas7bdat(\"data/priseenmain/SR_MTL_2016.sas7bdat\")\nt2 &lt;- Sys.time()\nd5 &lt;- as.numeric(difftime(t2, t1, units = \"secs\"))\ncat(\"Le DataFrame df5 a \", nrow(df5),\" observations \",\n    \"et \", ncol(df5),\" colonnes\\n\", sep = \"\")\n\nLe DataFrame df5 a 951 observations et 48 colonnes\n\n\n\n1.4.1.6 Lecture d’un fichier xlsx (Excel)\nLire un fichier Excel dans R n’est pas toujours une tâche facile. Généralement, nous recommandons d’exporter le fichier en question au format csv dans un premier temps, puis de le lire avec la fonction read.csv dans un second temps (section 1.4.1.1).\nIl est néanmoins possible de lire directement un fichier xlsx avec le package xlsx. Ce dernier requiert que le logiciel JAVA soit installé sur votre ordinateur (Windows, Mac ou Linux). Si vous utilisez la version 64 bit de R, vous devrez télécharger et installer la version 64 bit de JAVA. Une fois que ce logiciel tiers est installé, il ne vous restera plus qu’à installer (install.packages(\"xlsx\")) et charger (library(xlsx)) le package xlsx. Sous windows, il est possible que vous deviez également installer manuellement le package rJava et indiquer à R où se trouve JAVA sur votre ordinateur. La procédure est détaillée ici.\n\nlibrary(xlsx)\n\nt1 &lt;- Sys.time()\ndf6 &lt;- read.xlsx(file=\"data/priseenmain/SR_MTL_2016.xlsx\",\n                 sheetIndex = 1,\n                 as.data.frame = TRUE)\nt2 &lt;- Sys.time()\nd6 &lt;- as.numeric(difftime(t2, t1, units = \"secs\"))\ncat(\"Le DataFrame df6 a \", nrow(df6),\" observations \",\n    \"et \", ncol(df6),\" colonnes\\n\", sep = \"\")\n\nLe DataFrame df6 a 951 observations et 48 colonnes\n\n\nIl est possible d’accélérer significativement la vitesse de lecture d’un fichier xlsx en utilisant la fonction read.xlsx2. Il faut cependant indiquer à cette dernière le type de données de chaque colonne. Dans le cas présent, les cinq premières colonnes contiennent des données de type texte (character), alors que les 43 autres sont des données numériques (numeric). Nous utilisons la fonction rep afin de ne pas avoir à écrire plusieurs fois character et numeric.\n\nlibrary(xlsx)\n\nt1 &lt;- Sys.time()\ndf7 &lt;- read.xlsx2(file=\"data/priseenmain/SR_MTL_2016.xlsx\",\n                  sheetIndex = 1, \n                  as.data.frame = TRUE,\n                  colClasses = c(rep(\"character\",5), rep(\"numeric\",43))\n                  )\nt2 &lt;- Sys.time()\nd7 &lt;- as.numeric(difftime(t2, t1, units = \"secs\"))\ncat(\"Le DataFrame df6 a \", nrow(df7),\" observations \",\n    \"et \", ncol(df7),\" colonnes\\n\", sep = \"\")\n\nLe DataFrame df6 a 951 observations et 48 colonnes\n\n\nSi nous comparons les temps d’exécution (tableau 1.5), nous constatons que la lecture des fichiers xlsx peut être extrêmement longue si nous ne spécifions pas le type des colonnes, ce qui peut devenir problématique pour des fichiers volumineux. Notez également que la lecture d’un fichier csv devient de plus en plus laborieuse à mesure que sa taille augmente. Si vous devez un jour charger des fichiers csv de plusieurs gigaoctets, nous vous recommandons vivement d’utiliser la fonction fread du package data.table qui est beaucoup plus rapide.\n\n\n\n\nTableau 1.5: Temps nécessaire pour lire les données en fonction du type de fichiers\n\nFonction\nDurée (secondes)\n\n\n\nread.csv\n0,02\n\n\nread.dbf\n0,04\n\n\nread.spss\n0,01\n\n\nread.dta\n0,01\n\n\nread.sas7bdat\n0,49\n\n\nread.xlsx\n11,84\n\n\nread.xlsx2\n0,48\n\n\n\n\n\n\n\n1.4.2 Manipulation d’un DataFrame\n\nUne fois le DataFrame chargé, voyons comment il est possible de le manipuler.\n\n1.4.2.1 Petit mot sur le tidyverse\n\ntidyverse est un ensemble de packages conçus pour faciliter la structuration et la manipulation des données dans R. Avant d’aller plus loin, il est important d’aborder brièvement un débat actuel dans la Communauté R. Entre 2010 et 2020, l’utilisation du tidyverse s’est peu à peu répandue. Développé et maintenu par Hadley Wickham, tidyverse introduit une philosophie et une grammaire spécifiques qui diffèrent du langage R traditionnel. Une partie de la communauté a pour ainsi dire complètement embrassé le tidyverse et de nombreux packages, en dehors du tidyverse, ont adopté sa grammaire et sa philosophie. À l’inverse, une autre partie de la communauté est contre cette évolution (voir l’article du blogue suivant). Les arguments pour et contre tidyverse sont résumés dans le (tableau 1.6).\n\n\n\n\nTableau 1.6: Avantages et inconvénients du tidyverse\n\n\n\n\n\nAvantage du tidyverse\nProblème posé par le tidyverse\n\n\n\nSimplicité d’écriture et d’apprentissage\nNouvelle syntaxe à apprendre\n\n\nAjout de l’opérateur %&gt;% permettant d’enchaîner les traitements\nPerte de lisibilité avec l’opérateur -&gt;\n\n\n\nLa meilleure librairie pour réaliser des graphiques : ggplot2\n\nRemplacement de certaines fonctions de base par d’autres provenant du tidyverse lors de son chargement, pouvant créer des erreurs.\n\n\nCrée un écosystème cohérent\nAjout d’une dépendance dans le code\n\n\n\nPackage en développement et de plus en plus utilisé\nPhilosophie d’évolution agressive, aucune assurance de rétrocompatibilité\n\n\n\n\n\n\nLe dernier point est probablement le plus problématique. Dans sa volonté d’évoluer au mieux et sans restriction, le package tidyverse n’offre aucune garantie de rétrocompatibilité. En d’autres termes, des changements importants peuvent être introduits d’une version à l’autre rendant potentiellement obsolète votre ancien code. Nous n’avons pas d’opinion tranchée sur le sujet : tidyverse est un outil très intéressant dans de nombreux cas; nous évitons simplement de l’utiliser systématiquement et préférons charger directement des sous-packages (comme dplyr ou ggplot2) du tidyverse. Notez que le package data.table offre une alternative au tidyverse dans la manipulation de données. Au prix d’une syntaxe généralement un peu plus complexe, le package data.table offre une vitesse de calcul bien supérieure au tidyverse et assure une bonne rétrocompatibilité.\n\n1.4.2.2 Gestion des colonnes d’un DataFrame\n\nRepartons du DataFrame que nous avions chargé précédemment en important un fichier csv.\n\ndf &lt;- read.csv(file=\"data/priseenmain/SR_MTL_2016.csv\", \n               header = TRUE, sep = \",\", dec = \".\",\n               stringsAsFactors = FALSE)\n\n\n1.4.2.2.1 Sélection d’une colonne\nRappelons qu’il est possible d’accéder aux colonnes dans ce DataFrame en utilisant le symbole dollar $ma_colonne ou les doubles crochets [[\"ma_colonne\"]].\n\n# Calcul de la superficie totale de l'Île de Montréal\nsum(df$KM2)\n\n[1] 4680.543\n\nsum(df[[\"KM2\"]])\n\n[1] 4680.543\n\n\n\n1.4.2.2.2 Sélection de plusieurs colonnes\nIl est possible de sélectionner plusieurs colonnes d’un DataFrame et de filtrer ainsi les colonnes inutiles. Pour cela, nous pouvons utiliser un vecteur contenant soit les positions des colonnes (1 pour la première colonne, 2 pour la seconde et ainsi de suite), soit les noms des colonnes.\n\n# Conserver les 5 premières colonnes\ndf2 &lt;- df[1:5]\n\n# Conserver les colonnes 1, 5, 10 et 15\ndf3 &lt;- df[c(1,5,10,15)]\n\n# Cela peut aussi être utilisé pour changer l'ordre des champs\ndf3 &lt;- df[c(10,15,1,5)]\n\n# Conserver les colonnes 1 à 5, 7 à 12, 17 et 22\ndf4 &lt;- df[c(1:5,7:12,17,22)]\n\n# Conserver les colonnes avec leurs noms\ndf5 &lt;- df[c(\"SRIDU\" , \"KM2\" , \"Pop2016\" , \"MaisonIndi\" , \"LoyerMed\")]\n\n\n1.4.2.2.3 Suppression de colonnes\nIl est parfois plus intéressant et rapide de supprimer directement des colonnes plutôt que de recréer un nouveau DataFrame. Pour ce faire, nous attribuons la valeur NULL à ces colonnes.\n\n# Supprimer les colonnes 2, 3 et 5\ndf3[c(2,3,5)] &lt;- list(NULL)\n\n# Supprimer une colonne avec son nom\ndf4$OID &lt;- NULL\n\n# Supprimer plusieurs colonnes par leur nom\ndf5[c(\"SRIDU\" , \"LoyerMed\")] &lt;- list(NULL)\n\nNotez que si vous supprimez une colonne, vous ne pouvez pas revenir en arrière. Il faudra recharger votre jeu de données ou éventuellement relancer les calculs qui avaient produit cette colonne.\n\n1.4.2.2.4 Modification du nom des colonnes\nIl est possible de changer le nom d’une colonne. Cette opération est importante pour faciliter la lecture du DataFrame ou encore s’assurer que l’exportation du DataFrame dans un format particulier (tel que .dbf qui ne supporte que les noms de colonnes avec moins de 10 caractères) ne posera pas de problème.\n\n# Voici les noms des colonnes\nnames(df5)\n\n[1] \"KM2\"        \"Pop2016\"    \"MaisonIndi\"\n\n# Renommer toutes les colonnes\nnames(df5) &lt;- c('superficie_km2','population_2016', 'maison_individuelle_prt')\nnames(df5)\n\n[1] \"superficie_km2\"          \"population_2016\"        \n[3] \"maison_individuelle_prt\"\n\n# Renommer avec dplyr\nlibrary(dplyr)\ndf4 &lt;- rename(df4, \"population_2016\" = \"Pop2016\",\n              \"prs_moins_14ans_prt\" = \"A014\",\n              \"prs_15_64_ans_prt\" = \"A1564\",\n              \"prs_65plus_ans_prt\" = \"A65plus\"\n              )\n\n\n1.4.2.3 Calcul de nouvelles variables\nIl est possible d’utiliser les colonnes de type numérique pour calculer de nouvelles colonnes en utilisant les opérateurs mathématiques vus dans la section 1.3.5. Prenons un exemple concret : calculons la densité de population par secteur de recensement dans notre DataFrame, puis affichons un résumé de cette nouvelle variable.\n\n# Calcul de la densité\ndf$pop_density_2016 &lt;- df$Pop2016 / df$KM2\n\n# Statistiques descriptives\nsummary(df$pop_density_2016)\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n   17.45  1946.96  3700.50  5465.03  7918.39 48811.79 \n\n\nNous pouvons aussi calculer le ratio entre le nombre de maisons et le nombre d’appartements.\n\n# Calcul du ratio\ndf$total_maison &lt;- (df$MaisonIndi + df$MaisJumule + df$MaisRangee + df$AutreMais)\ndf$total_apt &lt;- (df$AppDuplex + df$App5Moins + df$App5Plus)\ndf$ratio_maison_apt &lt;- df$total_maison / df$total_apt\n\nRetenez ici que R applique le calcul à chaque ligne de votre jeu de données et stocke le résultat dans une nouvelle colonne. Cette opération est du calcul vectoriel : toute la colonne est calculée en une seule fois. R est d’ailleurs optimisé pour le calcul vectoriel.\n\n1.4.2.4 Fonctions mathématiques\nR propose un ensemble de fonctions de base pour effectuer du calcul. Voici une liste non exhaustive des principales fonctions :\n\nabs calcule la valeur absolue de chaque valeur d’un vecteur;\nsqrt calcule la racine carrée de chaque valeur d’un vecteur;\nlog calcule le logarithme de chaque valeur d’un vecteur;\nexp calcule l’exponentielle de chaque valeur d’un vecteur;\nfactorial calcule la factorielle de chaque valeur d’un vecteur;\nround arrondit la valeur d’un vecteur;\nceiling, floor arrondit à l’unité supérieure ou inférieure de chaque valeur d’un vecteur;\nsin, asin, cos, acos, tan, atan sont des fonctions de trigonométrie;\ncumsum calcule la somme cumulative des valeurs d’un vecteur.\n\nCes fonctions sont des fonctions vectorielles puisqu’elles s’appliquent à tous les éléments d’un vecteur. Si votre vecteur en entrée comprend cinq valeurs, le vecteur en sortie comprendra aussi cinq valeurs.\nÀ l’inverse, les fonctions suivantes s’appliquent directement à l’ensemble d’un vecteur et ne vont renvoyer qu’une seule valeur :\n\nsum calcule la somme des valeurs d’un vecteur;\nprod calcule le produit des valeurs d’un vecteur;\nmin, max renvoient les valeurs maximale et minimale d’un vecteur;\nmean, median renvoient la moyenne et la médiane d’un vecteur;\nquantile renvoie les percentiles d’un vecteur.\n\n1.4.2.5 Fonctions pour manipuler des chaînes de caractères\nOutre les données numériques, vous aurez à travailler avec des données de type texte (string). Le tidyverse avec le package stringr offre des fonctions très intéressantes pour manipuler ce type de données. Pour un aperçu de toutes les fonctions offertes par stringr, référez-vous à sa Cheat Sheet. Commençons avec un DataFrame assez simple comprenant des adresses et des noms de personnes.\n\nlibrary(stringr)\n\ndf &lt;- data.frame(\n  noms = c(\"Jérémy Toutanplace\" , \"constant Tinople\" , \"dino Resto\" , \"Luce tancil\"),\n  adresses = c('15 rue Levy', '413 Blvd Saint-Laurent', '3606 rue Duké', '2457 route St Marys')\n)\n\n\n1.4.2.5.1 Majuscules et minuscules\nPour harmoniser ce DataFrame, nous mettons, dans un premier temps, des majuscules à la première lettre des prénoms et des noms des individus avec la fonction str_to_title.\n\ndf$noms_corr &lt;- str_to_title(df$noms)\nprint(df$noms_corr)\n\n[1] \"Jérémy Toutanplace\" \"Constant Tinople\"   \"Dino Resto\"        \n[4] \"Luce Tancil\"       \n\n\nNous pourrions également tout mettre en minuscules ou tout en majuscules.\n\ndf$noms_min &lt;- tolower(df$noms)\ndf$noms_maj &lt;- toupper(df$noms)\nprint(df$noms_min)\n\n[1] \"jérémy toutanplace\" \"constant tinople\"   \"dino resto\"        \n[4] \"luce tancil\"       \n\nprint(df$noms_maj)\n\n[1] \"JÉRÉMY TOUTANPLACE\" \"CONSTANT TINOPLE\"   \"DINO RESTO\"        \n[4] \"LUCE TANCIL\"       \n\n\n\n1.4.2.5.2 Remplacement du texte\nLes adresses comprennent des caractères accentués. Ce type de caractères cause régulièrement des problèmes d’encodage. Nous pourrions alors décider de les remplacer par des caractères simples avec la fonction str_replace_all.\n\ndf$adresses_1 &lt;- str_replace_all(df$adresses,'é','e')\nprint(df$adresses_1)\n\n[1] \"15 rue Levy\"            \"413 Blvd Saint-Laurent\" \"3606 rue Duke\"         \n[4] \"2457 route St Marys\"   \n\n\nLa même fonction peut être utilisée pour remplacer les St par Saint et les Blvd par Boulevard.\n\ndf$adresses_2 &lt;- str_replace_all(df$adresses_1,' St ',' Saint ')\ndf$adresses_3 &lt;- str_replace_all(df$adresses_2,' Blvd ',' Boulevard ')\nprint(df$adresses_3)\n\n[1] \"15 rue Levy\"                 \"413 Boulevard Saint-Laurent\"\n[3] \"3606 rue Duke\"               \"2457 route Saint Marys\"     \n\n\n\n1.4.2.5.3 Découpage du texte\nIl est parfois nécessaire de découper du texte pour en extraire des éléments. Nous devons alors choisir un caractère de découpage. Dans notre exemple, nous pourrions vouloir extraire les numéros civiques des adresses en sélectionnant le premier espace comme caractère de découpage, et en utilisant la fonction str_split_fixed.\n\ndf$num_civique &lt;- str_split_fixed(df$adresses_3, ' ', n=2)[,1]\nprint(df$num_civique)\n\n[1] \"15\"   \"413\"  \"3606\" \"2457\"\n\n\nPour être exact, sachez que pour notre exemple, la fonction str_split_fixed renvoie deux colonnes de texte : une avec le texte avant le premier espace, soit le numéro civique, et une avec le reste du texte. Le nombre de colonnes est contrôlé par l’argument n. Si n = 1, la fonction ne fait aucun découpage; avec n = 2 la fonction découpe en deux parties le texte avec la première occurrence du délimiteur et ainsi de suite. En ajoutant [,1] à la fin, nous indiquons que nous souhaitons garder seulement la première des deux colonnes.\nIl est également possible d’extraire des parties de texte et de ne garder par exemple que les N premiers caractères ou les N derniers caractères :\n\n# Ne garder que les 5 premiers caractères\nsubstr(df$adresses_3, start = 1, stop = 5)\n\n[1] \"15 ru\" \"413 B\" \"3606 \" \"2457 \"\n\n# Ne garder que les 5 derniers caractères\nn_caract &lt;- nchar(df$adresses_3)\nsubstr(df$adresses_3, start = n_caract-4, stop = n_caract)\n\n[1] \" Levy\" \"urent\" \" Duke\" \"Marys\"\n\n\nNotez que les paramètres start et stop de la fonction substr peuvent accepter un vecteur de valeurs. Il est ainsi possible d’appliquer une sélection de texte différente à chaque chaîne de caractères dans notre vecteur en entrée. Nous pourrions par exemple vouloir récupérer tout le texte avant le second espace pour garder uniquement le numéro civique et le type de rue.\n\n# Étape 1 : récupérer les positions des espaces pour chaque adresses\npositions &lt;- str_locate_all(df$adresses_3, \" \")\n# Étape 2 : récupérer les positions des seconds espaces\nsec_positions &lt;- sapply(positions, function(i){\n  i[2,1]\n})\n# Étape 3 : appliquer le découpage\nsubstr(df$adresses_3, start = 1, stop = sec_positions-1)\n\n[1] \"15 rue\"        \"413 Boulevard\" \"3606 rue\"      \"2457 route\"   \n\n\n\n1.4.2.5.4 Concaténation du texte\nÀ l’inverse du découpage, il est parfois nécessaire de concaténer des éléments de texte, ce qu’il est possible de réaliser avec la fonction paste.\n\ndf$texte_complet &lt;- paste(df$noms_corr, df$adresses_3, sep = \" : \")\nprint(df$texte_complet)\n\n[1] \"Jérémy Toutanplace : 15 rue Levy\"              \n[2] \"Constant Tinople : 413 Boulevard Saint-Laurent\"\n[3] \"Dino Resto : 3606 rue Duke\"                    \n[4] \"Luce Tancil : 2457 route Saint Marys\"          \n\n\nLe paramètre sep permet d’indiquer le ou les caractères à intercaler entre les éléments à concaténer. Notez qu’il est possible de concaténer plus que deux éléments.\n\ndf$ville &lt;- c('Montreal','Montreal','Montreal','Montreal')\npaste(df$noms_corr, df$adresses_3, df$ville, sep = \", \")\n\n[1] \"Jérémy Toutanplace, 15 rue Levy, Montreal\"              \n[2] \"Constant Tinople, 413 Boulevard Saint-Laurent, Montreal\"\n[3] \"Dino Resto, 3606 rue Duke, Montreal\"                    \n[4] \"Luce Tancil, 2457 route Saint Marys, Montreal\"          \n\n\nSi vous souhaitez concaténer des éléments de texte sans séparateur, la fonction paste0 peut être plus simple à utiliser.\n\npaste0(\"Please conca\", \"tenate me!\")\n\n[1] \"Please concatenate me!\"\n\n\n\n1.4.2.6 Manipulation des colonnes de type date\nNous avons vu que les principaux types de données dans R sont le numérique, le texte, le booléen et le facteur. Il existe d’autres types introduits par différents packages. Nous abordons ici les types date et heure (date and time). Pour les manipuler, nous privilégions l’utilisation du package lubridate du tidyverse. Pour illustrer le tout, nous l’utilisons avec un jeu de données ouvertes de la Ville de Montréal représentant les collisions routières impliquant au moins un cycliste survenues après le 1er janvier 2017.\n\naccidents_df &lt;- read.csv(file=\"data/priseenmain/accidents.csv\", sep = \",\")\nnames(accidents_df)\n\n[1] \"HEURE_ACCDN\"       \"DT_ACCDN\"          \"NB_VICTIMES_TOTAL\"\n\n\nNous disposons de trois colonnes représentant respectivement l’heure, la date et le nombre de victimes impliquées dans la collision.\n\n1.4.2.6.1 Du texte à la date\nActuellement, les colonnes HEURE_ACCDN et DT_ACCDN sont au format texte. Nous pouvons afficher quelques lignes du jeu de données avec la fonction head pour visualiser comment elles ont été saisies.\n\nhead(accidents_df, n = 5)\n\n        HEURE_ACCDN   DT_ACCDN NB_VICTIMES_TOTAL\n1 16:00:00-16:59:00 2017/11/02                 0\n2 06:00:00-06:59:00 2017/01/16                 1\n3 18:00:00-18:59:00 2017/04/18                 0\n4 11:00:00-11:59:00 2017/05/28                 1\n5 15:00:00-15:59:00 2017/05/28                 1\n\n\nUn peu de ménage s’impose : les heures sont indiquées comme des périodes d’une heure. Nous utilisons la fonction str_split_fixed du package stringr pour ne garder que la première partie de l’heure (avant le tiret). Ensuite, Nous concaténons l’heure et la date avec la fonction paste, puis nous convertissons ce résultat en un objet date-time.\n\nlibrary(lubridate)\n\n# Étape 1 : découper la colonne Heure_ACCDN\naccidents_df$heure &lt;- str_split_fixed(accidents_df$HEURE_ACCDN, \"-\", n=2)[,1]\n# Étape 2 : concaténer l'heure et la date\naccidents_df$date_heure &lt;- paste(accidents_df$DT_ACCDN, \n                                 accidents_df$heure,\n                                 sep = ' ')\n# Étape 3 : convertir au format datetime\naccidents_df$datetime &lt;- as_datetime(accidents_df$date_heure,\n                                     format = \"%Y/%m/%d %H:%M:%S\")\n\nPour effectuer la conversion, nous avons utilisé la fonction as_datetime du package lubridate. Elle prend comme paramètre un vecteur de texte et une indication du format de ce vecteur de texte. Il existe de nombreuses façons de spécifier une date et une heure et l’argument format permet d’indiquer celle à utiliser. Dans cet exemple, la date est structurée comme suit : année/mois/jour heure:minute:seconde, ce qui se traduit par le format %Y/%m/%d %H:%M:%S.\n\n%Y signifie une année indiquée avec quatre caractères : 2017;\n%m signifie un mois, indiqué avec deux caractères : 01, 02, 03, … 12;\n%d signifie un jour, indiqué avec deux caractères : 01, 02, 03, … 31;\n%H signifie une heure, au format 24 heures avec deux caractères : 00, 02, … 23;\n%M signifie des minutes indiquées avec deux caractères : 00, 02, … 59;\n%S signifie des secondes, indiquées avec deux caractères : 00, 02, … 59.\n\nNotez que les caractères séparant les années, jours, heures, etc. sont aussi à indiquer dans le format. Dans notre exemple, nous utilisons la barre oblique (/) pour séparer les éléments de la date et le deux points (:) pour l’heure, et une espace pour séparer la date et l’heure.\nIl existe d’autres nomenclatures pour spécifier un format datetime : par exemple, des mois renseignés par leur nom, l’indication AM-PM, etc. Vous pouvez vous référer à la documentation de la fonction strptime (help(strptime)) pour explorer les différentes nomenclatures et choisir celle qui vous convient. Bien évidemment, il est nécessaire que toutes les dates de votre colonne soient renseignées dans le même format, pour éviter que la fonction ne retourne la valeur NA lorsqu’elle ne peut lire le format. Après toutes ces opérations, rejetons un oeil à notre DataFrame.\n\nhead(accidents_df, n = 5)\n\n        HEURE_ACCDN   DT_ACCDN NB_VICTIMES_TOTAL    heure          date_heure\n1 16:00:00-16:59:00 2017/11/02                 0 16:00:00 2017/11/02 16:00:00\n2 06:00:00-06:59:00 2017/01/16                 1 06:00:00 2017/01/16 06:00:00\n3 18:00:00-18:59:00 2017/04/18                 0 18:00:00 2017/04/18 18:00:00\n4 11:00:00-11:59:00 2017/05/28                 1 11:00:00 2017/05/28 11:00:00\n5 15:00:00-15:59:00 2017/05/28                 1 15:00:00 2017/05/28 15:00:00\n             datetime\n1 2017-11-02 16:00:00\n2 2017-01-16 06:00:00\n3 2017-04-18 18:00:00\n4 2017-05-28 11:00:00\n5 2017-05-28 15:00:00\n\n\n\n1.4.2.6.2 Extraction des informations d’une date\nÀ partir de la nouvelle colonne datetime, nous sommes en mesure d’extraire des informations intéressantes comme :\n\nle nom du jour de la semaine avec la fonction weekdays\n\n\n\naccidents_df$jour &lt;- weekdays(accidents_df$datetime)\n\n\nla période de la journée avec les fonctions am et pm\n\n\n\naccidents_df$AM &lt;- am(accidents_df$datetime)\naccidents_df$PM &lt;- pm(accidents_df$datetime)\nhead(accidents_df[c(\"jour\", \"AM\", \"PM\")], n=5)\n\n      jour    AM    PM\n1    jeudi FALSE  TRUE\n2    lundi  TRUE FALSE\n3    mardi FALSE  TRUE\n4 dimanche  TRUE FALSE\n5 dimanche FALSE  TRUE\n\n\nIl est aussi possible d’accéder aux sous-éléments d’un datetime comme l’année, le mois, le jour, l’heure, la minute et la seconde avec les fonctions year(), month(),day(), hour(), minute() et second().\n\n1.4.2.6.3 Calcul d’une durée entre deux datetime\n\nUne autre utilisation intéressante du format datetime est de calculer des différences de temps. Par exemple, nous pourrions utiliser le nombre de minutes écoulées depuis 7 h comme une variable dans une analyse visant à déterminer le moment critique des collisions routières durant l’heure de pointe du matin. Pour cela, nous devons créer un datetime de référence en concaténant la date de chaque observation, et le temps 07:00:00, qui est notre point de départ.\n\naccidents_df$date_heure_07 &lt;- paste(accidents_df$DT_ACCDN, \n                                 '07:00:00',\n                                 sep = ' ')\naccidents_df$ref_datetime &lt;- as_datetime(accidents_df$date_heure_07,\n                                     format = \"%Y/%m/%d %H:%M:%S\")\n\nIl ne nous reste plus qu’à calculer la différence de temps entre la colonne datetime et notre temps de référence ref_datetime.\n\naccidents_df$diff_time &lt;- difftime(accidents_df$datetime,\n                                   accidents_df$ref_datetime,\n                                   units = 'min')\n\nNotez qu’ici la colonne diff_time est d’un type spécial : une différence temporelle (difftime). Il faut encore la convertir au format numérique pour l’utiliser avec la fonction as.numeric. Par curiosité, réalisons rapidement un histogramme avec la fonction hist pour analyser rapidement cette variable d’écart de temps!\n\naccidents_df$diff_time_num &lt;- as.numeric(accidents_df$diff_time)\nhist(accidents_df$diff_time_num, breaks = 50)\n\n\n\nFigure 1.14: Répartition temporelle des accidents à vélo\n\n\n\nNous observons clairement deux pics, un premier entre 0 et 100 (entre 7 h et 8 h 30 environ) et un second plus important entre 550 et 650 (entre 16 h et 17 h 30 environ), ce qui correspond sans surprise aux heures de pointe (figure 1.14). Il est intéressant de noter que plus d’accidents se produisent à l’heure de pointe du soir qu’à celle du matin.\n\n1.4.2.6.4 Fuseau horaire\nLorsque nous travaillons avec des données provenant de différents endroits dans le monde ou que nous devons tenir compte des heures d’été et d’hiver, il convient de tenir compte du fuseau horaire. Pour créer une date avec un fuseau horaire, il est possible d’utiliser le paramètre tz dans la fonction as_datetime et d’utiliser l’identifiant du fuseau approprié. Dans notre cas, les données d’accident ont été collectées à Montréal, qui a un décalage de -5 heures par rapport au temps de référence UTC (+1 heure en été). Le code spécifique de ce fuseau horaire est EDT; il est facile de trouver ces codes avec le site web timeanddate.com.\n\naccidents_df$datetime &lt;- as_datetime(accidents_df$date_heure,\n                                     format = \"%Y/%m/%d %H:%M:%S\",\n                                     tz = \"EDT\")\n\n\n1.4.2.7 Recodage des variables\nRecoder une variable signifie changer ses valeurs selon une condition afin d’obtenir une nouvelle variable. Si nous reprenons le jeu de données précédent sur les accidents à vélo, nous pourrions vouloir créer une nouvelle colonne nous indiquant si la collision a eu lieu en heures de pointe ou non. Nous obtiendrions ainsi une nouvelle variable avec seulement deux catégories plutôt que la variable numérique originale. Nous pourrions aussi définir quatre catégories avec l’heure de pointe du matin, l’heure de pointe du soir, le reste de la journée et la nuit.\n\n1.4.2.7.1 Cas binaire avec ifelse\n\nSi nous ne souhaitons créer que deux catégories, le plus simple est d’utiliser la fonction ifelse. Cette fonction évalue une condition (section 1.3.5) pour chaque ligne d’un DataFrame et produit un nouveau vecteur. Créons donc une variable binaire indiquant si une collision a eu lieu durant les heures de pointe ou hors heures de pointe. Nous devons alors évaluer les conditions suivantes :\nEst-ce que l’accident a eu lieu entre 7 h (0) ET 9 h (120), OU entre 16 h 30 (570) ET 18 h 30 (690)?\n\ntable(is.na(accidents_df$diff_time_num))\n\n\nFALSE  TRUE \n 2414    40 \n\n\nNotons dans un premier temps que nous avons 40 observations sans valeur pour la colonne diff_time_num. Il s’agit d’observations pour lesquelles nous ne disposions pas de dates au départ.\n\nCond1 &lt;- accidents_df$diff_time_num &gt;= 0 & accidents_df$diff_time_num &lt;= 120\nCond2 &lt;- accidents_df$diff_time_num &gt;= 570 & accidents_df$diff_time_num &lt;= 690\n\naccidents_df$moment_bin &lt;- ifelse(Cond1 | Cond2,\n                                  \"en heures de pointe\",\n                                  \"hors heures de pointe\")\n\nComme vous pouvez le constater, la fonction ifelse nécessite trois arguments :\n\nune condition, pouvant être TRUE ou FALSE;\nla valeur à renvoyer si la condition est FALSE;\nla valeur à renvoyer si la condition est TRUE.\n\nAvec la fonction table, nous pouvons rapidement visualiser les effectifs des deux catégories ainsi créées :\n\ntable(accidents_df$moment_bin)\n\n\n  en heures de pointe hors heures de pointe \n                  841                  1573 \n\n# Vérifier si nous avons toujours seulement 40 NA\ntable(is.na(accidents_df$moment_bin))\n\n\nFALSE  TRUE \n 2414    40 \n\n\nLes heures de pointe représentent quatre heures de la journée, ce qui nous laisse neuf heures hors heures de pointe entre 7 h et 20 h.\n\n# Ratio de collisions routières en heures de pointe\n(841 / 2414) / (4 / 13)\n\n[1] 1.132249\n\n# Ratio de collisions routières hors heure de pointe\n(1573 / 2414) / (9 / 13)\n\n[1] 0.9412225\n\n\nEn rapportant les collisions aux durées des deux périodes, nous observons une nette surreprésentation des collisions impliquant un vélo pendant les heures de pointe d’environ 13 % comparativement à la période hors des heures de pointe.\n\n1.4.2.7.2 Cas multiple avec la case_when\n\nLorsque nous souhaitons créer plus que deux catégories, il est possible soit d’enchaîner plusieurs fonctions ifelse (ce qui produit un code plus long et moins lisible), soit d’utiliser la fonction case_when du package dplyr du tidyverse. Reprenons notre exemple et créons quatre catégories :\n\nen heures de pointe du matin;\nen heures de pointe du soir;\nle reste de la journée (entre 7 h et 20 h);\nla nuit (entre 21 h et 7 h).\n\n\nlibrary(dplyr)\n\naccidents_df$moment_multi &lt;- case_when(\n  accidents_df$diff_time_num &gt;= 0 & accidents_df$diff_time_num &lt;= 120 ~ \"pointe matin\",\n  accidents_df$diff_time_num &gt;= 570 & accidents_df$diff_time_num &lt;= 690 ~ \"pointe soir\",\n  accidents_df$diff_time_num &gt; 690 & accidents_df$diff_time_num &lt; 780 ~ \"journee\",\n  accidents_df$diff_time_num &gt; 120 & accidents_df$diff_time_num &lt; 570 ~ \"journee\",\n  accidents_df$diff_time_num &lt; 0 | accidents_df$diff_time_num &gt;= 780 ~ \"nuit\"\n)\n\ntable(accidents_df$moment_multi)\n\n\n     journee         nuit pointe matin  pointe soir \n        1155          418          404          437 \n\n# Vérifions encore les NA\ntable(is.na(accidents_df$moment_multi))\n\n\nFALSE  TRUE \n 2414    40 \n\n\nLa syntaxe de cette fonction est un peu particulière. Elle accepte un nombre illimité (ou presque) d’arguments. Chaque argument est composé d’une condition et d’une valeur à renvoyer si la condition est vraie; ces deux éléments étant reliés par le symbole ~. Notez que toutes les évaluations sont effectuées dans l’ordre des arguments. En d’autres termes, la fonction teste d’abord la première condition et assigne ses valeurs, puis recommence pour les prochaines conditions. Ainsi, si une observation (ligne du tableau de données) obtient TRUE à plusieurs conditions, elle obtient au final la valeur de la dernière condition validée. Dans l’exemple précédent, si la première condition est accidents_df$diff_time_num &gt;= 0 | accidents_df$diff_time_num &lt;= 120, alors nous obtenons pour seule valeur en résultat \"pointe matin\" puisque chaque observation a une valeur supérieure à 0 et que nous avons remplacé l’opérateur & (ET) par l’opérateur | (OU).\n\n1.4.2.8 Sous-sélection d’un DataFrame\n\nDans cette section, nous voyons comment extraire des sous-parties d’un DataFrame. Il est possible de sous-sélectionner des lignes et des colonnes en se basant sur des conditions ou leur index. Pour cela, nous utilisons un jeu de données fourni avec R : le jeu de données iris décrivant des fleurs du même nom.\n\ndata(\"iris\")\n\n# Nombre de lignes et de colonnes\ndim(iris)\n\n[1] 150   5\n\n\n\n1.4.2.8.1 Sous-sélection des lignes\nSous-sélectionner des lignes par index est relativement simple. Admettons que nous souhaitons sélectionner les lignes 1 à 5, 10 à 25, 37 et 58.\n\nsub_iris &lt;- iris[c(1:5, 10:25, 37, 58),]\nnrow(sub_iris)\n\n[1] 23\n\n\nSous-sélectionner des lignes avec une condition peut être effectué soit avec une syntaxe similaire, soit en utilisant la fonction subset. Sélectionnons toutes les fleurs de l’espèce Virginica.\n\niris_virginica1 &lt;- iris[iris$Species == \"virginica\",]\niris_virginica2 &lt;- subset(iris, iris$Species == \"virginica\")\n\n# Vérifions que les deux DataFrames ont le même nombre de lignes\nnrow(iris_virginica1) == nrow(iris_virginica2)\n\n[1] TRUE\n\n\nVous pouvez utiliser, dans les deux cas, tous les opérateurs vus dans les sections 1.3.5.1 et 1.3.5.3. L’enjeu est d’arriver à créer un vecteur booléen final permettant d’identifier les observations à conserver.\n\n1.4.2.8.2 Sous-sélection des colonnes\nNous avons déjà vu comment sélectionner des colonnes en utilisant leur nom ou leur index dans la section 1.4.2.2.1. Ajoutons ici un cas particulier où nous souhaitons sélectionner des colonnes selon une condition. Par exemple, nous pourrions vouloir conserver que les colonnes comprenant le mot Length. Pour cela, nous utilisons la fonction grepl, permettant de déterminer si des caractères sont présents dans une chaîne de caractères.\n\nnom_cols &lt;- names(iris)\nprint(nom_cols)\n\n[1] \"Sepal.Length\" \"Sepal.Width\"  \"Petal.Length\" \"Petal.Width\"  \"Species\"     \n\ntest_nom &lt;- grepl(\"Length\", nom_cols, fixed = TRUE)\nok_nom &lt;- nom_cols[test_nom]\n\niris_2 &lt;- iris[ok_nom]\nprint(names(iris_2))\n\n[1] \"Sepal.Length\" \"Petal.Length\"\n\n\nIl est possible d’obtenir ce résultat en une seule ligne de code, mais elle est un peu moins lisible.\n\niris2 &lt;- iris[names(iris)[grepl(\"Length\", names(iris), fixed = TRUE)]]\n\n\n1.4.2.8.3 Sélection des colonnes et des lignes\nNous avons vu qu’avec les crochets [], nous pouvons extraire les colonnes et les lignes d’un DataFrame. Il est possible de combiner les deux opérations simultanément. Pour ce faire, il faut indiquer en premier les index ou la condition permettant de sélectionner une ligne, puis les index ou la condition pour sélectionner les colonnes : [index_lignes , index_colonnes]. Sélectionnons cinq premières lignes et les trois premières colonnes du jeu de données iris :\n\niris_5x3 &lt;- iris[c(1,2,3,4,5), c(1,2,3)]\nprint(iris_5x3)\n\n  Sepal.Length Sepal.Width Petal.Length\n1          5.1         3.5          1.4\n2          4.9         3.0          1.4\n3          4.7         3.2          1.3\n4          4.6         3.1          1.5\n5          5.0         3.6          1.4\n\n\nCombinons nos deux exemples précédents pour sélectionner uniquement les lignes avec des fleurs de l’espèce virginica, et les colonnes avec le mot Length.\n\niris_virginica3 &lt;- iris[iris$Species == \"virginica\",\n                       names(iris)[grepl(\"Length\", names(iris), fixed = TRUE)]]\nhead(iris_virginica3, n=5)\n\n    Sepal.Length Petal.Length\n101          6.3          6.0\n102          5.8          5.1\n103          7.1          5.9\n104          6.3          5.6\n105          6.5          5.8\n\n\n\n1.4.2.9 Fusion de DataFrames\n\nTerminons cette section avec la fusion de DataFrames. Nous distinguons deux méthodes répondant à des besoins différents : par ajout ou par jointure.\n\n1.4.2.9.1 Fusion de DataFrames par ajout\nAjouter deux DataFrames peut se faire en fonction de leurs colonnes ou en fonction de leurs lignes. Dans ces deux cas, nous utilisons respectivement les fonctions cbind et rbind. La figure 1.15 résume graphiquement le fonctionnement des deux fonctions.\n\n\nFigure 1.15: Fusion de DataFrames\n\nPour que cbind fonctionne, il faut que les deux DataFrames aient le même nombre de lignes. Pour rbind, les deux DataFrames doivent avoir le même nombre de colonnes. Prenons à nouveau comme exemple le jeu de données iris. Nous commençons par le séparer en trois sous-jeux de données comprenant chacun une espèce d’iris. Puis, nous fusionnons deux d’entre eux avec la fonction rbind.\n\niris1 &lt;- subset(iris, iris$Species == \"virginica\")\niris2 &lt;- subset(iris, iris$Species == \"versicolor\")\niris3 &lt;- subset(iris, iris$Species == \"setosa\")\n\niris_comb &lt;- rbind(iris2,iris3)\n\nNous pourrions aussi extraire dans les deux DataFrames les colonnes comprenant le mot Length et le mot Width, puis les fusionner.\n\niris_l &lt;- iris[names(iris)[grepl(\"Length\", names(iris), fixed = TRUE)]]\niris_w &lt;- iris[names(iris)[grepl(\"Width\", names(iris), fixed = TRUE)]]\n\niris_comb &lt;- cbind(iris_l,iris_w)\nnames(iris_comb)\n\n[1] \"Sepal.Length\" \"Petal.Length\" \"Sepal.Width\"  \"Petal.Width\" \n\n\n\n1.4.2.9.2 Jointure de DataFrames\n\nUne jointure est une opération un peu plus complexe qu’un simple ajout. L’idée est d’associer des informations de plusieurs DataFrames en utilisant une colonne (appelée une clef) présente dans les deux jeux de données. Nous distinguons plusieurs types de jointure :\n\nLes jointures internes permettant de combiner les éléments communs entre deux DataFrames A et B.\nLa jointure complète permettant de combiner les éléments présents dans A ou B.\nLa jointure à gauche, permettant de ne conserver que les éléments présents dans A même s’ils n’ont pas de correspondance dans B.\n\nCes trois jointures sont présentées à la figure 1.16; pour ces trois cas, la colonne commune se nomme id.\n\n\nFigure 1.16: Jointure de DataFrames\n\nVous retiendrez que les deux dernières jointures peuvent produire des valeurs manquantes. Pour réaliser ces opérations, nous utilisons la fonction merge. Prenons un exemple simple à partir d’un petit jeu de données.\n\nauteurs &lt;- data.frame(\n    name = c(\"Tukey\", \"Venables\", \"Tierney\", \"Ripley\", \"McNeil\", \"Apparicio\"),\n    nationality = c(\"US\", \"Australia\", \"US\", \"UK\", \"Australia\", \"Canada\"),\n    retired = c(\"yes\", rep(\"no\", 5)))\nlivres &lt;- data.frame(\n    aut = c(\"Tukey\", \"Venables\", \"Tierney\", \"Ripley\", \"Ripley\", \"McNeil\" , \"Wickham\"),\n    title = c(\"Exploratory Data Analysis\",\n              \"Modern Applied Statistics ...\",\n              \"LISP-STAT\",\n              \"Spatial Statistics\", \"Stochastic Simulation\",\n               \"Interactive Data Analysis\", \"R for Data Science\"))\n\nNous avons donc deux DataFrames, le premier décrivant des auteurs et le second des livres. Effectuons une première jointure interne afin de savoir pour chaque livre la nationnalité de son auteur et si ce dernier est à la retraite.\n\ndf1 &lt;- merge(livres, auteurs, #les deux DataFrames \n             by.x = \"aut\", by.y = \"name\", #les noms des colonnes de jointures\n             all.x = FALSE, all.y = FALSE)\nprint(df1)\n\n       aut                         title nationality retired\n1   McNeil     Interactive Data Analysis   Australia      no\n2   Ripley            Spatial Statistics          UK      no\n3   Ripley         Stochastic Simulation          UK      no\n4  Tierney                     LISP-STAT          US      no\n5    Tukey     Exploratory Data Analysis          US     yes\n6 Venables Modern Applied Statistics ...   Australia      no\n\n\nCette jointure est interne, car les deux paramètres all.x et all.y ont pour valeur FALSE. Ainsi, nous indiquons à la fonction que nous ne souhaitons ni garder tous les éléments du premier DataFrame ni tous les éléments du second, mais uniquement les éléments présents dans les deux. Vous noterez ainsi que le livre “R for Data Science” n’est pas présent dans le jeu de données final, car son auteur “Wickham” ne fait pas partie du DataFrame auteurs. De même, l’auteur “Apparicio” n’apparaît pas dans la jointure, car aucun livre dans le DataFrame books n’a été écrit par cet auteur.\nPour conserver tous les livres, nous pouvons effectuer une jointure à gauche en renseignant all.x = TRUE. Nous forçons ainsi la fonction à garder tous les livres et à mettre des valeurs vides aux informations manquantes des auteurs.\n\ndf2 &lt;- merge(livres, auteurs, #les deux DataFrames \n             by.x = \"aut\", by.y = \"name\", #les noms des colonnes de jointures\n             all.x = TRUE, all.y = FALSE)\nprint(df2)\n\n       aut                         title nationality retired\n1   McNeil     Interactive Data Analysis   Australia      no\n2   Ripley            Spatial Statistics          UK      no\n3   Ripley         Stochastic Simulation          UK      no\n4  Tierney                     LISP-STAT          US      no\n5    Tukey     Exploratory Data Analysis          US     yes\n6 Venables Modern Applied Statistics ...   Australia      no\n7  Wickham            R for Data Science        &lt;NA&gt;    &lt;NA&gt;\n\n\nPour garder tous les livres et tous les auteurs, nous pouvons faire une jointure complète en indiquant all.x = TRUE et all.y = TRUE.\n\ndf3 &lt;- merge(livres, auteurs, #les deux DataFrames \n             by.x = \"aut\", by.y = \"name\", #les noms des colonnes de jointures\n             all.x = TRUE, all.y = TRUE)\nprint(df3)\n\n        aut                         title nationality retired\n1 Apparicio                          &lt;NA&gt;      Canada      no\n2    McNeil     Interactive Data Analysis   Australia      no\n3    Ripley            Spatial Statistics          UK      no\n4    Ripley         Stochastic Simulation          UK      no\n5   Tierney                     LISP-STAT          US      no\n6     Tukey     Exploratory Data Analysis          US     yes\n7  Venables Modern Applied Statistics ...   Australia      no\n8   Wickham            R for Data Science        &lt;NA&gt;    &lt;NA&gt;"
  },
  {
    "objectID": "01-priseenmainR.html#sec-016",
    "href": "01-priseenmainR.html#sec-016",
    "title": "1  Prise en main de R",
    "section": "\n1.5 Code R bien structuré",
    "text": "1.5 Code R bien structuré\nTerminons ici avec quelques conseils sur la rédaction d’un code R. Bien rédiger son code est essentiel pour trois raisons :\n\nPouvoir relire et réutiliser son code dans le futur.\nPermettre à d’autres personnes de bien lire et de réutiliser votre code.\nMinimiser les risques d’erreurs.\n\nNe négligez pas l’importance d’un code bien rédigé et bien documenté, vous vous éviterez ainsi des migraines lorsque vous devrez exhumer du code écrit il y a plusieurs mois.\nVoici quelques lignes directrices peu contraignantes, mais qui devraient vous être utiles :\n\n\nPrivilégier la clarté à la concision : il vaut mieux parfois scinder une ligne de code en plusieurs sous-étapes afin de faciliter la lecture de l’opération réalisée. Par exemple, si nous reprenons une ligne de code d’une section précédente où nous sélectionnions l’ensemble des colonnes du jeu de données iris comprenant le mot Length :\n\n\niris_l &lt;- iris[names(iris)[grepl(\"Length\", names(iris), fixed = TRUE)]]\n\nNous pouvons simplifier la lecture de ce code en détaillant les différentes étapes comme suit :\n\nnoms_cols &lt;- names(iris)\nsel_noms &lt;- noms_cols[grepl(\"Length\", noms_cols, fixed = TRUE)]\niris_l &lt;- iris[sel_noms]\n\n\n\nDocumenter et commenter son code le plus possible : il est possible d’ajouter du texte dans un code R qui ne sera pas exécuté, ce que nous appelons des commentaires. Typiquement, une ligne commençant par un # n’est pas interprétée par le logiciel. Utilisez des commentaires le plus souvent possible pour décrire les actions que vous souhaitez effectuer avec votre code. Il sera ainsi plus facile de le relire, de naviguer dedans, mais également de repérer d’éventuelles erreurs. Si nous reprenons l’exemple précédent :\n\n\n# Récupération du nom des colonnes dans le DataFrame iris\nnoms_cols &lt;- names(iris)\n# Sélection des colonnes avec les caractères \"Length\"\nsel_noms &lt;- noms_cols[grepl(\"Length\", noms_cols, fixed = TRUE)]\n# Extraction des colonnes sélectionnées dans un nouveau DataFrame\niris_l &lt;- iris[sel_noms]\n\n\nÉviter le code à rallonge… : typiquement, essayez de vous limiter à des lignes de code d’une longueur maximale de 80 caractères. Au-delà de ce seuil, il est judicieux de découper votre code en plusieurs lignes.\nAdopter une convention d’écriture : une convention d’écriture est un ensemble de règles strictes définissant comment un code doit être rédigé. À titre d’exemple, il est parfois recommandé d’utiliser le lowerCamelCase, le UpperCamelCase, ou encore de séparer les mots par des tirets bas upper_camel_case. Un mélange de ces différentes conventions peut être utilisé pour distinguer les variables, les fonctions et les classes. Il peut être difficile de réellement arrêter une telle convention, car les différents packages dans R utilisent des conventions différentes. Dans vos propres codes, il est surtout important d’avoir une certaine cohérence et ne pas changer de convention.\nIndenter le code : l’indentation du code permet de le rendre beaucoup plus lisible. Indenter son code signifie d’insérer, au début de chaque ligne de code, un certain nombre d’espaces permettant d’indiquer à quel niveau de profondeur nous nous situons. Typiquement, lorsque des accolades ou des parenthèses sont ouvertes dans une fonction, une boucle ou une condition, nous rajoutons deux ou quatre espaces en début de ligne. Prenons un exemple très concret : admettons que nous écrivons une fonction affichant un résumé statistique à chaque colonne d’un jeu de données si cette colonne est de type numérique. L’indentation dans cette fonction joue un rôle crucial dans sa lisibilité. Sans indentation et sans respecter la règle des 80 caractères, nous obtenons ceci :\n\n\nsummary_all_num_cols &lt;- function(dataset){for(col in names(dataset)){if(class(dataset[[col]] == \"numeric\")){print(summary(dataset[[col]]))}}}\n\nAvec de l’indentation et des commentaires, la syntaxe est beaucoup plus lisible puisqu’elle permet de repérer facilement trois niveaux/paliers dans le code :\n\n# Définition d'une fonction\nsummary_all_num_cols &lt;- function(dataset){\n  # Itération sur chaque colonne de la fonction\n  for(col in names(dataset)){\n    # A chaque itération, testons si la colonne est de type numérique\n    if(class(dataset[[col]] == \"numeric\")){\n      # Si oui, nous affichons un résumé statistique pour cette colonne\n      print(summary(dataset[[col]]))\n    } # Ici nous sortons de la condition (niveau 3)\n  } # Ici nous sortons de la boucle (niveau 2)\n} # Ici nous sortons de la fonction (niveau 1)\n\n\n\nAdopter une structure globale pour vos scripts : un code R peut être comparé à une recette de cuisine. Si tous les éléments sont dans le désordre et sans structure globale, la recette risque d’être très difficile à suivre. Cette structure risque de changer quelque peu en fonction de la recette ou de l’auteur(e), mais les principaux éléments restent les mêmes. Dans un code R, nous pouvons distinguer plusieurs éléments récurrents que nous vous recommandons d’organiser de la façon suivante :\n\n\nCharger les différents packages utilisés par le script. Cela permet dès le début du code de savoir quelles sont les fonctions et méthodes qui seront employées dans le script. Cela limite aussi les risques d’oublier des packages qui seraient chargés plus loin dans le code.\nDéfinir les fonctions dont vous aurez besoin en plus de celles présentes dans les packages. Idem, placer nos fonctions en début de code évite d’oublier de les charger ou de les chercher quand nous en avons besoin.\nDéfinir le répertoire de travail avec la fonction setwd et charger les données nécessaires.\nEffectuer au besoin les opérations de manipulation sur les données.\nEffectuer les analyses nécessaires en scindant si possible les différentes étapes. Notez également que l’étape de définition des fonctions complémentaires peut être effectuée dans une feuille de code séparée, et l’ensemble de ces fonctions chargées à l’aide de la fonction source. De même, si la manipulation des données est conséquente, il est recommandé de l’effectuer avec un code à part, d’enregistrer les données structurées, puis de les charger directement au début de votre code dédié à l’analyse.\n\n\n\nExploiter les commentaires délimitant les sections dans RStudio : il est possible d’écrire des commentaires d’une certaine façon pour que l’IDE les détecte comme des délimiteurs de sections. L’intérêt principal est que nous pouvons ensuite facilement naviguer entre ces sections en utilisant RStudio comme montré à la figure 1.17, mais aussi masquer des sections afin de faciliter la lecture du reste du code. Pour délimiter une section, il suffit d’ajouter une ligne de commentaire comprenant quatre fois les caractères -, = ou # à la suite.\n\n\n# Voici ma section 1 ----------------------------------\n\n# Voici ma section 2 ==================================\n\n# Voici ma section 3 ##################################\n\n# Autre exemple pour mieux marquer la rupture dans un code : \n\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n#### Titre de ma section 4 ####\n#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n\n\n\nFigure 1.17: Navigation dans des sections de codes avec RStudio\n\n\n\nAdopter une structure globale pour vos projets : au-delà du script, il est nécessaire de bien structurer vos projets, le plus important étant d’utiliser une structure commune à chaque projet pour vous faciliter le travail. Nous proposons à la figure 1.18 un exemple de structure assez générale pouvant être utilisée dans la plupart des cas. Elle sépare notamment les données originales des données structurées, ainsi que les fonctions complémentaires et la structuration des données du principal bloc d’analyse.\n\n\n\nFigure 1.18: Structure de dossier recommandée pour un projet avec R\n\nNe négligez jamais l’importance d’un code bien écrit et documenté !"
  },
  {
    "objectID": "01-priseenmainR.html#sec-017",
    "href": "01-priseenmainR.html#sec-017",
    "title": "1  Prise en main de R",
    "section": "\n1.6 Enregistrement des résultats",
    "text": "1.6 Enregistrement des résultats\nComme nous l’avons indiqué précédemment, l’ensemble des objets actuellement chargés dans votre session R sont perdus si vous la fermez. Cela peut être problématique si certains résultats nécessitent de longs temps de calcul ou si vous avez besoin de partager les objets obtenus avec d’autres personnes, mais pas le code pour les obtenir. Il est possible de retrouver les résultats d’une session précédente si ceux-ci ont été enregistrés sur votre disque dur puisque l’action d’enregistrer permet de faire passer vos objets présents dans votre mémoire vive dans des fichiers stockés sur votre disque dur. Vous pouvez pour cela utiliser la fonction save.image ou save.\nsave.image enregistre une copie exacte de votre session actuelle avec tous les objets présents dans votre environnement dans un fichier RData. La fonction save permet d’être plus sélectif et de ne garder que certains objets spécifiques.\nVoici la syntaxe pour enregistrer toute votre session :\n\nsave.image(file = 'chemin/vers/mon/fichier/session.RData', compress = TRUE)\n\nVous pouvez aussi utiliser le bouton d’enregistrement dans l’onglet Environnement dans RStudio (figure 1.19).\n\n\nFigure 1.19: Bouton enregistrer la session\n\nIl est recommandé de compresser ces fichiers (compress = TRUE) pour minimiser leur taille. Pour n’enregistrer que certains objets (ici iris et noms_cols), vous pouvez adapter cette syntaxe :\n\nsave(iris, noms_cols, file = 'chemin/vers/mon/fichier/mes_objet.RData', compress = TRUE)\n\nPour récupérer ces objets dans une autre session, il suffit d’utiliser la fonction load :\n\nload(file = 'chemin/vers/mon/fichier/mes_objet.RData')\n\nou d’utiliser le bouton ouvrir de l’onglet Environnement dans RStudio (figure 1.20).\n\n\nFigure 1.20: Bouton charger un fichier RDA"
  },
  {
    "objectID": "01-priseenmainR.html#sec-018",
    "href": "01-priseenmainR.html#sec-018",
    "title": "1  Prise en main de R",
    "section": "\n1.7 Session de travail",
    "text": "1.7 Session de travail\nComme vous avez pu le constater dans les sections Section 1.6 et Section 1.4.1, il est nécessaire de connaître les chemins vers les fichiers que vous souhaitez utiliser dans votre code R. Si tous ces fichiers sont organisés dans un même dossier (ce que nous vous recommandons à la figure 1.18, il est possible de définir un répertoire de travail avec la fonction setwd. Il est recommandé d’effectuer cette étape au début de votre code R, après le chargement des packages. Ainsi, vous n’aurez pas besoin de réécrire à chaque fois le chemin complet pour accéder à vos fichiers.\n\n# Chemin complet\nmes_donnes &lt;- read.csv(\"C:/projets/articles/2022/mon_projet/data/mes_donnes.csv\")\n# Utilisation de setwd\nsetwd(\"C:/projets/articles/2022/mon_projet\")\nmes_donnes &lt;- read.csv(\"data/mes_donnes.csv\")\n\nLa fonction getwd permet d’afficher le répertoire de travail utilisé actuellement par R.\nSi vous utilisez RStudio, il est possible d’utiliser une petite astuce pour définir comme répertoire de travail le dossier dans lequel se trouve le fichier de code R que vous utilisez actuellement :\n\nsetwd(dirname(rstudioapi::getActiveDocumentContext()$path))\n\nAdmettons que votre code R se trouve dans un sous dossier appelé CodeR de votre répertoire de travail, vous pouvez remonter d’un niveau dans votre arborescence en utilisant la syntaxe suivante :\n\nsetwd(paste0(dirname(rstudioapi::getActiveDocumentContext()$path), \"/..\"))\n\nLe double point (..) indique que nous souhaitons remonter dans le dossier parent du dossier dans lequel nous se trouvons acutellement.\nIl existe deux solutions de rechange à l’utilisation de setwd que certains jugent un peu démodé.\n\nLa première est le package here permettant de spécifier plus facilement des chemins relatifs et de définir un top-level directory pour votre projet.\nLa seconde est l’utilisation de la fonctionnalité projects de RStudio."
  },
  {
    "objectID": "01-priseenmainR.html#sec-019",
    "href": "01-priseenmainR.html#sec-019",
    "title": "1  Prise en main de R",
    "section": "\n1.8 Conclusion et ressources pertinentes",
    "text": "1.8 Conclusion et ressources pertinentes\nVoilà qui conclut ce chapitre sur les bases du langage R. Vous avez maintenant les connaissances nécessaires pour commencer à travailler. N’hésitez pas à revenir sur les différentes sous-sections au besoin! Quelques ressources pertinentes qui pourraient vous être utiles sont aussi reportées au tableau 1.7\n\n\n\n\nTableau 1.7: Ressources pertinente pour en apprendre plus sur R\n\nRessource\nDescription\n\n\n\nRbloggers\nUn recueil de nombreux blogues sur R : parfait pour être tenu au courant des nouveautés et faire des découvertes.\n\n\nCRAN packages by date\nLes derniers packages publiés sur CRAN : cela permet de garder un oeil sur les nouvelles fonctionnalités de vos packages préférés.\n\n\nIntroduction à R et au TidyVerse\nUne excellente ressource en français pour en apprendre plus sur le tidyverse.\n\n\nNumyard\nUne chaîne YouTube pour revoir les bases de R en vidéo.\n\n\ncheatsheets\nDes feuilles de triche résumant les fonctionnalités de nombreux packages."
  },
  {
    "objectID": "01-priseenmainR.html#sec-0110",
    "href": "01-priseenmainR.html#sec-0110",
    "title": "1  Prise en main de R",
    "section": "\n1.9 Quiz de révision du chapitre",
    "text": "1.9 Quiz de révision du chapitre\n\n\n\n\n\nAvec quelle fonction peut-on sélectionner son répertoire de travail?\n\n\nRelisez au besoin la section 1.7.\n\n\n\n\n\n\nget.wd\n\n\n\n\n\n\n\nset.wd\n\n\n\n\n\n\n\nsetWd\n\n\n\n\n\n\n\nsetwd\n\n\n\n\n\n\n\n\n\n\nInstaller RStudio est suffisant pour pouvoir utiliser R.\n\n\nRelisez au besoin le début de la section 1.2.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\n\nUn package doit être réinstallé à chaque fois que l’on souhaite l’utiliser.\n\n\nRelisez au besoin la section 1.2.3.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\n\nLa brique de données élémentaire dans R est :\n\n\nRelisez au besoin la section 1.3.6.\n\n\n\n\n\n\nLe vecteur\n\n\n\n\n\n\n\nLe DataFrame\n\n\n\n\n\n\n\nLa liste\n\n\n\n\n\n\n\nLa matrice\n\n\n\n\n\n\n\n\n\n\nUn vecteur peut contenir :\n\n\nRelisez au besoin la section 1.3.6.\n\n\n\n\n\n\nuniquement des valeurs numériques\n\n\n\n\n\n\n\nuniquement des valeurs textuelles\n\n\n\n\n\n\n\nuniquement des valeurs booléennes\n\n\n\n\n\n\n\ndes valeurs de types différents\n\n\n\n\n\n\n\n\n\n\nLa jointure et la concaténation de DataFrames désignent exactement la même opération.\n\n\nRelisez au besoin la section 1.4.2.9.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\n\nComparativement à une jointure complète, une jointure interne génère un DataFrame avec :\n\n\nRelisez le deuxième encadré à la section 1.4.2.9.2.\n\n\n\n\n\n\nnécessairement moins d’observations\n\n\n\n\n\n\n\nnécessairement plus d’observations\n\n\n\n\n\n\n\nau moins autant d’observations\n\n\n\n\n\n\n\nautant ou moins d’observations\n\n\n\n\n\n\n\nle même nombre d’observation\n\n\n\n\n\n\n\n\n\nVérifier votre résultat"
  },
  {
    "objectID": "02-univarie.html#sec-021",
    "href": "02-univarie.html#sec-021",
    "title": "2  Statistiques descriptives univariées",
    "section": "\n2.1 Notion et types de variable",
    "text": "2.1 Notion et types de variable\n\n2.1.1 Notion de variable\nD’un point de vue empirique, une variable est une propriété, une caractéristique d’une unité statistique, d’une observation. Il convient alors de bien saisir à quelle unité d’analyse (ou unité d’observation) s’appliquent les valeurs d’une variable : des personnes, des ménages, des municipalités, des entreprises, etc. Par exemple, pour des individus, l’âge, le genre ou encore le revenu sont autant de caractéristiques qui peuvent être mesurées à partir de variables. Autrement dit, une variable permet de mesurer un phénomène (dans un intervalle de valeurs, c’est-à-dire de manière quantitative) ou de le qualifier (avec plusieurs catégories, c’est-à-dire de manière qualitative).\nD’un point de vue plus théorique, une variable permet d’opérationnaliser un concept en sciences sociales (Gilles et Maranda 1994, 30), soit une « idée générale et abstraite que se fait l’esprit humain d’un objet de pensée concret ou abstrait, et qui lui permet de rattacher à ce même objet les diverses perceptions qu’il en a, et d’en organiser les connaissances » (Larousse). En effet, la construction d’un modèle théorique suppose d’opérationnaliser différents concepts et d’établir les relations qu’ils partagent entre eux. Or, l’opérationnalisation d’un concept nécessite soit de mesurer (dans un intervalle de valeurs, c’est-à-dire de manière quantitative), soit de qualifier (avec plusieurs catégories, c’est-à-dire de manière qualitative) un phénomène.\n\n\n\n\n\nMaîtriser la définition des variables que vous utilisez : un enjeu crucial! \n\n\nNe pas maîtriser la définition d’une variable revient à ne pas bien saisir la caractéristique ou encore le concept sous-jacent qu’elle tente de mesurer. Si vous exploitez des données secondaires – par exemple, issues d’un recensement de population ou d’une enquête longitudinale ou transversale –, il faut impérativement lire les définitions des variables que vous souhaitez utiliser. Ne pas le faire risque d’aboutir à :\n\nUne mauvaise opérationnalisation de votre modèle théorique, même si votre analyse est bien menée statistiquement parlant. Autrement dit, vous risquez de ne pas sélectionner les bonnes variables : prenons un exemple concret. Vous avez construit un modèle théorique dans lequel vous souhaitez inclure un concept sur la langue des personnes. Dans le recensement canadien de 2016, plusieurs variables relatives à la langue sont disponibles : [connaissance des langues officielles, langue parlée à la maison, langue maternelle, première langue officielle parlée, connaissance des langues non officielles et langue de travail] (https://www12.statcan.gc.ca/census-recensement/2016/ref/guides/003/98-500-x2016003-fra.cfm). La sélection de l’une de ces variables doit être faite de manière rigoureuse, c’est-à-dire en lien avec votre cadre théorique et suite à une bonne compréhension des définitions des variables. Dans une étude sur le marché du travail, nous sélectionnerions probablement la variable sur la connaissance des langues officielles du Canada, afin d’évaluer son effet sur l’employabilité, toutes choses étant égales par ailleurs. Dans une autre étude portant sur la réussite ou la performance scolaire, il est probable que nous utiliserions la langue maternelle.\nUne mauvaise interprétation et discussion de vos résultats en lien avec votre cadre théorique.\nUne mauvaise identification des pistes de recherche.\n\nFinalement, la définition d’une variable peut évoluer à travers plusieurs recensements de population : la société évolue, les variables aussi! Par conséquent, si vous comptez utiliser plusieurs années de recensement dans une même étude, assurez-vous que les définitions des variables sont similaires d’un jeu de données à l’autre et qu’elles mesurent ainsi la même chose.\nComprendre les variables utilisées dans un article scientifique : un exercice indispensable dans l’élaboration d’une revue de littérature\nUne lecture rigoureuse d’un article scientifique suppose, entre autres, de bien comprendre les concepts et les variables mobilisés. Il convient alors de lire attentivement la section méthodologique (pas uniquement la section des résultats ou pire, celle du résumé), sans quoi vous risquez d’aboutir à une revue de littérature approximative. Ayez aussi un regard critique sur les variables utilisées en lien avec le cadre théorique. Certains concepts sont très difficiles à traduire en variables; leurs opérationnalisations (mesures) peuvent ainsi faire l’objet de vifs débats au sein de la communauté scientifique. Très succinctement, c’est notamment le cas du concept de capital social. D’une part, les définitions et ancrages sont bien différents selon Bourdieu (sociologue, ancrage au niveau des individus) et Putman (politologue, ancrage au niveau des collectivités); d’autre part, aucun consensus ne semble clairement se dégager quant à la définition de variables permettant de mesurer le capital social efficacement (de manière quantitative).\nVariable de substitution (proxy variable en anglais)\nNous faisons la moins pire des recherches! En effet, les données disponibles sont parfois imparfaites pour répondre avec précision à une question de recherche; nous pouvons toujours les exploiter, tout en signalant honnêtement leurs faiblesses et limites, et ce, tant pour les données que pour les variables utilisées.\n\nDes bases de données peuvent être en effet imparfaites. Par exemple, en criminologie, lorsqu’une étude est basée sur l’exploitation de données policières, la limite du chiffre noir est souvent signalée : les données policières comprennent uniquement les crimes et délits découverts par la police et occultent ainsi les crimes non découverts; ils ne peuvent ainsi refléter la criminalité réelle sur un territoire donné.\nDes variables peuvent aussi être imparfaites. Dans un jeu de données, il est fréquent qu’une variable ne soit pas disponible ou qu’elle n’ait tout simplement pas été mesurée. Nous cherchons alors une variable de substitution (proxy) pour la remplacer. Prenons un exemple concret portant sur l’exposition des cyclistes à la pollution atmosphérique ou au bruit environnemental. L’un des principaux facteurs d’exposition à ces pollutions est le trafic routier : plus ce dernier est élevé, plus les cyclistes risquent de rouler dans un environnement bruyant et pollué. Toutefois, il est rare de disposer de mesures du trafic en temps réel qui nécessitent des comptages de véhicules pendant le trajet des cyclistes (par exemple, à partir de vidéos captées par une caméra fixée sur le guidon). Pour pallier l’absence de mesures directes, plusieurs auteur(e)s utilisent des variables de substitution de la densité du trafic, comme la typologie des types d’axes (primaire, secondaire, tertiaire, rue locale, etc.), supposant ainsi qu’un axe primaire supporte un volume de véhicules supérieur à un axe secondaire.\n\n\n\n\n2.1.2 Types de variables\nNous distinguons habituellement les variables qualitatives (nominale ou ordinale) des variables quantitatives (discrète ou continue). Comme illustré à la figure 2.1, plusieurs mécanismes différents visent à qualifier, à classer, à compter ou à mesurer afin de caractériser les unités statistiques (observations) d’une population ou d’un échantillon.\n\n\nFigure 2.1: Types de variables\n\n\n2.1.2.1 Variables qualitatives\nUne variable nominale permet de qualifier des observations (individus) à partir de plusieurs catégories dénommées modalités. Par exemple, la variable couleur des yeux pourrait comprendre les modalités bleu, marron, vert, noir tandis que le type de famille comprendrait les modalités couple marié, couple en union libre et famille monoparentale.\nUne variable ordinale permet de classer des observations à partir de plusieurs modalités hiérarchisées. L’exemple le plus connu est certainement l’échelle de Likert, très utilisée dans les sondages évaluant le degré d’accord d’une personne à une affirmation avec les modalités suivantes : tout à fait d’accord, d’accord, ni en désaccord ni d’accord, pas d’accord et pas du tout d’accord. Une multitude de variantes sont toutefois possibles pour classer la fréquence d’un phénomène (très souvent, souvent, parfois, rarement, jamais), l’importance accordée à un phénomène (pas du tout important, peu important, plus ou moins important, important, très important) ou la proximité perçue d’un lieu (très éloigné, loin, plus ou moins proche, proche, très proche).\nEn fonction du nombre de modalités qu’elle comprend, une variable qualitative (nominale ou ordinale) est soit dichotomique (binaire) (deux modalités), soit polytomique (plus de deux modalités). Par exemple, dans le recensement canadien, le sexe est une variable binaire (avec les modalités sexe masculin, sexe féminin), tandis que le genre est une variable polytomique (avec les modalités genre masculin, genre féminin et diverses identités de genre).\n\n\n\n\n\nFréquences pour des variables nominales et ordinales\n\n\nLes variables nominales et ordinales sont habituellement encodées avec des valeurs numériques entières (par exemple, 1 pour couple marié, 2 pour couple en union libre et 3 pour famille monoparentale). Toutefois, aucune opération arithmétique (moyenne ou écart-type par exemple) n’est possible sur ces valeurs. Dans R, nous utilisons un facteur pour attribuer un intitulé à chacune des valeurs numériques de la variable qualitative :\ndf$Famille &lt;- factor(df$Famille, c(1,2,3),  labels = c(\"couple marié\" , \"couple en union libre\", \"famille monoparentale\"))\nNous calculons toutefois les fréquences des différentes modalités pour une variable nominale ou ordinale. Il est aussi possible de calculer la médiane sur une variable ordinale.\n\n\n\n2.1.2.2 Variables quantitatives\nUne variable discrète permet de compter un phénomène dans un ensemble fini de valeurs, comme le nombre d’accidents impliquant un ou une cycliste à une intersection sur une période de cinq ans ou encore le nombre de vélos en libre-service disponibles à une station. Il existe ainsi une variable binaire sous-jacente : la présence ou non d’un accident à l’intersection ou la disponibilité d’un vélo ou non à la station pour laquelle nous opérons un comptage. Habituellement, une variable discrète ne peut prendre que des valeurs entières (sans décimale), comme le nombre de personnes fréquentant un parc.\nUne variable continue permet de mesurer un phénomène avec un nombre infini de valeurs réelles (avec décimales) dans un intervalle donné. Par exemple, une variable relative à la distance de dépassement d’un ou d’une cycliste par un véhicule motorisé pourrait varier de 0 à 5 mètres (\\(X \\in \\left[0,5\\right]\\)); toutefois, cette distance peut être de 0,759421 ou de 4,785612 mètres. Le nombre de décimales de la valeur réelle dépend de la précision et de la fiabilité de la mesure. Pour un capteur de distance de dépassement, le nombre de décimales dépend de la précision du lidar ou du sonar de l’appareil; aussi, l’utilisation de trois décimales – soit une précision au millimètre – est largement suffisante pour mesurer la distance de dépassement. De plus, une variable continue est soit une variable d’intervalle, soit une variable de rapport. Les variables d’intervalle ont une échelle relative, c’est-à-dire que les intervalles entre les valeurs de la variable ne sont pas constants; elles n’ont pas de vrai zéro. Autrement dit, ce type de variable a une échelle relative avec un zéro arbitraire. Ces valeurs peuvent être manipulées uniquement par addition et soustraction et non par multiplication et division. La variable d’intervalle la plus connue est certainement celle de la température. S’il fait 10 degrés Celsius à Montréal et 30 °C à Mumbai (soit 50 et 86 degrés en Fahrenheit), nous pouvons affirmer qu’il y a 20 °C ou 36 °F d’écart entre les deux villes, mais ne pouvons pas affirmer qu’il fait trois fois plus chaud à Mumbai. Presque toutes les mesures statistiques sur une variable d’intervalle peuvent être calculées, excepté le coefficient de variation et la moyenne géométrique puisqu’il n’y a pas de vrai zéro ni d’intervalles constants entre les valeurs. À l’inverse, les variables de rapport ont une échelle absolue, c’est-à-dire que les intervalles entre les valeurs sont constants et elles ont un vrai zéro. Elles peuvent ainsi être manipulées par addition, soustraction, multiplication et division. Par exemple, le prix d’un produit exprimé dans une unité monétaire ou la distance exprimée dans le système métrique sont des variables de rapport. Un vélo dont le prix affiché est de 1000 $ est bien deux fois plus cher qu’un autre à 500 $, une piste cyclable hors rue à 25 mètres du tronçon routier le plus proche est bien quatre fois plus proche qu’une autre à 100 mètres.\nUne variable semi-quantitative, appelée aussi variable quantitative ordonnée, est une variable discrète ou continue dont les valeurs ont été regroupées en classes hiérarchisées. Par exemple, l’âge est une variable continue pouvant être transformée avec les groupes d’âge ordonnés suivants : moins 25 ans, 25 à 44 ans, 45 à 64 ans et 65 ans et plus."
  },
  {
    "objectID": "02-univarie.html#sec-022",
    "href": "02-univarie.html#sec-022",
    "title": "2  Statistiques descriptives univariées",
    "section": "\n2.2 Types de données",
    "text": "2.2 Types de données\nDifférents types de données sont utilisés en sciences sociales. L’objectif ici n’est pas de les décrire en détail, mais plutôt de donner quelques courtes définitions. En fonction de votre question de recherche et des bases des données disponibles, il s’agit de sélectionner le ou les types de données les plus appropriés à votre étude.\n\n2.2.1 Données secondaires versus données primaires\nLes données secondaires sont des données qui existent déjà au début de votre projet de recherche : nul besoin de les collecter, il suffit de les exploiter! Une multitude de données de recensements ou d’enquêtes de Statistique Canada sont disponibles et largement exploitées en sciences sociales (par exemple, l’enquête nationale auprès des ménages – ENM, l’enquête sur la dynamique du marché du travail et du revenu – EDTR, l’enquête longitudinale auprès des immigrants – ELIC, etc.).\n\n\n\n\n\nAccès aux microdonnées\n\n\nAu Canada, les personnes qui font de la recherche, qui étudient ou qui enseignent, ont accès aux microdonnées des enquêtes de Statistique Canada dans les centres de données de recherche (CDR). Vous pouvez consulter le moteur de recherche du Réseau canadien des Centres de données de recherche (https://crdcn.org/fr/donn%C3%A9es) afin d’explorer les différentes enquêtes disponibles.\nAu Québec, l’accès à ces enquêtes est possible dans les différentes antennes du Centre interuniversitaire québécois de statistiques sociales de Statistique Canada (https://www.ciqss.org/).\n\n\nPar opposition, les données primaires n’existent pas quand vous démarrez votre projet : vous devez les collecter spécifiquement pour votre étude! Par exemple, une chercheuse souhaitant analyser l’exposition des cyclistes au bruit et à la pollution dans une ville donnée doit réaliser une collecte de données avec idéalement plusieurs personnes participantes (équipées de différents capteurs), et ce, sur plusieurs jours. Une collecte de données primaires peut aussi être réalisée avec une enquête par sondage. Brièvement, réaliser une collecte de données primaires nécessite différentes phases complexes comme la définition de la méthode de collecte et de la population à l’étude, l’estimation de la taille de l’échantillon, la validation des outils de collecte avec une phase de test, la réalisation de la collecte, la structuration, la gestion et l’exploitation de données collectées. Finalement, dans le milieu académique, une collecte de données primaires auprès d’individus doit être approuvée par le comité d’éthique de la recherche de l’université à laquelle est affiliée la personne responsable du projet de recherche.\n\n2.2.2 Données transversales versus données longitudinales\nLes données transversales sont des mesures pour une période relativement courte. L’exemple classique est un jeu de données constitué des variables extraites d’un recensement de population pour une année donnée (comme celui de 2016 de Statistique Canada).\nLes données longitudinales, appelées aussi données par panel, sont des mesures répétées pour plusieurs observations au cours du temps (N observations pour T dates). Par exemple, des observations pourraient être des pays, les dates pourraient être différentes années (de 1990 à 2019) pour lesquelles différentes variables seraient disponibles (population totale, taux d’urbanisation, produit intérieur brut par habitant, émissions de gaz à effet de serre par habitant, etc.).\n\n2.2.3 Données spatiales versus données aspatiales\nLes observations des données spatiales sont des unités spatiales géoréférencées. Elles peuvent être par exemple :\n\ndes points (x, y) ou (lat-long) représentant des entreprises avec plusieurs variables (adresse, date de création, nombre d’employés, secteurs d’activité, etc.);\nles lignes représentant des tronçons de rues pour lesquels plusieurs variables sont disponibles (type de rue, longueur en mètres, nombre de voies, débit journalier moyen annuel, etc.);\ndes polygones délimitant des régions ou des arrondissements pour lesquels une multitude de variables sociodémographiques et socioéconomiques sont disponibles;\nles pixels des bandes spectrales d’une image satellite.\n\nÀ l’inverse, aucune information spatiale n’est disponible pour des données aspatiales.\n\n2.2.4 Données individuelles versus données agrégées\nComme son nom l’indique, pour des données individuelles, chaque observation correspond à un individu. Les microdonnées de recensements ou d’enquêtes, par exemple, sont des données individuelles pour lesquelles toute une série de variables est disponible. Une étude analysant les caractéristiques de chaque arbre d’un quartier nécessite aussi des données individuelles : l’information doit être disponible pour chaque arbre. Pour les microdonnées des recensements canadiens, « chaque enregistrement au niveau de la personne comprend des identifiants (comme les identifiants du ménage et de la famille), des variables géographiques et des variables directes et dérivées tirées du questionnaire » (Statistique Canada). Comme signalé plus haut, ces microdonnées de recensements ou d’enquêtes sont uniquement accessibles dans les centres de données de recherche (CDR).\nLes données individuelles peuvent être agrégées à un niveau supérieur. Prenons le cas de microdonnées d’un recensement. Les informations disponibles pour chaque individu sont agrégées par territoire géographique (province, région économique, division de recensement, subdivision de recensement, région et agglomération de recensement, secteurs de recensement, aires de diffusion, etc.) en fonction du lieu de résidence des individus. Des sommaires statistiques – basés sur la moyenne, la médiane, la somme ou la proportion de chacune des variables mesurées au niveau individuel (âge, sexe, situation familiale, revenu, etc.) – sont alors construits pour ces différents découpages géographiques (Statistique Canada).\nL’agrégation n’est pas nécessairement géographique. En éducation, il est fréquent de travailler avec des données concernant les élèves, mais agrégées au niveau des écoles. La figure 2.2 donne un exemple simple d’agrégation de données individuelles.\n\n\nFigure 2.2: Exemple d’agrégation de données individuelles\n\n\n\n\n\n\nErreur écologique et erreur atomiste: attention aux interprétations abusives\n\n\nIl convient d’être prudent dans l’analyse des données agrégées. Très fréquente en géographie, l’erreur écologique (ecological fallacy en anglais) est une mauvaise interprétation des résultats. Elle consiste à attribuer des constats obtenus à partir de données agrégées pour un territoire aux individus qui forment la population de ce territoire. À l’inverse, attribuer des résultats à partir de données individuelles à des territoires est une erreur atomiste.\nPrenons un exemple concret tiré d’une étude récente sur la localisation des écoles primaires et le bruit aérien dans la région métropolitaine de Toronto (Audrin, Apparicio et Séguin 2021). Un des objectifs de cette étude est de vérifier si les écoles primaires (ns = 1420) avec des niveaux de bruit aérien élevés présentent des niveaux de réussite scolaire plus faibles. Les résultats de leur étude démontrent que les enfants scolarisés dans les écoles primaires avec à des niveaux élevés de bruit aérien sont issus de milieux plus défavorisés et ont plus souvent une langue maternelle autre que la langue d’enseignement. Aussi, les écoles avec des niveaux de bruit aérien élevés présentent des niveaux de réussite scolaire plus faibles.\nToutefois, étant donné que les variables sur la réussite scolaire sont mesurées au niveau de l’école (soit les pourcentages d’élèves ayant atteint ou dépassé la norme provinciale en lecture, en écriture et en mathématique, respectivement pour la 3e année et la 6e année) et non au niveau individuel, nous ne pouvons pas conclure que le bruit aérien à un impact significatif sur la réussite scolaire des élèves :\n« Nous avons pu démontrer que les écoles primaires localisées dans la zone NEF 25 présentent des taux de réussite plus faibles. Rappelons toutefois qu’une association obtenue avec des données agrégées ne peut pas nous permettre de conclure à une influence directe au niveau individuel, car l’agrégation des données entraîne une perte d’information. Cette erreur d’interprétation dite erreur écologique (ecological fallacy) tend à laisser penser que les associations entre les groupes s’appliquent à chaque individu (Robinson, 1950). Nos résultats gagneraient à être corroborés à partir d’analyses reposant sur des données individuelles ».\n\n\nPour le cas de l’agrégation géographique, il convient alors de bien comprendre la hiérarchie des régions géographiques délimitées par l’organisme ou l’agence ayant la responsabilité de produire, de gérer et de diffuser les données des recensements et des enquêtes, puis de sélectionner le découpage géographique qui répond le mieux à votre question de recherche.\n\n\n\n\n\nHiérarchie et définitions des régions géographiques du recensement canadien\n\n\n\nla hiérarchie des régions géographiques normalisées pour la diffusion\nle glossaire illustré des régions géographiques\nles différents profils du recensement de 2021 à télécharger pour les différentes régions géographiques.\n\n\n\n\n\n\n\n\nLes différents types de données abordés ci-dessus ne sont pas exclusifs.\n\n\nPar exemple, des données pour des régions administratives extraites de plusieurs recensements sont en fait des données secondaires, spatiales, agrégées et longitudinales.\nDes données sur la pollution atmosphérique et sonore collectées à vélo (avec différents capteurs et un GPS) sont des données spatiales primaires."
  },
  {
    "objectID": "02-univarie.html#sec-023",
    "href": "02-univarie.html#sec-023",
    "title": "2  Statistiques descriptives univariées",
    "section": "\n2.3 Statistique descriptive et statistique inférentielle",
    "text": "2.3 Statistique descriptive et statistique inférentielle\n\n2.3.1 Population, échantillon et inférence\nLes notions de population et d’échantillon sont essentielles en statistique puisqu’elles sont le socle de l’inférence statistique. Un échantillon est un sous-ensemble représentatif d’une population donnée. Prenons un exemple concret : une chercheuse veut comprendre la mobilité des personnes étudiant dans une université. Bien entendu, elle ne peut interroger toutes les personnes étudiantes de son université. Elle devra donc s’assurer d’obtenir un échantillon de taille suffisante et représentatif de la population étudiante. Une fois les données collectées (avec un sondage par exemple), elle pourra utiliser des techniques inférentielles pour analyser la mobilité des personnes interrogées. Si son échantillon est représentatif, les résultats obtenus pourront être inférés – c’est-à-dire généralisés, extrapolés – à l’ensemble de la population.\n\n\n\n\n\nLes méthodes d’échantillonnage\n\n\nNous n’abordons pas ici les méthodes d’échantillonnage. Sachez toutefois qu’il existe plusieurs méthodes probabilistes pour constituer un échantillon, notamment de manière aléatoire, systématique, stratifiée, par grappes. Consultez par exemple cette publication de Statistique Canada.\n\n\nAutre exemple, une autre chercheuse souhaite comprendre les facteurs influençant le sentiment de sécurité des cyclistes dans un quartier. De nouveau, elle ne peut pas enquêter sur l’ensemble des cyclistes du quartier et devra constituer un échantillon représentatif. Par la suite, la mise en œuvre de techniques inférentielles lui permettra d’identifier les caractéristiques individuelles (âge, sexe, habiletés à vélo, etc.) et de l’environnement urbain (types de voies empruntés, niveaux de trafic, de pollution, de bruit, etc.) ayant des effets significatifs sur le sentiment de sécurité. Si l’échantillon est représentatif, les résultats pourront être généralisés à l’ensemble des cyclistes du quartier.\n\n2.3.2 Deux grandes familles de méthodes statistiques\nNous distinguons habituellement deux grandes familles de méthodes statistiques : la statistique descriptive et exploratoire et la statistiques inférentielle et confirmatoire. Il existe de nombreuses définitions de ces deux branches de la statistique, celles proposées de Lebart et al. (1995) étant parmi les plus abouties :\n\n« La statistique descriptive et exploratoire : elle permet, par des résumés et des graphiques plus ou moins élaborés, de décrire des ensembles de données statistiques, d’établir des relations entre les variables sans faire jouer de rôle privilégié à une variable particulière. Les conclusions ne portent dans cette phase de travail que sur les données étudiées, sans être inférées à une population plus large. L’analyse exploratoire s’appuie essentiellement sur des notions élémentaires telles que des indicateurs de moyenne et de dispersion, sur des représentations graphiques. […]\nLa statistique inférentielle et confirmatoire : elle permet de valider ou d’infirmer, à partir de tests statistiques ou de modèles probabilistes, des hypothèses formulées a priori (ou après une phase exploratoire), et d’extrapoler, c’est-à-dire d’étendre certaines propriétés d’un échantillon à une population plus large. Les conclusions obtenues à partir des données vont au-delà de ces données. La statistique confirmatoire fait surtout appel aux méthodes dites explicatives et prévisionnelles, destinées, comme leurs noms l’indiquent, à expliquer puis à prévoir, suivant des règles de décision, une variable privilégiée à l’aide d’une ou plusieurs variables explicatives (régressions multiples et logistiques, analyse de variance, analyse discriminante, segmentation, etc.) » (Lebart, Morineau et Piron 1995, 209)."
  },
  {
    "objectID": "02-univarie.html#sec-024",
    "href": "02-univarie.html#sec-024",
    "title": "2  Statistiques descriptives univariées",
    "section": "\n2.4 Notion de distribution",
    "text": "2.4 Notion de distribution\n\n\n\n\n\nLes distributions : une notion centrale en statistique\n\n\nPrenez le temps de lire cette section à tête reposée et assurez-vous de bien comprendre chaque idée avant de passer à la suivante. N’hésitez pas à y revenir plusieurs fois si nécessaire, car la compréhension de ces concepts est essentielle pour utiliser adéquatement les méthodes que nous abordons dans ce livre.\n\n\n\n2.4.1 Définition générale\nEn probabilité, nous nous intéressons aux résultats d’expériences. Du point de vue de la théorie des probabilités, lancer un dé, mesurer la pollution atmosphérique, compter le nombre de collisions à une intersection, et demander à une personne d’évaluer son sentiment de sécurité sur une échelle de 1 à 10 sont autant d’expériences pouvant produire des résultats.\nUne distribution est un modèle mathématique permettant d’associer pour chaque résultat possible d’une expérience la probabilité d’obtenir ce résultat. D’un point de vue pratique, si nous disposons de la distribution régissant l’expérience : « mesurer la concentration d’ozone à Montréal à 13 h en été », nous pouvons calculer la probabilité de mesurer une valeur inférieure à 15 μg/m3.\n\n\n\n\n\nLoi de probabilité et distribution\n\n\nL’utilisation que nous faisons ici du terme « distribution » est un anglicisme (éhonté diront certaines personnes). En effet, en français, la définition précédente est plus proche du terme « loi de probabilité ». Cependant, la quasi-totalité de la documentation sur R est en anglais et, dans la pratique, ces deux termes ont tendance à se confondre. Nous avons donc fait le choix de poursuivre avec ce terme dans le reste du livre.\n\n\nUne distribution est toujours définie dans un intervalle en dehors duquel elle n’est définie; les valeurs dans cet intervalle sont appelées l’espace d’échantillonnage. Il s’agit donc des valeurs possibles que peut produire l’expérience. La somme des probabilités de l’ensemble des valeurs de l’espace d’échantillonnage est 1 (100 %). Intuitivement, cela signifie que si nous réalisons l’expérience, nous obtenons nécessairement un résultat, et que la somme des probabilités est répartie entre tous les résultats possibles de l’expérience. En langage mathématique, nous disons que l’intégrale de la fonction de densité d’une distribution est 1 dans son intervalle de définition.\nPrenons un exemple concret avec l’expérience suivante : tirer à pile ou face avec une pièce de monnaie non truquée. Si l’on souhaite décrire la probabilité d’obtenir pile ou face, nous pouvons utiliser une distribution qui aura comme espace d’échantillonnage [pile; face] et ces deux valeurs auront chacune comme probabilité 0,5. Il est facile d’étendre cet exemple au cas d’un dé à six faces. La distribution de probabilité décrivant l’expérience « lancer le dé » a pour espace d’échantillonnage [1,2,3,4,5,6], chacune de ces valeurs étant associée à la probabilité de 1/6.\nChacune des deux expériences précédentes est régie par une distribution appartenant à la famille des distributions discrètes. Elles servent à représenter des expériences dont le nombre de valeurs possibles est fini. Par opposition, la seconde famille de distributions regroupe les distributions continues, décrivant des expériences dont le nombre de résultats possibles est en principe infini. Par exemple, mesurer la taille d’une personne adulte sélectionnée au hasard peut produire en principe un nombre infini de valeurs. Les distributions sont utiles pour décrire les résultats potentiels d’une expérience. Reprenons notre exemple du dé. Nous savons que chaque face a une chance sur six d’être tirée au hasard. Nous pouvons représenter cette distribution avec un graphique (figure 2.3).\n\n\n\n\nFigure 2.3: Distribution théorique d’un lancer de dé\n\n\n\nNous avons donc sous les yeux un modèle statistique décrivant le comportement attendu d’un dé, soit sa distribution théorique. Cependant, si nous effectuons dix fois l’expérience (nous collectons donc un échantillon), nous obtiendrons une distribution différente de cette distribution théorique (figure 2.4).\n\n\n\n\nFigure 2.4: Distribution empirique d’un lancer de dé (n = 10)\n\n\n\nIl s’agit de la distribution empirique. Chaque échantillon aura sa propre distribution empirique. Cependant, comme le prédit la loi des grands nombres : si une expérience est répétée un grand nombre de fois, la probabilité empirique d’un résultat se rapproche de la probabilité théorique à mesure que le nombre de répétitions augmente. Du point de vue de la théorie des probabilités, chaque échantillon correspond à un ensemble de tirages aléatoires effectués à partir de la distribution théorique du phénomène étudié.\nPour nous en convaincre, collectons trois échantillons de lancer de dé de respectivement 30, 100 et 1000 observations (figure 2.5). Comme le montre la figure 2.4, nous connaissons la distribution théorique qui régit cette expérience.\n\n\n\n\nFigure 2.5: Distribution empirique d’un lancer de dé\n\n\n\nNous constatons bien qu’au fur et à mesure que la taille de l’échantillon augmente, nous tendons vers la distribution théorique.\nCette relation a été étudiée pour la première fois au XVIIIe siècle par le mathématicien Daniel Bernoulli, qui a montré que la probabilité que la moyenne d’une distribution empirique soit éloignée de la moyenne de la distribution théorique dont elle est tirée diminuait lorsque nous augmentons le nombre des tirages et donc la taille de l’échantillon. Un autre mathématicien, Siméon-Denis Poisson, a fait connaître cette relation sous le nom de « loi des grands nombres ».\nLes distributions théoriques sont utilisées pour modéliser des phénomènes réels et sont à la base de presque tous les tests statistiques d’inférence fréquentiste ou bayésienne. En pratique, la question que nous nous posons le plus souvent est : quelle distribution théorique peut le mieux décrire le phénomène empirique à l’étude? Pour répondre à cette question, deux approches sont possibles :\n\nConsidérant la littérature existante sur le sujet, les connaissances accumulées et la nature de la variable étudiée, sélectionner des distributions théoriques pouvant vraisemblablement correspondre au phénomène mesuré.\nComparer visuellement ou à l’aide de tests statistiques la distribution empirique de la variable et diverses distributions théoriques pour trouver la plus adaptée.\n\nIdéalement, le choix d’une distribution théorique devrait reposer sur ces deux méthodes combinées.\n\n2.4.2 Anatomie d’une distribution\nUne distribution (ou loi de probabilité) est une fonction. Il est possible de la représenter à l’aide d’une formule mathématique (appelée fonction de masse pour les distributions discrètes et fonction de densité pour les distributions continues) associant chaque résultat possible de l’expérience régie par la distribution à la probabilité d’observer ce résultat. Prenons un premier exemple concret avec la distribution théorique associée au lancer de pièce de monnaie : la distribution de Bernoulli. Sa formule est la suivante :\n\\[\nf(x ; p)=\\left\\{\\begin{array}{ll}\nq=1-p & \\text { si } x=0 \\\\\np & \\text { si } x=1\n\\end{array}\\right.\n\\tag{2.1}\\]\navec p la probabilité d’obtenir \\(x = 1\\) (pile), et \\(1 – p\\) la probabilité d’avoir \\(x = 0\\) (face). La distribution de Bernoulli ne dépend que d’un paramètre : p. Avec différentes valeurs de p, nous pouvons obtenir différentes formes pour la distribution de Bernoulli. Si p = 1/2, la distribution de Bernoulli décrit parfaitement l’expérience : obtenir pile à un lancer de pièce de monnaie. Si p = 1/6, elle décrit alors l’expérience : obtenir 4 (tout comme n’importe quelle valeur de 1 à 6) à un lancer de dé. Pour un exemple plus appliqué, la distribution de Bernoulli est utilisée en analyse spatiale pour étudier la concentration d’accidents de la route ou de crimes en milieu urbain. À chaque endroit du territoire, il est possible de calculer la probabilité qu’un tel évènement ait lieu ou non en modélisant les données observées au moyen de la loi de Bernoulli. La distribution continue la plus simple à décrire est certainement la distribution uniforme. Il s’agit d’une distribution un peu spéciale puisqu’elle attribue la même probabilité à toutes ses valeurs dans son espace d’échantillonnage. Elle est définie sur l’intervalle \\([-\\infty; +\\infty]\\) et a la fonction de densité suivante :\n\\[\nf(x ; \\mathrm{a} ; \\mathrm{b})=\\left\\{\\begin{array}{cc}\n\\frac{1}{a-b} & \\text { si } a \\geq x \\geq b \\\\\n0 & \\text { sinon }\n\\end{array}\\right.\n\\tag{2.2}\\]\nLa fonction de densité de la distribution uniforme a donc deux paramètres, a et b, représentant respectivement les valeurs maximale et minimale au-delà desquelles les valeurs ont une probabilité 0 d’être obtenues. Pour avoir une meilleure intuition de ce que décrit une fonction de densité, il est intéressant de la représenter avec un graphique (figure 2.6). Notez que sur ce graphique, l’axe des ordonnées n’indique pas précisément la probabilité associée à chaque valeur, car celle-ci est infinitésimale. Il sert uniquement à représenter la valeur de la fonction de densité de la distribution pour chaque valeur de x.\n\n\n\n\nFigure 2.6: Distributions uniformes continues\n\n\n\nNous observons clairement que toutes les valeurs de x entre a et b ont la même probabilité pour chacune de trois distributions uniformes présentées dans le graphique. Plus l’étendue est grande (\\(a-b\\)), plus l’espace d’échantillonnage est grand et plus la probabilité totale est répartie dans cet espace. Cette distribution est donc idéale pour décrire un phénomène pour lequel chaque valeur a autant de chance de se produire qu’une autre. Prenons pour exemple un cas fictif avec un jeu de hasard qui vous proposerait la situation suivante : en tirant sur la manette d’une machine à sous, un nombre est tiré aléatoirement entre -60 et +50. Si le nombre est négatif, vous perdez de l’argent et inversement si le nombre est positif. Nous pouvons représenter cette situation avec une distribution uniforme continue et l’utiliser pour calculer quelques informations essentielles :\n\nSelon cette distribution, quelle est la probabilité de gagner de l’argent lors d’un tirage (x &gt; 0)?\nQuelle est la probabilité de perdre de l’argent (x &lt; 0)?\nSi je perds moins de 30 $ au premier tirage, quelle est la probabilité que j’ai de récupérer au moins ma mise au second tirage (x &gt; 30)?\n\nIl est assez facile de calculer ces probabilités en utilisant la fonction punif dans R. Concrètement, cela permet de calculer l’intégrale de la fonction de masse sur un intervalle donné.\n\n# Probabilité d'obtenir une valeur supérieure ou égale à 0\npunif(0, min = -60, max = 50)\n\n[1] 0.5454545\n\n# Probabilité d'obtenir une valeur inférieure à 0\npunif(0, min = -60, max = 50, lower.tail = FALSE)\n\n[1] 0.4545455\n\n# Probabilité d'obtenir une valeur supérieure à 30\npunif(30, min = -60, max = 50, lower.tail = FALSE)\n\n[1] 0.1818182\n\n\nLes paramètres permettent donc d’ajuster la fonction de masse ou de densité d’une distribution afin de lui permettre de prendre des formes différentes. Certains paramètres changent la localisation de la distribution (la déplacer vers la droite ou la gauche de l’axe des X), d’autres changent son degré de dispersion (distribution pointue ou aplatie) ou encore sa forme (symétrie). Les différents paramètres d’une distribution correspondent donc à sa carte d’identité et donnent une idée précise sur sa nature.\n\n\n\n\n\nFonction de répartition, de survie et d’intensité\n\n\nSi les fonctions de densité ou de masse d’une distribution sont le plus souvent utilisées pour décrire une distribution, d’autres types de fonctions peuvent également être employées et disposent de propriétés intéressantes.\n\nLa fonction de répartition : il s’agit d’une fonction décrivant le cumul de probabilités d’une distribution. Cette fonction a un minimum de zéro qui est obtenu pour la plus petite valeur de l’espace d’échantillonnage de la distribution, et un maximum d’un pour la plus grande valeur de ce même espace. Formellement, la fonction de répartition (\\(F\\)) est l’intégrale de la fonction de densité (\\(f\\)).\n\n\\[F(x) = \\int_{-\\infty}^{x}f(u)du\\] 2. La fonction de survie : soit l’inverse additif de la fonction de répartition (\\(R\\))\n\\[R(x) = 1-F(x)\\] 3. La fonction de d’intensité, soit le quotient de la fonction de densité et de la fonction de survie (\\(D\\)). \\[D(x) = \\frac{f(x)}{D(x)}\\] Ces fonctions jouent notamment un rôle central dans la modélisation des phénomènes qui régissent la survenue des événements, par exemple la mort, les accidents de la route ou les bris d’équipement.\n\n\n\n2.4.3 Principales distributions\nIl existe un très grand nombre de distributions théoriques et parmi elles, de nombreuses sont en fait des cas spéciaux d’autres distributions. Pour un petit aperçu du « bestiaire », vous pouvez faire un saut à la page Univariate Distribution Relationships, qui liste près de 80 distributions.\nNous nous concentrons ici sur une sélection de dix-huit distributions très répandues en sciences sociales. La figure 2.7 présente graphiquement leurs fonctions de masse et de densité présentées dans cette section. Notez que ces graphiques correspondent tous à une forme possible de chaque distribution. En modifiant leurs paramètres, il est possible de produire une figure très différente. Les distributions discrètes sont représentées avec des graphiques en barre, et les distributions continues avec des graphiques de densité.\n\n\nFigure 2.7: Dix-huit distributions essentielles, figure inspirée de Sean (2018)\n\n\n2.4.3.1 Distribution uniforme discrète\nNous avons déjà abordé cette distribution dans les exemples précédents. Elle permet de décrire un phénomène dont tous les résultats possibles ont exactement la même probabilité de se produire. L’exemple classique est bien sûr un lancer de dé.\n\n2.4.3.2 Distribution de Bernoulli\nLa distribution de Bernoulli permet de décrire une expérience pour laquelle deux résultats sont possibles. Son espace d’échantillonnage est donc \\([0; 1]\\). Sa fonction de masse est la suivante :\n\\[\nf(x ; p)=\\left\\{\\begin{array}{ll}\nq=1-p & \\text { si } x=0 \\\\\np & \\text { si } x=1\n\\end{array}\\right.\n\\tag{2.3}\\]\navec p la probabilité d’obtenir \\(x = 1\\) (réussite) et donc \\(1 – p\\) la probabilité d’avoir \\(x = 0\\) (échec). La distribution de Bernoulli ne dépend que d’un paramètre : p, contrôlant la probabilité de réussite de l’expérience. Notez que si \\(p = 1/2\\), alors la distribution de Bernoulli est également une distribution uniforme. Un exemple d’application de la distribution de Bernoulli en études urbaines est la modélisation de la survie d’un ou d’une cycliste (1 pour survie, 0 pour décès) lors d’une collision avec un véhicule motorisé, selon une vitesse donnée.\n\n2.4.3.3 Distribution binomiale\nLa distribution binomiale est utilisée pour caractériser la somme de variables aléatoires (expériences) suivant chacune une distribution de Bernoulli. Un exemple simple est l’accumulation des lancers d’une pièce de monnaie. Si nous comptons le nombre de fois où nous obtenons pile, cette expérience est décrite par une distribution binomiale. Son espace d’échantillonnage est donc \\([0; +\\infty[\\) (limité aux nombres entiers). Sa fonction de masse est la suivante :\n\\[\nf(x ; n )=\\binom{n}{x}p^x(1-p)^{n-x}\n\\tag{2.4}\\]\navec x le nombre de tirages réussis sur n essais avec une probabilité p de réussite à chaque tirage (figure 2.8). Pour reprendre l’exemple précédent concernant les accidents de la route, une distribution binomiale permettrait de représenter la distribution du nombre de cyclistes ayant survécu sur dix personnes à vélo impliquées dans un accident avec une voiture à une intersection.\n\n\n\n\nFigure 2.8: Distribution binomiale\n\n\n\n\n2.4.3.4 Distribution géométrique\nLa distribution géométrique permet de représenter le nombre de tirages qu’il faut faire avec une distribution de Bernoulli avant d’obtenir une réussite. Par exemple, avec un lancer de dé, l’idée serait de compter le nombre de lancers nécessaires avant de tomber sur un 6. Son espace d’échantillonnage est donc \\([1; +\\infty[\\) (limité aux nombres entiers). Sa distribution de masse est la suivante :\n\\[\nf(x; p)= (1-p)^xp\n\\tag{2.5}\\]\navec x le nombre de tentatives avant d’obtenir une réussite, \\(f(x)\\) la probabilité que le premier succès n’arrive qu’après x tentatives et p la probabilité de réussite à chaque tentative (figure 2.9). Cette distribution est notamment utilisée en marketing pour modéliser le nombre d’appels nécessaires avant de réussir une vente.\n\n\n\n\nFigure 2.9: Distribution géométrique\n\n\n\n\n2.4.3.5 Distribution binomiale négative\nLa distribution binomiale négative est proche de la distribution géométrique. Elle permet de représenter le nombre de tentatives nécessaires afin d’obtenir un nombre n de réussites \\([1; +\\infty[\\) (limité aux nombres entiers positifs). Sa formule est la suivante :\n\\[\nf(x; n; p)=\\left(\\begin{array}{c}\nx+n-1 \\\\\nn\n\\end{array}\\right) p^{n}(1-p)^{x}\n\\tag{2.6}\\]\navec x le nombre de tentatives avant d’obtenir n réussites et p la probabilité d’obtenir une réussite à chaque tentative (figure 2.10). Cette distribution pourrait être utilisée pour modéliser le nombre de questionnaires x à envoyer pour une enquête pour obtenir au moins n réponses, sachant que la probabilité d’une réponse est p.\n\n\n\n\nFigure 2.10: Distribution binomiale négative\n\n\n\n\n2.4.3.6 Distribution de Poisson\nLa distribution de Poisson est utilisée pour modéliser des comptages. Son espace d’échantillonnage est donc \\([0; +\\infty[\\) (limité aux nombres entiers positifs). Par exemple, il est possible de compter à une intersection le nombre de collisions entre des automobilistes et des cyclistes sur une période donnée. Cet exemple devrait vous faire penser à la distribution binomiale vue plus haut. En effet, il est possible de noter chaque rencontre entre une voiture et un ou une cycliste et de considérer que leur collision est une « réussite » (0 : pas d’accidents, 1 : accident). Cependant, ce type de données est fastidieux à collecter comparativement au simple comptage des accidents. La distribution de Poisson a une fonction de densité avec un seul paramètre généralement noté \\(\\lambda\\) (lambda) et est décrite par la formule suivante :\n\\[\nf(x; \\lambda)=\\frac{\\lambda^{x}}{x !} e^{-\\lambda}\n\\tag{2.7}\\] avec x le nombre de cas, f(x) la probabilité d’obtenir x sachant \\(\\lambda\\). \\(\\lambda\\) peut être vu comme le taux moyen d’occurrences (nombre d’évènements divisé par la durée totale de l’expérience). Il permet à la fois de caractériser le centre et la dispersion de la distribution. Notez également que plus le paramètre \\(\\lambda\\) augmente, plus la distribution de Poisson tend vers une distribution normale.\n\n\n\n\nFigure 2.11: Distribution de Poisson\n\n\n\n\n2.4.3.7 Distribution de Poisson avec excès de zéros\nIl arrive régulièrement qu’une variable de comptage mesurée produise un très grand nombre de zéros. Prenons pour exemple le nombre de seringues de drogue injectable par tronçon de rue ramassées sur une période d’un mois. À l’échelle de toute une ville, un très grand nombre de tronçons n’auront tout simplement aucune seringue et dans ce contexte, la distribution classique de Poisson n’est pas adaptée. Nous lui préférons alors une autre distribution : la distribution de Poisson avec excès de zéros (ou distribution de Pólya) qui inclut un paramètre contrôlant la forte présence de zéros. Sa fonction de densité est la suivante :\n\\[\nf(x; \\lambda; p)=(1-p)\\frac{\\lambda^{x}}{x !} e^{-\\lambda}\n\\tag{2.8}\\]\nPlus exactement, la distribution de Poisson avec excès de zéro (zero-inflated en anglais) est une combinaison de deux processus générant des zéros. En effet, un zéro peut être produit par la distribution de Poisson proprement dite (aussi appelé vrai zéro) ou alors par le processus générant les zéros excédentaires dans le jeu de données, capturé par la probabilité p (faux zéro). p est donc le paramètre contrôlant la probabilité d’obtenir un zéro, indépendamment du phénomène étudié.\n\n\n\n\nFigure 2.12: Distribution de Poisson avec excès de zéros\n\n\n\n\n2.4.3.8 Distribution gaussienne\nPlus communément appelée la distribution normale, la distribution gaussienne est utilisée pour représenter des variables continues centrées sur leur moyenne. Son espace d’échantillonnage est \\(]-\\infty; +\\infty[\\). Cette distribution joue un rôle central en statistique. Selon la formule consacrée, cette distribution résulte de la superposition d’un très grand nombre de petits effets fortuits indépendants. C’est ce qu’exprime formellement le théorème central limite qui montre que la somme d’un grand nombre de variables aléatoires tend généralement vers une distribution normale. Autrement dit, lorsque nous répétons une même expérience et que nous conservons les résultats de ces expériences, la distribution du résultat de ces expériences tend vers la normalité. Cela s’explique par le fait qu’en moyenne, chaque répétition de l’expérience produit le même résultat, mais qu’un ensemble de petits facteurs aléatoires viennent ajouter de la variabilité dans les données collectées. Prenons un exemple concret : si nous plantons une centaine d’arbres simultanément dans un parc avec un degré d’ensoleillement identique et que nous leur apportons les mêmes soins pendant dix ans, la distribution de leurs tailles suivra une distribution normale. Un ensemble de facteurs aléatoires (composition du sol, exposition au vent, aléas génétiques, passage de nuages, etc.) auront affecté différemment chaque arbre, ajoutant ainsi un peu de hasard dans leur taille finale. Cette dernière est cependant davantage affectée par des paramètres majeurs (comme l’espèce, l’ensoleillement, l’arrosage, etc.), et est donc centrée autour d’une moyenne. La fonction de densité de la distribution normale est la suivante :\n\\[\nf(x ; \\mu ; \\sigma)=\\frac{1}{\\sigma \\sqrt{2 \\pi}} e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^{2}}\n\\tag{2.9}\\]\navec x une valeur dont nous souhaitons connaître la probabilité, f(x) sa probabilité, \\(\\mu\\) (mu) la moyenne de la distribution normale (paramètre de localisation) et \\(\\sigma\\) (sigma) son écart-type (paramètre de dispersion). Cette fonction suit une courbe normale ayant une forme de cloche. Notez que :\n\n68,2 % de la masse de la distribution normale est comprise dans l’intervalle \\([\\mu- \\sigma≤x≤ \\mu+ \\sigma]\\)\n\n95,4 % dans l’intervalle \\([\\mu- 2\\sigma≤x≤ \\mu+ 2\\sigma]\\)\n\n99,7 % dans l’intervalle \\([\\mu- 3\\sigma≤x≤ \\mu+ 3\\sigma]\\)\n\n\nAutrement dit, dans le cas d’une distribution normale, il est très invraisemblable d’observer des données situées à plus de trois écarts types de la moyenne. Ces différentes égalités sont vraies quelles que soient les valeurs de la moyenne et de l’écart-type. Notez ici que lorsque \\(\\mu = 0\\) et \\(\\sigma = 1\\), nous obtenons la loi normale générale (ou centrée réduite) (section 2.5.5.2).\n\n\n\n\nFigure 2.13: Distribution gaussienne\n\n\n\n\n2.4.3.9 Distribution gaussienne asymétrique\nLa distribution normale asymétrique (skew-normal) est une extension de la distribution gaussienne permettant de lever la contrainte de symétrie de la simple distribution gaussienne. Son espace d’échantillonnage est donc \\(]-\\infty; +\\infty[\\). Sa fonction de densité est la suivante :\n\\[\nf(x;\\xi;\\omega;\\alpha) = \\frac{2}{\\omega \\sqrt{2 \\pi}} e^{-\\frac{(x-\\xi)^{2}}{2 \\omega^{2}}} \\int_{-\\infty}^{\\alpha\\left(\\frac{x-\\xi}{\\omega}\\right)} \\frac{1}{\\sqrt{2 \\pi}} e^{-\\frac{t^{2}}{2}} d t\n\\tag{2.10}\\]\navec \\(\\xi\\) (xi) le paramètre de localisation, \\(\\omega\\) (omega) le paramètre de dispersion (ou d’échelle) et \\(\\alpha\\) (alpha) le paramètre de forme (contrôlant le degré de symétrie). Si \\(\\alpha = 0\\), alors la distribution normale asymétrique est une distribution normale ordinaire. Ce type de distribution est très utile lorsque nous souhaitons modéliser une variable pour laquelle nous savons que des valeurs plus extrêmes s’observeront d’un côté ou de l’autre de la distribution. Les revenus totaux annuels des personnes ou des ménages sont de très bons exemples puisqu’ils sont distribués généralement avec une asymétrie positive : bien qu’une moyenne existe, il y a généralement plus de personnes ou de ménages avec des revenus très faibles que de personnes ou de ménages avec des revenus très élevés.\n\n\n\n\nFigure 2.14: Distribution gaussienne asymétrique\n\n\n\n\n2.4.3.10 Distribution log-normale\nAu même titre que la distribution normale asymétrique, la distribution log-normale est une version asymétrique de la distribution normale. Son espace d’échantillonnage est \\(]0; +\\infty[\\). Cela signifie que cette distribution ne peut décrire que des données continues et positives. Sa fonction de densité est la suivante :\n\\[\nf(x ; \\mu ; \\sigma)=\\frac{1}{x \\sigma \\sqrt{2 \\pi}} e^{-\\left(\\frac{(\\ln x-\\mu)^{2}}{2 \\sigma^{2}}\\right)}\n\\tag{2.11}\\]\nÀ la différence la distribution skew-normal, la distribution log-normale ne peut avoir qu’une asymétrie positive (étirée vers la droite). Elle est cependant intéressante puisqu’elle ne compte que deux paramètres (\\(\\mu\\) et \\(\\sigma\\)), ce qui la rend plus facile à ajuster. À nouveau, une distribution log-normale peut être utilisée pour décrire les revenus totaux annuels des individus ou des ménages ou les revenus d’emploi. Elle est aussi utilisée en économie sur les marchés financiers pour représenter les cours des actions et des biens (ces derniers ne pouvant pas être inférieurs à 0).\n\n\n\n\nFigure 2.15: Distribution log-gaussienne\n\n\n\nPlus spécifiquement, la distribution log-normale est une transformation de la distribution normale. Comme son nom l’indique, elle permet de décrire le logarithme d’une variable aléatoire suivant une distribution normale.\n\n2.4.3.11 Distribution de Student\nLa distribution de Student joue un rôle important en statistique. Elle est par exemple utilisée lors du test t pour calculer le degré de significativité du test. Comme la distribution gaussienne, la distribution de Student a une forme de cloche, est centrée sur sa moyenne et définie sur \\(]-\\infty; +\\infty[\\). Elle se distingue de la distribution normale principalement par le rôle que joue son troisième paramètre, \\(\\nu\\) : le nombre de degrés de liberté, contrôlant le poids des queues de la distribution. Une petite valeur de \\(\\nu\\) signifie que la distribution a des « queues plus lourdes » (heavy tails en anglais). Entendez par-là que les valeurs extrêmes ont une plus grande probabilité d’occurrence :\n\\[\np(x ; \\nu ; \\hat{\\mu} ; \\hat{\\sigma})=\\frac{\\Gamma\\left(\\frac{\\nu+1}{2}\\right)}{\\Gamma\\left(\\frac{\\nu}{2}\\right) \\sqrt{\\pi \\nu} \\hat{\\sigma}}\\left(1+\\frac{1}{\\nu}\\left(\\frac{x-\\hat{\\mu}}{\\hat{\\sigma}}\\right)^{2}\\right)^{-\\frac{\\nu+1}{2}}\n\\tag{2.12}\\]\navec \\(\\mu\\) le paramètre de localisation, \\(\\sigma\\) le paramètre de dispersion (qui n’est cependant pas un écart-type comme pour la distribution normale) et \\(\\nu\\) le nombre de degrés de liberté. Plus \\(\\nu\\) est grand, plus la distribution de Student tend vers une distribution normale. Ici, la lettre grecque \\(\\Gamma\\) représente la fonction mathématique gamma (à ne pas confondre avec la distribution Gamma). Un exemple d’application en études urbaines est l’exposition au bruit environnemental de cyclistes. Cette distribution s’approcherait certainement d’une distribution normale, mais les cyclistes croisent régulièrement des secteurs peu bruyants (parcs, rues résidentielles, etc.) et des secteurs très bruyants (artères majeures, zones industrielles, etc.), plus souvent que ce que prévoit une distribution normale, justifiant le choix d’une distribution de Student.\n\n\n\n\nFigure 2.16: Distribution de Student\n\n\n\n\n2.4.3.12 Distribution de Cauchy\nLa distribution de Cauchy est également une distribution symétrique définie sur l’intervalle \\(]-\\infty; +\\infty[\\). Elle a comme particularité d’être plus aplatie que la distribution de Student (d’avoir des queues potentiellement plus lourdes). Elle est notamment utilisée pour modéliser des phénomènes extrêmes comme les précipitations maximales annuelles, les niveaux d’inondations maximaux annuels ou les seuils critiques de perte pour les portefeuilles financiers. Il est également intéressant de noter que le quotient de deux variables indépendantes normalement distribuées suit une distribution de Cauchy. Sa fonction de densité est la suivante :\n\\[\n\\frac{1}{\\pi \\gamma}\\left[\\frac{\\gamma^{2}}{\\left(x-x_{0}\\right)^{2}+\\gamma^{2}}\\right]\n\\tag{2.13}\\]\nElle dépend donc de deux paramètres : \\(x_0\\), le paramètre de localisation indiquant le pic de la distribution et \\(\\gamma\\), un paramètre de dispersion.\n\n\n\n\nFigure 2.17: Distribution de Cauchy\n\n\n\n\n2.4.3.13 Distribution du khi-deux\nLa distribution du khi-deux est utilisée dans de nombreux tests statistiques. Par exemple, le test du khi-deux de Pearson est utilisé pour comparer les écarts au carré entre des fréquences attendues et observées de deux variables qualitatives. La distribution du khi-deux décrit plus généralement la somme des carrés d’un nombre k de variables indépendantes normalement distribuées. Il est assez rare de modéliser un phénomène à l’aide d’une distribution du khi-deux, mais son omniprésence dans les tests statistiques justifie qu’elle soit mentionnée ici. Cette distribution est définie sur l’intervalle \\([0; +\\infty[\\) et a pour fonction de densité :\n\\[\nf(x;k) = \\frac{1}{2^{k / 2} \\Gamma(k / 2)} x^{k / 2-1} e^{-x / 2}\n\\tag{2.14}\\]\nLa distribution du khi-deux n’a qu’un paramètre k, représentant donc le nombre de variables mises au carré et dont nous faisons la somme pour obtenir la distribution du khi-deux.\n\n\n\n\nFigure 2.18: Distribution du khi-deux\n\n\n\n\n2.4.3.14 Distribution exponentielle\nLa distribution exponentielle est une version continue de la distribution géométrique. Pour cette dernière, nous nous intéressons au nombre de tentatives nécessaires pour obtenir un résultat positif, soit une dimension discrète. Pour la distribution exponentielle, cette dimension discrète est remplacée par une dimension continue. L’exemple le plus intuitif est sûrement le cas du temps. Dans ce cas, la distribution exponentielle sert à modéliser le temps d’attente nécessaire pour qu’un évènement se produise. Il peut aussi s’agir d’une force que nous appliquons jusqu’à ce qu’un matériau cède. Cette distribution est donc définie sur l’intervalle [0; +\\(\\infty\\)[ et a pour fonction de densité :\n\\[\nf(x;\\lambda) = \\lambda e^{-\\lambda x}\n\\tag{2.15}\\]\n\n\n\n\nFigure 2.19: Distribution exponentielle\n\n\n\nLa distribution exponentielle est conceptuellement proche de la distribution de Poisson. La distribution de Poisson régit le nombre des événements qui surviennent au cours d’un laps de temps donné. La distribution exponentielle peut servir à modéliser le temps qui s’écoule entre deux événements.\n\n2.4.3.15 Distribution Gamma\nLa distribution Gamma peut être vue comme la généralisation d’un grand nombre de distributions. Ainsi, les distributions exponentielle et du khi-deux peuvent être vues comme des cas particuliers de la distribution Gamma. Cette distribution est définie sur l’intervalle ]0; +\\(\\infty\\)[ (notez que le 0 est exclu) et sa fonction de densité est la suivante :\n\\[\nf(x ; \\alpha; \\beta)=\\frac{\\beta^{\\alpha} x^{\\alpha-1} e^{-\\beta x}}{\\Gamma(\\alpha)}\n\\tag{2.16}\\]\nElle comprend donc deux paramètres : \\(\\alpha\\) et \\(\\beta\\). Le premier est le paramètre de forme et le second un paramètre d’échelle (à l’inverse d’un paramètre de dispersion, plus sa valeur est petite, plus la distribution est dispersée). Notez que cette distribution ne dispose pas d’un paramètre de localisation. Du fait de sa flexibilité, cette distribution est largement utilisée, notamment pour la modélisation des temps d’attente avant un évènement, de la taille des réclamations d’assurance, des quantités de précipitations, etc.\n\n\n\n\nFigure 2.20: Distribution Gamma\n\n\n\n\n2.4.3.16 Distribution bêta\nLa distribution bêta est définie sur l’intervalle [0; 1], elle est donc énormément utilisée pour modéliser des variables étant des proportions ou des probabilités.\nLa distribution bêta a été élaborée pour modéliser la superposition d’un très grand nombre de petits effets fortuits qui ne sont pas indépendants et notamment pour étudier l’effet de la réalisation d’un événement aléatoire sur la probabilité des tirages subséquents. Elle a aussi une utilité pratique en statistique, car elle peut être combinée avec d’autres distributions (distribution bêta binomiale, bêta négative binomiale, etc.). Un autre usage plus rare mais intéressant est la modélisation de la fraction du temps représentée par une tâche dans le temps nécessaire à la réalisation de deux tâches de façon séquentielle. Cela est dû au fait que la distribution d’une distribution Gamma g1 divisée par la somme de g1 et d’une autre distribution Gamma g2 suit une distribution bêta. Un exemple concret est, par exemple, la fraction du temps effectué à pied dans un déplacement multimodal. La distribution de bêta a la fonction de densité suivante :\n\\[\nf(x;\\alpha;\\beta) = \\frac{1}{\\mathrm{B}(\\alpha, \\beta)} x^{\\alpha-1}(1-x)^{\\beta-1}\n\\tag{2.17}\\]\nElle a donc deux paramètres \\(\\alpha\\) et \\(\\beta\\) contrôlant tous les deux la forme de la distribution. Cette caractéristique lui permet d’avoir une très grande flexibilité et même d’adopter des formes bimodales. \\(B\\) correspond à la fonction mathématique Beta : ne pas la confondre avec la distribution Beta et le paramètre Beta (\\(\\beta\\)) de cette même distribution.\n\n\n\n\nFigure 2.21: Distribution bêta\n\n\n\n\n2.4.3.17 Distribution de Weibull\nLa distribution de Weibull est directement liée à la distribution exponentielle, cette dernière étant en fait un cas particulier de distribution Weibull. Elle sert donc souvent à modéliser une quantité x (souvent le temps) à accumuler pour qu’un évènement se produise. La distribution de Weibull est définie sur l’intervalle [0; +\\(\\infty\\)[ et a la fonction de densité suivante :\n\\[\nf(x;\\lambda) = \\frac{k}{\\lambda} (\\frac{x}{\\lambda})^{k-1} e^{-(\\frac{x}{\\lambda})^k}\n\\tag{2.18}\\]\n\\(\\lambda\\) est le paramètre de dispersion (analogue à celui d’une distribution exponentielle classique) et k le paramètre de forme. Pour bien comprendre le rôle de k, prenons un exemple : la propagation d’un champignon d’un arbre à son voisin. Si \\(k&lt;1\\), le risque instantané que l’évènement modélisé se produise diminue avec le temps (en d’autres termes, plus le temps passe, plus petite devient la probabilité d’être contaminé). Si \\(k=1\\), alors le risque instantané que l’évènement se produise reste identique dans le temps (la loi de Weibull se résume alors à une loi exponentielle). Si \\(k &gt; 1\\), alors le risque instantané que l’évènement se produise augmente avec le temps (la probabilité pour un arbre d’être contaminé s’il ne l’a pas déjà été — pas seulement le risque cumulé — augmente en fonction du temps). La distribution de Weibull est très utilisée en analyse de survie, en météorologie, en ingénierie des matériaux et dans la théorie des valeurs extrêmes.\n\n\n\n\nFigure 2.22: Distribution de Weibull\n\n\n\n\n2.4.3.18 Distribution Pareto\nCette distribution a été élaborée par Vilfredo Pareto pour donner une forme mathématique à ce qui porte aujourd’hui le nom de principe de Pareto et que nous exprimons souvent de manière imagée — dans une société donnée, 20 % des individus possèdent 80 % de la richesse —, mais qui est plus justement exprimée en écrivant que, de manière générale, dans toute société, la plus grande partie du capital est détenue par une petite fraction de la population. Elle est définie sur l’intervalle \\([x_m; +\\infty[\\) avec la fonction de densité suivante :\n\\[\nf(x;x_m;k) = (\\frac{x_m}{x})^k\n\\tag{2.19}\\]\nElle comprend donc deux paramètres, \\(x_m\\) étant un paramètre de localisation (décalant la distribution vers la droite ou vers la gauche) et \\(k\\) un paramètre de forme. Plus \\(k\\) augmente, plus la probabilité prédite par la distribution décroît rapidement.\n\n\n\n\nFigure 2.23: Distribution de Pareto\n\n\n\nAu-delà de la question de la répartition de la richesse, la distribution de Pareto peut également être utilisée pour décrire la répartition de la taille des villes (Reed 2002), la popularité des hommes sur Tinder ou la taille des fichiers échangés sur Internet (Reed et Jorgensen 2004). Pour ces trois exemples, nous avons les situations suivantes : de nombreuses petites villes, profils peu attractifs, petits fichiers échangés et à l’inverse très peu de grandes villes, profils très attractifs, gros fichiers échangés.\nLa loi de Pareto est liée à la loi exponentielle. Si une variable aléatoire suit une loi de Pareto, le logarithme du quotient de cette variable et de son paramètre de localisation est une variable aléatoire qui suit une loi exponentielle.\n\n2.4.3.19 Cas particuliers\nSachez également qu’il existe des distributions « plus exotiques » que nous n’abordons pas ici, mais auxquelles vous pourriez être confrontés un jour :\n\nLes distributions sphériques, servant à décrire des données dont le 0 est équivalent à la valeur maximale. Par exemple, des angles puisque 0 et 360 degrés sont identiques.\nLes distributions composées (mixture distributions), permettant de modéliser des phénomènes issus de la superposition de plusieurs distributions. Par exemple, la distribution de la taille de l’ensemble des êtres humains est en réalité une superposition de deux distributions gaussiennes, une pour chaque sexe, puisque ces deux distributions n’ont pas la même moyenne ni le même écart-type.\nLes distributions multivariées permettant de décrire des phénomènes multidimensionnels. Par exemple, la réussite des élèves en français et en mathématique pourrait être modélisée par une distribution gaussienne bivariée plutôt que deux distributions distinctes. Ce choix serait pertinent si nous présumons que ces deux variables sont corrélées plutôt qu’indépendantes.\nLes distributions censurées décrivant des variables pour lesquelles les données sont issues d’un tirage « censuré ». En d’autres termes, la variable étudiée varie sur une certaine étendue, mais du fait du processus de tirage (collecte des données), les valeurs au-delà de certaines limites sont censurées. Un bon exemple est la mesure de la pollution sonore avec un capteur incapable de détecter des niveaux sonores en dessous de 55 décibels. Il arrive parfois en ville que les niveaux sonores descendent plus bas que ce seuil, mais les données collectées ne le montrent pas. Dans ce contexte, il est important d’utiliser des versions censurées des distributions présentées précédemment. Les observations au-delà de la limite sont conservées dans l’analyse, mais nous ne disposons que d’une information partielle à leur égard (elles sont au-delà de la limite).\nLes distributions tronquées, souvent confondues avec les distributions censurées, décrivent des situations où des données au-delà d’une certaine limite sont impossibles à collecter et retirées simplement de l’analyse.\n\n2.4.4 Conclusion sur les distributions\nVoilà qui conclut cette exploration des principales distributions à connaître. L’idée n’est bien sûr pas de toutes les retenir par cœur (et encore moins les formules mathématiques), mais plutôt de se rappeler dans quels contextes elles peuvent être utiles. Vous aurez certainement besoin de relire cette section avant d’aborder le chapitre 8 portant sur les modèles linéaires généralisés (GLM). Wikipédia dispose d’informations très détaillées sur chaque distribution si vous avez besoin d’informations complémentaires. Pour un tour d’horizon plus exhaustif des distributions, vous pouvez aussi faire un tour sur les projets ProbOnto et the ultimate probability distribution explorer."
  },
  {
    "objectID": "02-univarie.html#sec-025",
    "href": "02-univarie.html#sec-025",
    "title": "2  Statistiques descriptives univariées",
    "section": "\n2.5 Statistiques descriptives sur des variables quantitatives",
    "text": "2.5 Statistiques descriptives sur des variables quantitatives\n\n2.5.1 Paramètres de tendance centrale\nTrois mesures de tendance centrale permettent de résumer rapidement une variable quantitative :\n\nLa moyenne arithmétique est simplement la somme des données d’une variable divisée par le nombre d’observations (n), soit \\(\\frac{\\sum_{i=1}^n x_i}{n}\\) notée \\(\\mu\\) (prononcé mu) pour des données pour une population et \\(\\bar{x}\\) (prononcé x barre) pour un échantillon.\nLa médiane est la valeur qui coupe la distribution d’une variable d’une population ou d’un échantillon en deux parties égales. Autrement dit, 50 % des valeurs des observations lui sont supérieures et 50 % lui sont inférieures.\nLe mode est la valeur la plus fréquente parmi un ensemble d’observations pour une variable. Il s’applique ainsi à des variables discrètes (avec un nombre fini de valeurs discrètes dans un intervalle donné) et non à des variables continues (avec un nombre infini de valeurs réelles dans un intervalle donné). Prenons deux variables : l’une discrète relative au nombre d’accidents par intersection (avec \\(X \\in \\left[0,20\\right]\\)) et l’autre continue relative à la distance de dépassement (en mètres) d’une personne à vélo par une personne conduisant un véhicule motorisé (avec \\(X \\in \\left[0,5\\right]\\)). Pour la première, le mode – la valeur la plus fréquente – est certainement 0. Pour la seconde, identifier le mode n’est pas pertinent puisqu’il peut y avoir un nombre infini de valeurs entre 0 et 5 mètres.\n\nIl convient de ne pas confondre moyenne et médiane! Dans le tableau 2.1, nous avons reporté les valeurs moyennes et médianes des revenus des ménages pour les municipalités de l’île de Montréal en 2015. Par exemple, les 8685 ménages résidant à Wesmount disposaient en moyenne d’un revenu de 295 099 $; la moitié de ces 8685 ménages avaient un revenu inférieur à 100 153 $ et l’autre moitié un revenu supérieur à cette valeur (médiane). Cela démontre clairement que la moyenne peut être grandement affectée par des valeurs extrêmes (faibles ou fortes). Autrement dit, plus l’écart entre les valeurs de la moyenne et la médiane est important, plus les données de la variable sont inégalement réparties. À Westmount, soit la municipalité la plus nantie de l’île de Montréal, les valeurs extrêmes sont des ménages avec des revenus très élevés tirant fortement la moyenne vers le haut. À l’inverse, le faible écart entre les valeurs moyenne et médiane dans la municipalité de Montréal-Est (58 594 $ versus 50 318 $) souligne que les revenus des ménages sont plus également répartis. Cela explique que pour comparer les revenus totaux ou d’emploi entre différents groupes (selon le sexe, le groupe d’âge, le niveau d’éducation, la municipalité ou région métropolitaine, etc.), nous privilégions habituellement l’utilisation des revenus médians.\n\n\n\n\nTableau 2.1: Revenus moyens et médians des ménages en dollars, municipalités de l’île de Montréal, 2015\n\n\n\n\n\n\n\nMunicipalité\nNombre de ménages\nRevenu moyen\nRevenu médian\n\n\n\nBaie-D’Urfé\n1 330\n171 390\n118 784\n\n\nBeaconsfield\n6 660\n187 173\n123 392\n\n\nCôte-Saint-Luc\n13 490\n94 570\n58 935\n\n\nDollard-Des Ormeaux\n17 210\n102 104\n78 981\n\n\nDorval\n8 390\n89 952\n64 689\n\n\nHampstead\n2 470\n250 497\n122 496\n\n\nKirkland\n6 685\n144 676\n115 381\n\n\nMontréal\n779 805\n69 047\n50 227\n\n\nMontréal-Est\n1 730\n58 594\n50 318\n\n\nMontréal-Ouest\n1 850\n159 374\n115 029\n\n\nMont-Royal\n7 370\n205 309\n109 540\n\n\nPointe-Claire\n12 380\n100 294\n80 242\n\n\nSainte-Anne-de-Bellevue\n1 960\n102 969\n67 200\n\n\nSenneville\n345\n203 790\n116 224\n\n\nWestmount\n8 685\n295 099\n100 153\n\n\n\n\n\n\n\n2.5.2 Paramètres de position\nLes paramètres de position permettent de diviser une distribution en n parties égales.\n\nLes quartiles qui divisent une distribution en quatre parties (25 %) :\n\nQ1 (25 %), soit le quartile inférieur ou premier quartile;\nQ2 (50 %), soit la médiane;\nQ3 (75 %), soit le quartile supérieur ou troisième quartile.\n\n\nLes quintiles qui divisent une distribution en cinq parties égales (20 %).\nLes déciles (de D1 à D9) qui divisent une distribution en dix parties égales (10 %).\nLes centiles (de C1 à C99) qui divisent une distribution en cent parties égales (1 %).\n\nEn cartographie, les quartiles et les quintiles sont souvent utilisés pour discrétiser une variable quantitative (continue ou discrète) en quatre ou cinq classes et plus rarement, en dix classes (déciles). Avec les quartiles, les bornes des classes qui comprennent chacune 25 % des unités spatiales sont définies comme suit : [Min à Q1], [Q1 à Q2], [Q2 à Q3] et [Q3 à Max]. La méthode de discrétisation selon les quartiles ou quintiles permet de repérer, en un coup d’œil, à quelle tranche de 25 % ou de 20 % des données appartient chacune des unités spatiales. Cette méthode de discrétisation est aussi utile pour comparer plusieurs cartes et vérifier si deux phénomènes sont ou non colocalisés (Pumain et Béguin 1994). En guise d’exemple, les pourcentages de personnes à faible revenu et de locataires par secteur de recensement ont clairement des distributions spatiales très semblables dans la région métropolitaine de Montréal en 2016 (figure 2.24).\n\n\nFigure 2.24: Exemples de cartographie avec une discrétisation selon les quantiles\n\nUne lecture attentive des valeurs des centiles permet de repérer la présence de valeurs extrêmes, voire aberrantes, dans un jeu de données. Il n’est donc pas rare de les voir reportées dans un tableau de statistiques descriptives d’un article scientifique, et ce, afin de décrire succinctement les variables à l’étude. Par exemple, dans une étude récente comparant les niveaux d’exposition au bruit des cyclistes dans trois villes (Apparicio et Gelb 2020), les auteurs reportent à la fois les valeurs moyennes et celles de plusieurs centiles. Globalement, la lecture des valeurs moyennes permet de constater que, sur la base des données collectées, les cyclistes sont plus exposés au bruit à Paris qu’à Montréal et Copenhague (73,4 dB(A) contre 70,7 et 68,4, tableau 2.2). Compte tenu de l’échelle logarithmique du bruit, la différence de 5 dB(A) entre les valeurs moyennes du bruit de Copenhague et de Paris peut être considérée comme une multiplication de l’énergie sonore par plus de 3. Pour Paris, l’analyse des quartiles montre que durant 25 % du temps des trajets à vélo (plus de 63 heures de collecte), les participantes et participants ont été exposés à des niveaux de bruit soit inférieurs à 69,1 dB(A) (premier quartile), soit supérieurs à 74 dB(A) (troisième quartile). Quant à l’analyse des centiles, elle permet de constater que durant 5 % et 10 % du temps, les participantes et participants étaient exposés à des niveaux de bruit très élevés, dépassant 75 dB(A) (C90 = 76 et C90 = 77,2).\n\n\n\n\nTableau 2.2: Stastistiques descriptives de l’exposition au bruit des cyclistes par minute dans trois villes (dB(A), Laeq 1min)\n\nStatistiques\nCopenhague\nMontréal\nParis\n\n\n\nN\n6 212,0\n4 723,0\n3 793,0\n\n\nMoyenne de bruit\n68,4\n70,7\n73,4\n\n\nCentiles\n\n\n\n\n\n1\n57,5\n59,2\n62,3\n\n\n5\n59,1\n61,1\n65,0\n\n\n10\n60,3\n62,3\n66,5\n\n\n25 (premier quartile)\n62,7\n64,5\n69,1\n\n\n50 (médiane)\n66,0\n67,7\n71,6\n\n\n75 (troisième quartile)\n69,2\n71,0\n74,0\n\n\n90\n71,9\n73,7\n76,0\n\n\n95\n73,3\n75,2\n77,2\n\n\n99\n76,5\n78,9\n81,0\n\n\n\n\n\n\n\n2.5.3 Paramètres de dispersion\nCinq principales mesures de dispersion permettent d’évaluer la variabilité des valeurs d’une variable quantitative : l’étendue, l’écart interquartile, la variance, l’écart-type et le coefficient de variation. Notez d’emblée que cette dernière mesure ne s’applique pas à des variables d’intervalle (section 2.1.2.2).\n\nL’étendue est la différence entre les valeurs minimale et maximale d’une variable, soit l’intervalle des valeurs dans lequel elle a été mesurée. Il convient d’analyser avec prudence cette mesure puisqu’elle inclut dans son calcul des valeurs potentiellement extrêmes, voire aberrantes (faibles ou fortes).\nL’intervalle ou écart interquartile est la différence entre les troisième et premier quartiles (Q3 − Q1). Il représente ainsi une mesure de la dispersion des valeurs de 50 % des observations centrales de la distribution. Plus la valeur de l’écart interquartile est élevée, plus la dispersion des 50 % des observations centrales est forte. Contrairement à l’étendue, cette mesure élimine l’influence des valeurs extrêmes puisqu’elle ne tient pas compte des 25 % des observations les plus faibles [Min à Q1] et des 25 % des observations les plus fortes [Q3 à Max]. Graphiquement, l’intervalle interquartile est représenté à l’aide d’une boîte à moustaches (boxplot en anglais) : plus l’intervalle interquartile est grand, plus la boîte est allongée (figure 2.25).\n\n\n\nFigure 2.25: Graphique en violon, boîte à moustaches et intervalle interquartile\n\n\nLa variance est la somme des déviations à la moyenne au carré (numérateur) divisée par le nombre d’observations pour une population (\\(\\sigma^2\\)) ou divisée par le nombre d’observations moins une (\\(s^2\\)) pour un échantillon (équation 2.20). Puisque les déviations à la moyenne sont mises au carré, la valeur de la variance (tout comme celle de l’écart-type) est toujours positive. Plus sa valeur est élevée, plus les observations sont dispersées autour de la moyenne. La variance représente ainsi l’écart au carré moyen des observations à la moyenne.\nL’écart-type est la racine carrée de la variance (équation 2.21). Rappelez-vous que la variance est calculée à partir des déviations à la moyenne mises au carré. Étant donné que l’écart-type est la racine carrée de la variance, il est donc évalué dans la même unité que la variable, contrairement à la variance. Bien entendu, comme pour la variance, plus la valeur de l’écart-type est élevée, plus la distribution des observations autour de la moyenne est dispersée.\n\n\\[  \n\\sigma^2=\\frac{\\sum_{i=1}^n (x_{i}-\\mu)^2}{n} \\text{ ou } s^2=\\frac{\\sum_{i=1}^n (x_{i}-\\bar{x})^2}{n-1}\n\\tag{2.20}\\]\n\\[\n\\sigma=\\sqrt{\\sigma^2}=\\sqrt{\\frac{\\sum_{i=1}^n (x_{i}-\\mu)^2}{n}} \\text{ ou } s=\\sqrt{s^2}=\\sqrt{\\frac{\\sum_{i=1}^n (x_{i}-\\bar{x})^2}{n-1}}\n\\tag{2.21}\\]\n\n\n\n\n\nFormules des variances et des écarts-types\n\n\nLes formules des variances et des écarts-types pour une population et un échantillon sont très similaires : seul le dénominateur change avec \\(n\\) versus \\(n-1\\) observations. Par conséquent, plus le nombre d’observations de votre jeu de données est important, plus l’écart entre ces deux mesures de dispersion pour une population et un échantillon est minime.\nComme dans la plupart des logiciels de statistique, les fonctions de base var et sd de R calculent la variance et l’écart-type pour un échantillon (\\(n-1\\) au dénominateur). Si vous souhaitez les calculer pour une population, adaptez la syntaxe ci-dessous dans laquelle df$var1 représente la variable intitulée var1 présente dans un DataFrame nommé df.\nvar.p &lt;- mean((df$var1 - mean(df$var1))^2)\nsd.p &lt;- sqrt(mean((df$var1 - mean(df$var1))^2))\n\n\n\n\nLe coefficient de variation (CV) est le rapport entre l’écart-type et la moyenne, représentant ainsi une standardisation de l’écart-type ou, en d’autres termes, une mesure de dispersion relative (équation 2.22). L’écart-type étant exprimé dans l’unité de mesure de la variable, il ne peut pas être utilisé pour comparer les dispersions de variables exprimées des unités de mesure différentes (par exemple, en pourcentage, en kilomètres, en dollars, etc.). Pour y remédier, nous utilisons le coefficient de variation : une variable est plus dispersée qu’une autre si la valeur de son CV est plus élevée. Certaines personnes préfèrent multiplier la valeur du CV par 100 : l’écart-type est alors exprimé en pourcentage de la moyenne.\n\n\\[\nCV=\\frac{\\sigma}{\\mu} \\text{ ou } CV=\\frac{s^2}{\\bar{x}}\n\\tag{2.22}\\]\nIllustrons comment calculer les cinq mesures de dispersion précédemment décrites à partir de valeurs fictives pour huit observations (colonne intitulée \\(x_i\\) au tableau 2.3). Les différentes statistiques reportées dans ce tableau sont calculées comme suit :\n\nLa moyenne est la somme divisée par le nombre d’observations, soit \\(\\mbox{248/8}=\\mbox{31}\\).\nL’étendue est la différence entre les valeurs maximale et minimale, soit \\(\\mbox{40}-\\mbox{22}=\\mbox{30}\\).\nLes quartiles coupent la distribution en quatre parties égales. Avec huit observations triées par ordre croissant, le premier quartile est égal à la valeur de la deuxième observation (soit 25), la médiane à celle de la quatrième (30), le troisième quartile à celle de la sixième (35).\nL’écart interquartile est la différence entre Q3 et Q1, soit \\(\\mbox{35}-\\mbox{25}=\\mbox{10}\\).\nLa seconde colonne du tableau est l’écart à la moyenne (\\(x_i-\\bar{x}\\)), soit \\(\\mbox{22} - \\mbox{31} = -\\mbox{9}\\) pour l’observation 1; la somme de ces écarts est toujours égale à 0. La troisième colonne est cette déviation mise au carré (\\((x_i-\\bar{x})^2\\)), soit \\(-\\mbox{9}^2 = \\mbox{81}\\), toujours pour l’observation 1. La somme de ces déviations à la moyenne au carré (268) représente le numérateur de la variance (équation 2.20). En divisant cette somme par le nombre d’observations, nous obtenons la variance pour une population (\\(\\mbox{268}/\\mbox{8}=\\mbox{33,5}\\)) tandis que la variance d’un échantillon est égale à \\(\\mbox{268}/(\\mbox{8}-\\mbox{1})=\\mbox{38,29}\\).\nL’écart-type est la racine carrée de la variance (équation 2.21), soit \\(\\sigma=\\sqrt{\\mbox{33,5}}=\\mbox{5,79}\\) et \\(s=\\sqrt{\\mbox{38,29}}=\\mbox{6,19}\\).\nFinalement, les valeurs des coefficients de variation (équation 2.22) sont de \\(\\mbox{5,79}/\\mbox{31}=\\mbox{0,19}\\) pour une population et \\(\\mbox{6,19}/\\mbox{31}=\\mbox{0,20}\\) pour un échantillon.\n\n\n\n\n\nTableau 2.3: Calcul des mesures de dispersion sur des données fictives\n\n\n\n\n\n\n\nObservation\n\\(x_i\\)\n\\(x_i-\\bar{x}\\)\n\\((x_i-\\bar{x})^2\\)\n\n\n\n1\n22,00\n-9\n81,0\n\n\n2\n25,00\n-6\n36,0\n\n\n3\n27,00\n-4\n16,0\n\n\n4\n30,00\n-1\n1,0\n\n\n5\n32,00\n1\n1,0\n\n\n6\n35,00\n4\n16,0\n\n\n7\n37,00\n6\n36,0\n\n\n8\n40,00\n9\n81,0\n\n\nStatistique\n\n\n\n\n\nN\n8,00\n\n\n\n\nSomme\n248,00\n0\n268,0\n\n\nMoyenne (\\(\\bar{x}\\) ou \\(\\mu\\))\n31,00\n0\n33,5\n\n\nÉtendue\n18,00\n\n\n\n\nPremier quartile\n25,00\n\n\n\n\nTroisième quartile\n35,00\n\n\n\n\nIntervalle interquartile\n10,00\n\n\n\n\nVariance (population, \\(\\sigma^2\\))\n33,50\n\n\n\n\nÉcart-type (population, \\(\\sigma\\))\n5,79\n\n\n\n\nVariance (échantillon, \\(s^2\\))\n38,29\n\n\n\n\nÉcart-type (échantillon, \\(s\\))\n6,19\n\n\n\n\nCoefficient de variation (\\(\\sigma / \\mu\\))\n0,19\n\n\n\n\nCoefficient de variation (\\(s / \\bar{x}\\))\n0,20\n\n\n\n\n\n\n\n\nLe tableau 2.4 vise à démontrer, à partir de trois variables, comment certaines mesures de dispersion sont sensibles à l’unité de mesure et/ou aux valeurs extrêmes.\nConcernant l’unité de mesure, nous avons créé deux variables A et B, où B étant simplement A multipliée par 10. Pour A, les valeurs de la moyenne, de l’étendue et de l’intervalle interquartile sont respectivement 31, 18 et 10. Sans surprise, celles de B sont multipliées par 10 (310, 180, 100). La variance étant la moyenne des déviations à la moyenne au carré, elle est égale à 33,50 pour A et donc à \\(\\mbox{33,50}\\times10^2=\\mbox{3350}\\) pour B; l’écart-type de B est égal à celui de A multiplié par 10. Cela démontre que l’étendue, l’intervalle interquartile, la variance et l’écart-type sont des mesures de dispersion dépendantes de l’unité de mesure. Par contre, étant donné que le coefficient de variation (CV) est le rapport de l’écart-type avec la moyenne, il a la même valeur pour A et B, ce qui démontre que le CV est bien une mesure de dispersion relative permettant de comparer des variables exprimées dans des unités de mesure différentes.\nConcernant la sensibilité aux valeurs extrêmes, nous avons créé la variable C pour laquelle seule la huitième observation a une valeur différente (40 pour A et 105 pour B). Cette valeur de 105 pourrait être soit une valeur extrême positive mesurée, soit une valeur aberrante (par exemple, si l’unité de mesure était un pourcentage variant de 0 à 100 %). Cette valeur a un impact important sur la moyenne (31 contre 39,12) et l’étendue (18 contre 83) et corollairement sur la variance (33,50 contre 641,86), l’écart-type (5,79 contre 25,33) et le coefficient de variation (0,19 contre 0,65). Par contre, comme l’intervalle interquartile est calculé sur 50 % des observations centrales (\\(\\mbox{Q3}-\\mbox{Q1}\\)), il n’est pas affecté par cette valeur extrême.\n\n\n\n\nTableau 2.4: Illustration de la sensibilité des mesures de dispersion à l’unité de mesure et aux valeurs extrêmes\n\nObservation\nA\nB\nC\n\n\n\n1\n22,00\n220,00\n22,00\n\n\n2\n25,00\n250,00\n25,00\n\n\n3\n27,00\n270,00\n27,00\n\n\n4\n30,00\n300,00\n30,00\n\n\n5\n32,00\n320,00\n32,00\n\n\n6\n35,00\n350,00\n35,00\n\n\n7\n37,00\n370,00\n37,00\n\n\n8\n40,00\n400,00\n105,00\n\n\nStatistique\n\n\n\n\n\nMoyenne (\\(\\mu\\))\n31,00\n310,00\n39,12\n\n\nÉtendue\n18,00\n180,00\n83,00\n\n\nIntervalle interquartile\n10,00\n100,00\n10,00\n\n\nVariance (population, \\(\\sigma^2\\))\n33,50\n3 350,00\n641,86\n\n\nÉcart-type (population, \\(\\sigma\\))\n5,79\n57,88\n25,33\n\n\nCoefficient de variation (\\(\\sigma / \\mu\\))\n0,19\n0,19\n0,65\n\n\n\n\n\n\n\n\n\n\nTableau 2.5: Résumé de la sensibilité de la moyenne et des mesures de dispersion\n\nStatistique\nUnité de mesure\nValeurs extrêmes\n\n\n\nMoyenne\nX\nX\n\n\nÉtendue\nX\nX\n\n\nIntervalle interquartile\nX\n\n\n\nVariance\nX\nX\n\n\nÉcart-type\nX\nX\n\n\nCoefficient de variation\n\nX\n\n\n\n\n\n\n\n2.5.4 Paramètres de forme\n\n2.5.4.1 Vérification de la normalité d’une variable quantitative\n\n\n\n\n\nNormalité d’une variable\n\n\nDe nombreuses méthodes statistiques qui sont abordées dans les chapitres suivants – entre autres, la corrélation de Pearson, les test t et l’analyse de variance, les régressions simple et multiple – requièrent que la variable quantitative suive une distribution normale (nommée aussi distribution gaussienne).\nDans cette sous-section, nous décrivons trois démarches pour vérifier si la distribution d’une variable est normale : les coefficients d’asymétrie et d’aplatissement (skewness et kurtosis en anglais), les graphiques (histogramme avec courbe normale et diagramme quantile-quantile), les tests de normalité (tests de Shapiro-Wilk, de Kolmogorov-Smirnov, de Lilliefors, d’Anderson-Darling et de Jarque-Bera).\nIl est vivement recommandé de réaliser les trois démarches!\n\n\nUne distribution est normale quand elle est symétrique et mésokurtique (figure 2.26).\n\n\nFigure 2.26: Formes d’une distribution et coefficients d’asymétrie et d’aplatissement\n\n\n2.5.4.1.1 Vérification de la normalité avec les coefficients d’asymétrie et d’aplatissement\nUne distribution est dite symétrique quand la moyenne arithmétique est au centre de la distribution, c’est-à-dire que les observations sont bien réparties de part et d’autre de la moyenne qui est alors égale à la médiane et au mode (nous utilisons uniquement le mode pour une variable discrète et non pour une variable continue). Pour évaluer l’asymétrie, nous utilisons habituellement le coefficient d’asymétrie (skewness en anglais).\nSachez toutefois qu’il existe trois façons (formules) pour le calculer (Joanes et Gill 1998) : \\(g_1\\) est la formule classique (équation 2.23), disponible dans R avec la fonction skewness du package moments), \\(G_1\\) est une version ajustée (équation 2.24), utilisée dans les logiciels SAS et SPSS notamment) et \\(b_1\\) est une autre version ajustée (équation 2.25), utilisée par les logiciels MINITAB et BMDP). Nous verrons qu’avec les packages DescTools ou e1071, il est possible de calculer ces trois méthodes. Aussi, pour de grands échantillons (\\(n&gt;100\\)), il y a très peu de différences entre les résultats produits par ces trois formules (Joanes et Gill 1998). Quelle que soit la formule utilisée, le coefficient d’asymétrie s’interprète comme suit (figure 2.27) :\n\nQuand la valeur du skewness est négative, la distribution est asymétrique négative. La distribution est alors tirée à gauche par des valeurs extrêmes faibles, mais peu nombreuses. Nous employons souvent l’expression la queue de distribution est étirée vers la gauche. La moyenne est alors inférieure à la médiane.\nQuand la valeur du skewness est égale à 0, la distribution est symétrique (la médiane est égale à la moyenne). Pour une variable discrète, les valeurs du mode, de la moyenne et de la médiane sont égales.\nQuand la valeur du skewness est positive, la distribution est symétrique positive. La distribution est alors tirée à droite par des valeurs extrêmes fortes, mais peu nombreuses. La queue de distribution est alors étirée vers la droite et la moyenne est supérieure à la médiane. En sciences sociales, les variables de revenu (totaux ou d’emploi, des individus ou des ménages) ont souvent des distributions asymétriques positives : la moyenne est affectée par quelques observations avec des valeurs de revenu très élevées et est ainsi supérieure à la médiane. En études urbaines, la densité de la population pour des unités géographiques d’une métropole donnée (secteur de recensement par exemple) a aussi souvent une distribution asymétrique positive : quelques secteurs de recensement au centre de la métropole sont caractérisés par des valeurs de densité très élevées qui tirent la distribution vers la droite.\n\n\\[\ng_1=\\frac{ \\frac{1}{n} \\sum_{i=1}^n(x_i-\\bar{x})^3} { \\left[\\frac{1}{n}\\sum_{i=1}^n(x_i-\\bar{x})^2\\right] ^\\frac{3}{2}}\n\\tag{2.23}\\]\n\\[\nG_1= \\frac{\\sqrt{n(n-1)}}{n-2} g_1\n\\tag{2.24}\\]\n\\[\nb_1= \\left( \\frac{n-1}{n} \\right) ^\\frac{3}{2} g_1\n\\tag{2.25}\\]\n\n\n\n\nFigure 2.27: Asymétrie d’une distribution\n\n\n\nPour évaluer l’aplatissement d’une distribution, nous utilisons le coefficient d’aplatissement (kurtosis en anglais). Là encore, il existe trois formules pour le calculer (équations 2.26, 2.27, 2.28) qui renvoient des valeurs très semblables pour de grands échantillons (Joanes et Gill 1998). Cette mesure s’interprète comme suit (figure 2.27) :\n\nQuand la valeur du kurtosis est négative, la distribution est platikurtique. La distribution est dite plate, c’est-à-dire que la valeur de l’écart-type est importante (comparativement à une distribution normale), signalant une grande dispersion des valeurs de part et d’autre la moyenne. s\nQuand la valeur du kurtosis est égale à 0, la distribution est mésokurtique, ce qui est typique d’une distribution normale.\nQuand la valeur du kurtosis est positive, la distribution est leptokurtique, signalant que l’écart-type (la dispersion des valeurs) est plutôt faible. Autrement dit, la dispersion des valeurs autour de la moyenne est faible.\n\n\\[\ng_2=\\frac{\\frac{1}{n}\\sum_{i=1}^n(x_i-\\bar{x})^4} {\\left( \\frac{1}{n}\\sum_{i=1}^n(x_i-\\bar{x})^2\\right)^2}-3\n\\tag{2.26}\\]\n\\[\nG_2 = \\frac{n-1}{(n-2)(n-3)} \\{(n+1) g_2 + 6\\}\n\\tag{2.27}\\]\n\\[  \nb_2 = (g_2 + 3) (1 - 1/n)^2 - 3\n\\tag{2.28}\\]\n\n\n\n\nFigure 2.28: Applatissement d’une distribution\n\n\n\n\n\n\n\n\nKurtosis normalisé\n\n\nRegardez attentivement les équations 2.26, 2.27, 2.28; vous remarquez que pour \\(g_2\\) et \\(b_2\\), il y a une soustraction de 3 et une addition 6 pour \\(G_2\\). Nous parlons alors de kurtosis normalisé (excess kurtosis en anglais). Pour une distribution normale, il prend la valeur de 0, comparativement à la valeur de 3 pour un kurtosis non normalisé. Par conséquent, avant de calculer le kurtosis, il convient de s’assurer que la fonction que vous utilisez implémente une méthode de calcul normalisée (donnant une valeur de 0 pour une distribution normale). Par exemple, la fonction Kurt du package DescTools calcule les trois formules normalisées tandis que la fonction kurtosis du package moments renvoie un kurtosis non normalisé.\n\nlibrary(DescTools)\nlibrary(moments)\n# Générer une variable normalement distribuée avec 1000 observations\nNormale &lt;- rnorm(1500,0,1)\nround(DescTools::Kurt(Normale),3)\n\n[1] -0.036\n\nround(moments::kurtosis(Normale),3)\n\n[1] 2.968\n\n\n\n\n\n2.5.4.1.2 Vérification de la normalité avec des graphiques\nLes graphiques sont un excellent moyen de vérifier visuellement si une distribution est normale ou pas. Bien entendu, les histogrammes, que nous avons déjà largement utilisés, sont un incontournable. À titre de rappel, ils permettent de représenter la forme de la distribution des données (figure 2.29). Un autre type de graphique intéressant est le diagramme quantile-quantile (Q-Q plot en anglais), qui permet de comparer la distribution d’une variable avec une distribution gaussienne (normale). Trois éléments composent ce graphique comme illustré à la figure 2.30 :\n\nles points, représentant les observations de la variable;\nla distribution gaussienne (normale), représentée par une ligne;\nl’intervalle de confiance à 95 % de la distribution normale (en marron sur la figure).\n\nQuand la variable est normalement distribuée, les points sont situés le long de la ligne. Plus les points localisés en dehors de l’intervalle de confiance (bande marron) sont nombreux, plus la variable est alors anormalement distribuée.\n\n\n\n\nFigure 2.29: Histogrammes et courbe normale\n\n\n\n\n\n\n\nFigure 2.30: Diagrammes quantile-quantile\n\n\n\n\n2.5.4.1.3 Vérification de la normalité avec des tests de normalité\nCinq principaux tests d’hypothèse permettent de vérifier la normalité d’une variable : les tests de Kolmogorov-Smirnov (KS), de Lilliefors (LF), de Shapiro-Wilk (SW), d’Anderson-Darling et de Jarque-Bera (JB). Sachez toutefois qu’il y en a d’autres non discutés ici (tests d’Agostino–Pearson, de Cramer–von Mises, de Ryan-Joiner, de Shapiro–Francia, etc.). Pour les formules et une description détaillée de ces tests, vous pouvez consulter Razali et al. (2011) ou Yap et Sim (2011). Quel test choisir? Plusieurs auteur(e)s ont comparé ces différents tests à partir de plusieurs échantillons, et ce, en faisant varier la forme de la distribution et le nombre d’observations (Razali et Wah 2011; Yap et Sim 2011). Selon Razali et al. (2011), le meilleur test semble être celui de Shapiro-Wilk, puis ceux d’Anderson-Darling, de Lilliefors et de Kolmogorov-Smirnov. Yap et Sim (2011) concluent aussi que le Shapiro-Wilk semble être le plus performant.\nQuoi qu’il en soit, ces cinq tests postulent que la variable suit une distribution gaussienne (hypothèse nulle, H0).\nCela signifie que si la valeur de p associée à la valeur de chacun des tests est inférieure ou égale au seuil alpha choisi (habituellement \\(\\alpha=\\mbox{0,05}\\)), la distribution est anormale. À l’inverse, si \\(p&gt;\\mbox{0,05}\\), la distribution est normale.\n\n\n\n\nTableau 2.6: Différents tests d’hypothèse pour la normalité\n\n\n\n\n\n\nTest\nPropriétés et interprétation\nFonction R\n\n\n\nKolmogorov-Smirnov\nPlus sa valeur est proche de zéro, plus la distribution est normale. L’avantage de ce test est qu’il peut être utilisé pour vérifier si une variable suit la distribution de n’importe quelle loi (autre que la loi normale).\n\nks.test du package stats\n\n\n\nLilliefors\nCe test est une adaptation du test de Kolmogorov-Smirnov. Plus sa valeur est proche de zéro, plus la distribution est normale.\n\nlillie.test du package nortest\n\n\n\nShapiro-Wilk\nSi la valeur de la statistique de Shapiro-Wilk est proche de 1, alors la distribution est normale; anormale quand elle est inférieure à 1.\n\nshapiro.test du package stats\n\n\n\nAnderson-Darling\nCe test est une modification du test de Cramer-von Mises (CVM). Il peut être aussi utilisé pour tester d’autres distributions (uniforme, log-normale, exponentielle, Weibull, distribution de Pareto généralisée, logistique, etc.).\n\nad.test du package stats\n\n\n\nJarque-Bera\nBasé sur un test du type multiplicateur de Lagrange, ce test utilise dans son calcul les valeurs du Skewness et du Kurtosis. Plus sa valeur s’approche de 0, plus la distribution est normale. Ce test est surtout utilisé pour vérifier si les résidus d’un modèle de régression linéaire sont normalement distribués; nous y reviendrons dans le chapitre sur la régression multiple. Il s’écrit \\(JB=\\frac{1}{6} \\left({g_1}^2+\\frac{{g_1}^2}{4} \\right)\\) avec \\(g_1\\) et \\(g_2\\) qui sont respectivement les valeurs du skewness et du kurtosis de la variable (voir les équations 2.23 et 2.26.\n\nJarqueBeraTest du package DescTools\n\n\n\n\n\n\n\nDans le tableau 2.7 sont reportées les valeurs des différents tests pour les cinq types de distribution générés à la figure 2.29. Sans surprise, pour l’ensemble des tests, la valeur de p est inférieure à 0,05 pour la distribution normale.\n\n\n\n\nTableau 2.7: Tests de normalité pour différentes distributions\n\n\n\n\n\n\n\n\n\n\n\n\nNormale\nAsymétrie négative\nAsymétrie positive\nLeptokurtique\nPlatikurtique\n\n\n\nS\nSkewness\n-0,078\n1,162\n-1,199\n-0,369\n0,031\n\n\nK\nKurtosis\n-0,043\n1,495\n1,845\n6,540\n-0,895\n\n\nKS\nKolmogorov-Smirnov (KS)\n0,026\n0,099\n0,088\n0,098\n0,041\n\n\nLF\nLilliefors (LF)\n0,026\n0,099\n0,088\n0,098\n0,041\n\n\nSW\nShapiro-Wilk (SW)\n0,998\n0,914\n0,916\n0,903\n0,976\n\n\nAD\nAnderson-Darling (AD)\n0,295\n10,740\n9,390\n10,886\n1,950\n\n\nJB\nJarque-Bera (JB)\n0,524\n181,762\n225,553\n2 343,009\n12,001\n\n\nKS.p\nKS (valeur p)\n0,895\n0,000\n0,001\n0,000\n0,384\n\n\nLF.p\nLF (valeur p)\n0,582\n0,000\n0,000\n0,000\n0,048\n\n\nSW.p\nSW (valeur p)\n0,686\n0,000\n0,000\n0,000\n0,000\n\n\nAD.p\nAD (valeur p)\n0,596\n0,000\n0,000\n0,000\n0,000\n\n\nJB.p\nJB (valeur p)\n0,770\n0,000\n0,000\n0,000\n0,002\n\n\n\n\n\n\n\n\n\n\n\nDes tests restrictifs…\n\n\nLa plupart des auteurs s’entendent sur le fait que ces tests sont très restrictifs : plus la taille de votre échantillon est importante, plus les tests risquent de vous signaler que vos distributions sont anormales (à la lecture des valeurs de p).\nCertains conseillent même de ne pas les utiliser quand \\(n&gt;200\\) et de vous fier uniquement aux graphiques (histogramme et diagramme Q-Q)!\n\n\n\n\n\n\n\nCombiner plusieurs méthodes pour vérifier la normalité d’une variable\n\n\nBref, vérifier la normalité d’une variable n’est pas une tâche si simple. De nouveau, nous vous conseillons vivement de :\n\nConstruire les graphiques pour analyser visuellement la forme de la distribution (histogramme avec courbe normale et diagramme Q-Q).\nCalculer le skewness et le kurtosis.\nCalculer plusieurs tests (minimalement Shapiro-Wilk et Kolmogorov-Smirnov).\nAccorder une importance particulière aux graphiques lorsque vous traitez de grands échantillons (\\(n&gt;200\\)).\n\n\n\n\n2.5.4.2 Tests pour d’autres formes de distribution\nComme nous l’avons vu, la distribution normale n’est que l’une des multiples distributions existantes. Dans de nombreuses situations, elle ne sera pas adaptée pour décrire vos variables. La démarche à adopter pour trouver une distribution adaptée est la suivante :\n\nDéfinissez la nature de votre variable : identifier si elle est discrète ou continue et l’intervalle dans lequel elle est définie. Une variable dont les valeurs sont positives ou négatives ne peut pas être décrite avec une distribution Gamma par exemple (à moins de la décaler).\nExplorez votre variable : affichez son histogramme et son graphique de densité pour avoir une vue générale de sa morphologie.\nPrésélectionnez un ensemble de distributions candidates en tenant compte des observations précédentes. Vous pouvez également vous reporter à la littérature existante sur votre sujet d’étude pour inclure d’autres distributions. Soyez flexible! Une variable strictement positive pourrait tout de même avoir une forme normale. De même, une variable décrivant des comptages suffisamment grands pourrait être mieux décrite par une distribution normale qu’une distribution de Poisson.\nTentez d’ajuster chacune des distributions retenues à vos données et comparez les qualités d’ajustements pour retenir la plus adaptée.\n\nPour ajuster une distribution à un jeu de données, il faut trouver les valeurs des paramètres de cette distribution qui lui permettent d’adopter une forme la plus proche possible des données. Nous appelons cette opération ajuster un modèle, puisque la distribution théorique est utilisée pour modéliser les données. L’ajustement des paramètres est un problème d’optimisation que plusieurs algorithmes sont capables de résoudre (gradient descent, Newton-Raphson method, Fisher scoring, etc.). Dans R, le package fitdistrplus permet d’ajuster pratiquement n’importe quelle distribution à des données en offrant plusieurs stratégies d’optimisation grâce à la fonction fitdist. Il suffit de disposer d’une fonction représentant la distribution de densité ou de masse de la distribution en question, généralement noté dnomdeladistribution (dnorm, dgamma, dpoisson, etc.) dans R. Notez que certains packages comme VGAM ou gamlss.dist ajoutent un grand nombre de fonctions de densité et de masse à celles déjà disponibles de base dans R.\nPour comparer l’ajustement de plusieurs distributions théoriques à des données, trois approches doivent être combinées :\n\nObserver graphiquement l’ajustement de la courbe théorique à l’histogramme des données. Cela permet d’éliminer au premier coup d’œil les distributions qui ne correspondent pas.\nComparer les loglikelihood. Le loglikelihood est un score d’ajustement des distributions aux données. Pour faire simple, plus le loglikelihood est grand, plus la distribution théorique est proche des données. Référez-vous à l’encadré suivant pour une description plus en profondeur du loglikelihood.\nUtiliser le test de Kolmogorov-Smirnov pour déterminer si une distribution particulière est mieux ajustée pour les données.\n\n\n\n\n\n\nQu’est-ce que le loglikelihood?\n\n\nLe loglikelihood est une mesure de l’ajustement d’un modèle à des données. Il est utilisé à peu près partout en statistique. Comprendre sa signification est donc un exercice important pour développer une meilleure intuition du fonctionnement général de nombreuses méthodes. Si les concepts de fonction de densité et de fonction de masse vous semblent encore flous, reportez-vous à la section 2.4 sur les distributions dans un premier temps.\nAdmettons que nous disposons d’une variable continue v que nous tentons de modéliser avec une distribution d (il peut s’agir de n’importe quelle distribution). d a une fonction de densité avec laquelle il est possible de calculer, pour chacune des valeurs de v, la probabilité d’être observée selon le modèle d.\nPrenons un exemple concret dans R. Admettons que nous avons une variable comprenant 10 valeurs (oui, c’est un petit échantillon, mais c’est pour faire un exemple simple).\n\nv &lt;- c(5,8,7,8,10,4,7,6,9,7)\nmoyenne &lt;- mean(v)\necart_type &lt;- sd(v)\n\nEn calculant la moyenne et l’écart-type de la variable, nous obtenons les paramètres d’une distribution normale que nous pouvons utiliser pour représenter les données observées. En utilisant la fonction dnorm (la fonction de densité de la distribution normale), nous pouvons calculer la probabilité d’observer chacune des valeurs de v selon cette distribution normale.\n\nprobas &lt;- dnorm(v, moyenne, ecart_type)\ndf &lt;- data.frame(valeur = v,\n                 proba = probas)\nprint(df)\n\n   valeur      proba\n1       5 0.11203710\n2       8 0.19624888\n3       7 0.22228296\n4       8 0.19624888\n5      10 0.06009897\n6       4 0.04985613\n7       7 0.22228296\n8       6 0.18439864\n9       9 0.12689976\n10      7 0.22228296\n\n\nNous observons ainsi que les valeurs 7 et 8 sont très probables selon le modèle alors que les valeurs 4 et 10 sont très improbables.\nLe likelihood est simplement le produit de toutes ces probabilités. Il s’agit donc de la probabilité conjointe d’avoir observé toutes les valeurs de v sous l’hypothèse que d est la distribution produisant ces valeurs. Si d décrit efficacement v, alors le likelihood est plus grand que si d ne décrit pas efficacement v. Il s’agit d’une forme de raisonnement par l’absurde : après avoir observé v, nous calculons la probabilité d’avoir observé v (likelihood) si notre modèle d était vrai. Si cette probabilité est très basse, alors c’est que notre modèle est mauvais puisqu’on a bien observé v.\n\nlikelihood_norm &lt;- prod(probas)\nprint(likelihood_norm)\n\n[1] 3.322759e-09\n\n\nCependant, multiplier un grand nombre de valeurs inférieures à zéro tend à produire des chiffres infiniment petits et donc à complexifier grandement le calcul. Nous préférons donc utiliser le loglikelihood : l’idée étant transformer les probabilités obtenues avec la fonction log puis d’additionner leurs résultats, puisque \\(log(xy) = log(x)+log(y)\\).\n\nloglikelihood_norm &lt;- sum(log(probas))\nprint(loglikelihood_norm)\n\n[1] -19.52247\n\n\nComparons ce loglikelihood à celui d’un second modèle dans lequel nous utilisons toujours la distribution normale, mais avec une moyenne différente (faussée en ajoutant +3) :\n\nprobas2 &lt;- dnorm(v, moyenne+3, ecart_type)\nloglikelihood_norm2 &lt;- sum(log(probas2))\nprint(loglikelihood_norm2)\n\n[1] -33.53631\n\n\nCe second loglikehood est plus faible, indiquant clairement que le premier modèle est plus adapté aux données.\n\n\nPassons à la pratique avec deux exemples.\n\n2.5.4.2.1 Temps de retard des bus de la ville de Toronto\nAnalysons les temps de retard pris par les bus de la ville de Toronto lorsqu’un évènement perturbe la circulation. Ce jeu de données est disponible sur le site des données ouvertes de la Ville de Toronto. Compte tenu de la grande quantité d’observations, nous avons fait le choix de nous concentrer sur les évènements ayant eu lieu durant le mois de janvier 2019. Puisque la variable étudiée est une durée exprimée en minutes, elle est strictement positive (supérieure à 0), car un bus avec zéro minute de retard est à l’heure! Nous considérons également qu’un bus ayant plus de 150 minutes de retard (2 heures 30) n’est tout simplement pas passé (personne ne risque d’attendre 2 heures 30 pour prendre son bus). Commençons par charger les données et observer leur distribution empirique.\n\nlibrary(ggplot2)\n# charger le jeu de données\ndata_trt_bus &lt;- read.csv('data/univariee/bus-delay-2019_janv.csv', sep =';')\n# retirer les observations aberrantes\ndata_trt_bus &lt;- subset(data_trt_bus, data_trt_bus$Min.Delay &gt; 0 &\n                         data_trt_bus$Min.Delay &lt; 150)\n# représenter la distribution empirique du jeu de données\nggplot(data = data_trt_bus) + \n  geom_histogram(aes(x = Min.Delay, y = ..density..), bins = 40)+\n  geom_density(aes(x = Min.Delay), color = \"blue\", bw = 2, size = 0.8)+\n  labs(x = \"temps de retard (en minutes)\",\n       y = \"\")\n\n\n\nFigure 2.31: Distribution empirique des temps de retard des bus à Toronto en janvier 2019\n\n\n\nCompte tenu de la forme de la distribution empirique et de sa nature, quatre distributions sont envisageables :\n\nLa distribution Gamma, strictement positive et asymétrique, est aussi une généralisation de la distribution exponentielle utilisée pour modéliser des temps d’attente. Pour des raisons similaires, nous pouvons aussi retenir la distribution de Weibull et la distribution log-normale. Nous écartons ici la distribution normale asymétrique puisque le jeu de données n’a clairement pas une forme normale au départ.\nLa distribution de Pareto, strictement positive et permettant de représenter ici le fait que la plupart des retards durent moins de 10 minutes, mais que quelques retards sont également beaucoup plus longs.\n\nCommençons par ajuster les quatre distributions avec la fonction fitdist du package fitdistrplus et représentons-les graphiquement pour éliminer les moins bons candidats. Nous utilisons également le package actuar pour la fonction de densité de Pareto (dpareto).\n\nlibrary(fitdistrplus)\nlibrary(actuar)\nlibrary(ggpubr)\n# ajustement des modèles\nmodel_gamma &lt;- fitdist(data_trt_bus$Min.Delay, distr = \"gamma\")\nmodel_weibull &lt;- fitdist(data_trt_bus$Min.Delay, distr = \"weibull\")\nmodel_lognorm &lt;- fitdist(data_trt_bus$Min.Delay, distr = \"lnorm\")\nmodel_pareto &lt;- fitdist(data_trt_bus$Min.Delay, distr = \"pareto\", \n                        start = list(shape = 1, scale = 1),\n                        method = \"mse\") # différentes méthodes d'optimisation\n# réalisation des graphiques\nplot1 &lt;- ggplot(data = data_trt_bus) + \n  geom_histogram(aes(x = Min.Delay, y = ..density..), bins = 40)+\n  stat_function(fun = dgamma, color = \"red\", size = 0.8, \n                args = as.list(model_gamma$estimate))+\n  labs(x = \"temps de retard (en minutes)\",\n       y = \"\",\n       subtitle = \"Modèle Gamma\")\nplot2 &lt;- ggplot(data = data_trt_bus) + \n  geom_histogram(aes(x = Min.Delay, y = ..density..), bins = 40)+\n  stat_function(fun = dweibull, color = \"red\", linewidth = 0.8, \n                args = as.list(model_weibull$estimate))+\n  labs(x = \"temps de retard (en minutes)\",\n       y = \"\",\n       subtitle = \"Modèle Weibull\")\nplot3 &lt;- ggplot(data = data_trt_bus) + \n  geom_histogram(aes(x = Min.Delay, y = ..density..), bins = 40)+\n  stat_function(fun = dlnorm, color = \"red\", linewidth = 0.8, \n                args = as.list(model_lognorm$estimate))+\n  labs(x = \"temps de retard (en minutes)\",\n       y = \"\",\n       subtitle = \"Modèle log-normal\")\nplot4 &lt;- ggplot(data = data_trt_bus) + \n  geom_histogram(aes(x = Min.Delay, y = ..density..), bins = 40)+\n  stat_function(fun = dpareto, color = \"red\", linewidth = 0.8, \n                args = as.list(model_pareto$estimate))+\n  labs(x = \"temps de retard (en minutes)\",\n       y = \"\",\n       subtitle = \"Modèle Pareto\")\nggarrange(plotlist = list(plot1, plot2, plot3, plot4),\n          ncol = 2, nrow = 2)\n\n\n\nFigure 2.32: Comparaison des distributions ajustées aux données de retard des bus\n\n\n\nVisuellement, nous constatons que la distribution de Pareto est un mauvais choix. Pour les trois autres distributions, la comparaison des valeurs de loglikelihood s’impose (tableau 2.8).\n\n\n\n\nTableau 2.8: Comparaison des LogLikelihood des trois distributions\n\nDistribution\nLogLikelihood\n\n\n\nGamma\n-23 062,56\n\n\nWeibull\n-23 195,54\n\n\nlog-normal\n-23 375,74\n\n\n\n\n\n\nLe plus grand logLikelihood est obtenu par la distribution Gamma qui s’ajuste donc le mieux à nos données. Pour finir, nous pouvons tester formellement, avec le test de Kolmogorov-Smirnov, si les données proviennent bien de cette distribution Gamma.\n\nparams &lt;- as.list(model_gamma$estimate)\nks.test(data_trt_bus$Min.Delay,\n        y = pgamma, shape = params$shape, rate = params$rate)\n\n\n    Asymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  data_trt_bus$Min.Delay\nD = 0.099912, p-value &lt; 2.2e-16\nalternative hypothesis: two-sided\n\n\nComme la valeur de p est inférieure à 0,05, nous ne pouvons pas accepter l’hypothèse que notre jeu de données suit effectivement une loi de Gamma. Considérant le nombre d’observations et le fait que de nombreux temps d’attente sont identiques (ce à quoi le test est très sensible), ce résultat n’est pas surprenant. La distribution Gamma reste cependant la distribution qui représente le mieux nos données. Nous pouvons estimer grâce, à cette distribution, la probabilité qu’un bus ait un retard de plus de 10 minutes de la façon suivante :\n\npgamma(10, shape = params$shape, rate = params$rate, lower.tail = FALSE)\n\n[1] 0.5409424\n\n\nce qui correspond à 54 % de chance.\nPour moins de 10 minutes :\n\npgamma(10, shape = params$shape, rate = params$rate, lower.tail = TRUE)\n\n[1] 0.4590576\n\n\nsoit 46 %.\nUn dernier exemple avec la probabilité qu’un retard dépasse 45 minutes :\n\npgamma(45, shape = params$shape, rate = params$rate, lower.tail = FALSE)\n\n[1] 0.01348194\n\n\nSoit seulement 1,3 %.\nPar conséquent, si un matin à Toronto votre bus a plus de 45 minutes de retard, bravo, vous êtes tombé sur une des très rares occasions où un tel retard se produit!\n\n2.5.4.2.2 Accidents de vélo à Montréal\nLe second jeu de données représente le nombre d’accidents de la route impliquant un vélo sur les intersections dans les quartiers centraux de Montréal (figure 2.33). Le jeu de données complet est disponible sur le site des données ouvertes de la Ville de Montréal. Puisque ces données correspondent à des comptages, la première distribution à envisager est la distribution de Poisson. Cependant, puisque nous aurons également un grand nombre d’intersections sans accident, il serait judicieux de tester la distribution de Poisson avec excès de zéro.\n\nlibrary(ggplot2)\n# charger le jeu de données\ndata_accidents &lt;- read.csv('data/univariee/accidents_mtl.csv', sep =',')\ncounts &lt;- data.frame(table(data_accidents$nb_accident))\nnames(counts) &lt;- c(\"nb_accident\",'frequence')\ncounts$nb_accident &lt;- as.numeric(as.character(counts$nb_accident))\ncounts$prop &lt;- counts$frequence / sum(counts$frequence)\n# représenter la distribution empirique du jeu de donnée\nggplot(data = counts) + \n  geom_bar(aes(x = nb_accident, weight = frequence), width = 0.5)+\n  labs(x = \"nombre d'accidents\",\n      y = \"fréquence\")\n\n\n\nFigure 2.33: Distribution empirique du nombre d’accidents par intersection impliquant un ou une cycliste à Montréal en 2017 dans les quartiers centraux\n\n\n\nNous avons effectivement de nombreux zéros, alors essayons d’ajuster nos deux distributions à ce jeu de données. Dans la figure 2.34, les barres grises représentent la distribution empirique du jeu de données et les barres rouges, les distributions théoriques ajustées. Nous utilisons ici le package gamlss.dist pour avoir la fonction de masse d’une distribution de Poisson avec excès de zéros.\n\nlibrary(gamlss.dist)\n# Ajuster le modèle de poisson\nmodel_poisson &lt;- fitdist(data_accidents$nb_accident, distr = \"pois\")\n# Ajuster le modèle de poisson avec excès de zéros\nmodel_poissonzi &lt;- fitdist(data_accidents$nb_accident, \"ZIP\",\n    start = list(mu = 4, sigma = 0.15), # valeurs pour faciliter la convergence\n    optim.method = \"L-BFGS-B\", # méthode d'optimisation recommandée dans la documentation\n    lower = c(0.00001, 0.00001), # valeurs minimales des deux paramètres\n    upper = c(Inf, 1)# valeurs maximales des deux paramètres\n    )\ndfpoisson &lt;- data.frame(x=c(0:10),\n                        y = dpois(0:10, model_poisson$estimate)\n                        )\nplot1 &lt;- ggplot() + \n  geom_bar(aes(x = nb_accident, weight = prop), width = 0.6, data = counts)+\n  geom_bar(aes(x = x, weight = y), width = 0.15, data = dfpoisson, fill = \"red\")+\n  scale_x_continuous(limits = c(-0.5,7), breaks = c(0:7))+\n  labs(subtitle = \"Modèle de Poisson\",\n       x = \"nombre d'accidents\",\n       y = \"\")\ndfpoissonzi &lt;- data.frame(x=c(0:10),\n                        y = dZIP(0:10, model_poissonzi$estimate[[1]],\n                               model_poissonzi$estimate[[2]])\n                        )\nplot2 &lt;- ggplot() + \n  geom_bar(aes(x = nb_accident, weight = prop), width = 0.6, data = counts)+\n  geom_bar(aes(x = x, weight = y), width = 0.15, data = dfpoissonzi, fill = \"red\")+\n  scale_x_continuous(limits = c(-0.5,7), breaks = c(0:7))+\n  labs(subtitle = \"Modèle de Poisson avec excès de zéro\",\n       x = \"nombre d'accident\",\n       y = \"\")\nggarrange(plotlist = list(plot1, plot2), ncol = 2)\n\n\n\nFigure 2.34: Ajustement des distributions de Poisson et Poisson avec excès de zéros\n\n\n\nVisuellement, comme nous pouvons l’observer à la figure 2.34), le modèle avec excès de zéro semble s’imposer. Nous pouvons vérifier cette impression avec la comparaison des loglikelihood.\n\nprint(model_poisson$loglik)\n\n[1] -989.83\n\nprint(model_poissonzi$loglik)\n\n[1] -931.8778\n\n#afficher les paramètres ajustés\nmodel_poisson$estimate\n\n   lambda \n0.1991963 \n\nmodel_poissonzi$estimate\n\n       mu     sigma \n0.6690301 0.7022605 \n\n\nNous avons donc la confirmation que le modèle de Poisson avec excès de zéros est mieux ajusté. Nous apprenons donc que 70 % (sigma = 0,70) des intersections sont en fait exclues du phénomène étudié (probablement parce que très peu de cyclistes les utilisent ou parce qu’elles sont très peu accidentogènes) et que pour les autres, le taux d’accidents par année en 2017 était de 0,67 (mu = 0,669, mu signifiant \\(\\lambda\\) pour le package gamlss). À nouveau, nous pouvons effectuer un test formel avec le fonction ks.test.\n\nparams &lt;- as.list(model_poissonzi$estimate)\nks.test(data_accidents$nb_accident,\n        y = pZIP, mu = params$mu, sigma = params$sigma)\n\n\n    Asymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  data_accidents$nb_accident\nD = 0.85476, p-value &lt; 2.2e-16\nalternative hypothesis: two-sided\n\n\nEncore une fois, nous devons rejeter l’hypothèse selon laquelle le test suit une distribution de Poisson avec excès de zéros. Ces deux exemples montrent à quel point ce test est restrictif.\n\n2.5.5 Transformation des variables\n\n2.5.5.1 Transformations visant à atteindre la normalité\nComme énoncé au début de cette section, plusieurs méthodes statistiques nécessitent que la variable quantitative soit normalement distribuée. C’est notamment le cas de l’analyse de variance et des tests t (abordés dans les chapitres suivants) qui fournissent des résultats plus robustes lorsque la variable est normalement distribuée. Plusieurs transformations sont possibles, les plus courantes étant la racine carrée, le logarithme et l’inverse de la variable. Selon plusieurs auteur(e)s (notamment, les statisticiennes Barbara G. Tabacknick et Linda S. Fidell (2007, 89)), en fonction du type (positive ou négative) et du degré d’asymétrie, les transformations suivantes sont possibles afin d’améliorer la normalité de la variable :\n\nAsymétrie positive modérée : la racine carrée de la variable X avec la fonction sqrt(df$x).\nAsymétrie positive importante : le logarithme de la variable avec log10(df$x).\nAsymétrie positive sévère : l’inverse de la variable avec 1/(df$x).\n\n\n\n\n\n\nTransformation avec des variables avec des valeurs négatives\n\n\nPour une valeur égale ou inférieure à 0, nous ne pouvons pas calculer une racine carrée ou un logarithme. Par conséquent, il convient de décaler simplement la distribution vers la droite afin de s’assurer qu’il n’y ait plus de valeurs négatives ou égales à 0 :\n\n\nsqrt(df$x - min(df$x+1))pour une asymétrie positive avec des valeurs négatives ou égales à 0.\n\nlog(df$x - min(df$x+1))pour une asymétrie positive avec des valeurs négatives ou égales à 0.\n\nPar exemple, si la valeur minimale de la variable est égale à -10, la valeur minimale de variable décalée sera ainsi de 11.\n\nAsymétrie négative modérée : sqrt(max(df$x+1) - df$x)\n\nAsymétrie négative importante : log(max(df$x+1) - df$x)\n\nAsymétrie négative sévère : 1/(max(df$x+1) - df$x)\n\n\n\n\n\n\n\n\n\nTransformation des variables pour atteindre la normalité : ce n’est pas toujours la panacée!\n\n\nLa transformation des données fait et fera encore longtemps débat à la fois parmi les statisticien(ne)s, et les personnes utilisatrices débutantes ou avancées des méthodes quantitatives. Field et al. (2012, 193) résument le tout avec humour : « to transform or not transform, that is the question ».\nAvantages de la transformation\n\nL’obtention de résultats plus robustes.\nDans une régression linéaire multiple, la transformation de la variable dépendante peut remédier au non-respect des hypothèses de base liées à la régression (linéarité et homoscédasticité des erreurs, absence de valeurs aberrantes, etc.).\n\nInconvénients de la transformation\n\nUne variable transformée est plus difficile à interpréter puisque cela change l’unité de mesure de la variable. Prenons un exemple concret : vous souhaitez comparer les moyennes de revenu de deux groupes A et B. Vous obtenez une différence de 15 000 $, soit une valeur facile à interpréter. Par contre, si la variable a été préalablement transformée en logarithme, il est possible que vous obteniez une différence de 9, ce qui est beaucoup moins parlant. Aussi, en transformant la variable en log, vous ne comparez plus les moyennes arithmétiques des deux groupes, mais plutôt leurs moyennes géométriques (Field, Miles et Field 2012, 193).\nPourquoi perdre la forme initiale de la distribution du phénomène à expliquer? Il est possible, pour de nombreuses méthodes de choisir la distribution que nous souhaitons utiliser, il n’est donc pas nécessaire de toujours se limiter à la distribution normale. Par exemple, dans les modèles de régression généralisés (GLM), nous pourrions indiquer que la variable indépendante suit une distribution de Student plutôt que de vouloir à tout prix la rendre normale. De même, certains tests non paramétriques permettent d’analyser des variables ne suivant pas une distribution normale.\n\nDémarche à suivre avant et après la transformation\n\nLa transformation est-elle nécessaire? Ne transformez jamais une variable sans avoir analysé rigoureusement sa forme (histogramme avec courbe normale, skewness et kurtosis, tests de normalité).\nD’autres options à la transformation d’une variable dépendante (VD) sont-elles envisageables? Identifiez la forme de la distribution de la VD et utilisez au besoin un modèle GLM adapté à cette distribution. Autrement dit, ne transformez pas automatiquement votre VD simplement pour l’introduire dans une régression linéaire multiple.\nLa transformation a-t-elle un apport significatif? Premièrement, vérifiez si la transformation utilisée (logarithme, racine carrée, inverse, etc.) améliore la normalité de la variable. Ce n’est pas toujours le cas, parfois c’est pire! Prenez soin de comparer les histogrammes, les valeurs de skewness, de kurtosis et des différents tests de normalité avant et après la transformation. Deuxièmement, comparez les résultats de vos analyses statistiques sans et avec transformation, et ce, dans une démarche coût-avantage. Vos résultats sont-ils bien plus robustes? Par exemple, un R2 qui passe de 0,597 à 0,602 (avant et après la transformation des variables) avec des associations significatives similaires, mais qui sont plus difficiles à interpréter (du fait des transformations), n’est pas forcément un gain significatif. La modélisation en sciences sociales ne vise pas à prédire la trajectoire d’un satellite ou l’atterrissage d’un engin sur Mars! La précision à la quatrième décimale n’est pas une condition! Par conséquent, un modèle un peu moins robuste, mais plus facile à interpréter est parfois préférable.\n\n\n\n\n2.5.5.2 Autres types de transformations\nLes trois transformations les plus couramment utilisées sont :\n\n\nLa côte \\(z\\) (z score en anglais) qui consiste à soustraire à chaque valeur sa moyenne (soit un centrage), puis à la diviser par son écart-type (soit une réduction) (équation 2.29). Par conséquent, nous parlons aussi de variable centrée réduite qui a comme propriétés intéressantes une moyenne égale à 0 et un écart-type égal à 1 (la variance est aussi égale à 1 puisque 12 = 1). Nous verrons que cette transformation est largement utilisée dans les méthodes de classification (chapitre 13) et les méthodes factorielles (chapitre 12).\n\n\\[\nz= \\frac{x_i-\\mu}{\\sigma}\n\\tag{2.29}\\]\n\nLa transformation en rang qui consiste simplement à trier une variable en ordre croissant, puis à affecter le rang de chaque observation de 1 à \\(n\\). Cette transformation est très utilisée quand la variable est très anormalement distribuée, notamment pour calculer le coefficient de corrélation de Spearman (section 4.3.3) et certains tests non paramétriques (sections 6.1.2 et 6.2.2).\nLa transformation sur une échelle de 0 à 1 (ou de 0 à 100) qui consiste à soustraite à chaque observation la valeur minimale et à diviser le tout par l’étendue (équation 2.30).\n\n\\[\nX_{\\in\\lbrack0-1\\rbrack}= \\frac{x_i-max}{max-min} \\text{ ou } X_{\\in\\lbrack0-100\\rbrack}= \\frac{x_i-min}{max-min}\\times100\n\\tag{2.30}\\]\n\n\n\n\nTableau 2.9: Illustration des trois transformations\n\nObservation\n\\(x_i\\)\nCôte \\(z\\)\n\nRang\n0 à 1\n\n\n\n1\n22,00\n-1,45\n1\n0,00\n\n\n2\n27,00\n-0,65\n3\n0,28\n\n\n3\n25,00\n-0,97\n2\n0,17\n\n\n4\n30,00\n-0,16\n4\n0,44\n\n\n5\n37,00\n0,97\n7\n0,83\n\n\n6\n32,00\n0,16\n5\n0,56\n\n\n7\n35,00\n0,65\n6\n0,72\n\n\n8\n40,00\n1,45\n8\n1,00\n\n\nMoyenne\n31,00\n0,00\n\n\n\n\nÉcart-type\n6,19\n1,00\n\n\n\n\n\n\n\n\nPour un DataFrame, nommé df, comprenant une variable X, la syntaxe ci-dessous illustre comment obtenir quatre transformations (côte \\(z\\), rang, 0 à 1 et 0 à 100).\n\ndf2 &lt;- data.frame(X = c(22,27,25,30,37,32,35,40))\n\n# Transformation centrée réduite : côte Z\ndf2$zX &lt;- (df2$X-mean(df2$X))/sd(df2$X)\n# ou encore avec la fonction scale\ndf2$zX &lt;-  scale(df2$X, center = TRUE, scale = TRUE)\n\n# Transformation en rang avec la fonction rank\ndf2$rX &lt;- rank(df2$X)\n\n# Transformation de 0 à 1 ou de 0 à 100\ndf2$X01 &lt;- (df2$X-min(df2$X))/(max(df2$X)-min(df2$X))\ndf2$X0100 &lt;- (df2$X-min(df2$X))/(max(df2$X)-min(df2$X))*100\n\n\n?(caption)\n\n\n\n\n\n\n\n\nUtilité des transformations\n\n\nCes trois transformations sont parfois utilisées pour générer un indice composite à partir de plusieurs variables ou encore dans une analyse de sensibilité avec les indices de Sobol (1993).\n\n\n\n2.5.6 Mise en œuvre dans R\nIl existe une multitude de packages dédiés au calcul des statistiques descriptives univariées. Par parcimonie, nous en utiliserons uniquement trois : DescTools, nortest et stats. Libre à vous de faire vos recherches sur Internet pour utiliser d’autres packages au besoin. Les principales fonctions que nous utilisons ici sont :\n\n\nsummary : pour obtenir un résumé sommaire des statistiques descriptives (minimum, Q1, Q2, Q3, maximum)\n\nmean : moyenne\n\nmin : minimum\n\nmax : maximum\n\nrange : minimum et maximum\n\nquantile : quartiles\n\nquantile((x, probs = seq(.0, 1, by = .2)) : quintiles\n\nquantile((x, probs = seq(.0, 1, by = .1)) : déciles\n\nvar : variance\n\nsd : écart-type\n\nSkew du package DescTools : coefficient d’asymétrie\n\nKurt du package DescTools : coefficient d’aplatissement\n\nks.test(x, \"pnorm\", mean=mean(x), sd=sd(x)) du package nortest : test de Kolmogorov-Smirnov\n\nshapiro.test du package DescTools : test de Shapiro-Wilk\n\nlillie.test du package DescTools : du package nortest : test de Lilliefors\n\nad.test du package DescTools : test d’Anderson-Darling\n\nJarqueBeraTest du package DescTools : test de Jarque-Bera\n\n\n2.5.6.1 Application à une seule variable\nAdmettons que vous voulez obtenir des statistiques pour une seule variable présente dans un DataFrame (dataMTL$PctFRev) :\n\nlibrary(DescTools)\nlibrary(stats)\nlibrary(nortest)\n\n# Importation du fichier csv dans un DataFrame\ndataMTL &lt;- read.csv(\"data/univariee/DataSR2016.csv\")\n# Tableau sommaire pour la variable PctFRev\nsummary(dataMTL$PctFRev)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.846  11.242  15.471  16.822  20.229  68.927 \n\n# PARAMÈTRES DE TENDANCE CENTRALE\nmean(dataMTL$PctFRev)   # Moyenne\n\n[1] 16.82247\n\nmedian(dataMTL$PctFRev)   # Médiane\n\n[1] 15.471\n\n# PARAMÈTRES DE POSITION\n# Quartiles\nquantile(dataMTL$PctFRev)\n\n     0%     25%     50%     75%    100% \n 1.8460 11.2420 15.4710 20.2285 68.9270 \n\n# Quintiles\nquantile(dataMTL$PctFRev, probs = seq(.0, 1, by = .2))\n\n    0%    20%    40%    60%    80%   100% \n 1.846 10.294 13.626 16.918 21.756 68.927 \n\n# Déciles\nquantile(dataMTL$PctFRev, probs = seq(.0, 1, by = .1))\n\n    0%    10%    20%    30%    40%    50%    60%    70%    80%    90%   100% \n 1.846  8.402 10.294 12.172 13.626 15.471 16.918 18.868 21.756 26.854 68.927 \n\n# Percentiles personnalisés avec apply\nquantile(dataMTL$PctFRev, probs = c(0.01,.05,0.10,.25,.50,.75,.90,.95,.99))\n\n     1%      5%     10%     25%     50%     75%     90%     95%     99% \n 5.2290  7.1470  8.4020 11.2420 15.4710 20.2285 26.8540 31.7530 45.6010 \n\n# PARAMÈTRES DE DISPERSION\nrange(dataMTL$PctFRev)  # Min et Max\n\n[1]  1.846 68.927\n\n# Étendue\nmax(dataMTL$PctFRev)-min(dataMTL$PctFRev)\n\n[1] 67.081\n\n# Écart interquartile\nquantile(dataMTL$PctFRev)[4]-quantile(dataMTL$PctFRev)[2]\n\n   75% \n8.9865 \n\nvar(dataMTL$PctFRev) # Variance\n\n[1] 66.62482\n\nsd(dataMTL$PctFRev)  # Écart-type\n\n[1] 8.162403\n\nsd(dataMTL$PctFRev) / mean(dataMTL$PctFRev) # CV\n\n[1] 0.4852083\n\n# PARAMÈTRES DE FORME\nSkew(dataMTL$PctFRev)    # Skewness\n\n[1] 1.67367\n\nKurt(dataMTL$PctFRev)    # Kurtosis\n\n[1] 4.858815\n\n# TESTS D'HYPOTHÈSE SUR LA NORMALITÉ\n# K-Smirnov\nks.test(dataMTL$PctFRev, \"pnorm\", mean=mean(dataMTL$PctFRev), sd=sd(dataMTL$PctFRev))\n\n\n    Asymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  dataMTL$PctFRev\nD = 0.10487, p-value = 1.646e-09\nalternative hypothesis: two-sided\n\nshapiro.test(dataMTL$PctFRev) \n\n\n    Shapiro-Wilk normality test\n\ndata:  dataMTL$PctFRev\nW = 0.88748, p-value &lt; 2.2e-16\n\nlillie.test(dataMTL$PctFRev) \n\n\n    Lilliefors (Kolmogorov-Smirnov) normality test\n\ndata:  dataMTL$PctFRev\nD = 0.10487, p-value &lt; 2.2e-16\n\nad.test(dataMTL$PctFRev) \n\n\n    Anderson-Darling normality test\n\ndata:  dataMTL$PctFRev\nA = 21.072, p-value &lt; 2.2e-16\n\nJarqueBeraTest(dataMTL$PctFRev) \n\n\n    Robust Jarque Bera Test\n\ndata:  dataMTL$PctFRev\nX-squared = 2173.1, df = 2, p-value &lt; 2.2e-16\n\n\nPour construire un histogramme avec la courbe normale, consultez la section 3.2.1.3 ou la syntaxe ci-dessous.\n\nmoyenne &lt;- mean(dataMTL$PctFRev)\necart_type &lt;- sd(dataMTL$PctFRev)\n\nggplot(data = dataMTL) +\n  geom_histogram(aes(x = PctFRev, y = ..density..),\n                 bins = 30, color = \"#343a40\", fill = \"#a8dadc\") +\n    labs(x = \"personnes à faible revenu (%)\", y = \"densité\")+\n  stat_function(fun = dnorm, args = list(mean = moyenne, sd = ecart_type), \n                color = \"#e63946\", linewidth = 1.2, linetype = \"dashed\")\n\n\n\nFigure 2.35: Histogramme avec courbe normale\n\n\n\n\n2.5.6.2 Application à plusieurs variables\nPour obtenir des sorties de statistiques descriptives pour plusieurs variables, nous vous conseillons :\n\nde créer un vecteur avec les noms des variables (VarsSelect dans la syntaxe ci-dessous);\nd’utiliser ensuite les fonctions sapply et apply.\n\n\n\n# Noms des variables du DataFrame\nnames(dataMTL)\n\n [1] \"CTNAME\"                \"PopTotal\"              \"HabKm2\"               \n [4] \"PctFRev\"               \"TxChomage\"             \"PctImmigrant\"         \n [7] \"PctImgRecent\"          \"PctMenage1pers\"        \"PctFamilleMono\"       \n[10] \"PctLangueMaternelleFR\" \"PctLangueMaternelleAN\" \"PctLangueMaternelleAU\"\n\n# Vecteur pour trois variables\nVarsSelect &lt;- c(\"HabKm2\", \"TxChomage\", \"PctFRev\" )\n\n# Tableau sommaire pour les 3 variables\nsummary(dataMTL[VarsSelect])\n\n     HabKm2        TxChomage         PctFRev      \n Min.   :   18   Min.   : 1.942   Min.   : 1.846  \n 1st Qu.: 1980   1st Qu.: 5.482   1st Qu.:11.242  \n Median : 3773   Median : 7.130   Median :15.471  \n Mean   : 5513   Mean   : 7.743   Mean   :16.822  \n 3rd Qu.: 7916   3rd Qu.: 9.391   3rd Qu.:20.229  \n Max.   :50282   Max.   :26.882   Max.   :68.927  \n\n# PARAMÈTRES DE TENDANCE CENTRALE\nsapply(dataMTL[VarsSelect], mean)   # Moyenne\n\n     HabKm2   TxChomage     PctFRev \n5512.830705    7.743329   16.822470 \n\nsapply(dataMTL[VarsSelect], median) # Médiane\n\n   HabKm2 TxChomage   PctFRev \n 3773.000     7.130    15.471 \n\n# PARAMÈTRES DE POSITION\n# Quartiles\nsapply(dataMTL[VarsSelect], quantile)\n\n      HabKm2 TxChomage PctFRev\n0%      18.0    1.9420  1.8460\n25%   1980.5    5.4825 11.2420\n50%   3773.0    7.1300 15.4710\n75%   7915.5    9.3910 20.2285\n100% 50282.0   26.8820 68.9270\n\n# Quintiles\napply(dataMTL[VarsSelect], 2, function(x) quantile(x, probs = seq(.0, 1, by = .2)))\n\n     HabKm2 TxChomage PctFRev\n0%       18     1.942   1.846\n20%    1525     5.116  10.294\n40%    2953     6.422  13.626\n60%    4971     7.973  16.918\n80%    9509    10.000  21.756\n100%  50282    26.882  68.927\n\n# Déciles\napply(dataMTL[VarsSelect], 2, function(x) quantile(x, probs = seq(.0, 1, by = .1)))\n\n     HabKm2 TxChomage PctFRev\n0%       18     1.942   1.846\n10%     455     4.369   8.402\n20%    1525     5.116  10.294\n30%    2298     5.780  12.172\n40%    2953     6.422  13.626\n50%    3773     7.130  15.471\n60%    4971     7.973  16.918\n70%    6918     8.909  18.868\n80%    9509    10.000  21.756\n90%   13055    11.749  26.854\n100%  50282    26.882  68.927\n\n# Percentiles personnalisés avec apply\napply(dataMTL[VarsSelect], 2, \n      function(x) quantile(x, probs = c(0.01,.05,0.10,.25,.50,.75,.90,.95,.99)))\n\n     HabKm2 TxChomage PctFRev\n1%     58.5    2.9665  5.2290\n5%    178.0    3.8980  7.1470\n10%   455.0    4.3690  8.4020\n25%  1980.5    5.4825 11.2420\n50%  3773.0    7.1300 15.4710\n75%  7915.5    9.3910 20.2285\n90% 13055.0   11.7490 26.8540\n95% 15355.0   13.8400 31.7530\n99% 18578.5   17.1920 45.6010\n\n# PARAMÈTRES DE DISPERSION\nsapply(dataMTL[VarsSelect], range)  # Min et Max\n\n     HabKm2 TxChomage PctFRev\n[1,]     18     1.942   1.846\n[2,]  50282    26.882  68.927\n\n# Étendue\nsapply(dataMTL[VarsSelect], max) - sapply(dataMTL[VarsSelect], min)\n\n   HabKm2 TxChomage   PctFRev \n50264.000    24.940    67.081 \n\n# Écart interquartile\nsapply(dataMTL[VarsSelect], quantile)[4,] - sapply(dataMTL[VarsSelect], quantile)[2,]\n\n   HabKm2 TxChomage   PctFRev \n5935.0000    3.9085    8.9865 \n\nsapply(dataMTL[VarsSelect], var)    # Variance\n\n      HabKm2    TxChomage      PctFRev \n2.633462e+07 9.880932e+00 6.662482e+01 \n\nsapply(dataMTL[VarsSelect], sd)     # Écart-type\n\n     HabKm2   TxChomage     PctFRev \n5131.726785    3.143395    8.162403 \n\n# Coefficient de variation\nsapply(dataMTL[VarsSelect], sd) / sapply(dataMTL[VarsSelect], mean)\n\n   HabKm2 TxChomage   PctFRev \n0.9308696 0.4059488 0.4852083 \n\n# PARAMÈTRES DE FORME\nsapply(dataMTL[VarsSelect], Skew)    # Skewness\n\n   HabKm2 TxChomage   PctFRev \n 1.967468  1.280216  1.673670 \n\nsapply(dataMTL[VarsSelect], Kurt)    # Kurtosis\n\n   HabKm2 TxChomage   PctFRev \n 8.546403  2.892443  4.858815 \n\n# TESTS D'HYPOTHÈSE POUR LA NORMALITÉ\n# K-Smirnov\napply(dataMTL[VarsSelect], 2, function(x) ks.test(x, \"pnorm\", mean=mean(x), sd=sd(x)))\n\n$HabKm2\n\n    Asymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  x\nD = 0.14899, p-value &lt; 2.2e-16\nalternative hypothesis: two-sided\n\n\n$TxChomage\n\n    Asymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  x\nD = 0.080183, p-value = 9.778e-06\nalternative hypothesis: two-sided\n\n\n$PctFRev\n\n    Asymptotic one-sample Kolmogorov-Smirnov test\n\ndata:  x\nD = 0.10487, p-value = 1.646e-09\nalternative hypothesis: two-sided\n\nsapply(dataMTL[VarsSelect], shapiro.test)       # Shapiro-Wilk\n\n          HabKm2                        TxChomage                    \nstatistic 0.8385086                     0.9235146                    \np.value   5.648795e-30                  1.451222e-21                 \nmethod    \"Shapiro-Wilk normality test\" \"Shapiro-Wilk normality test\"\ndata.name \"X[[i]]\"                      \"X[[i]]\"                     \n          PctFRev                      \nstatistic 0.8874803                    \np.value   1.00278e-25                  \nmethod    \"Shapiro-Wilk normality test\"\ndata.name \"X[[i]]\"                     \n\nsapply(dataMTL[VarsSelect], lillie.test)       # Lilliefors\n\n          HabKm2                                          \nstatistic 0.148988                                        \np.value   5.689619e-58                                    \nmethod    \"Lilliefors (Kolmogorov-Smirnov) normality test\"\ndata.name \"X[[i]]\"                                        \n          TxChomage                                       \nstatistic 0.0801829                                       \np.value   7.758887e-16                                    \nmethod    \"Lilliefors (Kolmogorov-Smirnov) normality test\"\ndata.name \"X[[i]]\"                                        \n          PctFRev                                         \nstatistic 0.1048704                                       \np.value   7.43257e-28                                     \nmethod    \"Lilliefors (Kolmogorov-Smirnov) normality test\"\ndata.name \"X[[i]]\"                                        \n\nsapply(dataMTL[VarsSelect], ad.test)           # Anderson-Darling\n\n          HabKm2                            TxChomage                        \nstatistic 36.40276                          14.9237                          \np.value   3.7e-24                           3.7e-24                          \nmethod    \"Anderson-Darling normality test\" \"Anderson-Darling normality test\"\ndata.name \"X[[i]]\"                          \"X[[i]]\"                         \n          PctFRev                          \nstatistic 21.07194                         \np.value   3.7e-24                          \nmethod    \"Anderson-Darling normality test\"\ndata.name \"X[[i]]\"                         \n\nsapply(dataMTL[VarsSelect], JarqueBeraTest)    # Jarque-Bera\n\n          HabKm2                    TxChomage                \nstatistic 4270.113                  639.2741                 \nparameter 2                         2                        \np.value   0                         0                        \nmethod    \"Robust Jarque Bera Test\" \"Robust Jarque Bera Test\"\ndata.name \"X[[i]]\"                  \"X[[i]]\"                 \n          PctFRev                  \nstatistic 2173.082                 \nparameter 2                        \np.value   0                        \nmethod    \"Robust Jarque Bera Test\"\ndata.name \"X[[i]]\"                 \n\n\n\n2.5.6.3 Transformation d’une variable dans R\nLa syntaxe ci-dessous illustre trois exemples de transformation (logarithme, racine carrée et inverse de la variable). Rappelez-vous qu’il faut comparer les valeurs de skewness et de kurtosis et des tests de Shapiro-Wilk avant et après les transformations pour identifier celle qui est la plus efficace.\n\nlibrary(ggpubr)\n\n# Importation du fichier csv dans un DataFrame\ndataMTL &lt;- read.csv(\"data/univariee/DataSR2016.csv\")\n\n# Noms des variables du DataFrame\nnames(dataMTL)\n\n [1] \"CTNAME\"                \"PopTotal\"              \"HabKm2\"               \n [4] \"PctFRev\"               \"TxChomage\"             \"PctImmigrant\"         \n [7] \"PctImgRecent\"          \"PctMenage1pers\"        \"PctFamilleMono\"       \n[10] \"PctLangueMaternelleFR\" \"PctLangueMaternelleAN\" \"PctLangueMaternelleAU\"\n\n# Transformations\ndataMTL$HabKm2_log &lt;-  log10(dataMTL$HabKm2)\ndataMTL$HabKm2_sqrt &lt;-  sqrt(dataMTL$HabKm2)\ndataMTL$HabKm2_inv &lt;-  1/dataMTL$HabKm2\n\n# Vecteur pour la variable et les trois transformations\nVarsSelect &lt;- c(\"HabKm2\", \"HabKm2_log\", \"HabKm2_sqrt\", \"HabKm2_inv\")\n\n# Paramètres de forme\nsapply(dataMTL[VarsSelect], Skew)    # Skewness\n\n     HabKm2  HabKm2_log HabKm2_sqrt  HabKm2_inv \n  1.9674683  -1.2071326   0.4179037   8.2536901 \n\nsapply(dataMTL[VarsSelect], Kurt)    # Kurtosis\n\n     HabKm2  HabKm2_log HabKm2_sqrt  HabKm2_inv \n 8.54640302  1.55670769  0.04563433 82.85604898 \n\n# TESTS D'HYPOTHÈSE SUR LA NORMALITÉ\nsapply(dataMTL[VarsSelect], shapiro.test) \n\n          HabKm2                        HabKm2_log                   \nstatistic 0.8385086                     0.9113234                    \np.value   5.648795e-30                  4.11156e-23                  \nmethod    \"Shapiro-Wilk normality test\" \"Shapiro-Wilk normality test\"\ndata.name \"X[[i]]\"                      \"X[[i]]\"                     \n          HabKm2_sqrt                   HabKm2_inv                   \nstatistic 0.9771699                     0.2530266                    \np.value   4.638049e-11                  8.324983e-52                 \nmethod    \"Shapiro-Wilk normality test\" \"Shapiro-Wilk normality test\"\ndata.name \"X[[i]]\"                      \"X[[i]]\"                     \n\n# Histogrammes avec courbe normale\nGraph1 &lt;- ggplot(data = dataMTL) +\n          geom_histogram(aes(x = HabKm2, y = ..density..),\n                 bins = 30, color = \"#343a40\", fill = \"#a8dadc\") +\n          labs(x = expression(\"Habitants au km\"^2), \n               y = \"densité\")+\n          stat_function(fun = dnorm, \n                        args = list(mean = mean(dataMTL$HabKm2), \n                                    sd = sd(dataMTL$HabKm2)), \n                        color = \"#e63946\", linewidth = 1.2)\n\nGraph2 &lt;- ggplot(data = dataMTL) +\n          geom_histogram(aes(x = HabKm2_log, y = ..density..),\n                         bins = 30, color = \"#343a40\", fill = \"#a8dadc\") +\n          labs(x = expression(\"Logarithme d'habitants au km\"^2),\n               y = \"densité\")+\n          stat_function(fun = dnorm, \n                        args = list(mean = mean(dataMTL$HabKm2_log), \n                                    sd = sd(dataMTL$HabKm2_log)), \n                        color = \"#e63946\", linewidth = 1.2)\n\nGraph3 &lt;- ggplot(data = dataMTL) +\n          geom_histogram(aes(x = HabKm2_sqrt, y = ..density..),\n                         bins = 30, color = \"#343a40\", fill = \"#a8dadc\") +\n          labs(x = expression(\"Racine carrée d'habitants au km\"^2),\n               y = \"densité\")+\n          stat_function(fun = dnorm, \n                        args = list(mean = mean(dataMTL$HabKm2_sqrt), \n                                    sd = sd(dataMTL$HabKm2_sqrt)), \n                        color = \"#e63946\", linewidth = 1.2)\n\nGraph4 &lt;- ggplot(data = dataMTL) +\n          geom_histogram(aes(x = HabKm2_inv, y = ..density..),\n                         bins = 30, color = \"#343a40\", fill = \"#a8dadc\") +\n          labs(x = expression(\"Inverse d'habitants au km\"^2),\n               y = \"densité\")+\n          stat_function(fun = dnorm, \n                        args = list(mean = mean(dataMTL$HabKm2_inv), \n                                    sd = sd(dataMTL$HabKm2_inv)), \n                        color = \"#e63946\", linewidth = 1.2)\n\nggarrange(plotlist = list(Graph1, Graph2, Graph3, Graph4), ncol = 2, nrow = 2)\n\n\n\nFigure 2.36: Histogramme des transformations\n\n\n\nLa variable HabKm2 est asymétrique positive et leptokurtique. Les valeurs des statistiques de forme et du test de Shapiro-Wilk ainsi que les histogrammes semblent démontrer que la transformation la plus efficace est la racine carrée. Si la variable originale est asymétrique positive, sa transformation logarithmique est par contre asymétrique négative. Cela démontre que la transformation logarithmique n’est pas toujours la panacée."
  },
  {
    "objectID": "02-univarie.html#sec-026",
    "href": "02-univarie.html#sec-026",
    "title": "2  Statistiques descriptives univariées",
    "section": "\n2.6 Statistiques descriptives sur des variables qualitatives et semi-qualitatives",
    "text": "2.6 Statistiques descriptives sur des variables qualitatives et semi-qualitatives\n\n2.6.1 Fréquences\nEn guise de rappel, les variables nominales, ordinales et semi-quantitatives comprennent plusieurs modalités pour lesquelles plusieurs types de fréquences sont généralement calculées. Pour illustrer le tout, nous avons extrait du recensement de 2016 de Statistique Canada les effectifs des modalités de la variable sur le principal mode de transport utilisé pour les déplacements domicile-travail, et ce, pour la subdivision de recensement (MRC) de l’île de Montréal (tableau 2.10). Les différents types de fréquences sont les suivantes :\n\nLes fréquences absolues simples (FAS) ou fréquences observées représentent le nombre d’observations pour chacune des modalités. Par exemple, sur 857 540 personnes réalisant des trajets domicile-travail (ligne totale), seulement 30 645 optent pour le vélo, alors que 427 530 conduisent un véhicule motorisé (automobile, camion ou fourgonnette) comme principal mode de transport.\nLes fréquences relatives simples (FRS) sont les proportions de chaque modalité sur le total (\\(\\mbox{30 645}/\\mbox{857 540}=\\mbox{0,036}\\)); leur somme est égale à 1. Elles peuvent bien entendu être exprimées en pourcentage (\\(\\mbox{30 645}/\\mbox{857 540} \\times \\mbox{100}=\\mbox{3,57}\\)); leur somme est alors égale à 100 %. Par exemple, 3,7 % de ces personnes utilisent le vélo comme mode de transport principal.\nLes fréquences absolues cumulées (FAC) représentent la fréquence observée (FAS) de la modalité à laquelle sont additionnées celles qui la précèdent. La valeur de la FAC pour la dernière est donc égale au total.\nÀ partir des fréquences absolues cumulées (FAC), il est alors possible de calculer les fréquences relatives cumulées (FRC) en proportion (\\(\\mbox{453 930}/\\mbox{857 540} = \\mbox{0,529}\\)) et en pourcentage (\\(\\mbox{453 930} / \\mbox{857 540} \\times \\mbox{100}= \\mbox{52,93}\\)). Par exemple, plus de la moitié des personnes utilisent l’automobile comme mode de transport principal (passagère ou conductrice).\n\n\n\n\n\nTableau 2.10: Différents types de fréquences sur une variable qualitative ou semi-qualitative\n\n\n\n\n\n\n\n\n\n\nMode de transport\nFAS\nFRS\nFRS (%)\nFAC\nFRC\nFRC (%)\n\n\n\nVéhicule motorisé (conducteur(trice))\n427 530\n0,499\n49,86\n427 530\n0,499\n49,86\n\n\nVéhicule motorisé (passager(ère))\n26 400\n0,031\n3,08\n453 930\n0,529\n52,93\n\n\nTransport en commun\n295 860\n0,345\n34,50\n749 790\n0,874\n87,43\n\n\nÀ pied\n69 410\n0,081\n8,09\n819 200\n0,955\n95,53\n\n\nBicyclette\n30 645\n0,036\n3,57\n849 845\n0,991\n99,10\n\n\nAutre moyen\n7 695\n0,009\n0,90\n857 540\n1,000\n100,00\n\n\nTotal\n857 540\n1,000\n100,00\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLes fréquences cumulées : peu pertinentes pour les variables nominales\n\n\nLe calcul et l’analyse des fréquences cumulées (absolues et relatives) sont très souvent inutiles pour les variables nominales.\nPar exemple, au tableau 2.10, la fréquence cumulée relative (en %) est de 87,43 % pour la troisième ligne. Cela signifie que 87,43 % des navetteur(ve)s se déplacent en véhicule motorisé (personne conductrice ou passagère) ou en transport en commun. Par contre, si la troisième modalité avait été à pied, le pourcentage aurait été de 61,02 (\\(\\mbox{52,93}+\\mbox{8,09}\\)). Si vous souhaitez calculer les fréquences cumulées sur une variable nominale, assurez-vous que l’ordre des modalités vous convient et de le modifier au besoin. Sinon, abstenez-vous de les calculer!\nLes fréquences cumulées : très utiles pour l’analyse des variables ordinales ou semi-quantitatives\nPour des modalités hiérarchisées (variable ordinale ou semi-quantitative), l’analyse des fréquences cumulées (absolues et relatives) est par contre très intéressante. Par exemple, au tableau 2.11, elle permet de constater rapidement que sur l’île de Montréal, plus du quart de la population à moins de 25 ans (27,91 %) et 83,33 %, moins de 65 ans.\n\n\n\n\n\n\nTableau 2.11: Différents types de fréquences sur une variable semi-qualitative\n\nGroupes d’âge\nFAS\nFRS\nFRS (%)\nFAC\nFRC\nFRC (%)\n\n\n\n0 à 14 ans\n304 470\n0,157\n15,68\n304 470\n0,157\n15,68\n\n\n15 à 24 ans\n237 555\n0,122\n12,23\n542 025\n0,279\n27,91\n\n\n25 à 44 ans\n582 150\n0,300\n29,98\n1 124 175\n0,579\n57,89\n\n\n45 à 64 ans\n494 205\n0,254\n25,45\n1 618 380\n0,833\n83,33\n\n\n65 à 84 ans\n271 560\n0,140\n13,98\n1 889 940\n0,973\n97,32\n\n\n85 ans et plus\n52 100\n0,027\n2,68\n1 942 040\n1,000\n100,00\n\n\nTotal\n1 942 040\n1,000\n100,00\n\n\n\n\n\n\n\n\n\nDifférents graphiques peuvent être construits pour illustrer la répartition des observations : les graphiques en barres (verticales et horizontales) avec les fréquences absolues et les diagrammes circulaires ou en anneau pour les fréquences relatives (figure 2.37). Ces graphiques seront présentés plus en détail dans le chapitre suivant.\n\n\n\n\nFigure 2.37: Différents graphiques pour représenter les fréquences absolues et relatives\n\n\n\n\n2.6.2 Mise en œuvre dans R\nLa syntaxe ci-dessous permet de calculer les différentes fréquences présentées au tableau 2.11. Notez que pour les fréquences cumulées, nous utilisons la fonction cumsum.\n\n# Vecteur pour les noms des modalités\nModalite &lt;- c(\"0 à 14 ans\",\n             \"15 à 24 ans\",\n             \"25 à 44 ans\",\n             \"45 à 64 ans\",\n             \"65 à 84 ans\",\n             \"85 ans et plus\")\n# Vecteur pour les fréquences absolues simples (FAS)\nNavetteurs &lt;- c(304470,237555,582150,494205,271560,52100)\n# Somme des FAS\nsumFAS &lt;-  sum(Navetteurs)\n# Construction du DataFrame avec les deux vecteurs\ndf &lt;- data.frame(\n  GroupeAge = Modalite, \n  FAS = Navetteurs,\n  FRS = Navetteurs / sumFAS, \n  FRSpct = Navetteurs / sumFAS * 100,\n  FAC = cumsum(Navetteurs),\n  FRC = cumsum(Navetteurs) / sumFAS,\n  FRCpct = cumsum(Navetteurs) / sumFAS * 100\n  )\ndf\n\n       GroupeAge    FAS        FRS    FRSpct     FAC       FRC    FRCpct\n1     0 à 14 ans 304470 0.15677844 15.677844  304470 0.1567784  15.67784\n2    15 à 24 ans 237555 0.12232240 12.232240  542025 0.2791008  27.91008\n3    25 à 44 ans 582150 0.29976211 29.976211 1124175 0.5788629  57.88629\n4    45 à 64 ans 494205 0.25447725 25.447725 1618380 0.8333402  83.33402\n5    65 à 84 ans 271560 0.13983234 13.983234 1889940 0.9731725  97.31725\n6 85 ans et plus  52100 0.02682746  2.682746 1942040 1.0000000 100.00000"
  },
  {
    "objectID": "02-univarie.html#sec-027",
    "href": "02-univarie.html#sec-027",
    "title": "2  Statistiques descriptives univariées",
    "section": "\n2.7 Statistiques descriptives pondérées : pour aller plus loin",
    "text": "2.7 Statistiques descriptives pondérées : pour aller plus loin\nDans la section 2.5, les différentes statistiques descriptives sur des variables quantitatives – paramètres de tendance centrale, de position, de dispersion et de forme – ont été largement abordées. Il est possible de calculer ces différentes statistiques en tenant compte d’une pondération. La statistique descriptive pondérée la plus connue est certainement la moyenne arithmétique pondérée. Son calcul est très simple. Pour chaque observation, deux valeurs sont disponibles :\n\n\n\\(x_i\\), soit la valeur de la variable \\(X\\) pour l’observation \\(i\\)\n\n\n\\(w_i\\), soit la valeur de la pondération pour \\(i\\).\n\nPrenez soin de comparer les deux équations ci-dessous (à gauche, la moyenne arithmétique; à droite, la moyenne arithmétique pondérée). Vous constaterez rapidement qu’il suffit de multiplier chaque observation par sa pondération (numérateur) et de diviser ce produit par la somme des pondérations (dénominateur; et non par \\(n\\), soit le nombre d’observations comme pour la moyenne arithmétique non pondérée).\n\\[  \n\\bar{x}=\\frac{\\sum_{i=1}^n x_i}{n} \\text { versus } \\bar{m}=\\frac{\\sum_{i=1}^n  w_ix_i}{\\sum_{i=1}^nw_i}\n\\tag{2.31}\\]\n\n\n\n\nTableau 2.12: Calcul de la moyenne pondérée\n\nObservation\n\\(x_i\\)\n\\(w_i\\)\n\\(x_i \\times w_i\\)\n\n\n\n1\n200\n20\n4 000\n\n\n2\n225\n80\n18 000\n\n\n3\n275\n50\n13 750\n\n\n4\n300\n200\n60 000\n\n\nSomme\n1 000\n350\n95 750\n\n\nMoyenne\n250\n\n\n\n\nMoyenne pondérée\n\n\n274\n\n\n\n\n\n\n\n\n\n\n\nCalcul d’autres statistiques descriptives pondérées\n\n\nNous ne reportons pas ici les formules des versions pondérées de toutes les statistiques descriptives. Retenez toutefois le principe suivant permettant de les calculer à partir de l’exemple du tableau 2.12. Pour la variable X, dupliquons respectivement 20, 80, 50, 200 fois les observations 1 à 4. Si nous calculons la moyenne arithmétique sur ces valeurs dupliquées, alors cette valeur est identique à celle de la moyenne arithmétique pondérée. Le même principe reposant sur la duplication des valeurs s’applique à l’ensemble des statistiques descriptives.\n\n\nDans un article récent, Alvarenga et al. (2018) évaluent l’accessibilité aux aires de jeux dans les parcs de la Communauté métropolitaine de Montréal (CMM). Pour les 881 secteurs de recensement de la CMM, ils ont calculé la distance à pied à l’aire de jeux la plus proche à travers le réseau de rues. Ce résultat, cartographié à la figure 2.38), permet d’avancer le constat suivant : « la quasi-totalité des secteurs de recensement de l’agglomération de Montréal présente des distances de l’aire de jeux la plus proche inférieures à 500 m, alors que les secteurs situés à plus d’un kilomètre d’une aire de jeux sont très majoritairement localisés dans les couronnes nord et sud de la CMM » (De Alvarenga, Apparicio et Séguin 2018, 238).\nPour chaque secteur de recensement, Alvarenga et al. (2018) disposent des données suivantes :\n\n\n\\(x_i\\), soit la distance à l’aire de jeux la plus proche pour le secteur de recensement i;\n\n\\(w_i\\), la pondération, soit le nombre d’enfants de moins de dix ans.\n\nIl est alors possible de calculer les statistiques descriptives de la proximité à l’aire de jeux la plus proche en tenant compte du nombre d’enfants résidant dans chaque secteur de recensement (tableau 2.13). Cet exercice permet de conclure que : « […] globalement, les enfants ont une bonne accessibilité aux aires de jeux sur le territoire de la CMM. […] Les enfants sont en moyenne à un peu plus de 500 m de l’aire de jeux la plus proche (moyenne = 559; médiane = 512). Toutefois, les valeurs percentiles extrêmes signalent que respectivement 10 % et 5 % des enfants résident à près de 800 m et à plus de 1000 m de l’aire de jeux la plus proche » (2018, 236).\n\n\nFigure 2.38: Accessibilité aux aires de jeux par secteur de recensement, Communauté métropolitaine de Montréal, 2016\n\n\n\n\n\nTableau 2.13: Statistiques de l’aire de jeux la plus proche, par secteur de recensement, pondérées par la population de moins de 10 ans\n\n\nN\nMoyenne\nP5\nP10\nQ1\nMédiane\nQ3\nP90\nP95\n\n\nParc\n881\n559\n282\n327\n408\n512\n640\n799\n1 006\n\n\n\n\n\nDe nombreux packages sont disponibles pour calculer des statistiques pondérées, dont notamment Weighted.Desc.Stat et Hmisc utilisés dans la syntaxe ci-dessous.\n\nlibrary(foreign)\nlibrary(Hmisc)\nlibrary(Weighted.Desc.Stat)\n\ndf &lt;- read.dbf(\"data/bivariee/SR_AireJeux_PopMoins10.dbf\")\n\nhead(df, n = 5)\n\n    SRNOM PopMoins10 AireJeux\n1 0659.06        380 600.1921\n2 0410.02        390 324.4396\n3 0863.01        325 524.3323\n4 0734.05        875 574.6682\n5 0073.00        100 352.9505\n\n# xi (variable) et wi (pondération)\nx &lt;- df$AireJeux\nw &lt;- df$PopMoins10\n\n# Calcul des paramètres de position\n# Moyenne\nHmisc::wtd.mean(x, w)\n\n[1] 559.8026\n\nWeighted.Desc.Stat::w.mean(x, w)\n\n[1] 559.8026\n\n# Quartiles et percentile\nHmisc::wtd.quantile(x, weights=w, probs=c(.05, .10, .25, .50, .75, .90, .95))\n\n       5%       10%       25%       50%       75%       90%       95% \n 281.3623  327.3056  406.0759  511.5880  639.4813  798.6559 1011.5493 \n\n# Paramètres de dispersion avec le package Weighted.Desc.Stat\n# Variance, écart-type et coefficient de variation\nw.var(x, w)\n\n[1] 82818.18\n\nw.sd(x, w)\n\n[1] 287.7815\n\nw.cv(x, w)\n\n[1] 0.5140767\n\n# Paramètres de forme avec le package Weighted.Desc.Stat\n# Skewness et kurtosis \nw.skewness(x, w)\n\n[1] 4.735351\n\nw.kurtosis(x, w)\n\n[1] 41.17146"
  },
  {
    "objectID": "02-univarie.html#sec-028",
    "href": "02-univarie.html#sec-028",
    "title": "2  Statistiques descriptives univariées",
    "section": "\n2.8 Quiz de révision du chapitre",
    "text": "2.8 Quiz de révision du chapitre\n\n\n\n\n\nLe mode de transport (auto, vélo, marche, transport en commun) est :\n\n\nRelisez au besoin la section 2.1.2.\n\n\n\n\n\n\nune variable ordinale\n\n\n\n\n\n\n\nune variable continue\n\n\n\n\n\n\n\nune variable discrète\n\n\n\n\n\n\n\nune variable nominale\n\n\n\n\n\n\n\n\n\n\nLaquelle de ces deux options est la bonne?\n\n\nRelisez au besoin le début de la section 1.2.\n\n\n\n\n\n\nVariables qualitatives (nominales ou ordinales); variables quantitatives (continues et discrètes)\n\n\n\n\n\n\n\nVariables qualitatives (nominales ou discrètes); variables quantitatives (ordinales et discrètes)\n\n\n\n\n\n\n\n\n\n\nDes données collectées sur le terrain avec un GPS sont des données primaires spatiales.\n\n\nRelisez au besoin la section 2.2.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\n\nL’erreur écologique consiste à :\n\n\nRelisez au besoin la section 2.2.4.\n\n\n\n\n\n\nattribuer des résultats à partir de données individuelles à des territoires\n\n\n\n\n\n\n\nattribuer des constats obtenus à partir de données agrégées pour un territoire aux individus\n\n\n\n\n\n\n\n\n\n\nLaquelle de ces deux options est la bonne?\n\n\nRelisez au besoin la section 2.4.\n\n\n\n\n\n\nFonctions de masse pour les distributions discrètes, fonctions de densité pour les distributions continues\n\n\n\n\n\n\n\nFonctions de masse pour les distributions continues, fonctions de densité pour les distributions discrètes\n\n\n\n\n\n\n\n\n\n\nQuels sont les trois paramètres de tendance centrale?\n\n\nRelisez au besoin la section 2.5.1.\n\n\n\n\n\n\nMoyenne\n\n\n\n\n\n\n\nMédiane\n\n\n\n\n\n\n\nVariance\n\n\n\n\n\n\n\nIntervalle interquartile\n\n\n\n\n\n\n\nMode\n\n\n\n\n\n\n\n\n\n\nQuels sont les paramètres de position?\n\n\nRelisez au besoin la section 2.5.2.\n\n\n\n\n\n\nQuartiles\n\n\n\n\n\n\n\nDéciles\n\n\n\n\n\n\n\nVariance\n\n\n\n\n\n\n\nCentiles\n\n\n\n\n\n\n\n\n\n\nQuels sont les paramètres de dispersion?\n\n\nRelisez au besoin la section 2.5.3.\n\n\n\n\n\n\nÉtendue\n\n\n\n\n\n\n\nIntervalle interquartile\n\n\n\n\n\n\n\nVariance\n\n\n\n\n\n\n\nÉcart-type\n\n\n\n\n\n\n\n\n\n\nComment vérifie-t-on qu’une variable est normalement distribuée?\n\n\nRelisez au besoin la section 2.5.4.\n\n\n\n\n\n\nCoefficients d’asymétrie et d’aplatissement (skewness et kurtosis)\n\n\n\n\n\n\n\nGraphiques : histogramme avec courbe normale et diagramme quantile-quantile\n\n\n\n\n\n\n\nTests de normalité (comme celui de Shapiro-Wilk)\n\n\n\n\n\n\n\nExamen des valeurs minimale et maximale\n\n\n\n\n\n\n\n\n\n\nLe centrage et la réduction d’une variable consistent à :\n\n\nRelisez au besoin la section 2.5.5.2.\n\n\n\n\n\n\nsoustraire à chaque valeur sa moyenne (soit un centrage), puis à la diviser par son écart-type.\n\n\n\n\n\n\n\nsimplement à trier une variable en ordre croissant, puis à affecter le rang de chaque observation de 1 à n\n\n\n\n\n\n\n\nsoustraite à chaque observation la valeur minimale et à diviser le tout par l’étendue.\n\n\n\n\n\n\n\n\n\nVérifier votre résultat\n\n\n\n\n\n\n\n\n\nApparicio, Philippe et Jérémy Gelb. 2020. « Cyclists′ exposure to road traffic noise: A comparison of three North American and European cities. » Acoustics 2 (1): 73‑86. https://doi.org/10.3390/acoustics2010006.\n\n\nAudrin, Thomas, Philippe Apparicio et Anne-Marie Séguin. 2021. « La localisation des écoles primaires et le bruit aérien dans la région métropolitaine de Toronto: un diagnostic d’équité environnementale et une analyse des impacts sur la réussite scolaire. » Canadian Journal of Regional Science/Revue canadienne des sciences régionales 44 (1): 22‑34. https://idjs.ca/images/rcsr/archives/V44N1_5-AUDRIN-APPARICIO-SEGUIN.pdf.\n\n\nDe Alvarenga, Bernardo, Philippe Apparicio et Anne-Marie Séguin. 2018. « L’accessibilité aux aires de jeux dans les parcs de la Communauté métropolitaine de Montréal. » Cahiers de géographie du Québec 62 (176): 229‑246. https://doi.org/10.7202/1063104ar.\n\n\nField, Andy P, Jeremy Miles et Zoë Field. 2012. « Discovering statistics using R. » Thousand Oaks.\n\n\nGilles, Alain et Pierre Maranda. 1994. Éléments de méthodologie et d’analyse statistique pour les sciences sociales. McGraw-Hill.\n\n\nJoanes, DN et CA Gill. 1998. « Comparing measures of sample skewness and kurtosis. » Journal of the Royal Statistical Society: Series D (The Statistician) 47 (1): 183‑189. https://www.jstor.org/stable/2988433.\n\n\nLebart, Ludovic, Alain Morineau et Marie Piron. 1995. Statistique exploratoire multidimensionnelle. Dunod.\n\n\nPumain, Denise et Michèle Béguin. 1994. La représentation des données géographiques: statistique et cartographie. Armand Colin.\n\n\nRazali, Nornadiah Mohd et Yap Bee Wah. 2011. « Power comparisons of Shapiro-Wilk, Kolmogorov-Smirnov, Lilliefors and Anderson-Darling tests. » Journal of statistical modeling and analytics 2 (1): 21‑33.\n\n\nReed, William J. 2002. « On the rank-Size distribution for human settlements. » Journal of Regional Science 42 (1): 1‑17. https://onlinelibrary.wiley.com/doi/abs/10.1111/1467-9787.00247.\n\n\nReed, William J. et Murray Jorgensen. 2004. « The souble Pareto-Lognormal sistribution: A new parametric model for size distributions. » Communications in Statistics - Theory and Methods 33 (8). Taylor & Francis: 1733‑1753. https://doi.org/10.1081/STA-120037438.\n\n\nSean, Owen. 2018. « Common probability distributions. » https://medium.com/@srowen/common-probability-distributions-347e6b945ce4.\n\n\nSobol, IM. 1993. « Sensitivity estimates for nonlinear mathematical models. » Mathematics and Computers in Simulation 1 (4): 407‑414.\n\n\nTabachnick, Barbara G, Linda S Fidell et Jodie B Ullman. 2007. Using multivariate statistics. Pearson.\n\n\nYap, Bee Wah et Chiaw Hock Sim. 2011. « Comparisons of various types of normality tests. » Journal of Statistical Computation and Simulation 81 (12): 2141‑2155. https://doi.org/10.1080/00949655.2010.520163."
  },
  {
    "objectID": "03-magiedesgraphiques.html#sec-031",
    "href": "03-magiedesgraphiques.html#sec-031",
    "title": "3  Magie des graphiques",
    "section": "\n3.1 Philosophie du ggplot2",
    "text": "3.1 Philosophie du ggplot2\nLe package ggplot2 fait partie du tidyverse et dispose d’une logique de fonctionnement particulière. Cette dernière se nomme The Grammar of Graphics (les deux G sont d’ailleurs à l’origine du nom ggplot2), proposée par Hadley Wickham (le créateur du tidyverse!) dans un article intitulé A layered grammar of graphics (Wickham 2010). Nous proposons de synthétiser ici les concepts et principes centraux qui sous-tendent la production de graphiques avec ggplot2.\n\n3.1.1 Grammaire\nHadley Wickham propose une grammaire pour unifier la création de graphiques. L’idée est donc de dépasser les simples dénominations comme un nuage de points, un diagramme en boîte, un graphique en ligne, etc., pour comprendre ce qui relie tous ces graphiques. Ces éléments communs et centraux sont les géométries, les échelles et systèmes de coordonnées, et les annotations (figure 3.1) :\n\n\nFigure 3.1: Trois composantes d’un graphique, adapté de Wickham (2010)\n\n\nLes géométries sont les formes utilisées pour représenter les données. Il peut s’agir de points, de lignes, de cercles, de rectangles, d’arcs de cercle, etc.\nLes échelles et systèmes de coordonnées permettent de contrôler la localisation des éléments dans un graphique en convertissant les données depuis leur échelle originale (dollars, kilomètres, pourcentages, etc.) vers l’échelle du graphique (pixels).\nLes annotations recoupent l’ensemble des informations complémentaires ajoutées au graphique comme son titre et sous-titre, la source des données, la mention sur les droits d’auteurs, etc.\n\nEn plus de ces trois éléments, il est bien sûr nécessaire de disposer de données. Ces dernières sont assignées à des dimensions du graphique pour être représentées (notamment les axes X et Y et la couleur). Cette étape est appelée aesthetics mapping dans ggplot2.\nLorsque nous combinons des données, leur assignation a des dimensions, un type de géométries, des échelles et un système de coordonnées, nous obtenons un calque (layer en anglais). Un graphique peut comprendre plusieurs calques comme nous le verrons dans les prochaines sections.\nPrenons un premier exemple très simple et construisons un nuage de points à partir du jeu de données iris fourni de base dans R. Nous représentons la relation qui existe entre la longueur et la largeur des sépales de ces fleurs. Pour commencer, nous devons charger le package ggplot2 et instancier un graphique avec la fonction ggplot.\n\nlibrary(ggplot2)\ndata(iris)\nnames(iris)\n\n[1] \"Sepal.Length\" \"Sepal.Width\"  \"Petal.Length\" \"Petal.Width\"  \"Species\"     \n\nggplot()\n\n\n\nFigure 3.2: Base d’un graphique\n\n\n\nPour le moment, le graphique est vide (figure 3.2). La seconde étape consiste à lui ajouter des données (au travers du paramètre data) et à définir les dimensions à associer aux données (avec le paramètre mapping et la fonction aes()). Dans notre cas, nous voulons utiliser les coordonnées X pour représenter la largeur des sépales, et les coordonnées Y pour représenter la longueur des sépales. Enfin, nous souhaitons représenter les observations par des points, nous utiliserons donc la géométrie geom_point.\n\nggplot(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris) +\n  geom_point()\n\n\n\nFigure 3.3: Ajout des dimensions au graphique\n\n\n\nCe graphique ne comprend qu’un seul calque avec une géométrie de type point (figure 3.3). Chaque calque est ajouté avec l’opérateur + qui permet de superposer des calques, le dernier apparaissant au-dessus des autres. Les arguments mapping et data sont définis ici dans la fonction ggplot et sont donc appliqués à tous les calques qui composent le graphique. Il est aussi possible de définir mapping et data au sein des fonctions des géométries :\n\nggplot() +\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris)\n\n\n\nFigure 3.4: Autre spécification des arguments mapping et data\n\n\n\nLa troisième étape consiste à ajouter au graphique des annotations. Pour notre cas, il faudrait ajouter un titre, un sous-titre et des intitulés plus clairs pour les axes X et Y, ce qu’il est possible de faire avec la fonction labs (figure 3.5).\n\nggplot() +\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris) +\n  labs(title = \"Morphologie des sépales des iris\", subtitle = \"n = 150\",\n       x = \"Longueur des sépales\", \n       y = \"Largeur des sépales\")\n\n\n\nFigure 3.5: Ajout de titres\n\n\n\n\n3.1.2 Types de géométries\nLe package ggplot2 permet d’utiliser un très grand nombre de géométries différentes. Dans le tableau 3.1, nous avons reporté les principales géométries disponibles afin que vous puissiez vous faire une idée du « bestiaire » existant. Il ne s’agit que d’un extrait des principales fonctions. Sachez qu’il existe aussi des packages proposant des géométries supplémentaires pour compléter ggplot2.\n\n\n\n\nTableau 3.1: Principales géométries proposées par ggplot2\n\n\nGéométrie\nFonction\n\n\n\nPoint\ngeom_point\n\n\nLigne\ngeom_line\n\n\nChemin\ngeom_path\n\n\nBoîte à moustaches\ngeom_boxplot\n\n\nDiagramme violon\ngeom_violin\n\n\nHistogramme\ngeom_histogram\n\n\nBarre\ngeom_bar\n\n\nDensité\ngeom_density\n\n\nTexte\ngeom_label\n\n\nBarre d’erreur\ngeom_errorbar\n\n\nSurface\ngeom_ribbon\n\n\n\n\n\n\n\n3.1.3 Habillage\nDans le premier exemple, nous avons montré comment ajouter le titre, le sous-titre et les titres des axes sur un graphique. Il est aussi possible d’ajouter du texte sous le graphique (généralement la source des données avec l’argument caption) et des annotations textuelles (annotate). Pour ces dernières, il convient de spécifier leur localisation (coordonnées x et y) et le texte à intégrer (label); elles sont ensuite ajoutées au graphique avec l’opérateur +. Ajoutons deux annotations pour identifier deux fleurs spécifiques.\n\nggplot() +\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris) +\n  labs(title = \"Morphologie des sépales des iris\", subtitle = \"n = 150\",\n       x = \"Longueur des sépales\", \n       y = \"Largeur des sépales\",\n       caption = \"Source : jeu de données iris\") +\n  annotate(\"text\", x = 6.7, y = 2.5, # position de la note\n           label = \"une virginica\",  # texte de la note\n           hjust = \"left\", vjust = \"top\", # ajustement\n           size = 3, fontface = \"italic\") + \n  annotate(\"text\", x = 5.7, y = 4.4, # position de la note\n           label = \"une setosa\",  # texte de la note\n           hjust = \"left\", vjust = \"top\", # ajustement\n           size = 3, fontface = \"italic\") \n\n\n\nFigure 3.6: Ajout d’annotations textuelles\n\n\n\nComme vous pouvez le constater, de nombreux paramètres permettent de contrôler le style des annotations. Pour avoir la liste des arguments disponibles, n’hésitez pas à afficher l’aide de la fonction : help(annotate).\nEn plus des annotations de type texte, il est possible d’ajouter des annotations de type géométrique. Nous pourrions ainsi délimiter une boîte encadrant les fleurs de l’espère setosa.\n\nsetosas &lt;- subset(iris, iris$Species == \"setosa\")\nsepal.length_extent &lt;- c(min(setosas$Sepal.Length), max(setosas$Sepal.Length))\nsepal.width_extent &lt;- c(min(setosas$Sepal.Width), max(setosas$Sepal.Width))\n\nggplot() +\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris) +\n  labs(title = \"Morphologie des sépales des iris\", subtitle = \"n = 150\",\n       x = \"Longueur des sépales\", \n       y = \"Largeur des sépales\",\n       caption = \"Source : jeu de données iris\") +\n  annotate(\"text\", x = 6.7, y = 2.5, # position de la note\n           label = \"une virginica\",  # texte de la note\n           hjust = \"left\", vjust = \"top\", # ajustement\n           size = 3, fontface = \"italic\") + \n  annotate(\"text\", x = 5.7, y = 4.4, # position de la note\n           label = \"une setosa\",  # texte de la note\n           hjust = \"left\", vjust = \"top\", # ajustement\n           size = 3, fontface = \"italic\") +\n  annotate(\"rect\", \n           ymin = sepal.width_extent[[1]],\n           ymax = sepal.width_extent[[2]],\n           xmin = sepal.length_extent[[1]],\n           xmax = sepal.length_extent[[2]],\n           fill = rgb(0.7,0.7,0.7,.5), # remplissage transparent à 50%\n           color = \"black\") # contour de couleur verte\n\n\n\nFigure 3.7: Ajout d’annotations géométriques\n\n\n\nComme le dernier calque ajouté au graphique est le rectangle, vous noterez qu’il recouvre tous les calques existant, y compris les précédentes annotations. Pour corriger cela, il suffit de changer l’ordre des calques.\n\nggplot() +\n  annotate(\"rect\", \n           ymin = sepal.width_extent[[1]],\n           ymax = sepal.width_extent[[2]],\n           xmin = sepal.length_extent[[1]],\n           xmax = sepal.length_extent[[2]],\n           fill = rgb(0.7,0.7,0.7,.5), # remplissage transparent à 50%\n           color = \"green\") + # contour de couleur verte\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris) +\n  labs(title = \"Morphologie des sépales des iris\", subtitle = \"n = 150\",\n       x = \"Longueur des sépales\", \n       y = \"Largeur des sépales\",\n       caption = \"Source : jeu de données iris\") +\n\n  annotate(\"text\", x = 6.7, y = 2.5, # position de la note\n           label = \"une virginica\",  # texte de la note\n           hjust = \"left\", vjust = \"top\", # ajustement\n           size = 3, fontface = \"italic\") + \n  annotate(\"text\", x = 5.7, y = 4.4, # position de la note\n           label = \"une setosa\",  # texte de la note\n           hjust = \"left\", vjust = \"top\", # ajustement\n           size = 3, fontface = \"italic\")\n\n\n\nFigure 3.8: Gestion de l’ordre des annotations\n\n\n\n\n3.1.4 Utilisation des thèmes\nDe nombreux autres éléments peuvent être modifiés dans un graphique comme les paramètres des polices, l’arrière-plan, la grille de repères, etc. Il peut être fastidieux de paramétrer tous ces éléments. Une option intéressante est d’utiliser des thèmes déjà préconstruits. Le package ggplot2 propose une dizaine de thèmes : constatons leur impact sur le graphique précédent.\n\nLe thème classique (theme_classic) (figure 3.9)\n\n\nggplot() +\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris) +\n  labs(title = \"Morphologie des sépales des iris\", subtitle = \"n = 150\",\n       x = \"Longueur des sépales\", \n       y = \"Largeur des sépales\",\n       caption = \"Source : jeu de données iris\") + \n  theme_classic()\n\n\n\nFigure 3.9: Thème classique\n\n\n\n\nLe thème gris (theme_gray) (figure 3.10)\n\n\nggplot() +\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris) +\n  labs(title = \"Morphologie des sépales des iris\", subtitle = \"n = 150\",\n       x = \"Longueur des sépales\", \n       y = \"Largeur des sépales\",\n       caption = \"Source : jeu de données iris\") + \n  theme_gray()\n\n\n\nFigure 3.10: Thème gris\n\n\n\n\nLe thème noir et blanc (theme_bw) (figure 3.11)\n\n\nggplot() +\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris) +\n  labs(title = \"Morphologie des sépales des iris\", subtitle = \"n = 150\",\n       x = \"Longueur des sépales\", \n       y = \"Largeur des sépales\",\n       caption = \"Source : jeu de données iris\") + \n  theme_bw()\n\n\n\nFigure 3.11: Thème noir et blanc\n\n\n\n\nLe thème minimal (theme_minimal) (figure 3.12)\n\n\nggplot() +\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris) +\n  labs(title = \"Morphologie des sépales des iris\", subtitle = \"n = 150\",\n       x = \"Longueur des sépales\", \n       y = \"Largeur des sépales\",\n       caption = \"Source : jeu de données iris\") + \n  theme_minimal()\n\n\n\nFigure 3.12: Thème minimal\n\n\n\nIl est aussi possible d’utiliser le package ggthemes qui apporte des thèmes complémentaires intéressants dont :\n\nLe thème tufte (theme_tufte, à l’ancienne…) (figure 3.13)\n\n\nlibrary(ggthemes)\nggplot() +\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris) +\n  labs(title = \"Morphologie des sépales des iris\", subtitle = \"n = 150\",\n       x = \"Longueur des sépales\", \n       y = \"Largeur des sépales\",\n       caption = \"Source : jeu de données iris\") + \n  theme_tufte()\n\n\n\nFigure 3.13: Thème tufte\n\n\n\n\nLe thème economist (theme_economist, inspiré de la revue du même nom) (figure 3.14)\n\n\nggplot() +\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris) +\n  labs(title = \"Morphologie des sépales des iris\", subtitle = \"n = 150\",\n       x = \"Longueur des sépales\", \n       y = \"Largeur des sépales\",\n       caption = \"Source : jeu de données iris\") + \n  theme_economist()\n\n\n\nFigure 3.14: Thème economist\n\n\n\n\nLe thème solarized (theme_solarized, plus original) (figure 3.15)\n\n\nggplot() +\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris) +\n  labs(title = \"Morphologie des sépales des iris\", subtitle = \"n = 150\",\n       x = \"Longueur des sépales\", \n       y = \"Largeur des sépales\",\n       caption = \"Source : jeu de données iris\") + \n  theme_solarized()\n\n\n\nFigure 3.15: Thème solarized\n\n\n\nIl en existe bien d’autres et vous pouvez composer vos propres thèmes. N’hésitez pas à explorer la documentation de ggplot2 et de ggthemes pour en apprendre plus!\n\n3.1.5 Composition d’une figure avec plusieurs graphiques\nIl est très fréquent de vouloir combiner plusieurs graphiques dans une même figure. Deux cas se distinguent :\n\nLes données pour les différents graphiques proviennent du même DataFrame et peuvent être distinguées selon une variable catégorielle. L’objectif est alors de dupliquer le même graphique, mais pour des sous-groupes de données. Dans ce cas, nous recommandons d’utiliser la fonction facet_wrap de ggplot2.\nLes graphiques sont complètement indépendants. Dans ce cas, nous recommandons d’utiliser la fonction ggarrange du package ggpubr.\n\n\n3.1.5.1 ggplot2 et ses facettes\nNous pourrions souhaiter réaliser une figure composite avec le jeu de données iris et séparer notre nuage de points en trois graphiques distincts selon l’espèce des iris (figure 3.16). Pour cela, il faut au préalable convertir la variable espèce en facteur.\n\niris$Species_fac &lt;- as.factor(iris$Species)\n\nggplot() +\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris) +\n  labs(title = \"Morphologie des sépales des iris\", subtitle = \"n = 150\",\n       x = \"Longueur des sépales\", \n       y = \"Largeur des sépales\",\n       caption = \"Source : jeu de données iris\") +\n  facet_wrap(vars(Species_fac), ncol = 2)\n\n\n\nFigure 3.16: Graphique à facettes\n\n\n\nNotez que le nom de la variable (ici Species_fac) doit être spécifié au sein d’une sous-fonction vars : vars(Species_fac). Nous aurions aussi pu réaliser le graphique sur une seule ligne en spécifiant ncol = 3 (figure 3.17).\n\nggplot() +\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris) +\n  labs(title = \"Morphologie des sépales des iris\", subtitle = \"n = 150\",\n       x = \"Longueur des sépales\", \n       y = \"Largeur des sépales\",\n       caption = \"Source : jeu de données iris\") +\n  facet_wrap(vars(Species_fac), ncol = 3)\n\n\n\nFigure 3.17: Graphique à facettes en une ligne\n\n\n\n\n3.1.5.2 Arrangement des graphiques\nLa solution avec les facettes est très pratique, mais également très limitée puisqu’elle ne permet pas de créer une figure avec des graphiques combinant plusieurs types de géométries. ggarrange du package ggpubr permet tout simplement de combiner des graphiques déjà existant. Créons deux nuages de points comparant plusieurs variables en fonction de l’espèce des iris, puis combinons-les (figure 3.18). Attribuons également aux points une couleur en fonction de l’espèce des fleurs, afin de mieux les distinguer en associant la variable Species au paramètre color.\n\nlibrary(ggpubr)\n\nplot1 &lt;- ggplot(data = iris) +\n  geom_point(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +\n  labs(subtitle = \"Caractéristiques des sépales\",\n       x = \"Longueur\", \n       y = \"Largeur\",\n       color = \"Espèce\")\n\nplot2 &lt;- ggplot(data = iris) +\n  geom_point(aes(x = Petal.Length, y = Petal.Width, color = Species)) +\n  labs(subtitle = \"Caractéristiques des pétales\",\n       x = \"Longueur\", \n       y = \"Largeur\",\n       color = \"Espèce\")\n\nliste_plots &lt;- list(plot1, plot2)\ncomp_plot &lt;- ggarrange(plotlist = liste_plots, ncol = 2, nrow = 1,\n          common.legend = TRUE, legend = \"bottom\") #gérer la légende\n\nannotate_figure(comp_plot,\n                top = text_grob(\"Morphologie des sépales et pétales des iris\",\n                                face = \"bold\", size = 12, just = \"center\"),\n                bottom = text_grob(\"Source : jeu de données iris\",\n                                face = \"italic\", size = 8, just = \"left\")\n                )\n\n\n\nFigure 3.18: Figure avec plusieurs graphiques avec ggarrange\n\n\n\nQuatre étapes sont nécessaires :\n\nCréer les graphiques et les enregistrer dans des objets (ici plot1 et plot2).\nEncapsuler ces objets dans une liste (ici liste_plots).\nComposer la figure finale avec la fonction ggarrange.\nAjouter les annotations à la figure composite.\n\nL’argument common.legend permet d’indiquer à la fonction ggarrange de regrouper les légendes des deux graphiques. Dans notre cas, les deux graphiques ont les mêmes légendes, il est donc judicieux de les regrouper. L’argument legend contrôle la position de la légende et peut prendre les valeurs : top, bottom, left, right ou none (absence de légende). La fonction annotate_figure permet d’ajouter des éléments de texte au-dessus, au-dessous et sur les cotés de la figure composite.\n\n3.1.6 Couleur\nDans un graphique, la couleur peut être utilisée à la fois pour représenter une variable quantitative (dégradé de couleur ou mise en classes), ou une variable qualitative (couleur par catégorie). Dans ggplot2, il est possible d’attribuer une couleur au contour des géométries avec l’argument color et au remplissage avec l’argument fill. Il est possible de spécifier une couleur de trois façons dans R :\n\nEn utilisant le nom de la couleur dans une chaîne de caractère : \"chartreuse4\". R dispose de 657 noms de couleurs prédéfinis. Pour tous les afficher, utilisez la fonction colors(), qui permet de les visualiser (figure 3.19).\n\n\n\nFigure 3.19: Couleurs de base\n\n\nEn indiquant le code hexadécimal de la couleur. Il s’agit d’une suite de six lettres et de chiffres précédée par un dièse : \"#99ff33\".\nEn utilisant une notation RGB (rouge, vert, bleu, transparence). Cette notation doit contenir quatre nombres entre 0 et 1 (0 % et 100 %), indiquant respectivement la quantité de rouge, de vert, de bleu et la transparence. Ces quatre nombres sont donnés comme argument à la fonction rgb : rgb(0.6, 1, 0.2, 0).\n\nLe choix des couleurs est un problème plus complexe que la manière de les spécifier. Il existe d’ailleurs tout un pan de la sémiologie graphique dédié à la question du choix et de l’association des couleurs. Une première ressource intéressante est ColorBrewer. Il s’agit d’une sélection de palettes de couleurs particulièrement efficaces et dont certaines sont même adaptées pour les personnes daltoniennes (figure 3.20). Il est possible d’accéder directement aux palettes dans R grâce au package RColorBrewer et la fonction brewer.pal :\n\nlibrary(RColorBrewer)\ndisplay.brewer.all()\n\n\n\nFigure 3.20: Palette de couleurs de ColorBrewer\n\n\n\nUne autre ressource pertinente est le site web coolors.co qui propose de nombreuses palettes à portée de clic."
  },
  {
    "objectID": "03-magiedesgraphiques.html#sec-032",
    "href": "03-magiedesgraphiques.html#sec-032",
    "title": "3  Magie des graphiques",
    "section": "\n3.2 Principaux graphiques",
    "text": "3.2 Principaux graphiques\n\n\n\n\n\nConstruire des graphiques avec ggplot2\n\n\nPuisque vous avez désormais une certaine connaissance des bases de la grammaire des graphiques implémentées par ggplot2, vous apprendrez dans les sous-sections suivantes à construire les principaux graphiques que vous utiliserez régulièrement ou que vous présenterez dans un article scientifique.\n\n\n\n3.2.1 Histogramme\nL’histogramme permet de décrire graphiquement la forme de la distribution d’une variable. Pour le réaliser, nous utilisons la fonction geom_histogram. Le paramètre le plus important est le nombre de barres (bins) qui composent l’histogramme. Plus ce nombre est grand, plus l’histogramme est précis et, à l’inverse, plus il est petit, plus l’histogramme est simplifié. En revanche, il faut éviter d’utiliser un nombre de barres trop élevé comparativement au nombre d’observations disponibles dans le jeu de données, sinon l’histogramme risque d’avoir plein de trous.\n\n3.2.1.1 Histogramme simple\nGénérons quatre variables ayant respectivement une distribution gaussienne, Student, Gamma et bêta, puis réalisons un histogramme pour chacune de ces variables et combinons-les avec la fonction ggarrange (figure 3.21).\n\ndistribs &lt;- data.frame(\n  gaussien = rnorm(1000, mean = 5, sd = 1.5),\n  gamma = rgamma(1000, shape = 2, rate = 12),\n  beta = rbeta(1000, shape1 = 5, shape2 = 1, ncp = 2),\n  student = rt(1000, ncp = 20, df = 5)\n)\n\nplot1 &lt;- ggplot(data = distribs) +\n  geom_histogram(aes(x = gaussien), bins = 50, color = \"#343a40\", fill = \"#e63946\")+\n  labs(y = \"fréquences\")+ylim(c(0,130))\n\nplot2 &lt;- ggplot(data = distribs) +\n  geom_histogram(aes(x = gamma), bins = 50, color = \"#343a40\", fill = \"#f1faee\")+\n  labs(y = \"fréquences\")+ylim(c(0,130))\n\nplot3 &lt;- ggplot(data = distribs) +\n  geom_histogram(aes(x = beta), bins = 50, color = \"#343a40\", fill = \"#a8dadc\")+\n  labs(y = \"fréquences\")+ylim(c(0,130))\n\nplot4 &lt;- ggplot(data = distribs) +\n  geom_histogram(aes(x = student), bins = 50, color = \"#343a40\", fill = \"#1d3557\")+\n  labs(y = \"fréquences\")+ylim(c(0,130))\n\nhistogrammes &lt;- list(plot1, plot2, plot3, plot4)\n\nggarrange(plotlist = histogrammes, ncol = 2, nrow = 2)\n\n\n\nFigure 3.21: Histogrammes\n\n\n\nNotez que cette syntaxe est très lourde. Dans le cas présent, il serait plus judicieux d’utiliser la fonction facet_wrap. Pour cela, nous devons au préalable empiler nos données, ce qui signifie changer la forme du DataFrame actuel, qui comprend quatre colonnes (gaussien, Gamma, bêta et student) et 1000 observations, pour qu’il n’ait plus que deux colonnes (la valeur originale et le nom de l’ancienne colonne) et 4000 observations. La figure 3.22 décrit graphiquement ce processus qui peut être effectué avec la fonction melt du package reshape2.\n\n\nFigure 3.22: Empiler les données d’un DataFrame\n\n\nlibrary(reshape2)\n\n# Faire fondre le jeu de données\nmelted_distribs &lt;- melt(distribs, measure.vars = c(\"gaussien\", \"gamma\",\n                                                   \"beta\" , \"student\"))\n# Renommer les colonnes du nouveau DataFrame\nnames(melted_distribs) &lt;- c(\"distribution\", \"valeur\")\n# Convertir la variable catégorielle en facteur\nmelted_distribs$distribution &lt;- as.factor(melted_distribs$distribution)\n\nggplot(data = melted_distribs)+\n  geom_histogram(aes(x = valeur, fill = distribution), bins = 50, color = \"#343a40\") +\n  ylim(c(0,130)) + \n  labs(x = \"valeur\", \n       y = \"fréquences\")+\n  scale_fill_manual(values = c(\"#e63946\" , \"#f1faee\" , \"#a8dadc\" , \"#1d3557\"))+\n  facet_wrap(vars(distribution), ncol = 2, scales = \"free\")+\n  theme(legend.position = \"none\")\n\n\n\nFigure 3.23: Histogrammes à facettes\n\n\n\n\n3.2.1.2 Histogramme de densité\nLes histogrammes que nous venons de construire utilisent la fréquence des observations pour délimiter la hauteur des barres. Il est possible de changer ce comportement pour plutôt utiliser la densité. L’intérêt est notamment de se rapprocher encore de la définition d’une distribution puisqu’avec cette configuration, la somme totale de la surface de l’histogramme est égale à 1. La hauteur de chaque barre représente alors la probabilité d’obtenir l’étendue de valeurs représentées par cette barre. Prenons pour exemple la variable avec la distribution normale que nous venons de voir.\n\nplot1 &lt;- ggplot(data = distribs) +\n  geom_histogram(aes(x = gaussien, y = after_stat(density)),\n                 bins = 30, color = \"#343a40\", fill = \"#1d3557\")+\n      labs(x = \"gaussien\", y = \"densité\")\n\nplot2 &lt;- ggplot(data = distribs) +\n  geom_histogram(aes(x = gaussien, y = ..count..),\n                 bins = 30, color = \"#343a40\", fill = \"#a8dadc\")+\n        labs(x = \"gaussien\", y = \"fréquences\")\n\nggarrange(plotlist = list(plot1, plot2), ncol = 2)\n\nWarning: The dot-dot notation (`..count..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(count)` instead.\n\n\n\n\nFigure 3.24: Histogrammes de densité\n\n\n\nLe graphique de droite (fréquence) nous indique donc que plus de 60 observations ont une valeur d’environ 5 (entre 4,76 et 5,34, compte tenu de la largeur de la barre), ce qui se traduit par une probabilité de presque 30 % d’obtenir cette valeur en tirant une observation au hasard dans le jeu de données.\n\n3.2.1.3 Histogramme avec courbe de distribution\nLes histogrammes sont souvent utilisés pour vérifier graphiquement si une distribution empirique s’approche d’une courbe normale. Pour cela, nous ajoutons sur l’histogramme de la variable empirique la forme qu’aurait une distribution normale parfaite en utilisant la moyenne et l’écart type de la distribution empirique. Pour créer cette figure dans ggplot2, il suffit d’utiliser la fonction stat_function pour créer un nouveau calque. Il est aussi possible d’ajouter une ligne verticale (geom_vline) pour indiquer la moyenne de la distribution.\n\nmoyenne &lt;- mean(distribs$gaussien)\necart_type &lt;- sd(distribs$gaussien)\n\nggplot(data = distribs) +\n  geom_histogram(aes(x = gaussien, y = after_stat(density)),\n                 bins = 30, color = \"#343a40\", fill = \"#a8dadc\") +\n    labs(x = \"gaussien\", \n       y = \"densité\")+\n  stat_function(fun = dnorm, args = list(mean = moyenne, sd = ecart_type), \n                color = \"#e63946\", linewidth = 1.2, linetype = \"dashed\") +\n  geom_vline(xintercept = moyenne, color = \"red\", linetype = 1)+\n  annotate(\"text\", x = round(moyenne,2)+0.5, y = 0.31, hjust = 'left',\n           label = paste('moyenne : ', round(moyenne,2), sep=''))\n\n\n\nFigure 3.25: Histogramme et courbe normale\n\n\n\nDans notre cas, nous savons que notre variable est normalement distribuée (car produite avec la fonction rnorm), et nous pouvons constater la grande proximité entre l’histogramme et la courbe normale.\n\n3.2.1.4 Histogramme avec coloration des valeurs extrêmes\nIl peut être nécessaire d’attirer le regard sur certaines parties de l’histogramme, comme sur des valeurs extrêmes. Si nous reprenons notre distribution de Student, nous pouvons clairement distinguer un ensemble de valeurs fortes à droite de la distribution. Nous pourrions, dans notre cas, considérer que des valeurs au-delà de 50 constituent des cas extrêmes que nous souhaitons représenter dans une autre couleur. Pour cela, nous devons créer une variable catégorielle nous permettant de distinguer ces cas particuliers.\n\ndistribs$cas_extreme &lt;- ifelse(distribs$student &gt;=50, \"extrême\", \"normale\")\n\nggplot(data = distribs) +\n  geom_histogram(aes(x = student, y = ..count.., fill = cas_extreme),\n                 bins = 30, color = \"#343a40\")+\n  scale_fill_manual(\"\", values = c(\"#a8dadc\" , \"#e63946\"))+\n  labs(title = \"Distribution de Student\", x = \"valeur\", y = \"fréquence\")\n\n\n\nFigure 3.26: Histogramme coloré\n\n\n\n\n3.2.2 Graphique de densité\nL’histogramme est utilisé pour approximer graphiquement la distribution d’une variable. Sa principale limite est de représenter la variable de façon discontinue. Une option intéressante est d’utiliser une version lissée de l’histogramme, soit le graphique de densité. Cette opération de lissage est réalisée le plus souvent à partir de fonctions kernel. Reconstruisons notre figure avec les quatre distributions, mais en utilisant cette fois-ci des graphiques de densité.\n\nggplot(data = melted_distribs)+\n  geom_density(aes(x = valeur, fill = distribution), color = \"#343a40\") +\n  scale_fill_manual(values = c(\"#e63946\" , \"#f1faee\" , \"#a8dadc\" , \"#1d3557\"))+\n  facet_wrap(vars(distribution), ncol = 2, scales = \"free\")+\n  theme(legend.position = \"none\")\n\n\n\nFigure 3.27: Graphiques de densité à facette\n\n\n\nLes graphiques de densité sont souvent utilisés pour comparer la distribution d’une variable pour plusieurs sous-groupes d’une population. Si nous reprenons le jeu de données iris, nous pouvons comparer les longueurs de sépales en fonction des espèces. Nous constatons ainsi que les setosas ont une nette tendance à avoir des sépales plus courts et qu’à l’inverse, les virginicas ont les sépales généralement les plus longs.\n\nggplot(data = iris)+\n  geom_density(aes(x = Sepal.Length, fill = Species), \n               color = \"#343a40\", alpha = 0.4)+\n  labs(x = \"Longueur de sépales\",\n       y = \"\",\n       fill = \"Espèce\")\n\n\n\nFigure 3.28: Graphiques de densité superposés\n\n\n\n\n3.2.3 Nuage de points\nUn nuage de points est un outil très intéressant pour visualiser la relation existante entre deux variables. Prenons un exemple concret et analysons le volume de CO2 produit annuellement par habitant en comparaison avec le niveau d’urbanisation dans l’ensemble des pays à travers le monde. Nous avons extrait ces données sur le site web de la Banque mondiale, puis nous les avons structurés dans un fichier csv.\n\ndata_co2 &lt;- read.csv(\"data/graphique/world_urb_co2.csv\", encoding = \"UTF-8\")\nnames(data_co2)\n\n[1] \"country_code\" \"year\"         \"Population\"   \"Urbanisation\" \"CO2_kt\"      \n[6] \"Country.Name\" \"CO2t_hab\"     \"region7\"      \"region23\"    \n\n\n\n3.2.3.1 Nuage de points simple\nCommençons par un nuage de points simple avec l’ensemble des données.\n\nggplot(data = data_co2)+\n  geom_point(aes(x = Urbanisation, y = CO2t_hab))+\n  labs(x = \"Niveau d'urbanisation (%)\",\n       y = \"Tonnes de CO2 par année et par habitant\",\n       title = \"Relation entre urbanisation et production de CO2 par habitant\")\n\n\n\n\n\nFigure 3.29: Nuage de points simple\n\n\n\nÀ la première lecture de ce graphique, nous observons immédiatement un ensemble de points étranges dont le volume de CO2 par habitant annuel est au-dessus de 150 tonnes et dont le niveau d’urbanisation est proche de 50 %. Isolons ces données pour observer de quoi il s’agit.\n\ncas_etrange &lt;- subset(data_co2, data_co2$CO2t_hab &gt;= 150)\nprint(cas_etrange$Country.Name)\n\n [1] \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\"\n[10] \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\"\n[19] \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\" \"Aruba\"\n\n\nIl s’agit d’une petite île néerlandaise des Caraïbes nommée Aruba disposant d’une faible population, mais avec des activités très polluantes (raffinerie et extraction d’or). Nous faisons ici le choix de retirer ces observations puisqu’elles sont assez peu représentatives de la tendance mondiale. Cette démarche si simple relève ainsi de l’analyse exploratoire des données! Sans ce graphique, nous n’aurions probablement jamais identifié ces cas problématiques.\n\ndata_co2 &lt;- subset(data_co2, data_co2$CO2t_hab &lt;= 150)\n\nReconstruisons le nuage de points maintenant que ces données aberrantes ont été retirées.\n\ngraphique &lt;-  ggplot(data = data_co2)+\n  geom_point(aes(x = Urbanisation, y = CO2t_hab))+\n  labs(x = \"Niveau d'urbanisation (%)\",\n       y = \"Tonnes de CO2 par année et par habitant\",\n       title = \"Relation entre urbanisation et production de CO2 par habitant\")\n\nVoilà qui est mieux! Cependant, le grand nombre de points restant rend la lecture du graphique assez difficile puisqu’ils se superposent. Une première option à envisager, dans ce cas, est à la fois d’ajouter de la transparence aux points et de réduire leur taille :\n\nggplot(data = data_co2)+\n  geom_point(aes(x = Urbanisation, y = CO2t_hab), alpha = 0.2, size = 0.5)+\n  labs(x = \"Niveau d'urbanisation (%)\",\n       y = \"Tonnes de CO2 par année et par habitant\",\n       title = \"Relation entre urbanisation et production de CO2 par habitant\")\n\n\n\nFigure 3.30: Nuage de points simple avec transparence\n\n\n\n\n3.2.3.2 Nuage de points avec densité\nBien que la transparence nous aide un peu à distinguer les secteurs du graphique avec le plus de points, il serait plus efficace d’abandonner la géométrie des points pour la remplacer par une géométrie de densité en deux dimensions. Une première approche consiste à diviser l’espace du graphique en petits carrés et à compter le nombre de points tombant dans chaque carré (en somme, un histogramme en deux dimensions).\n\nggplot(data = data_co2)+\n  geom_bin2d(aes(x = Urbanisation, y = CO2t_hab), bins = 50) +\n  scale_fill_continuous(type = \"viridis\") +\n  labs(x = \"Niveau d'urbanisation (%)\",\n       y = \"Tonnes de CO2 par année et par habitant\",\n       fill = \"Effectif\",\n       title = \"Relation entre urbanisation et production de CO2 par habitant\")\n\n\n\nFigure 3.31: Nuage de points simple\n\n\n\nNous observons ainsi une forte concentration dans le bas du graphique; les pays avec des rejets annuels de CO2 supérieurs à 15 tonnes par habitant sont relativement rares. Pour les personnes préférant les représentations plus élaborées, il est aussi possible de diviser l’espace du graphique avec des hexagones en utilisant le package hexbin.\n\nggplot(data = data_co2)+\n  geom_hex(aes(x = Urbanisation, y = CO2t_hab), bins = 50) +\n  scale_fill_continuous(type = \"viridis\") +\n  labs(x = \"Niveau d'urbanisation (%)\",\n       y = \"Tonnes de CO2 par année et par habitant\",\n       fill = \"Effectif\",\n       title = \"Relation entre urbanisation et production de CO2 par habitant\")\n\n\n\nFigure 3.32: Densité en deux dimensions par hexagones\n\n\n\nEnfin, il est aussi possible de réaliser une version lissée de ces graphiques avec une fonction kernel en deux dimensions (stat_density_2d) :\n\nggplot(data = data_co2)+\n  stat_density_2d(aes(x = Urbanisation, y = CO2t_hab, fill = ..density..), \n                  geom = \"raster\", n = 50, contour = FALSE) +\n  scale_fill_continuous(type = \"viridis\") +\n  labs(x = \"Niveau d'urbanisation (%)\",\n       y = \"Tonnes de CO2 par année et par habitant\",\n       fill = \"densité\",\n       title = \"Relation entre urbanisation et production de CO2 par habitant\")+\n  ylim(0,25)\n\n\n\nFigure 3.33: Densité lissée en deux dimensions\n\n\n\n\n3.2.3.3 Nuage de points et droite de régression\nAfin de faire ressortir une éventuelle relation entre les variables représentées sur les deux axes, il est possible d’afficher la droite de régression sur le graphique entre X et Y. Cette opération s’effectue avec la fonction geom_smooth.\n\nggplot(data = data_co2)+\n  geom_point(aes(x = Urbanisation, y = CO2t_hab), alpha = 0.2, size = 0.5)+\n  geom_smooth(aes(x = Urbanisation, y = CO2t_hab), method = lm, color = \"red\")+\n  labs(x = \"Niveau d'urbanisation (%)\",\n       y = \"Tonnes de CO2 par année et par habitant\",\n       title = \"Relation entre urbanisation et production de CO2 par habitant\")\n\n\n\nFigure 3.34: Nuage de points avec droite de régression\n\n\n\nNotez que l’argument method = lm permet d’indiquer que nous souhaitons utiliser une régression linéaire (linear model) pour tracer la géométrie (une droite de régression). La droite semble bien indiquer une relation positive entre les deux variables : une augmentation de l’urbanisation serait associée à une augmentation de la production annuelle de CO2 par habitant. Nous pourrions également vérifier si une relation non linéaire serait plus adaptée au jeu de données. Dans notre cas, une relation quadratique pourrait produire un meilleur ajustement.\n\nggplot(data = data_co2)+\n  geom_point(aes(x = Urbanisation, y = CO2t_hab), alpha = 0.2, size = 0.7)+\n  geom_smooth(aes(x = Urbanisation, y = CO2t_hab), method = lm, \n              color = \"red\", formula = y ~ I(x**2))+\n  labs(x = \"Niveau d'urbanisation (%)\",\n       y = \"Tonnes de CO2 par année et par habitant\",\n       title = \"Relation entre urbanisation et production de CO2 par habitant\")\n\n\n\nFigure 3.35: Nuage de points avec droite de régression quadratique\n\n\n\nLa régression quadratique (avec x au carré) nous indique ainsi que l’impact du niveau d’urbanisation est plus important à mesure que ce niveau augmente. Vous pouvez également constater que la courbe ne prédit pas de valeurs négatives comparativement à la droite précédente. Il est également possible d’ajuster une courbe sans choisir au préalable sa forme (dans le cas précédent \\(x^2\\)) en utilisant une méthode d’ajustement local appelée loess.\n\nggplot(data = data_co2)+\n  geom_point(aes(x = Urbanisation, y = CO2t_hab), alpha = 0.2, size = 0.5)+\n  geom_smooth(aes(x = Urbanisation, y = CO2t_hab), method = loess, \n              color = \"red\")+\n  labs(x = \"Niveau d'urbanisation (%)\",\n       y = \"Tonnes de CO2 par année et par habitant\",\n       title = \"Relation entre urbanisation et production de CO2 par habitant\")\n\n\n\nFigure 3.36: Nuage de points avec droite de régression non linéaire\n\n\n\nLa relation non linéaire révèle davantage d’informations : l’augmentation de l’urbanisation est associée à une augmentation de l’émission de CO2 par habitant uniquement jusqu’à 75 % d’urbanisation; au-delà de ce seuil, la relation ne tient plus. Ces résultats semblent cohérents avec l’évolution classique de l’économie d’un pays passant progressivement d’une économie agricole, à une économie industrialisée et finalement une économie de services.\n\n3.2.4 Graphique en ligne\nUn graphique en ligne permet de représenter l’évolution d’une variable, généralement dans le temps. Dans le jeu de données précédent, nous disposons des émissions de CO2 par habitant de nombreux pays sur plusieurs années. Nous pouvons ainsi représenter l’évolution des émissions pour chaque pays avec un graphique en ligne. Pour éviter de le surcharger, cet exercice est réalisé uniquement sur les pays de l’Europe de l’Ouest.\n\n# conversion de la variable year textuelle en variable numérique\ndata_co2$an &lt;- as.numeric(data_co2$year)\n# extraction des données d'Europe de l'Ouest\ndata_europe &lt;- subset(data_co2, data_co2$region23 == \"Europe de l'Ouest\")\n# choix des valeurs pour l'axe des x\nx_ticks &lt;- seq(1960,2020,10)\n\nggplot(data = data_europe)+\n  geom_path(aes(x = an, y = CO2t_hab, color = Country.Name))+\n  labs(x = \"Années\",\n       y = \"Tonnes de CO2 par année et par habitant\",\n       color = \"Pays\",\n       title = \"Évolution de la production de CO2 par habitant\") +\n  scale_x_continuous(breaks = x_ticks, labels = x_ticks)+\n  theme_tufte()\n\n\n\nFigure 3.37: Graphique en ligne\n\n\n\nNous remarquons notamment qu’aucune donnée, avant 2005, n’est disponible pour le Liechtenstein.\n\n3.2.4.1 Barre d’erreur et en bande\nSur un graphique, il est souvent pertinent de représenter l’incertitude que nous avons sur nos données. Cela peut être fait à l’aide de barres d’erreur ou à l’aide de polygones délimitant les marges d’incertitude. En guise d’exemple, admettons que les données précédentes sont fiables à plus ou moins 10 %. En d’autres termes, la valeur d’émission de CO2 annuelle serait relativement incertaine et pourrait se situer dans un intervalle de 10 % autour de la valeur fournie par la Banque mondiale. Nous obtenons ainsi une borne inférieure (valeur donnée - 10 %) et une borne supérieure (valeur donnée + 10 %). Nous pouvons facilement calculer ces bornes et les faire apparaître dans notre graphique précédent.\n\ndata_europe$borne_basse &lt;- data_europe$CO2t_hab - 0.1 * data_europe$CO2t_hab\ndata_europe$borne_haute &lt;- data_europe$CO2t_hab + 0.1 * data_europe$CO2t_hab\n\nggplot(data = data_europe)+\n  geom_point(aes(x = an, y = CO2t_hab, color = Country.Name), size = 0.7)+\n  geom_errorbar(aes(x = an, ymin = borne_basse, ymax = borne_haute, color = Country.Name))+\n  labs(x = \"Années\",\n       y = \"Tonnes de CO2 par année et par habitant\",\n       color = \"Pays\",\n       title = \"Évolution de la production de CO2 par habitant\") +\n  scale_x_continuous(breaks = x_ticks, labels = x_ticks)+\n  theme_tufte()\n\n\n\nFigure 3.38: Graphique en ligne avec barres d’erreur\n\n\n\nCes barres d’erreurs indiquent notamment qu’il n’y a finalement aucun écart significatif entre la Belgique, les Pays-Bas et l’Allemagne à partir des années 1990. Une autre option de représentation est d’utiliser des polygones avec la fonction geom_ribbon.\n\nggplot(data = data_europe)+\n  geom_path(aes(x = an, y = CO2t_hab, color = Country.Name), size = 0.7)+\n  geom_ribbon(aes(x = an, ymin = borne_basse, ymax = borne_haute,\n                  fill = Country.Name), alpha = 0.4)+\n  labs(x = \"Années\",\n       y = \"Tonnes de CO2 par année et par habitant\",\n       color = \"Pays\",\n       title = \"Évolution de la production de CO2 par habitant\") +\n  scale_x_continuous(breaks = x_ticks, labels = x_ticks)+\n  theme_tufte()+\n  guides(fill = FALSE,  scale = \"none\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\nWarning: The `&lt;scale&gt;` argument of `guides()` cannot be `FALSE`. Use \"none\" instead as\nof ggplot2 3.3.4.\n\n\n\n\nFigure 3.39: Graphique en ligne avec marge d’erreur\n\n\n\nLe message du graphique est le même. Notez que nous avons utilisé ici la fonction guides pour retirer de la légende les couleurs associées au remplissage des marges d’erreur. Ces couleurs sont les mêmes que celles des lignes et il n’est pas utile de dédoubler la légende. De nombreuses méthodes statistiques produisent des résultats accompagnés d’une mesure de l’incertitude associée à ces résultats. Représenter cette incertitude est crucial pour que le lecteur puisse délimiter la portée des conclusions de vos analyses.\n\n3.2.5 Boîte à moustaches\nLes boîtes à moustaches (box plot en anglais) sont des graphiques permettant de comparer les moyennes et les intervalles interquartiles d’une variable continue selon plusieurs groupes d’une population. Si nous reprenons notre exemple précédent, nous pourrions comparer, en fonction de la région du monde, la moyenne de production annuelle de CO2 par habitant. Pour cela, il suffit d’utiliser la fonction geom_boxplot.\n\n# Retirer les observations n'étant pas associées à une région\ndata_co2_comp &lt;- subset(data_co2, is.na(data_co2$region7) == FALSE)\n\nggplot(data = data_co2_comp)+\n  geom_boxplot(aes(y = region7, x = CO2t_hab))+\n  labs(x = \"Tonnes de CO2 par an et habitant\", y = \"Région\")\n\n\n\nFigure 3.40: Boîtes à moustaches\n\n\n\nLa barre centrale d’une boîte représente la moyenne. Les extrémités de la boîte représentent le premier et le troisième quartile. Plus une boîte est allongée, plus les situations sont diversifiées pour les observations appartenant au groupe représenté par la boîte. Au contraire, une boîte étroite indique un groupe homogène. Notez qu’en inversant les variables dans les axes X et Y, nous obtiendrions des boîtes à moustaches verticales. Cependant, les noms des régions étant assez longs, cela nécessiterait d’avoir un graphique très large. Améliorons quelque peu le rendu de ce graphique en ajoutant des titres.\n\nggplot(data = data_co2_comp)+\n  geom_boxplot(aes(y = region7, x = CO2t_hab))+\n  xlim(c(0,50))+\n  labs(x = \"Tonnes de CO2 par an et habitant\",\n       y = \"Région\")\n\n\n\nFigure 3.41: Boîtes à moustaches améliorées\n\n\n\nLes points noirs sur le graphique représentent des valeurs extrêmes, soit des observations situées à plus de 1,5 intervalle interquartile d’une extrémité de la boîte. Pour mieux rendre compte de la densité d’observations le long de chaque boîte à moustaches, il est possible de les représenter directement avec la fonction geom_jitter.\n\n\n\n\nFigure 3.42: Boîtes à moustaches avec observations\n\n\n\nNotez que pour éviter que les valeurs extrêmes identifiées par la fonction geom_boxplot se superposent avec les points représentant les observations, nous les avons supprimées avec l’argument outlier.shape = NA.\n\n3.2.6 Graphique en violon\nLes boîtes à moustaches donnent des informations pertinentes sur le centre et la dispersion d’une variable en fonction de sous groupes de la population. Cependant, une grande partie de l’information reste masquée par la représentation sous forme de boîte. Une solution est de remplacer la simple boîte par la distribution de la variable étudiée. Nous obtenons ainsi des graphiques en violon (geom_violin). Considérant les très grands écarts que nous avons observés entre les régions avec les boîtes à moustaches, il est préférable de tracer les graphiques en violon en excluant les régions Afrique Sub-Saharienne et Asie du Sud.\n\n# Retirons les observations de régions que nous ne souhaitons pas garder\ndata_co2_comp &lt;- subset(data_co2, (! data_co2$region7 %in% \n                                     c(\"Sub-Saharan Africa\", \"South Asia\")) \n                        & is.na(data_co2$region7) == FALSE)\n\nggplot(data = data_co2_comp)+\n  geom_violin(aes(y = region7, x = CO2t_hab))+\n  xlim(c(0,50))+\n  labs(x = \"Tonnes de CO2 par année et par habitant\",\n       y = \"\")+\n  geom_vline(xintercept = 12, linetype = 'dashed', color = \"blue\")\n\n\n\nFigure 3.43: Graphiques en violon\n\n\n\nCes distributions permettent notamment de souligner que deux groupes distincts se retrouvent en Amérique du Nord. L’un dont les émissions annuelles de CO2 par habitant sont inférieures à 12 tonnes (ligne bleue) et l’autre pour lequel elles sont supérieures. En explorant les données, nous constatons que les Bermudes appartiennent au groupe Amérique du Nord, mais ont des niveaux d’émission inférieurs à ceux du Canada et des États-Unis, ce qui explique cette distribution bimodale. Cette information était masquée avec les boîtes à moustaches. Finalement, il est aussi possible de superposer un graphique en violon et une boîte à moustaches pour bénéficier des avantages des deux.\n\nggplot(data = data_co2_comp)+\n  geom_violin(aes(y = region7, x = CO2t_hab))+\n  geom_boxplot(aes(y = region7, x = CO2t_hab), width = 0.15)+\n  xlim(c(0,50))+\n  labs(x = \"Tonnes de CO2 par année et par habitant\",\n       y = \"\")\n\n\n\nFigure 3.44: Graphiques en violon et boîtes à moustaches\n\n\n\n\n3.2.7 Graphique en barres\nLes graphiques en barres permettent de représenter des quantités (hauteur des barres) réparties dans des catégories (une barre par catégorie). Nous proposons ici un exemple avec des données de déplacements issues de l’Enquête origine-destination 2017 - Région Québec-Lévis, au niveau des grands secteurs. La figure 3.44, tirée du rapport intitulé La mobilité des personnes dans la région de Québec-Lévis (Volet Enquête-ménages : faits saillants) délimite ces grands secteurs.\n\n\nFigure 3.45: Grands secteurs de Québec\n\nNous représentons pour chaque secteur le nombre moyen de déplacements entrant et sortant un jour de semaine en heures de pointe. Les données sont présentées sous forme d’une matrice carrée (avec autant de lignes que de colonnes). L’intersection de la ligne A et de la colonne C indique le nombre de personnes partant du secteur A pour se rendre au secteur C. À l’inverse, l’intersection de la ligne C et de la colonne A indique le nombre de personnes partant du secteur C pour se rendre au secteur A. En sommant les valeurs de chaque ligne, nous obtenons le nombre total de départs par secteur tandis que le nombre d’arrivées est la somme de chaque colonne. Ces opérations peuvent simplement être effectuées avec les fonctions rowSums et colSums.\n\n# Chargement des données\nmatriceOD &lt;- read.csv('data/graphique/Quebec_2017_OD_MJ.csv',\n                 header = FALSE, sep = ';') # fichier csv sans entête\n\n# Calcul des sommes en lignes et en colonnes\ntot_depart &lt;- rowSums(matriceOD)\ntot_arrivee &lt;- colSums(matriceOD)\n\n# Création d'un DataFrame avec les valeurs et les noms des secteurs\ndf &lt;- data.frame(depart = tot_depart,\n                 arrivee = tot_arrivee, \n                 secteur = c('Arr. de Beauport (Québec)',\n                            'Arr. de Charlesbourg (Québec)',\n                            'Arr. des Rivières (Québec)',\n                            'Arr. de la Cité-Limoilou (Québec)',\n                            'Arr. de la Haute-Saint-Charles (Québec)',\n                            'Arr. de Sainte-Foy-Sillery-Cap-Rouge (Québec)',\n                            'Arr.de Desjardins (Lévis)',\n                            'Arr. des Chutes–de-la-Chaudière-Est (Lévis)',\n                            'Arr. des Chutes de la Chaudière-Ouest (Lévis)',\n                            'Ceinture Nord',\n                            'Ceinture Sud',\n                            'Hors Territoire'),\n                 code = c('A','B','C','D','E','F','G','H','I','J','K','X'))\n\n# Création des deux graphiques en barre\nplot1 &lt;- ggplot(data = df)+\n  geom_bar(aes(x = code, weight = depart))+\n  labs(subtitle = \"Départs\",\n       x = \"total\",\n       y = \"\")\n\nplot2 &lt;- ggplot(data = df)+\n  geom_bar(aes(x = code, weight = arrivee))+\n  labs(subtitle = \"Arrivées\",\n       x = \"total\",\n       y = \"\")\n\n# Stocker les graphiques dans une liste et composer une figure\nlist_plot &lt;- list(plot1, plot2)\ntot_plot &lt;- ggarrange(plotlist = list_plot, ncol = 1)\n\n# Création d'une légende pour associer le code de chaque secteur \n# à son nom. Pour cela nous concaténons en premier les lettres et les noms.\n# Nous fusionnons ensuite le tout en les séparant par le symbole \\n représentant \n# un saut de ligne.\nnom_secteurs &lt;- paste(df$code, df$secteur, sep= ' : ')\nstring_names &lt;- paste(nom_secteurs, collapse = '\\n')\n\ntitre &lt;- \"Déplacements journaliers moyens en heures de pointe\"\n# Production finale de la figure\nannotate_figure(tot_plot,\n                top = text_grob(titre, face = \"bold\", size = 11, just = \"left\"),\n                right = text_grob(string_names, face = \"italic\", size = 8,\n                                  just = \"left\", x = 0.05) # position du texte\n                )\n\n\n\nFigure 3.46: Graphiques en barre simples\n\n\n\nPlutôt que de représenter les arrivées et les départs dans deux graphiques séparés, il est possible de les empiler dans un même graphique en barres. Nous devons au préalable « faire fondre nos données » avec la fonction melt.\n\n# Faire fondre le jeu de données (empiler les colonnes depart et arrivee)\nmelted_df &lt;- melt(df, id.vars = c('code'), measure.vars = c('depart','arrivee'))\nnames(melted_df) &lt;- c('code','deplacement','effectif')\n# Ajouter les accents dans la colonne déplacement\nmelted_df$deplacement &lt;- ifelse(melted_df$deplacement == 'depart', 'départs', 'arrivées')\n# Comparaison du format original et du format \"fondu\"\nhead(df)\n\n   depart arrivee                                       secteur code\nV1  49241   34777                     Arr. de Beauport (Québec)    A\nV2  48909   36344                 Arr. de Charlesbourg (Québec)    B\nV3  48044   67198                    Arr. des Rivières (Québec)    C\nV4  63132  108138             Arr. de la Cité-Limoilou (Québec)    D\nV5  57367   30859       Arr. de la Haute-Saint-Charles (Québec)    E\nV6  86504  112379 Arr. de Sainte-Foy-Sillery-Cap-Rouge (Québec)    F\n\nhead(melted_df)\n\n  code deplacement effectif\n1    A     départs    49241\n2    B     départs    48909\n3    C     départs    48044\n4    D     départs    63132\n5    E     départs    57367\n6    F     départs    86504\n\n# Réalisation du graphique\nplot1 &lt;- ggplot(data = melted_df)+\n  geom_bar(aes(x = code, weight = effectif, fill = deplacement), color = '#e3e3e3')+\n  scale_fill_manual(values = c(\"#e63946\" , \"#1d3557\"))+\n  labs(title = titre,\n       y = \"Effectifs\",\n       x = \"\",\n       fill = \"Déplacements\")\n\nannotate_figure(plot1, right = text_grob(string_names, face = \"italic\", size = 7,\n                                  just = \"left\", x = 0.05)) # position du texte)\n\n\n\nFigure 3.47: Graphique en barre empilée\n\n\n\n\n3.2.8 Graphique circulaire\nUne option directe au graphique en barres est le graphique ou diagramme circulaire, appelé aussi graphique en tarte (pour les personnes à la dent sucrée) ou en camembert (pour celles amatrices de fromage). Il est suffisamment connu et utilisé pour qu’aucune présentation ne s’impose. Pour être exact, un graphique en tarte n’est rien d’autre qu’un graphique en barres dont le système de coordonnées a été modifié. Cela impose cependant de calculer à l’avance la position des étiquettes que nous souhaitons ajouter sur le graphique. Reprenons les données de production mondiale de CO2 et calculons les productions totales par région géographique en 2015.\n\nlibrary(dplyr)\n\n# Extraire les données de 2018 pour lesquelles nous connaissons la région\ndata_co2_2015 &lt;- subset(data_co2, data_co2$year == \"2015\" & ! is.na(data_co2$region7))\n\n# Effectuer la somme du CO2 par région\nco2_2015 &lt;- data_co2_2015 %&gt;% \n  group_by(region7) %&gt;% \n  summarise(total_co2 = sum(CO2_kt, na.rm = TRUE))\n\n# Attribuer un code à chaque région pour faciliter la lecture\nco2_2015$code &lt;- c(\"A\" , \"B\" , \"C\" , \"D\" , \"E\" , \"F\" , \"G\")\n\n# Modifier l'ordre des données, calculer les proportions et la position des labels\ndf &lt;- co2_2015 %&gt;% \n  arrange(desc(code)) %&gt;%\n  mutate(prop = total_co2 / sum(co2_2015$total_co2) *100) %&gt;%\n  mutate(ypos = cumsum(prop)- 0.5*prop )\n\n# Préparer la légende (pourcentages et vrais noms)\nnom_region &lt;- rev(paste(df$code, \" : \", df$region7, \"(\", round(df$prop,1),\"%)\"))\nstring_region &lt;- paste(nom_region, collapse = '\\n')\n\n# Construire le graphique\nplot1 &lt;- ggplot(df, aes(x = \"\", y = prop, fill = code)) +\n  geom_bar(stat = \"identity\", width=1, color = \"white\") +\n  coord_polar(\"y\", start=0) +\n  theme_void() + \n  theme(legend.position = \"none\") +\n  geom_text(aes(y = ypos, label = code), color = \"white\", size=3) +\n  scale_fill_grey()+\n  labs(title = \"Proportion du CO2 émis en 2015\")\n\n# Ajouter la légende\nannotate_figure(plot1, right = text_grob(string_region, face = \"italic\", size = 9,\n                                  just = \"left\", x = 0.05)) # position du texte)\n\n\n\nFigure 3.48: Graphique en tarte\n\n\n\nSi à la place de la géométrie geom_bar, vous utilisez geom_rect, vous pouvez convertir votre graphique en tarte en graphique en anneau (ou en beigne, pour les personnes à la dent sucrée) :\n\n# Calculer la limite inférieure et supérieure du beigne\ndf$ymax &lt;- cumsum(df$prop)\ndf$ymin &lt;-  c(0, head(df$ymax, n=-1))\n\n# Construire le graphique\nplot1 &lt;- ggplot(df, aes(ymax = ymax, ymin = ymin, \n                        xmax = 4, xmin = 3,\n                        y = prop, fill = code)) +\n  geom_rect(stat = \"identity\", color = \"white\") +\n  coord_polar(\"y\", start=0) +\n  theme_void() + \n  theme(legend.position = \"none\") +\n  geom_text(aes(x = 3.5, y = ypos, label = code), color = \"white\", size=3) +\n  scale_fill_grey()+\n  xlim(c(2,4))+\n  labs(title = \"Proportion du CO2 émis en 2015\")\n\n# Ajouter la légende\nannotate_figure(plot1, right = text_grob(string_region, face = \"italic\", size = 8,\n                                  just = \"left\", x = 0.05)) # position du texte)\n\n\n\nFigure 3.49: Graphique en anneau"
  },
  {
    "objectID": "03-magiedesgraphiques.html#sec-033",
    "href": "03-magiedesgraphiques.html#sec-033",
    "title": "3  Magie des graphiques",
    "section": "\n3.3 Graphiques spéciaux",
    "text": "3.3 Graphiques spéciaux\nDans cette dernière section, nous abordons des graphiques plus rarement utilisés. Ils sont toutefois très utiles dans certains contextes du fait de leur capacité à synthétiser des informations complexes.\n\n3.3.1 Graphique en radar\nLes graphiques en radar (ou en toile d’araignée) sont utilisés pour comparer une série de variables continues pour plusieurs observations ou groupes d’observations. Chaque variable est associée à un axe et chaque observation est représentée avec un polygone. Prenons l’exemple de données relatives aux logements par secteur de recensement dans la région métropolitaine de Montréal en 2016. Nous pourrions souhaiter comparer la moyenne des pourcentages des différents types de logements pour les régions des Laurentides, de la Montérégie, de Laval, de Longueuil et de Montréal. Malheureusement, ggplot2 ne permet pas de dessiner des graphiques en radar satisfaisants, nous devons donc utiliser le package fmsb.\n\nlibrary(fmsb)\n\ndata &lt;- read.csv('data/bivariee/sr_rmr_mtl_2016.csv', header = TRUE, encoding = 'UTF-8')\n\n# Agréger les données au niveau des régions en calculant la moyenne des pourcentages\nvariables &lt;- c(\"MaisonIndi\" , \"App5Plus\" , \"MaisRangee\" , \"AppDuplex\" , \"Proprio\" , \"Locataire\")\n\ndata_region &lt;- data[c(\"Region\", variables)] %&gt;% \n  group_by(Region) %&gt;%\n  summarise_all(.funs = list(mean))\n\n# Gérer le nom des colonnes pour ajuster les données aux besoins de \n# la fonction radachart\nnew_names &lt;- c(\"Region\", paste(variables,\"_mean\", sep = \"\"))\nnames(data_region) &lt;- new_names\ndata_region &lt;- data.frame(data_region)\nrownames(data_region) &lt;- data_region$Region\ndata_region$Region &lt;- NULL\n\n# Ajouter deux lignes aux données avec les valeurs maximales et minimales \n# de chaque colonne. Ces informations aideront la fonction radachart à\n# dessiner chacun des axes du radar\ndata_chart &lt;- rbind(apply(data_region, MARGIN = 2, FUN = max),\n                    apply(data_region, MARGIN = 2, FUN = min),\n                    data_region\n                    )\n\n# Choisir les couleurs pour l'intérieur des polygones (avec transparence)\ncouleurs &lt;- c(\n  rgb(0.94, 0.28, 0.44, 0.25),\n  rgb(1.00, 0.82, 0.40, 0.25),\n  rgb(0.02, 0.84, 0.63, 0.25),\n  rgb(0.07, 0.54, 0.70, 0.25),\n  rgb(0.03, 0.23, 0.30, 0.25)\n)\n\n# Choisir les couleurs pour l'intérieur des polygones (sans transparence)\ncouleurs_contour &lt;- c(\n  rgb(0.94, 0.28, 0.44),\n  rgb(1.00, 0.82, 0.40),\n  rgb(0.02, 0.84, 0.63),\n  rgb(0.07, 0.54, 0.70),\n  rgb(0.03, 0.23, 0.30)\n)\n\n# Dessiner du graphique\nradarchart(data_chart,\n           title = \"Comparaison des types de logements dans la RMR\",\n           pcol = couleurs_contour, pfcol = couleurs,\n           plwd = 2, plty = 1,\n           cglcol = \"grey\", cglty = 1, axislabcol=\"grey\", cglwd=0.8,\n           vlcex = 0.8,\n           vlabels = c(\"maison individuelle\", \"immeuble d'appartements\",\n                       \"maison \\nen rangée\", \"duplex\",\n                       \"propriétaire\", \"locataire\")\n           )\n\n# Ajouter une légende\nlegend(x = 1.3, y = 1, legend = rownames(data_chart[-c(1,2),]), bty = \"n\", \n       pch=20 , col=couleurs , text.col = \"black\", cex = 0.9, pt.cex = 1.5)\n\n\n\nFigure 3.50: Graphique en anneau\n\n\n\nÀ la lecture du graphique, nous constatons rapidement que l’île de Montréal a une situation très différente des trois autres régions. Laval se distingue également avec une part importante de logements dans des immeubles d’appartements. Ce type de graphique a pour objectif d’orienter le regard sur de potentielles différences dans un contexte multidimensionnel, mais il présente quelques inconvénients :\n\nLes échelles de chaque axe sont différentes. Il est donc essentiel de se rapporter aux valeurs exactes pour estimer si les écarts sont importants en termes absolus.\nLa superposition de plusieurs polygones peut rendre la lecture difficile. Une solution envisageable est de réaliser un graphique par polygone, mais cela prend beaucoup de place dans un document.\nL’utilisation de polygones donne parfois de fausses impressions d’écarts. Dans le précédent graphique, l’œil est attiré en bas à gauche par le polygone de Montréal qui est très différent des autres. Cependant, les écarts sur l’axe maison en rangée sont relativement petits comparativement à l’axe locataire situé à l’opposé.\n\n3.3.2 Diagramme d’accord\nLes diagrammes d’accord (chord diagram en anglais) sont utilisés pour représenter des échanges ou des connexions entre des entités. Il peut s’agir par exemple de marchandises importées / exportées entre pays, des messages envoyés entre personnes via un réseau social, de flux de population, etc. Reprenons nos données de l’Enquête origine-destination 2017 - Région Québec-Lévis pour illustrer le tout. Nous utilisons le package chorddiag, très facile d’utilisation et produisant des graphiques interactifs, pour faciliter grandement la lecture de ce type de graphique. Cependant, ce package ne fait pas partie du répertoire CRAN, nous devons l’installer directement depuis github avec la fonction devtools::install_github.\n\ndevtools::install_github('mattflor/chorddiag')\n\n\nlibrary(chorddiag)\n\n# Chargement des données\nmatriceOD &lt;- read.csv('data/graphique/Quebec_2017_OD_MJ.csv',\n                 header = FALSE, sep = ';') # fichier csv sans entête\n\n# Transformation du DataFrame en matrice\nmatriceOD &lt;- as.matrix(matriceOD)\ncodes &lt;- c('A','B','C','D','E','F','G','H','I','J','K','X')\nsecteurs &lt;- c('Arr. de Beauport',\n            'Arr. de Charlesbourg',\n            'Arr. des Rivières',\n            'Arr. de la Cité-Limoilou',\n            'Arr. de la Haute-St-Charles',\n            'Arr. de Sainte-Foy-Sillery-Cap-Rouge',\n            'Arr.de Desjardins',\n            'Arr. des Chutes–de-la-Chaudière-Est',\n            'Arr. Les Chutes de la-Chaudière-Ouest',\n            'Ceinture Nord',\n            'Ceinture Sud',\n            'Hors Territoire')\n\n# Ajout de noms aux colonnes et aux lignes de la matrice\nrownames(matriceOD) &lt;- secteurs\ncolnames(matriceOD) &lt;- secteurs\n\n# Nous supprimons les trois secteurs Ceinture Nord, Sud et Hors territoire \n# qui comprennent de toute façon peu de déplacements\nmat &lt;- matriceOD[1:8, 1:8]\n\n# Choix aléatoire de couleurs pour les lignes\n# col &lt;- sample(colors(), nrow(mat), replace = FALSE)\n\n# Choix de couleurs \ncol &lt;- c(\"#a491d3\", \"#818aa3\", \"#C5DCA0\", \"#F5F2B8\",\n         \"#F9DAD0\", \"#F45B69\", \"#22181C\", \"#5A0001\")\n\n# Réalisation du graphique : sortie HTLM\nif(knitr::is_html_output()){\n  chorddiag(mat, groupColors = col, showTicks = FALSE,\n        type = 'bipartite', chordedgeColor = 'white',\n        groupnameFontsize = 12, groupnamePadding = 5)\n}\n\n\nFigure 3.51: Diagramme d’accord\n\n\nLe graphique permet de remarquer que la plupart des flux s’effectuent au sein d’un même secteur. La majorité des déplacements se font au sein du secteur Sainte-Foy (segment rouge central). Nous pouvons cependant constater que les secteurs des Rivières, de la Cité-Limoilou et de la Haute-Saint-Charles attirent une plus grande quantité et diversité de flux. Si vous lisez ce livre dans un navigateur web (et pas au format pdf), le graphique est interactif! En plaçant votre souris sur un lien, vous verrez s’afficher le nombre de déplacements qu’il représente.\n\n3.3.3 Nuage de mots\nUn nuage de mots est un graphique utilisé en analyse de texte pour représenter les mots les plus importants d’un document. Mesurer l’importance des termes dans un document est une discipline à part entière (Natural Language Processing). Nous proposons un simple exemple ici avec la méthode TextRank (basée sur la théorie des graphes) proposée par Mihalcea et Tarau (2004) et implémentée dans le package textrank. Nous avons également besoin des packages udpipe (fournissant des dictionnaires linguistiques), RColorBrewer (pour sélectionner une palette de couleurs) et wordcloud2 (pour générer le graphique). En guise d’exemple, nous avons choisi d’extraire les textes de deux schémas d’aménagement et de développement (SAD), ceux des agglomérations de Québec et de Montréal en vigueur en 2020. Il s’agit de deux documents de planification définissant les lignes directrices de l’organisation physique du territoire des municipalités régionales de comté (MRC) ou des agglomérations. Pour ces deux documents, nous nous concentrons sur le chapitre portant sur les grandes orientations d’aménagement et de développement, soit les pages 30 à 135 pour Québec et 30 à 97 pour Montréal. Pour extraire les textes des fichiers pdf, nous utilisons le package pdftools.\nNous devons donc réaliser les étapes suivantes pour produire le nuage de mots :\n\nExtraire les sections qui nous intéressent des fichiers pdf.\nExtraire le texte de ces sections.\nRetirer les caractères représentant les sauts de lignes et les sauts de paragraphes (\\n et \\r).\nConcaténer tout le texte en une seule longue chaîne de caractère.\nUtiliser un dictionnaire pour déterminer la nature des mots du texte (nom, adjectif, verbe, etc.).\nUtiliser l’algorithme TextRank pour identifier les mots clefs.\nNettoyer les erreurs potentielles parmi les mots clefs.\nConstruire le nuage de mots.\n\nNotez que toutes ces étapes de nettoyage ne seraient pas nécessaires si nous utilisions un simple fichier texte comme point de départ. Cependant, comme il est plus courant de rencontrer des fichiers pdf, cet exercice est donc davantage révélateur de la difficulté réelle de la réalisation d’un nuage de mots.\n\nlibrary(wordcloud2)\nlibrary(udpipe)\nlibrary(RColorBrewer)\nlibrary(pdftools)\nlibrary(textrank)\n\n# Étape 1 : extraire les sections pertinentes des fichiers pdf\nextrait_qc &lt;- pdf_subset(\"data/graphique/SAD_quebec.pdf\", pages = c(30:135),\n                         output = \"data/graphique/SAD_quebec_ext.pdf\")\nextrait_mtl &lt;- pdf_subset(\"data/graphique/SAD_montreal.pdf\", pages = c(30:97),\n                          output = \"data/graphique/SAD_montral_ext.pdf\")\n\n# Étape 2 : extraire le texte des fichiers pdf sous forme de vecteur de texte\nfile_qc &lt;- pdf_text(extrait_qc)\nfile_mtl &lt;- pdf_text(extrait_mtl)\n\n# Étape 3 : retirer les sauts de lignes et les paragraphes\nfile_qc &lt;- gsub(\"\\r\" , \"\", x = file_qc)\nfile_qc &lt;- gsub(\"\\n\" , \"\", x = file_qc)\n\nfile_mtl &lt;- gsub(\"\\r\" , \"\", x = file_mtl)\nfile_mtl &lt;- gsub(\"\\n\" , \"\", x = file_mtl)\n\n# Étape 4 : créer une seule longue chaîne de caractères\n# à partir des vecteurs de texte\ntext_qc &lt;- paste(file_qc, collapse = \" \")\ntext_mtl &lt;- paste(file_mtl, collapse = \" \")\n\n# charger le modèle linguistique français\nmodel &lt;- udpipe_load_model('data/graphique/french-sequoia-ud-2.4-190531.udpipe')\n\n# pour télécharger le modèle si ce n'est pas encore fait : \n# model &lt;- udpipe_download_model(\"french-sequoia\")\n# model &lt;- udpipe_load_model(model)\n\n# Étape 5 : analyse de la nature des mots du texte avec le dictionnaire fr\n# Nous obtenons des DataFrames décrivant les mots des textes\nannote_qc &lt;- udpipe_annotate(model, text_qc)\ndf_qc &lt;- data.frame(annote_qc)\n\nannote_mtl &lt;- udpipe_annotate(model, text_mtl)\ndf_mtl &lt;- data.frame(annote_mtl)\n\n# Étape 6 : utilisation de la méthode TextRank\nstats_qc &lt;- textrank_keywords(df_qc$lemma,\n                  relevant = df_qc$upos %in% c(\"NOUN\", \"ADJ\"), ngram_max = 2)\n\nstats_mtl &lt;- textrank_keywords(df_mtl$lemma,\n                  relevant = df_mtl$upos %in% c(\"NOUN\" , \"ADJ\"), ngram_max = 2)\n\n# Étape 7 : nettoyer les coquilles dans les mots clefs \n# Note : nous faisons ici le choix de garder des mots clefs uniques (ngram == 1)\n# Il serait aussi possible de garder des associations de plusieurs mots\ndfstats_qc &lt;- subset(stats_qc$keywords, stats_qc$keywords$ngram == 1 &\n                       nchar(stats_qc$keywords$keyword)&gt;2)\ndfstats_qc$keyword &lt;- gsub(\"d’\" , \"\", dfstats_qc$keyword, fixed = TRUE)\ndfstats_qc$keyword &lt;- gsub(\"l’\" , \"\", dfstats_qc$keyword, fixed = TRUE)\n\ndfstats_mtl &lt;- subset(stats_mtl$keywords, stats_mtl$keywords$ngram == 1 &\n                        nchar(stats_mtl$keywords$keyword)&gt;2)\ndfstats_mtl$keyword &lt;- gsub(\"d’\" , \"\", dfstats_mtl$keyword, fixed = TRUE)\ndfstats_mtl$keyword &lt;- gsub(\"l’\" , \"\", dfstats_mtl$keyword, fixed = TRUE)\n\n# Étape 8 : réaliser les nuages de mots\ncouleurs &lt;- sample(brewer.pal(12, \"Paired\")) # mise en désordre des couleurs\n\nwordcloud2(data = dfstats_mtl[c(\"keyword\", \"freq\")],\n           color = couleurs, size = 0.5, shuffle = FALSE)\n\nwordcloud2(data = dfstats_qc[c(\"keyword\", \"freq\")],\n           color = couleurs, size = 0.6, shuffle = FALSE)\n\n\n\nFigure 3.52: Nuage de mots pour le SAD de Montréal\n\n\n\nFigure 3.53: Nuage de mots pour le SAD de Québec\n\nNotez qu’à chaque génération du nuage de mots, vous obtiendrez une disposition différente. N’hésitez pas à en essayer plusieurs jusqu’à ce que vous trouviez celle qui vous semble optimale.\n\n3.3.4 Carte proportionnelle\nUne carte proportionnelle ou carte à cases (treemap en anglais) est un graphique permettant de représenter une quantité partagée entre plusieurs observations structurées dans une hiérarchie de groupe. Le jeu de données portant sur les émissions de CO2 se prête tout à fait à une représentation par treemap. La variable de quantité est bien sûr les émissions de CO2 par pays; ces pays sont regroupés dans un premier ensemble de régions (découpage en 23 régions), qui elles-mêmes sont regroupées dans des régions plus larges (découpage en sept régions). Pour construire un treemap, nous allons utilisons le package treemap.\n\nlibrary(treemap)\nlibrary(RColorBrewer)\n\n# extraire les données de CO2 en 2015\ndata_co2_2015 &lt;- subset(data_co2, data_co2$year == \"2015\" & ! is.na(data_co2$region7))\n\n# construire le treemap\n\ntreemap(data_co2_2015, index = c(\"region7\" , \"region23\"),\n    vSize = \"CO2_kt\", type = \"index\",\n    title = \"CO2 rejetés par pays en 2015\",\n    fontsize.labels=c(12,8), # taille des étiquettes              \n    fontcolor.labels=c(\"white\" , \"black\"), # couleur des étiquettes\n    fontface.labels=c(2,1), # style des polices\n    bg.labels = 0, # arrière-plan des étiquettes\n    align.labels=list(\n        c(\"center\", \"center\"), \n        c(\"right\", \"bottom\")\n        ),  # localisation des étiquettes dans les boîtes\n    overlap.labels=0.5, # tolérance de superposition\n    inflate.labels = FALSE, # agrandir la taille des étiquettes ou non\n    palette = brewer.pal(7,'Paired')\n)\n\n\n\nFigure 3.54: Treemap"
  },
  {
    "objectID": "03-magiedesgraphiques.html#sec-034",
    "href": "03-magiedesgraphiques.html#sec-034",
    "title": "3  Magie des graphiques",
    "section": "\n3.4 Cartes",
    "text": "3.4 Cartes\nToute comme un graphique, une carte est aussi une illustration visuelle. Avec la généralisation des données géographiques, il peut être utile de savoir représenter ce type de données. Si R n’est pas un logiciel de cartographie, il est possible de réaliser des cartes assez facilement, directement avec ggplot2. Nous avons cependant une préférence pour le package tmap, qui propose de nombreuses fonctionnalités. Pour tracer des cartes, tmap et ggplot2 ont besoin d’utiliser un format de données comprenant la géométrie (polygones, lignes ou points), la localisation et le système de projection des entités spatiales étudiées. Le format de fichier le plus courant pour ce type de données est le shapefile (.shp), mais vous pourrez parfois croiser des fichiers geojson (.js), ou encore geopackages (.gpkg). Pour lire ces fichiers, il est possible d’utiliser la fonction readOGR du package rgdal, ou la fonction st_read du package sf. Notez ici que ces deux fonctions ne produisent pas de DataFrame, mais respectivement un SpatialDataFrame et un objet sf (spatial feature collection). Sans entrer dans les détails, sachez que deux packages permettent de manipuler des objets spatiaux dans R : le traditionnel sp (avec les SpatialDataFrames) et le plus récent sf (avec les spatial feature collections). Il est assez facile de convertir un objet de sp vers sf (et inversement) et cette opération est souvent nécessaire, car de nombreux packages dédiés à l’analyse spatiale utilisent l’un ou l’autre des formats. Dans le cas de tmap, des objets sp et sf peuvent être utilisés sans distinction. En revanche, pour cartographier directement avec ggplot2, il est plus facile d’utiliser un objet de type sf. Toutefois, nous vous recommandons fortement d’utiliser le package sf, puisque sp (et son format SpatialDataFrame) est progressivement délaissé dans R.\nUne carte thématique permet de représenter la répartition spatiale de variables qualitatives ou quantitatives. Nous la distinguons des cartes topographiques, dont l’objectif est de représenter la localisation d’objets spécifiques (route, habitation, rivière, lac, etc.). La première est relativement facile à construire dans R, car elle se limite à quelques symboles relativement simples. Pour la seconde, nous préférons généralement utiliser un logiciel comme QGIS.\nCréons une carte thématique à partir des données de densité de végétation sur l’île de Montréal avec les packages ggplot2 puis tmap.\nAvec ggplot2, nous avons aussi besoin des packages classInt pour calculer les intervalles des classes et ggsn pour afficher une échelle.\n\nlibrary(sf)\nlibrary(classInt)\nlibrary(ggspatial)\n\n# Chargement des données\nspatialdf &lt;- st_read(\"data/bivariee/IlotsVeg2006.shp\")\n\nReading layer `IlotsVeg2006' from data source \n  `C:\\Users\\appariciop\\OneDrive - USherbrooke\\Articles Publies ne pas supprimer\\_Livres\\BolR_MethodesQuantitatives\\data\\bivariee\\IlotsVeg2006.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 10213 features and 12 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 267518.7 ymin: 5029292 xmax: 306663.7 ymax: 5062652\nProjected CRS: NAD83 / MTM zone 8\n\n# Création d'une discrétisation en 7 classes égales\nvalues &lt;- c(max(spatialdf$ArbPct)+0.01, spatialdf$ArbPct)\n\nquant &lt;- classIntervals(values, n = 7,\n                        style = \"quantile\",\n                        intervalClosure = 'right')\n\nspatialdf$class_col &lt;- cut(spatialdf$ArbPct, breaks = quant$brks, right = FALSE)\n\n# Cartographie avec ggplot2\nggplot(data = spatialdf) + \n  geom_sf(aes(fill = class_col), color = rgb(0,0,0,0))+\n  scale_fill_brewer(palette = \"Greens\")+\n  labs(title = \"Végétation dans les îlos de recensement\",\n       'fill' = 'Densité de la canopée (%)')+\n  theme(axis.line=element_blank(), axis.text.x = element_blank(),\n        axis.text.y = element_blank(), axis.ticks=element_blank(),\n        axis.title.x = element_blank(), axis.title.y = element_blank(),\n        panel.background=element_blank(),\n        panel.border=element_blank(), panel.grid.major=element_blank(),\n        panel.grid.minor=element_blank(), plot.background=element_blank(),\n        legend.key.size = unit(0.5, \"cm\"))+\n  annotation_scale()\n\n\n\nFigure 3.55: Carte thématique avec ggplot2\n\n\n\nIl est possible d’arriver à un résultat similaire avec tmap avec moins de code!\n\nlibrary(tmap)\n\ncolors &lt;- brewer.pal(7,\"Greens\")\ntm_shape(spatialdf) +\n  tm_polygons(\"ArbPct\", palette = colors, border.alpha = 0,\n            n = 7, style = 'quantile',\n            title = \"Densité de la canopée (%)\")+\n  tm_scale_bar(breaks = c(0,5,10)) + \n  tm_layout(title = \"Végétation dans les îlos de recensement\",\n            attr.outside = TRUE, frame = FALSE)\n\n\n\nFigure 3.56: Carte thématique avec tmap\n\n\n\nLes graphiques créés par tmap ne peuvent malheureusement pas être combinés avec la fonction ggarrange, mais tmap dispose de sa propre fonction tmap_arrange si vous souhaitez combiner plusieurs cartes.\n\nlibrary(tmap)\ncolors &lt;- brewer.pal(7,\"Greens\")\ncolors2 &lt;- brewer.pal(7,\"Reds\")\n\ncarte1 &lt;- tm_shape(spatialdf) +\n  tm_polygons(\"ArbPct\", palette = colors, border.alpha = 0,\n            n = 7, \n            style = \"quantile\",\n            title = \"Densité de la canopée (%)\") +\n  tm_scale_bar(breaks = c(0,5,10)) + \n  tm_layout(attr.outside = TRUE, frame = FALSE)\n\ncarte2 &lt;- tm_shape(spatialdf) +\n  tm_polygons(\"LogDens\", palette = colors2, border.alpha = 0,\n            n = 7, \n            style = \"quantile\",\n            title = \"Densité de logement\") + \n  tm_scale_bar(breaks = c(0,5,10)) + \n  tm_layout(attr.outside = TRUE, frame = FALSE)\n\ntmap_arrange(carte1, carte2, ncol = 2)\n\n\n\nFigure 3.57: Combiner des cartes avec tmap\n\n\n\n\n\n\n\n\nConstruction de cartes : aller plus loin avec tmap…\n\n\nPour explorer les multitudes possibilités du package tmap, nous vous recommandons les ressources suivantes :\n\nLa section intitulée Cartographie avec R du manuel Méthodes d’analyse spatiale : un grand bol d’R.\nL’excellente vignette intitulée tmap: get started!\nVisualizing Spatial Data in R with tmap.\nMaking Maps with R.\nLe chapitre Making maps with R du livre Geocomputation with R."
  },
  {
    "objectID": "03-magiedesgraphiques.html#sec-035",
    "href": "03-magiedesgraphiques.html#sec-035",
    "title": "3  Magie des graphiques",
    "section": "\n3.5 Exportation des graphiques",
    "text": "3.5 Exportation des graphiques\nTous les graphiques que nous avons construits dans ce chapitre peuvent être exportés assez facilement. Dans RStudio, vous pouvez directement cliquer sur le bouton Export (figure 3.58) pour enregistrer votre figure au format image ou au format pdf (vectoriel). Notez qu’avec la seconde option, vous pourrez retoucher votre graphique avec un logiciel externe comme Inkscape ou Illustrator.\n\n\nFigure 3.58: Exporter un graphique dans RStudio\n\nLorsque vous créez un graphique avec ggplot2, il est aussi possible de l’exporter avec la fonction ggsave. Cette fonctionnalité est très pratique lorsque vous souhaitez automatiser la production de graphiques et ne pas avoir à tous les exporter à la main.\n\ndata(iris)\n\nplot1 &lt;- ggplot() +\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris)\n\nggsave(filename = 'graphique.pdf',\n       path = 'mon/dossier',\n       plot = plot1,\n       width = 10, height = 10, units = \"cm\")\n\nPour les graphiques n’étant pas réalisés avec ggplot2, la solution de remplacement à la fonction ggsave est l’ensemble de fonctions png, bmp, jpeg, tiff et pdf, qui permettent d’exporter n’importe quel graphique dans ces différents formats. Le processus comprend trois étapes :\n\nOuvrir une connexion vers le fichier dans lequel le graphique sera exporté avec une des fonctions png, bmp, jpeg, tiff et pdf.\nRéaliser son graphique comme si nous souhaitions l’afficher dans RSudio. Il n’apparaîtra cependant pas, car il sera écrit dans le fichier en question à la place.\nFermer la connexion au fichier avec la fonction dev.off pour définitivement enregistrer le graphique.\n\n\ndata(iris)\n\n# 1. Ouvrir la connexion\npng(filename = 'mon/dossier/graphique.png')\n\n# 2. Afficher le graphique\nggplot() +\n  geom_point(mapping = aes(x = Sepal.Length, y = Sepal.Width), data = iris)\n\n# 3. fermer la connexion\ndev.off()"
  },
  {
    "objectID": "03-magiedesgraphiques.html#sec-036",
    "href": "03-magiedesgraphiques.html#sec-036",
    "title": "3  Magie des graphiques",
    "section": "\n3.6 Conclusion sur les graphiques",
    "text": "3.6 Conclusion sur les graphiques\nVous avez pu constater que les capacités de représentation graphique de R sont vastes et pourtant nous n’avons qu’observé la partie émergée de l’iceberg dans ce chapitre. Il est également possible de réaliser une visualisation en 3D dans R (plot3D, rgl), d’animer des graphiques pour en faire des GIF ou des vidéos (gganimate), de rendre des graphiques interactifs, ou même de construire des plateformes de visualisation de données disponibles en ligne (shiny). Vous continuerez à découvrir de nouvelles formes de représentations au fur et à mesure de votre pratique, en apprenant de nouvelles méthodes nécessitant des visualisations spécifiques.\nVoici également deux références très utiles qui nous ont notamment aidé à construire ce chapitre :\n\n\nThe R Graph Gallery, probablement LE site web proposant le plus de matériel sur la réalisation des graphiques dans R.\n\nData to viz, si vous ne savez pas quel graphique pourrait le mieux correspondre à vos données, Data to viz est là pour vous aider. Vous y trouverez un arbre de décision pour vous indiquer quel graphique utiliser dans quelle situation, ainsi que de nombreux conseils sur la visualisation de données.\n\n\n\n\n\nMihalcea, Rada et Paul Tarau. 2004. « Textrank: Bringing order into text. » In Proceedings of the 2004 conference on empirical methods in natural language processing, 404‑411. s.n.\n\n\nWickham, Hadley. 2010. « A layered grammar of graphics. » Journal of Computational and Graphical Statistics 19 (1): 3‑28. http://dx.doi.org/10.1198/jcgs.2009.07098."
  },
  {
    "objectID": "04-bivarieeQuantiQuanti.html#sec-041",
    "href": "04-bivarieeQuantiQuanti.html#sec-041",
    "title": "4  Relation linéaire entre deux variables quantitatives",
    "section": "\n4.1 Bref retour sur le postulat de la relation linéaire",
    "text": "4.1 Bref retour sur le postulat de la relation linéaire\nVérifier le postulat de la linéarité consiste à évaluer si deux variables quantitatives varient dans le même sens ou bien en sens contraire. Toutefois, la relation entre deux variables quantitatives n’est pas forcément linéaire. En guise d’illustration, la figure 4.1 permet de distinguer quatre types de relations :\n\nLe cas a illustre une relation linéaire positive entre les deux variables puisqu’elles vont dans le même sens. Autrement dit, quand les valeurs de X augmentent, celles de Y augmentent aussi. En guise d’exemple, pour les secteurs de recensement d’une métropole donnée, il est fort probable que le coût moyen du loyer soit associé positivement avec le revenu médian des ménages. Graphiquement parlant, il est clair qu’une droite dans ce nuage de points résumerait efficacement la relation entre ces deux variables.\nLe cas b illustre une relation linéaire négative entre les deux variables puisqu’elles vont en sens inverse. Autrement dit, quand les valeurs de X augmentent, celles de Y diminuent, et inversement. En guise d’exemple, pour les secteurs de recensement d’une métropole donnée, il est fort probable que le revenu médian des ménages soit associé négativement avec le taux de chômage. De nouveau, une droite résumerait efficacement cette relation.\nPour le cas c, il y a une relation entre les deux variables, mais qui n’est pas linéaire. Le nuage de points entre les deux variables prend d’ailleurs une forme parabolique qui traduit une relation curvilinéaire. Concrètement, nous observons une relation positive jusqu’à un certain seuil, puis une relation négative.\nPour le cas d, la relation entre les deux variables est aussi curvilinéaire; d’abord négative, puis positive.\n\n\n\nFigure 4.1: Relations linéaires et curvilinéaires entre deux variables continues\n\nPrenons un exemple concret pour illustrer le cas c. Dans une étude portant sur l’équité environnementale et la végétation à Montréal, Pham et al. (2012) ont montré qu’il existe une relation curvilinéaire entre l’âge médian des bâtiments résidentiels (axe des abscisses) et les couvertures végétales (axes des ordonnées) :\n\nLa couverture de la végétation totale et celle des arbres augmentent quand l’âge médian des bâtiments croît jusqu’à atteindre un pic autour de 60 ans (autour de 1950). Nous pouvons supposer que les secteurs récemment construits, surtout ceux dans les banlieues, présentent des niveaux de végétation plus faibles. Au fur et à mesure que le quartier vieillit, les arbres plantés lors du développement résidentiel deviennent matures — canopée plus importante –, d’où l’augmentation des valeurs de la couverture végétale totale et de celle des arbres.\nPar contre, dans les secteurs développés avant les années 1950, la densité du bâti est plus forte, laissant ainsi moins de place pour la végétation, ce qui explique une diminution des variables relatives à la couverture végétale (figure 4.2).\n\n\n\nFigure 4.2: Exemples de relations curvilinéaires\n\nDans les sous-sections suivantes, nous décrivons deux statistiques descriptives et exploratoires – la covariance (section 4.2) et la corrélation (section 4.3) – utilisées pour évaluer la relation linéaire entre deux variables continues (cas a et b à la figure 4.1). Ces deux mesures permettent de mesurer le degré d’association entre deux variables, sans que l’une soit la variable dépendante (variable à expliquer) et l’autre, la variable indépendante (variable explicative). Puis, nous décrivons la régression linéaire simple (section 4.4) qui permet justement de prédire une variable dépendante (Y) à partir d’une variable indépendante (X)."
  },
  {
    "objectID": "04-bivarieeQuantiQuanti.html#sec-042",
    "href": "04-bivarieeQuantiQuanti.html#sec-042",
    "title": "4  Relation linéaire entre deux variables quantitatives",
    "section": "\n4.2 Covariance",
    "text": "4.2 Covariance\n\n4.2.1 Formulation\nLa covariance (équation 4.1), écrite \\(cov(x,y)\\), est égale à la moyenne du produit des écarts des valeurs des deux variables par rapport à leurs moyennes respectives :\n\\[\ncov(x,y) = \\frac{\\sum_{i=1}^n (x_{i}-\\bar{x})(y_{i}-\\bar{y})}{n-1} = \\frac{covariation}{n-1}\n\\tag{4.1}\\]\navec \\(n\\) étant le nombre d’observations; \\(\\bar{x}\\) et \\(\\bar{y}\\) (prononcez x et y barre) étant les moyennes respectives des variables X et Y.\n\n4.2.2 Interprétation\nLe numérateur de l’équation 4.1 représente la covariation, soit la somme du produit des déviations des valeurs \\(x_{i}\\) et \\(y_{i}\\) par rapport à leurs moyennes respectives (\\(\\bar{x}\\) et \\(\\bar{y}\\)). La covariance est donc la covariation divisée par le nombre d’observations, soit la moyenne de la covariation. Sa valeur peut être positive ou négative :\n\nPositive quand les deux variables varient dans le même sens, c’est-à-dire lorsque les valeurs de la variable X s’éloignent de la moyenne, les valeurs de Y s’éloignent aussi dans le même sens; et elle est négative pour une situation inverse.\nQuand la covariance est égale à 0, il n’y a pas de relation entre les variables X et Y. Plus sa valeur absolue est élevée, plus la relation entre les deux variables X et Y est importante.\n\nAinsi, la covariance correspond à un centrage des variables, c’est-à-dire à soustraire à chaque valeur de la variable sa moyenne correspondante. L’inconvénient majeur de l’utilisation de la covariance est qu’elle est tributaire des unités de mesure des deux variables. Par exemple, si nous calculons la covariance entre le pourcentage de personnes à faible revenu et la densité de population (habitants au km2) au niveau des secteurs de recensement de la région métropolitaine de Montréal, nous obtenons une valeur de covariance de 33 625. En revanche, si la densité de population est exprimée en milliers d’habitants au km2, la valeur de la covariance sera de 33,625, alors que la relation linéaire entre les deux variables reste la même comme illustré à la figure 4.3. Pour remédier à ce problème, nous privilégions l’utilisation du coefficient de corrélation.\n\n\n\n\nFigure 4.3: Covariance et unités de mesure"
  },
  {
    "objectID": "04-bivarieeQuantiQuanti.html#sec-043",
    "href": "04-bivarieeQuantiQuanti.html#sec-043",
    "title": "4  Relation linéaire entre deux variables quantitatives",
    "section": "\n4.3 Corrélation",
    "text": "4.3 Corrélation\n\n4.3.1 Formulation\nLe coefficient de corrélation de Pearson (\\(r\\)) est égal à la covariance (numérateur) divisée par le produit des écarts-types des deux variables X et Y (dénominateur). Il représente une standardisation de la covariance. Autrement dit, le coefficient de corrélation repose sur un centrage (moyenne = 0) et une réduction (variance = 1) des deux variables, c’est-à-dire qu’il faut soustraire de chaque valeur sa moyenne correspondante et la diviser par son écart-type. Il correspond ainsi à la moyenne du produit des deux variables centrées réduites. Il s’écrit alors :\n\\[\nr_{xy} = \\frac{\\sum_{i=1}^n (x_{i}-\\bar{x})(y_{i}-\\bar{y})}{(n-1)\\sqrt{\\sum_{i=1}^n(x_i - \\bar{x})^2(y_i - \\bar{y})^2}}=\\sum_{i=1}^n\\frac{Zx_iZy_i}{n-1}\n\\tag{4.2}\\]\navec \\(n\\) étant le nombre d’observations; \\(\\bar{x}\\) et \\(\\bar{y}\\) étant les moyennes respectives des variables X et Y.\nLa syntaxe ci-dessous démontre que le coefficient de corrélation de Pearson est bien égal à la moyenne du produit de deux variables centrées réduites.\n\nlibrary(\"MASS\")\nN &lt;- 1000     # nombre d'observations\nmoy_x &lt;- 50   # moyenne de x\nmoy_y &lt;- 40   # moyenne de y\nsd_x &lt;- 10    # écart-type de x\nsd_y &lt;- 8     # écart-type de y\nrxy &lt;- .80 # corrélation entre X et Y\n## création de deux variables fictives normalement distribuées et corrélées entre elles\n# Création d'une matrice de covariance\ncov &lt;- matrix(c(sd_x^2,  rxy*sd_x*sd_y, rxy*sd_x*sd_y, sd_y^2), nrow = 2)\n# Création du tableau de données avec deux variables\ndf1 &lt;- as.data.frame(mvrnorm(N, c(moy_x, moy_y), cov))\n# Centrage et réduction des deux variables\ndf1$zV1 &lt;- scale(df1$V1, center = TRUE, scale = TRUE)\ndf1$zV2 &lt;- scale(df1$V2, center = TRUE, scale = TRUE)\n# Corrélation de Pearson\ncor1 &lt;- cor(df1$V1, df1$V2)\ncor2 &lt;- sum(df1$zV1*df1$zV2) / (nrow(df1)-1)\ncat(\"Corrélation de Pearson = \", round(cor1,5),\n    \"\\nMoyenne du produit des variables centrées réduites =\", round(cor2,5))\n\nCorrélation de Pearson =  0.79777 \nMoyenne du produit des variables centrées réduites = 0.79777\n\n\n\n4.3.2 Interprétation\nLe coefficient de corrélation \\(r\\) varie de −1 à 1 avec :\n\n0 quand il n’y a pas de relation linéaire entre les variables X et Y;\n−1 quand il y a une relation linéaire négative parfaite;\n1 quand il y a une relation linéaire positive parfaite (figure 4.4).\n\n\n\n\n\nFigure 4.4: Relations entre deux variables continues et coefficients de corrélation de Pearson\n\n\n\nConcrètement, le signe du coefficient de corrélation indique si la relation est positive ou négative et la valeur absolue du coefficient indique le degré d’association entre les deux variables. Reste à savoir comment déterminer qu’une valeur de corrélation est faible, moyenne ou forte. En sciences sociales, nous utilisons habituellement les intervalles de valeurs reportés au tableau 4.1. Toutefois, ces seuils sont tout à fait arbitraires. En effet, dépendamment de la discipline de recherche (sciences sociales, sciences de la santé, sciences physiques, etc.) et des variables à l’étude, l’interprétation d’une valeur de corrélation peut varier. Par exemple, en sciences sociales, une valeur de corrélation de 0,2 est considérée comme très faible alors qu’en sciences de la santé, elle pourrait être considérée comme intéressante. À l’opposé, une valeur de 0,9 en sciences physiques pourrait être considérée comme faible. Il convient alors d’utiliser ces intervalles avec précaution.\n\n\n\n\nTableau 4.1: Intervalles pour l’interprétation du coefficient de corrélation habituellement utilisés en sciences sociales\n\nCorrélation\nNégative\nPositive\n\n\n\nFaible\nde −0,3 à 0,0\nde 0,0 à 0,3\n\n\nMoyenne\nde −0,5 à −0,3\nde 0,3 à 0,5\n\n\nForte\nde −1,0 à −0,5\nde 0,5 à 1,0\n\n\n\n\n\n\nLe coefficient de corrélation mis au carré représente le coefficient de détermination et indique la proportion de la variance de la variable Y expliquée par la variable X et inversement. Par exemple, un coefficient de corrélation de −0,70 signale que 49 % de la variance de la variable de Y est expliquée par X (figure 4.5).\n\n\n\n\nFigure 4.5: Coefficient de corrélation et proportion de la variance expliquée\n\n\n\nCondition d’application. L’utilisation du coefficient de corrélation de Pearson nécessite que les deux variables continues soient normalement distribuées et qu’elles ne comprennent pas de valeurs aberrantes ou extrêmes. D’ailleurs, plus le nombre d’observations est réduit, plus la présence de valeurs extrêmes a une répercussion importante sur le résultat du coefficient de corrélation de Pearson. En guise d’exemple, dans le nuage de points à gauche de la figure 4.6, il est possible d’identifier des valeurs extrêmes qui se démarquent nettement dans le jeu de données : six observations avec une densité de population supérieure à 20 000 habitants au km2 et deux observations avec un pourcentage de 65 ans et plus supérieur à 55 %. Si l’on supprime ces observations (ce qui est défendable dans ce contexte) – soit moins d’un pour cent des observations du jeu de données initial –, la valeur du coefficient de corrélation passe de −0,158 à −0,194, signalant une augmentation du degré d’association entre les deux variables.\n\n\n\n\nFigure 4.6: Illustation de l’effet des valeurs extrêmes sur le coefficient de Pearson\n\n\n\n\n4.3.3 Corrélations pour des variables anormalement distribuées (coefficient de Spearman, tau de Kendall)\nLorsque les variables sont fortement anormalement distribuées, le coefficient de corrélation de Pearson est peu adapté pour analyser leurs relations linéaires. Il est alors conseillé d’utiliser deux statistiques non paramétriques : principalement, le coefficient de corrélation de Spearman (rho) et secondairement, le tau (\\(\\tau\\)) de Kendall, qui varient aussi tous deux de −1 à 1. Calculé sur les rangs des deux variables, le coefficient de Spearman est le rapport entre la covariance des deux variables de rangs sur les écarts-types des variables de rangs. En d’autres termes, il représente simplement le coefficient de Pearson calculé sur les rangs des deux variables :\n\\[\nr_{xy} = \\frac{cov(rg_{x}, rg_{y})}{\\sigma_{rg_{x}}\\sigma_{rg_{y}}}\n\\tag{4.3}\\]\nLa syntaxe ci-dessous démontre clairement que le coefficient de Spearman est bien le coefficient de Pearson calculé sur les rangs (section 4.3.1).\n\ndf &lt;- read.csv(\"data/bivariee/sr_rmr_mtl_2016.csv\")\n# Transformation des deux variables en rangs\ndf$HabKm2_rang &lt;- rank(df$HabKm2)\ndf$A65plus_rang &lt;- rank(df$A65plus)\n# Coefficient de Spearman avec la fonction cor et la méthode spearman\ncat(\"Coefficient de Spearman = \", \n    round(cor(df$HabKm2, df$A65plus, method = \"spearman\"),5))\n\nCoefficient de Spearman =  -0.11953\n\n# Coefficient de Pearson sur les variables transformées en rangs\ncat(\"Coefficient de Pearson calculé sur les variables transformées en rangs = \", \n    round(cor(df$HabKm2_rang, df$A65plus_rang, method = \"pearson\"),5))\n\nCoefficient de Pearson calculé sur les variables transformées en rangs =  -0.11953\n\n# Vérification avec l'équation\ncat(\"Covariance divisée par le produit des écarts-types sur les rangs :\",\n    round(cov(df$HabKm2_rang, df$A65plus_rang) / (sd(df$HabKm2_rang)*sd(df$A65plus_rang)),5))\n\nCovariance divisée par le produit des écarts-types sur les rangs : -0.11953\n\n\nLe tau de Kendall est une autre mesure non paramétrique calculée comme suit :\n\\[\n\\tau = \\frac{n_{c}-n_{d}}{\\frac{1}{2}n(n-1)}\n\\tag{4.4}\\]\navec \\(n_{c}\\) et \\(n_{d}\\) qui sont respectivement les nombres de paires d’observations concordantes et discordantes; et le dénominateur étant le nombre total de paires d’observations. Des paires sont dites concordantes quand les valeurs des deux observations vont dans le même sens pour les deux variables (\\(x_{i}&gt;x_{j}\\) et \\(y_{i}&gt;y_{j}\\) ou \\(x_{i}&lt;x_{j}\\) et \\(y_{i}&lt;y_{j}\\)), et discordantes quand elles vont en sens contraire (\\(x_{i}&gt;x_{j}\\) et \\(y_{i}&lt;y_{j}\\) ou \\(x_{i}&lt;x_{j}\\) et \\(y_{i}&gt;y_{j}\\)). Contrairement au calcul du coefficient de Spearman, celui du tau Kendall peut être chronophage : plus le nombre d’observations est élevé, plus les temps de calcul et la mémoire utilisée sont importants. En effet, avec n = 1000, le nombre de paires d’observations (\\({\\mbox{0,5}\\times n(n-1)}\\)) est de 499 500, contre près de 50 millions avec n = 10 000 (49 995 000).\n\n\n\n\nFigure 4.7: Comparaison des coefficients de Pearson, Spearman et Kendall sur deux variables anormalement distribuées\n\n\n\nÀ la lecture des deux histogrammes à la figure 4.7, il est clair que les variables densité de population et pourcentage de personnes ayant 65 ou plus sont très anormalement distribuées. Dans ce contexte, l’utilisation du coefficient de Pearson peut nous amener à mésestimer la relation existant entre les deux variables. Notez que les coefficients de Spearman et de Kendall sont tous les deux plus faibles.\n\n4.3.4 Corrélations robustes (Biweight midcorrelation, Percentage bend correlation et la corrélation pi de Shepherd)\nDans l’exemple donné à la figure 4.6, nous avions identifié des valeurs extrêmes et les avons retiré du jeu de données. Cette pratique peut tout à fait se justifier quand les données sont erronées (un capteur de pollution renvoyant une valeur négative, un questionnaire rempli par un mauvais plaisantin, etc.), mais parfois les cas extrêmes font partie du phénomène à analyser. Dans ce contexte, les identifier et les retirer peut paraître arbitraire. Une solution plus élégante est d’utiliser des méthodes dites robustes, c’est-à-dire moins sensibles aux valeurs extrêmes. Pour les corrélations, la Biweight midcorrelation (Wilcox 1994) est au coefficient de Pearson ce que la médiane est à la moyenne. Il est donc pertinent de l’utiliser pour des jeux de données présentant potentiellement des valeurs extrêmes. Elle est calculée comme suit :\n\\[\n\\begin{aligned}\n&u_{i} = \\frac{x_{i} - med(x)}{9 \\times (med(|x_{i} - med(x)|))} \\text{ et } v_{i} = \\frac{y_{i} - med(y)}{9 \\times (med(|y_{i} - med(y)|))}\\\\\n&w_{i}^{(x)} = (1 - u_{i}^2)^2 I(1 - |u_{i}|) \\text{ et } w_{i}^{(y)} = (1 - v_{i}^2)^2 I(1 - |v_{i}|)\\\\\n&I(x) =\n\\begin{cases}\n1, \\text{si } x = 1\\\\\n0, \\text{sinon}\n\\end{cases}\\\\\n&\\tilde{x}_{i} = \\frac{(x_{i} - med(x))w_{i}^{(x)}}{\\sqrt{(\\sum_{j=1}^m)[(x_{j} - med(x))w_{j}^{(x)}]^2}} \\text{ et } \\tilde{y}_{i} = \\frac{(y_{i} - med(y))w_{i}^{(y)}}{\\sqrt{(\\sum_{j=1}^m)[(y_{j} - med(y))w_{j}^{(y)}]^2}}\\\\\n&bicor(x,y) = \\sum_{i=1}^m \\tilde{x_i}\\tilde{y_i}\n\\end{aligned}\n\\tag{4.5}\\]\nComme le souligne l’équation 4.5, la Biweight midcorrelation est basée sur les écarts à la médiane, plutôt que sur les écarts à la moyenne.\nAssez proche de la Biweight midcorrelation, la Percentage bend correlation se base également sur la médiane des variables X et Y. Le principe général est de donner un poids plus faible dans le calcul de cette corrélation à un certain pourcentage des observations (20 % sont généralement recommandés) dont la valeur est éloignée de la médiane. Pour une description complète de la méthode, vous pouvez lire l’article de Wilcox (1994).\nEnfin, une autre option est l’utilisation de la corrélation \\(pi\\) de Sherphred (Schwarzkopf, Haas et Rees 2012). Il s’agit simplement d’une méthode en deux étapes. Premièrement, les valeurs extrêmes sont identifiées à l’aide d’une approche par bootstrap utilisant la distance de Mahalanobis (calculant les écarts multivariés entre les observations). Deuxièmement, le coefficient de Spearman est calculé sur les observations restantes.\nAppliquons ces corrélations aux données précédentes. Notez que ce simple code d’une dizaine de lignes permet d’explorer rapidement la corrélation entre deux variables selon six mesures de corrélation.\n\nlibrary(\"correlation\")\ndf1 &lt;- read.csv(\"data/bivariee/sr_rmr_mtl_2016.csv\")\nmethods &lt;- c(\"Pearson\" , \"Spearman\" , \"Biweight\" , \"Percentage\" , \"Shepherd\")\nrs &lt;- lapply(methods, function(m){\n  test &lt;- correlation::cor_test(data = df1, x = \"Hab1000Km2\", y = \"A65plus\", method = m, ci=0.95)\n  return(c(test$r, test$CI_low, test$CI_high))\n  })\ndfCorr &lt;- data.frame(do.call(rbind, rs))\nnames(dfCorr) &lt;- c(\"r\" , \"IC_2.5\" , \"IC_97.5\")\ndfCorr$method &lt;- methods\n\n# Impression du tableau avec le package stargazer\nlibrary(stargazer)\nstargazer(dfCorr, type = \"text\", summary = FALSE, rownames = FALSE, align = FALSE, digits = 3,\n          title = \"Comparaison de différentes corrélations pour les deux variables\")\n\n\n\n\n\nTableau 4.2: Comparaison de différentes corrélations pour les deux variables\n\nr\nIC 2,5 %\nIC 97,5 %\nMéthode\n\n\n\n-0.158\n-0.219\n-0.095\nPearson\n\n\n-0.120\n-0.184\n-0.055\nSpearman\n\n\n-0.137\n-0.199\n-0.074\nBiweight\n\n\n-0.174\n-0.235\n-0.111\nPercentage\n\n\n-0.119\n-0.185\n-0.052\nShepherd\n\n\n\n\n\n\nIl est intéressant de mentionner que ces trois corrélations sont rarement utilisées malgré leur pertinence dans de nombreux cas d’application. Nous faisons face ici à un cercle vicieux dans la recherche : les méthodes les plus connues sont les plus utilisées, car elles sont plus facilement acceptées par la communauté scientifique. Des méthodes plus élaborées nécessitent davantage de justification et de discussion, ce qui peut conduire à de multiples sessions de corrections/resoumissions pour qu’un article soit accepté, malgré le fait qu’elles puissent être plus adaptées au jeu de données à l’étude.\n\n4.3.5 Significativité des coefficients de corrélation\nQuelle que soit la méthode utilisée, il convient de vérifier si le coefficient de corrélation est ou non statistiquement différent de 0. En effet, nous travaillons la plupart du temps avec des données d’échantillonnage, et très rarement avec des populations complètes. En collectant un nouvel échantillon, aurions-nous obtenu des résultats différents? Le calcul de ce degré de significativité permet de quantifier le niveau de certitude quant à l’existence d’une corrélation entre les deux variables, positive ou négative. Cet objectif est réalisé en calculant la valeur de t et le nombre de degrés de liberté : \\(t=\\sqrt{\\frac{n-2}{1-r^2}}\\) et \\(dl = n-2\\) avec \\(r\\) et \\(n\\) étant respectivement le coefficient de corrélation et le nombre d’observations. De manière classique, nous utiliserons la table des valeurs critiques de la distribution de \\(t\\) : si la valeur de \\(t\\) est supérieure à la valeur critique (avec p = 0,05 et le nombre de degrés de liberté), alors le coefficient est significatif à 5 %. En d’autres termes, si la vraie corrélation entre les deux variables (calculable uniquement à partir des populations complètes) était 0, alors la probabilité de collecter notre échantillon serait inférieure à 5 %. Dans ce contexte, nous pouvons raisonnablement rejeter l’hypothèse nulle (corrélation de 0).\nLa courte syntaxe ci-dessous illustre comment calculer la valeur de \\(t\\), le nombre de degrés de liberté et la valeur de p pour une corrélation donnée.\n\ndf &lt;- read.csv(\"data/bivariee/sr_rmr_mtl_2016.csv\")\nr &lt;- cor(df$A65plus, df$LogTailInc)     # Corrélation\nn &lt;- nrow(df)                           # Nombre d'observations\ndl &lt;- nrow(df)-2                        # degrés de liberté\nt &lt;-  r*sqrt((n-2)/(1-r^2))             # Valeur de T\np &lt;- 2*(1-pt(abs(t), dl))                # Valeur de p\ncat(\"\\nCorrélation =\", round(r, 4),       \n    \"\\nValeur de t =\", round(t, 4),\n    \"\\nDegrés de liberté =\", dl,\n    \"\\np = \", round(p, 4))        \n\n\nCorrélation = -0.0693 \nValeur de t = -2.1413 \nDegrés de liberté = 949 \np =  0.0325\n\n\nPlus simplement, la fonction cor.test permet d’obtenir en une seule ligne de code le coefficient de corrélation, l’intervalle de confiance à 95 % et les valeurs de t et de p, comme illustré dans la syntaxe ci-dessous. Si l’intervalle de confiance est à cheval sur 0, c’est-à-dire que la borne inférieure est négative et la borne supérieure positive, alors le coefficient de corrélation n’est pas significatif au seuil choisi (95 % habituellement). Dans l’exemple ci-dessous, la relation linéaire entre les deux variables est significativement négative avec une corrélation de Pearson de −0,158 (p = 0,000) et un intervalle de confiance à 95 % de −0,219 à −0,095.\n\n# Intervalle de confiance à 95 %\ncor.test(df$HabKm2, df$A65plus, conf.level = .95)\n\n\n    Pearson's product-moment correlation\n\ndata:  df$HabKm2 and df$A65plus\nt = -4.9318, df = 949, p-value = 9.616e-07\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n -0.2194457 -0.0954687\nsample estimates:\n       cor \n-0.1580801 \n\n# Vous pouvez accéder à chaque sortie de la fonction cor.test comme suit :\np &lt;- cor.test(df$HabKm2, df$A65plus)\ncat(\"Valeur de corrélation = \", round(p$estimate,3), \"\\n\",\n    \"Intervalle à 95 % = [\", round(p$conf.int[1],3), \" \", round(p$conf.int[2],3), \"]\", \"\\n\",\n    \"Valeur de t = \", round(p$statistic,3), \"\\n\",\n    \"Valeur de p = \", round(p$p.value,3),\"\\n\", sep = \"\")\n\nValeur de corrélation = -0.158\nIntervalle à 95 % = [-0.219 -0.095]\nValeur de t = -4.932\nValeur de p = 0\n\n# Corrélation de Spearman\ncor.test(df$HabKm2, df$A65plus, method = \"spearman\")\n\n\n    Spearman's rank correlation rho\n\ndata:  df$HabKm2 and df$A65plus\nS = 160482182, p-value = 0.0002202\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n       rho \n-0.1195333 \n\n# Corrélation de Kendall\ncor.test(df$HabKm2, df$A65plus, method = \"kendall\")\n\n\n    Kendall's rank correlation tau\n\ndata:  df$HabKm2 and df$A65plus\nz = -3.7655, p-value = 0.0001662\nalternative hypothesis: true tau is not equal to 0\nsample estimates:\n        tau \n-0.08157061 \n\n\nOn pourra aussi modifier l’intervalle de confiance, par exemple à 90 % ou 99 %. L’intervalle de confiance et le seuil de significativité doivent être définis avant l’étude. Leur choix doit s’appuyer sur les standards de la littérature du domaine étudié, du niveau de preuve attendu et de la quantité de données.\n\n# Intervalle à 90 %\ncor.test(df$HabKm2, df$A65plus, method = \"pearson\", conf.level = .90)\n\n\n    Pearson's product-moment correlation\n\ndata:  df$HabKm2 and df$A65plus\nt = -4.9318, df = 949, p-value = 9.616e-07\nalternative hypothesis: true correlation is not equal to 0\n90 percent confidence interval:\n -0.2096826 -0.1055995\nsample estimates:\n       cor \n-0.1580801 \n\n# Intervalle à 99 %\ncor.test(df$HabKm2, df$A65plus, method = \"pearson\", conf.level = .99)\n\n\n    Pearson's product-moment correlation\n\ndata:  df$HabKm2 and df$A65plus\nt = -4.9318, df = 949, p-value = 9.616e-07\nalternative hypothesis: true correlation is not equal to 0\n99 percent confidence interval:\n -0.23839910 -0.07561336\nsample estimates:\n       cor \n-0.1580801 \n\n\nCorrélation et bootstrap. Il est possible d’estimer la corrélation en mobilisant la notion de bootstrap, soit des méthodes d’inférence statistique basées sur des réplications des données initiales par rééchantillonnage. Concrètement, la méthode du bootstrap permet une mesure de la corrélation avec un intervalle de confiance à partir de r réplications, comme illustré à partir de la syntaxe ci-dessous.\n\nlibrary(\"boot\")\ndf &lt;- read.csv(\"data/bivariee/sr_rmr_mtl_2016.csv\")\n# Fonction pour la corrélation\ncorrelation &lt;- function(df, i, X, Y, cor.type = \"pearson\"){\n  # Paramètres de la fonction :\n  # data : DataFrame\n  # X et Y : noms des variables X et Y\n  # cor.type : type de corrélation : c(\"pearson\" , \"spearman\" , \"kendall\")\n  # i : indice qui sera utilisé par les réplications (à ne pas modifier)\n  cor(df[[X]][i], df[[Y]][i], method=cor.type)\n}\n# Calcul du Bootstrap avec 5000 réplications\ncorBootstraped &lt;- boot(data = df, # nom du tableau\n                     statistic = correlation, # appel de la fonction à répliquer \n                     R = 5000, # nombre de réplications\n                     X = \"A65plus\",\n                     Y = \"HabKm2\", \n                     cor.type = \"pearson\")\n# Histogramme pour les valeurs de corrélation issues du Bootstrap\nplot(corBootstraped)\n# Corrélation \"bootstrapée\"\ncorBootstraped\n\n\nORDINARY NONPARAMETRIC BOOTSTRAP\n\n\nCall:\nboot(data = df, statistic = correlation, R = 5000, X = \"A65plus\", \n    Y = \"HabKm2\", cor.type = \"pearson\")\n\n\nBootstrap Statistics :\n      original       bias    std. error\nt1* -0.1580801 -0.001275033   0.0406925\n\n# Intervalle de confiance du bootstrap à 95 %\nboot.ci(boot.out = corBootstraped, conf = 0.95, type = \"all\")\n\nBOOTSTRAP CONFIDENCE INTERVAL CALCULATIONS\nBased on 5000 bootstrap replicates\n\nCALL : \nboot.ci(boot.out = corBootstraped, conf = 0.95, type = \"all\")\n\nIntervals : \nLevel      Normal              Basic         \n95%   (-0.2366, -0.0770 )   (-0.2430, -0.0851 )  \n\nLevel     Percentile            BCa          \n95%   (-0.2310, -0.0732 )   (-0.2178, -0.0456 )  \nCalculations and Intervals on Original Scale\n\n# Comparaison de l'intervalle classique basé sur la valeur de T\np &lt;- cor.test(df$HabKm2, df$A65plus)\ncat(round(p$estimate,5), \" [\", round(p$conf.int[1],4), \" \", round(p$conf.int[2],4), \"]\", sep = \"\")\n\n-0.15808 [-0.2194 -0.0955]\n\n\n\n\nFigure 4.8: Histogramme pour les valeurs de corrélation issues du Bootstrap\n\n\n\nLe bootstrap renvoie un coefficient de corrélation de Pearson de −0,158. Les intervalles de confiance obtenus à partir des différentes méthodes d’estimation (normale, basique, pourcentage et BCa) ne sont pas à cheval sur 0, indiquant que le coefficient est significatif à 5 %.\n\n4.3.6 Corrélation partielle\n\n\n\n\n\nRelation entre deux variables une fois prise en compte une autre variable dite de contrôle\n\n\nLa corrélation partielle permet d’évaluer la relation linéaire entre deux variables quantitatives continues, après avoir contrôlé une ou plusieurs autres variables quantitatives (dites variables de contrôle).\nEn études urbaines, nous pourrions vouloir vérifier si deux variables sont ou non associées après avoir contrôlé la densité de population ou encore la distance au centre-ville.\n\n\nLe coefficient de corrélation partielle peut être calculé pour plusieurs mesures de corrélation (notamment, Pearson, Spearman et Kendall). Variant aussi de −1 à 1, il est calculé comme suit :\n\\[\nr_{ABC} = \\frac{r_{AB}-r_{AC}r_{BC}}{\\sqrt{(1-r_{AC}^2)(1-r_{BC}^2)}}\n\\tag{4.6}\\]\navec A et B étant les deux variables pour lesquelles nous souhaitons évaluer la relation linéaire, une fois contrôlée la variable C; \\(r\\) étant le coefficient de corrélation (Pearson, Spearman ou Kendall) entre deux variables.\nDans l’exemple ci-dessous, nous voulons estimer la relation linéaire entre le pourcentage de personnes à faible revenu et la couverture végétale au niveau des îlots de l’île de Montréal, une fois contrôlée la densité de population. En effet, plus cette dernière est forte, plus la couverture végétale est faible (\\(r\\) de Pearson = −0,563). La valeur du \\(r\\) de Pearson s’élève à −0,513 entre le pourcentage de personnes à faible revenu dans la population totale de l’îlot et la couverture végétale. Une fois la densité de population contrôlée, elle chute à −0,316. Pour calculer la corrélation partielle, nous pouvons utiliser la fonction pcor.test du package ppcor.\n\nlibrary(\"foreign\")\nlibrary(\"ppcor\")\ndfveg &lt;- read.dbf(\"data/bivariee/IlotsVeg2006.dbf\")\n# Corrélation entre les trois variables\nround(cor(dfveg[, c(\"VegPct\", \"Pct_FR\" , \"LogDens\")], method = \"p\"), 3)\n\n        VegPct Pct_FR LogDens\nVegPct   1.000 -0.513  -0.563\nPct_FR  -0.513  1.000   0.513\nLogDens -0.563  0.513   1.000\n\n# Corrélation partielle avec la fonction pcor.test entre :\n# la couverture végétale de l'îlot (%) et\n# le pourcentage de personnes à faible revenu\n# une fois contrôlée la densité de population\npcor.test(dfveg$Pct_FR, dfveg$VegPct, dfveg$LogDens, method = \"p\")\n\n    estimate       p.value statistic     n gp  Method\n1 -0.3155194 8.093159e-235 -33.59772 10213  1 pearson\n\n# Calcul de la corrélation partielle avec la formule\ncorAB &lt;- cor(dfveg$VegPct, dfveg$Pct_FR, method = \"p\")\ncorAC &lt;- cor(dfveg$VegPct, dfveg$LogDens, method = \"p\")\ncorBC &lt;- cor(dfveg$Pct_FR, dfveg$LogDens, method = \"p\")\nCorP  &lt;- (corAB - (corAC*corBC)) / sqrt((1-corAC^2)*(1-corBC^2))\ncat(\"Corr. partielle avec ppcor  = \", \n    round(pcor.test(dfveg$Pct_FR,  dfveg$VegPct, dfveg$LogDens, method=\"p\")$estimate,5),\n    \"\\nCorr. partielle (formule)  = \", round(CorP, 5))\n\nCorr. partielle avec ppcor  =  -0.31552 \nCorr. partielle (formule)  =  -0.31552\n\n\n\n4.3.7 Mise en œuvre dans R\nComme vous l’aurez compris, il est possible d’arriver au même résultat par différents moyens. Pour calculer les corrélations, nous avons utilisé jusqu’à présent les fonctions de base cor et cor.test. Il est aussi possible de recourir à des fonctions d’autres packages, dont notamment :\n\nHmisc, dont la fonction rcorr permet de calculer des corrélations de Pearson et de Spearman (mais non celle de Kendall) avec les valeurs de p.\npsych, dont la fonction corr.test permet d’obtenir une matrice de corrélation (Pearson, Spearman et Kendall), les intervalles de confiance et les valeurs de p.\nstargazer pour créer de beaux tableaux d’une matrice de corrélation en HTML, en LaTeX ou en ASCII.\napaTables pour créer un tableau avec une matrice de corrélation dans un fichier Word.\ncorrelation pour aller plus loin et explorer les corrélations bayésiennes, robustes, non linéaires ou multiniveaux.\n\n\ndf1 &lt;- read.csv(\"data/bivariee/sr_rmr_mtl_2016.csv\")\nlibrary(\"Hmisc\")\nlibrary(\"stargazer\")\nlibrary(\"apaTables\")\nlibrary(\"dplyr\")\n# Corrélations de Pearson et Spearman et valeurs de p \n# avec la fonction rcorr de Hmisc pour deux variables\nHmisc::rcorr(df1$RevMedMen, df1$Locataire, type = \"pearson\")\n\n      x     y\nx  1.00 -0.78\ny -0.78  1.00\n\nn= 951 \n\n\nP\n  x  y \nx     0\ny  0   \n\nHmisc::rcorr(df1$RevMedMen, df1$Locataire, type = \"spearman\")\n\n      x     y\nx  1.00 -0.91\ny -0.91  1.00\n\nn= 951 \n\n\nP\n  x  y \nx     0\ny  0   \n\n# Matrice de corrélation avec la fonction rcorr de Hmisc pour plus de variables\n# Nous créons au préalable un vecteur avec les noms des variables à sélectionner\nVars &lt;- c(\"RevMedMen\" , \"Locataire\", \"LogTailInc\" , \"A65plus\" , \"ImgRec\", \"HabKm2\", \"FaibleRev\")\nHmisc::rcorr(df1[, Vars] %&gt;% as.matrix())\n\n           RevMedMen Locataire LogTailInc A65plus ImgRec HabKm2 FaibleRev\nRevMedMen       1.00     -0.78      -0.46   -0.07  -0.46  -0.49     -0.74\nLocataire      -0.78      1.00       0.56    0.00   0.64   0.71      0.88\nLogTailInc     -0.46      0.56       1.00   -0.07   0.82   0.48      0.62\nA65plus        -0.07      0.00      -0.07    1.00  -0.06  -0.16     -0.01\nImgRec         -0.46      0.64       0.82   -0.06   1.00   0.56      0.68\nHabKm2         -0.49      0.71       0.48   -0.16   0.56   1.00      0.64\nFaibleRev      -0.74      0.88       0.62   -0.01   0.68   0.64      1.00\n\nn= 951 \n\n\nP\n           RevMedMen Locataire LogTailInc A65plus ImgRec HabKm2 FaibleRev\nRevMedMen            0.0000    0.0000     0.0441  0.0000 0.0000 0.0000   \nLocataire  0.0000              0.0000     0.9594  0.0000 0.0000 0.0000   \nLogTailInc 0.0000    0.0000               0.0325  0.0000 0.0000 0.0000   \nA65plus    0.0441    0.9594    0.0325             0.0682 0.0000 0.6796   \nImgRec     0.0000    0.0000    0.0000     0.0682         0.0000 0.0000   \nHabKm2     0.0000    0.0000    0.0000     0.0000  0.0000        0.0000   \nFaibleRev  0.0000    0.0000    0.0000     0.6796  0.0000 0.0000          \n\n# Avec la fonction corr.test du package psych pour avoir la matrice de corrélation\n# (Pearson, Spearman et Kendall), les intervalles de confiance et les valeurs de p\nprint(psych::corr.test(df[, Vars], \n              method = \"kendall\",  \n              ci = TRUE, alpha = 0.05), short = FALSE) \n\nCall:psych::corr.test(x = df[, Vars], method = \"kendall\", alpha = 0.05, \n    ci = TRUE)\nCorrelation matrix \n           RevMedMen Locataire LogTailInc A65plus ImgRec HabKm2 FaibleRev\nRevMedMen       1.00     -0.74      -0.43   -0.03  -0.41  -0.45     -0.79\nLocataire      -0.74      1.00       0.45   -0.03   0.47   0.56      0.75\nLogTailInc     -0.43      0.45       1.00   -0.01   0.59   0.41      0.51\nA65plus        -0.03     -0.03      -0.01    1.00  -0.02  -0.08      0.01\nImgRec         -0.41      0.47       0.59   -0.02   1.00   0.50      0.52\nHabKm2         -0.45      0.56       0.41   -0.08   0.50   1.00      0.50\nFaibleRev      -0.79      0.75       0.51    0.01   0.52   0.50      1.00\nSample Size \n[1] 951\nProbability values (Entries above the diagonal are adjusted for multiple tests.) \n           RevMedMen Locataire LogTailInc A65plus ImgRec HabKm2 FaibleRev\nRevMedMen        0.0      0.00        0.0    1.00      0   0.00         0\nLocataire        0.0      0.00        0.0    1.00      0   0.00         0\nLogTailInc       0.0      0.00        0.0    1.00      0   0.00         0\nA65plus          0.4      0.37        0.7    0.00      1   0.07         1\nImgRec           0.0      0.00        0.0    0.58      0   0.00         0\nHabKm2           0.0      0.00        0.0    0.01      0   0.00         0\nFaibleRev        0.0      0.00        0.0    0.77      0   0.00         0\n\n Confidence intervals based upon normal theory.  To get bootstrapped values, try cor.ci\n            raw.lower raw.r raw.upper raw.p lower.adj upper.adj\nRvMdM-Loctr     -0.77 -0.74     -0.71  0.00     -0.78     -0.69\nRvMdM-LgTlI     -0.49 -0.43     -0.38  0.00     -0.51     -0.36\nRvMdM-A65pl     -0.09 -0.03      0.04  0.40     -0.11      0.05\nRvMdM-ImgRc     -0.46 -0.41     -0.35  0.00     -0.48     -0.33\nRvMdM-HbKm2     -0.50 -0.45     -0.39  0.00     -0.52     -0.37\nRvMdM-FblRv     -0.81 -0.79     -0.76  0.00     -0.82     -0.75\nLoctr-LgTlI      0.40  0.45      0.50  0.00      0.38      0.52\nLoctr-A65pl     -0.09 -0.03      0.03  0.37     -0.11      0.05\nLoctr-ImgRc      0.42  0.47      0.52  0.00      0.39      0.54\nLoctr-HbKm2      0.51  0.56      0.60  0.00      0.49      0.62\nLoctr-FblRv      0.72  0.75      0.78  0.00      0.71      0.79\nLgTlI-A65pl     -0.08 -0.01      0.05  0.70     -0.09      0.06\nLgTlI-ImgRc      0.54  0.59      0.63  0.00      0.52      0.65\nLgTlI-HbKm2      0.36  0.41      0.46  0.00      0.34      0.48\nLgTlI-FblRv      0.46  0.51      0.56  0.00      0.44      0.58\nA65pl-ImgRc     -0.08 -0.02      0.05  0.58     -0.10      0.06\nA65pl-HbKm2     -0.14 -0.08     -0.02  0.01     -0.17      0.00\nA65pl-FblRv     -0.05  0.01      0.07  0.77     -0.05      0.07\nImgRc-HbKm2      0.46  0.50      0.55  0.00      0.43      0.57\nImgRc-FblRv      0.47  0.52      0.57  0.00      0.45      0.59\nHbKm2-FblRv      0.46  0.50      0.55  0.00      0.43      0.57\n\n# Création d'un tableau pour une matrice de corrélation\n# changer le paramètre type pour 'html' or 'latex' si souhaité\np &lt;- cor(df1[, Vars], method=\"pearson\")\nstargazer(p, title = \"Correlation Matrix\", type = \"text\")\n\n\nCorrelation Matrix\n=========================================================================\n           RevMedMen Locataire LogTailInc A65plus ImgRec HabKm2 FaibleRev\n-------------------------------------------------------------------------\nRevMedMen      1      -0.785     -0.461   -0.065  -0.458 -0.489  -0.743  \nLocataire   -0.785       1       0.562    -0.002  0.645  0.708    0.879  \nLogTailInc  -0.461     0.562       1      -0.069  0.816  0.475    0.622  \nA65plus     -0.065    -0.002     -0.069      1    -0.059 -0.158  -0.013  \nImgRec      -0.458     0.645     0.816    -0.059    1    0.561    0.678  \nHabKm2      -0.489     0.708     0.475    -0.158  0.561    1      0.642  \nFaibleRev   -0.743     0.879     0.622    -0.013  0.678  0.642      1    \n-------------------------------------------------------------------------\n\n# Créer un tableau avec la matrice de corrélation \n# dans un fichier Word (.doc)\napaTables::apa.cor.table(df1[, c(\"RevMedMen\" , \"Locataire\" , \"LogTailInc\")], \n                         filename = \"data/bivariee/TitiLaMatrice.doc\",\n                         show.conf.interval = TRUE,\n                         landscape = TRUE)\n\n\n\nMeans, standard deviations, and correlations with confidence intervals\n \n\n  Variable      M        SD       1            2         \n  1. RevMedMen  66065.50 26635.27                        \n                                                         \n  2. Locataire  45.05    26.33    -.78**                 \n                                  [-.81, -.76]           \n                                                         \n  3. LogTailInc 5.54     4.82     -.46**       .56**     \n                                  [-.51, -.41] [.52, .60]\n                                                         \n\nNote. M and SD are used to represent mean and standard deviation, respectively.\nValues in square brackets indicate the 95% confidence interval.\nThe confidence interval is a plausible range of population correlations \nthat could have caused the sample correlation (Cumming, 2014).\n * indicates p &lt; .05. ** indicates p &lt; .01.\n \n\n\n\n\n\n\n\nUne image vaut mille mots, surtout pour une matrice de corrélation!\n\n\nLe package corrplot vous permet justement de construire de belles figures avec une matrice de corrélation (figures 4.9 et 4.10). L’intérêt de ce type de figure est de repérer rapidement des associations intéressantes lorsque nous calculons les corrélations entre un grand nombre de variables.\n\n\n\nlibrary(\"corrplot\")\nlibrary(\"ggpubr\")\ndf1 &lt;- read.csv(\"data/bivariee/sr_rmr_mtl_2016.csv\")\nVars &lt;- c(\"RevMedMen\" , \"Locataire\", \"LogTailInc\" , \"A65plus\" , \"ImgRec\", \"HabKm2\", \"FaibleRev\")\np &lt;- cor(df1[, Vars], method=\"pearson\")\ncouleurs &lt;- colorRampPalette(c(\"#053061\", \"#2166AC\" , \"#4393C3\", \"#92C5DE\",\n                               \"#D1E5F0\", \"#FFFFFF\", \"#FDDBC7\", \"#F4A582\",\n                               \"#D6604D\", \"#B2182B\", \"#67001F\"))\ncorrplot::corrplot(p, addrect = 3, method=\"number\",\n                   diag = FALSE, col=couleurs(100))\n\n\n\nFigure 4.9: Matrice de corrélation avec corrplot (chiffres)\n\n\n\n\nfig2 &lt;- corrplot.mixed(p, lower=\"number\", lower.col = \"black\", \n                      upper = \"ellipse\", upper.col=couleurs(100))\n\n\n\nFigure 4.10: Matrice de corrélation avec corrplot (chiffres et ellipses)\n\n\n\n\n4.3.8 Comment rapporter des valeurs de corrélations?\nBien qu’il n’y ait pas qu’une seule manière de reporter des corrélations, voici quelques lignes directrices pour vous guider :\n\nSignaler si la corrélation est faible, modérée ou forte.\nIndiquer si la corrélation est positive ou négative. Toutefois, ce n’est pas une obligation, car nous pouvons rapidement le constater avec le signe du coefficient.\nMettre le r et le p en italique et en minuscules.\nDeux décimales uniquement pour le \\(r\\) (sauf si une plus grande précision se justifie dans le domaine d’étude).\nTrois décimales pour la valeur de p. Si elle est inférieure à 0,001, écrire plutôt p &lt; 0,001.\nIndiquer éventuellement le nombre de degrés de liberté, soit \\(r(dl)=...\\)\n\nVoici des exemples :\n\nLa corrélation entre les variables revenu médian des ménages et pourcentage de locataires est fortement négative (r = −0,78, p &lt; 0,001).\nLa corrélation entre les variables revenu médian des ménages et pourcentage de locataires est forte (r(949) = −0,78, p &lt; 0,001).\nLa corrélation entre les variables densité de population et revenu médian des ménages est modérée (r = −0,49, p &lt; 0,001).\nLa corrélation entre les variables densité de population et pourcentage de 65 ans et plus n’est pas significative (r = −0,08, p = 0,07).\n\nPour un texte en anglais, référez-vous à : https://www.socscistatistics.com/tutorials/correlation/default.aspx."
  },
  {
    "objectID": "04-bivarieeQuantiQuanti.html#sec-044",
    "href": "04-bivarieeQuantiQuanti.html#sec-044",
    "title": "4  Relation linéaire entre deux variables quantitatives",
    "section": "\n4.4 Régression linéaire simple",
    "text": "4.4 Régression linéaire simple\n\n\n\n\n\nComment expliquer et prédire une variable continue en fonction d’une autre variable?\n\n\nRépondre à cette question relève de la statistique inférentielle. Il s’agit en effet d’établir une équation simple du type \\(Y = a + bX\\) pour expliquer et prédire les valeurs d’une variable dépendante (Y) à partir d’une variable indépendante (X). L’équation de la régression est construite grâce à un jeu de données (un échantillon). À partir de cette équation, il est possible de prédire la valeur attendue de Y pour n’importe quelle valeur de X. Nous appelons cette équation un modèle, car elle cherche à représenter la réalité de façon simplifiée.\nLa régression linéaire simple relève ainsi de la statistique inférentielle et se distingue ainsi de la covariance (section 4.2) et de la corrélation (section 4.3) qui relèvent quant à eux de la statistique bivariée descriptive et exploratoire.\nPar exemple, la régression linéaire simple pourrait être utilisée pour expliquer les notes d’un groupe d’étudiants et d’étudiantes à un examen (variable dépendante Y) en fonction du nombre d’heures consacrées à la révision des notes de cours (variable indépendante X). Une fois l’équation de régression déterminée et si le modèle est efficace, nous pourrons prédire les notes des personnes inscrites au cours la session suivante en fonction du temps qu’ils ou qu’elles prévoient passer à étudier, et ce, avant l’examen.\nFormulons un exemple d’application de la régression linéaire simple en études urbaines. Dans le cadre d’une étude sur les îlots de chaleur urbains, la température de surface (variable dépendante) pourrait être expliquée par la proportion de la superficie de l’îlot couverte par de la végétation (variable indépendante). Nous supposons alors que plus cette proportion est importante, plus la température est faible et inversement, soit une relation linéaire négative. Si le modèle est efficace, nous pourrions prédire la température moyenne des îlots d’une autre municipalité pour laquelle nous ne disposons pas d’une carte de température, et repérer ainsi les îlots de chaleur potentiels. Bien entendu, il est peu probable que nous arrivions à prédire efficacement la température moyenne des îlots avec uniquement la couverture végétale comme variable explicative. En effet, bien d’autres caractéristiques de la forme urbaine peuvent influencer ce phénomène comme la densité du bâti, la couleur des toits, les occupations du sol présentes, l’effet des canyons urbains, etc. Il faudrait alors inclure non pas une, mais plusieurs variables explicatives (indépendantes).\nAinsi, nous distinguons la régression linéaire simple (une seule variable indépendante) de la régression linéaire multiple (plusieurs variables indépendantes); cette dernière est largement abordée au chapitre 7.\n\n\nDans cette section, nous décrivons succinctement la régression linéaire simple. Concrètement, nous voyons comment déterminer la droite de régression, interpréter ses différents paramètres du modèle et évaluer la qualité d’ajustement du modèle. Nous n’abordons ni les hypothèses liées au modèle de régression linéaire des moindres carrés ordinaires (MCO) ni les conditions d’application. Ces éléments sont expliqués au chapitre 7, consacré à la régression linéaire multiple.\n\n\n\n\n\nCorrélation, régression simple et causalité : attention aux raccourcis!\n\n\nSi une variable X explique et prédit efficacement une variable Y, cela ne veut pas dire pour autant qu’X cause Y. Autrement dit, la corrélation, soit le degré d’association entre deux variables, ne signifie pas qu’il existe un lien de causalité entre elles.\nPremièrement, la variable explicative (X, indépendante) doit absolument précéder la variable à expliquer (Y, dépendante). Par exemple, l’âge (X) peut influencer le sentiment de sécurité (Y). Mais, le sentiment de sécurité ne peut en aucun cas influencer l’âge. Par conséquent, l’âge ne peut conceptuellement pas être la variable dépendante dans cette relation.\nDeuxièmement, bien qu’une variable puisse expliquer efficacement une autre variable, elle peut être un facteur confondant. Prenons deux exemples bien connus :\n\nAvoir les doigts jaunes est associé au cancer du poumon. Bien entendu, les doigts jaunes ne causent pas le cancer : c’est un facteur confondant puisque fumer augmente les risques du cancer du poumon et jaunit aussi les doigts.\n\nDans un article intitulé Chocolate Consumption, Cognitive Function, and Nobel Laureates, Messerli (2012) a trouvé une corrélation positive entre la consommation de chocolat par habitant et le nombre de prix Nobel pour dix millions d’habitants pour 23 pays. Ce résultat a d’ailleurs été rapporté par de nombreux médias, sans pour autant que Messerli (2012) et les journalistes concluent à un lien de causalité entre les deux variables :\n\nRadio Canada\nLa Presse\nLe Point.\n\n\n\nLes chercheurs et les chercheuses savent bien que la consommation de chocolat ne permet pas d’obtenir des résultats intéressants et de les publier dans des revues prestigieuses; c’est plutôt le café ! Plus sérieusement, il est probable que les pays les plus riches investissent davantage dans la recherche et obtiennent ainsi plus de prix Nobel. Dans les pays les plus riches, il est aussi probable que l’on consomme plus de chocolat, considéré comme un produit de luxe dans les pays les plus pauvres.\nPour approfondir le sujet sur la confusion entre corrélation, régression simple et causalité, vous pouvez visionner cette courte vidéo ludique de vulgarisation.\nL’association entre deux variables peut aussi être simplement le fruit du hasard. Si nous explorons de très grandes quantités de données (avec un nombre impressionnant d’observations et de variables), soit une démarche relevant du forage ou de la fouille de données (data mining en anglais), le hasard fera que nous risquons d’obtenir des corrélations surprenantes entre certaines variables. Prenons un exemple concret : admettons que nous ayons collecté 100 variables et que nous calculons les corrélations entre chaque paire de variables. Nous obtenons une matrice de corrélation de 100 x 100, à laquelle nous pouvons enlever la diagonale et une moitié de la matrice, ce qui nous laisse un total de 4950 corrélations différentes. Admettons que nous choisissions un seuil de significativité de 5 %, nous devons alors nous attendre à ce que le hasard produise des résultats significatifs dans 5 % des cas. Sur 4950 corrélations, cela signifie qu’environ 247 corrélations seront significatives, et ce, indépendamment de la nature des données. Nous pouvons aisément illustrer ce fait avec la syntaxe suivante :\n\nlibrary(\"Hmisc\")\nnbVars &lt;- 100 # nous utilisons 100 variables générées aléatoirement pour l'expérience\nnbExperiment &lt;- 1000 # nous reproduirons 1000 fois l'expérience avec les 100 variables\n# Le nombre de variables significatives par expérience est enregistré dans Results\nResults &lt;- c()\n# Itérons pour chaque expérimentation (1000 fois)\nfor(i in 1:nbExperiment){\n  Datas &lt;- list()\n  # Générons 100 variables aléatoires normalement distribuées\n  for (j in 1:nbVars){\n    Datas[[j]] &lt;- rnorm(150)\n  }\n  DF &lt;- do.call(\"cbind\", datas)\n  # Calculons la matrice de corrélation pour les 100 variables\n  cor_mat &lt;- rcorr(DF)\n  # Comptons combien de fois les corrélations étaient significatives\n  Sign &lt;- table(cor_mat$P&lt;0.05)\n  NbPairs &lt;- Sign[[\"TRUE\"]]/2\n  # Ajoutons les résultats dans Results\n  Results &lt;- c(Results, NbPairs)\n}\n# Transformons Results en un DataFrame\ndf &lt;- data.frame(Values = Results)\n# Affichons le résultat dans un graphique\nggplot(df, aes(x = Values)) + \n  geom_histogram(aes(y =..density..), \n                 colour = \"black\", \n                 fill = \"white\") +\n  stat_function(fun = dnorm, args = list(mean = mean(df$Values), \n                sd = sd(df$Values)), color = \"blue\")+\n  geom_vline(xintercept = mean(df$Values), color = \"red\", size = 1.2)+\n  annotate(\"text\", x=0, y = 0.028, \n           label = paste(\"Nombre moyen de corrélations significatives\\n\n                         sur 1000 réplications : \",\n                         round(mean(df$Values),0), sep = \"\"), hjust=\"left\")+\n  xlab(\"Nombre de corrélations significatives\")+\n  ylab(\"densité\")\n\n\n\nFigure 4.11: Corrélations significatives obtenues aléatoirement\n\n\n\n\n4.4.1 Principe de base de la régression linéaire simple\nLa régression linéaire simple vise à déterminer une droite (une fonction linéaire) qui résume le mieux la relation linéaire entre une variable dépendante (Y) et une variable indépendante (X) : \\[\n\\widehat{y_i} = \\beta_{0} + \\beta_{1}x_{i}\n\\tag{4.7}\\]\navec \\(\\widehat{y_i}\\) et \\(x_{i}\\) qui sont respectivement la valeur prédite de la variable dépendante et la valeur de la variable indépendante pour l’observation \\(i\\). \\(\\beta_{0}\\) est la constante (intercept en anglais) et représente la valeur prédite de la variable Y quand X est égale à 0. \\(\\beta_{1}\\) est le coefficient de régression pour la variable X, soit la pente de la droite. Ce coefficient nous informe sur la relation entre les deux variables : s’il est positif, la relation est positive; s’il est négatif, la relation est négative; s’il est proche de 0, la relation est nulle (la droite est alors horizontale). Plus la valeur absolue de \\(\\beta_{1}\\) est élevée, plus la pente est forte et plus la variable Y varie à chaque changement d’une unité de la variable X.\nConsidérons un exemple fictif de dix municipalités d’une région métropolitaine pour lesquelles nous disposons de deux variables : le pourcentage de personnes occupées se rendant au travail principalement à vélo et la distance entre chaque municipalité et le centre-ville de la région métropolitaine (tableau 4.3).\n\n\n\n\nTableau 4.3: Données fictives sur l’utilisation du vélo par municipalité\n\nMunicipalité\nVélo\nKMCV\n\n\n\nA\n12,5\n14,135\n\n\nB\n13,5\n10,065\n\n\nC\n15,8\n7,762\n\n\nD\n15,9\n11,239\n\n\nE\n17,6\n7,706\n\n\nF\n18,5\n7,195\n\n\nG\n21,2\n7,953\n\n\nH\n23,0\n4,293\n\n\nI\n25,3\n5,225\n\n\nJ\n30,2\n2,152\n\n\n\n\n\n\nD’emblée, à la lecture du nuage de points (figure 4.12), nous décelons une forte relation linéaire négative entre les deux variables : plus la distance entre la municipalité et le centre-ville de la région métropolitaine augmente, plus le pourcentage de cyclistes est faible, ce qui est confirmé par le coefficient de corrélation (r = −0,90). La droite de régression (en rouge à la figure 4.12) qui résume le mieux la relation entre Vélo (variable dépendante) et KmCV (variable indépendante) s’écrit alors : Vélo = 30,603 − 1,448 x KmCV.\nLa valeur du coefficient de régression (\\(\\beta_{1}\\)) est de −1,448. Le signe de ce coefficient décrit une relation négative entre les deux variables. Ainsi, à chaque ajout d’une unité de la distance entre la municipalité et le centre-ville (exprimée en kilomètres), le pourcentage de cyclistes diminue de 1,448. Retenez que l’unité de mesure de la variable dépendante est très importante pour bien interpréter le coefficient de régression. En effet, si la distance au centre-ville n’était pas exprimée en kilomètres, mais plutôt en mètres, \\(\\beta_1\\) serait égal à −0,001448. Dans la même optique, l’ajout de 10 km de distance entre une municipalité et le centre-ville fait diminuer le pourcentage de cyclistes de −14,48 points de pourcentage.\nAvec, cette équation de régression, il est possible de prédire le pourcentage de cyclistes pour n’importe quelle municipalité de la région métropolitaine. Par exemple, pour des distances de 5, 10 ou 20 kilomètres, les pourcentages de cyclistes seraient de :\n\n\\(\\widehat{y_i} = \\mbox{30,603} + (\\mbox{-1,448} \\times \\mbox{5 km) = 23,363}\\)\n\\(\\widehat{y_i} = \\mbox{30,603} + (\\mbox{-1,448} \\times \\mbox{10 km) = 8,883}\\)\n\\(\\widehat{y_i} = \\mbox{30,603} + (\\mbox{-1,448} \\times \\mbox{20 km) = 1,643}\\)\n\n\n\n\n\nFigure 4.12: Relation linéaire entre l’utilisation du vélo et la distance au centre-ville\n\n\n\n\n4.4.2 Formulation de la droite de régression des moindres carrés ordinaires\nReste à savoir comment sont estimés les différents paramètres de l’équation, soit \\(\\beta_0\\) et \\(\\beta_1\\). À la figure 4.13, les points noirs représentent les valeurs observées (\\(y_i\\)) et les points bleus, les valeurs prédites (\\(\\widehat{y_i}\\)) par l’équation du modèle. Les traits noirs verticaux représentent, pour chaque observation \\(i\\), l’écart entre la valeur observée et la valeur prédite, dénommé résidu (\\(\\epsilon_i\\), prononcez epsilon de i ou plus simplement le résidu pour i ou le terme d’erreur de i). Si un point est au-dessus de la droite de régression, la valeur observée est alors supérieure à la valeur prédite (\\(y_i &gt; \\widehat{y_i}\\)) et inversement, si le point est au-dessous de la droite (\\(y_i &lt; \\widehat{y_i}\\)). Plus cet écart (\\(\\epsilon_i\\)) est important, plus l’observation s’éloigne de la prédiction du modèle et, par extension, moins bon est le modèle. Au tableau 4.4, vous constaterez que la somme des résidus est égale à zéro. La méthode des moindres carrés ordinaires (MCO) vise à minimiser les écarts au carré entre les valeurs observées (\\(y_i\\)) et prédites (\\(\\beta_0+\\beta_1 x_i\\), soit \\(\\widehat{y_i}\\)) :\n\\[\nmin\\sum_{i=1}^n{(y_i-(\\beta_0+\\beta_1 x_i))^2}\n\\tag{4.8}\\]\nPour minimiser ces écarts, le coefficient de régression \\(\\beta_1\\) représente le rapport entre la covariance entre X et Y et la variance de Y (équation 4.9), tandis que la constante \\(\\beta_0\\) est la moyenne de la variable Y moins le produit de la moyenne de X et de son coefficient de régression (équation 4.10).\n\\[\n\\beta_1 = \\frac{\\sum_{i=1}^n (x_{i}-\\bar{x})(y_{i}-\\bar{y})}{\\sum_{i=1}^n (x_i-\\bar{x})^2} = \\frac{cov(X,Y)}{var(X)}\n\\tag{4.9}\\]\n\\[\n\\beta_0 = \\widehat{Y}-\\beta_1 \\widehat{X}\n\\tag{4.10}\\]\n\n\n\n\nFigure 4.13: Droite de régression, valeurs observées, prédites et résidus\n\n\n\n\n\n\n\nTableau 4.4: Valeurs observées, prédites et résidus\n\nMunicipalité\nVélo\nKmCV\nValeur prédite\nRésidu\nRésidu au carré\n\n\n\nA\n12,5\n14,135\n10,138\n2,362\n5,579\n\n\nB\n13,5\n10,065\n16,031\n-2,531\n6,406\n\n\nC\n15,8\n7,762\n19,365\n-3,565\n12,709\n\n\nD\n15,9\n11,239\n14,331\n1,569\n2,462\n\n\nE\n17,6\n7,706\n19,446\n-1,846\n3,408\n\n\nF\n18,5\n7,195\n20,186\n-1,686\n2,843\n\n\nG\n21,2\n7,953\n19,089\n2,111\n4,456\n\n\nH\n23,0\n4,293\n24,388\n-1,388\n1,927\n\n\nI\n25,3\n5,225\n23,038\n2,262\n5,117\n\n\nJ\n30,2\n2,152\n27,488\n2,712\n7,355\n\n\nSomme\n–\n–\n–\n0,000\n52,262\n\n\n\n\n\n\n\n4.4.3 Mesure de la qualité d’ajustement du modèle\nLes trois mesures les plus courantes pour évaluer la qualité d’ajustement d’un modèle de régression linéaire simple sont l’erreur quadratique moyenne (root-mean-square error en anglais, RMSE), le coefficient de détermination (R2) et la statistique F de Fisher. Pour mieux appréhender le calcul de ces trois mesures, rappelons que l’équation de régression s’écrit :\n\\[\ny_i = \\beta_0 + \\beta_1 x_1+ \\epsilon_i \\Rightarrow Y= \\beta_0 + \\beta_1 X + \\epsilon\n\\tag{4.11}\\]\nElle comprend ainsi une partie de Y qui est expliquée par le modèle et une autre partie non expliquée, soit \\(\\epsilon\\), appelée habituellement le terme d’erreur. Ce terme d’erreur pourrait représenter d’autres variables explicatives qui n’ont pas été prises en compte pour prédire la variable indépendante ou une forme de variation aléatoire inexplicable présente lors de la mesure.\n\\[\nY  = \\underbrace{\\beta_0 + \\beta_1 X}_{\\mbox{partie expliquée par le modèle}}+ \\underbrace{\\epsilon}_{\\mbox{partie non expliquée}}\n\\tag{4.12}\\]\nPar exemple, pour la municipalité A au tableau 4.4, nous avons : \\(y_A = \\widehat{y}_A - \\epsilon_A \\Rightarrow \\mbox{12,5} = \\mbox{10,138}+\\mbox{2,362}\\). Souvenez-vous que la variance d’une variable est la somme des écarts à la moyenne, divisée par le nombre d’observations. Par extension, il est alors possible de décomposer la variance de Y comme suit :\n\\[\n\\underbrace{\\sum_{i=1}^n (y_{i}-\\bar{y})^2}_{\\mbox{variance de Y}} = \\underbrace{\\sum_{i=1}^n (\\widehat{y}_i-\\bar{y})^2}_{\\mbox{var. expliquée}} + \\underbrace{\\sum_{i=1}^n (y_{i}-\\widehat{y})^2}_{\\mbox{var. non expliquée}} \\Rightarrow\nSCT = SCE + SCR\n\\tag{4.13}\\]\navec :\n\nSCT est la somme des écarts au carré des valeurs observées à la moyenne (total sum of squares en anglais)\nSCE est la somme des écarts au carré des valeurs prédites à la moyenne (regression sum of squares en anglais)\nSCR est la somme des carrés des résidus (sum of squared errors en anglais).\n\nAutrement dit, la variance totale est égale à la variance expliquée plus la variance non expliquée. Au tableau 4.5, vous pouvez repérer les valeurs de SCT, SCE et SCR et constater que 279,30 = 227,04 + 52,26 et 27,93 = 22,70 + 5,23.\n\n\n\n\nTableau 4.5: Calcul du coefficient de détermination\n\n\n\n\n\n\n\n\n\n\nMunicipalité\n\\(y_i\\)\n\\(\\widehat{y}_i\\)\n\\(\\epsilon_i\\)\n\\((y_i-\\bar{y})^2\\)\n\\((\\widehat{y}_i-y_i)^2\\)\n\\(\\epsilon_i^2\\)\n\n\n\nA\n12,50\n10,14\n2,36\n46,92\n84,86\n5,58\n\n\nB\n13,50\n16,03\n-2,53\n34,22\n11,02\n6,41\n\n\nC\n15,80\n19,37\n-3,57\n12,60\n0,00\n12,71\n\n\nD\n15,90\n14,33\n1,57\n11,90\n25,19\n2,46\n\n\nE\n17,60\n19,45\n-1,85\n3,06\n0,01\n3,41\n\n\nF\n18,50\n20,19\n-1,69\n0,72\n0,70\n2,84\n\n\nG\n21,20\n19,09\n2,11\n3,42\n0,07\n4,46\n\n\nH\n23,00\n24,39\n-1,39\n13,32\n25,38\n1,93\n\n\nI\n25,30\n23,04\n2,26\n35,40\n13,60\n5,12\n\n\nJ\n30,20\n27,49\n2,71\n117,72\n66,22\n7,36\n\n\nN\n10,00\n–\n–\n–\n–\n–\n\n\nSomme\n193,50\n–\n0,00\n279,30\n227,04\n52,26\n\n\nMoyenne\n19,35\n–\n0,00\n27,93\n22,70\n5,23\n\n\n\n\n\n\nCalcul de l’erreur quadratique moyenne\nLa somme des résidus au carré (SCR) divisée par le nombre d’observations représente donc le carré moyen des erreurs (en anglais, mean square error - MSE), soit la variance résiduelle du modèle (52,26 / 10 = 5,23). Plus sa valeur est faible, plus le modèle est efficace pour prédire la variable indépendante. L’erreur quadratique moyenne (en anglais, root-mean-square error - RMSE) est simplement la racine carrée de la somme des résidus au carré divisée par le nombre d’observations (\\(n\\)) :\n\\[\nRMSE = \\sqrt{\\frac{\\sum_{i=1}^n (y_{i}-\\widehat{y})^2}{n}}\n\\tag{4.14}\\]\nElle représente ainsi une mesure absolue des erreurs qui est exprimée dans l’unité de mesure de la variable dépendante. Dans le cas présent, nous avons : \\(\\sqrt{5,23}=2,29\\). Cela signifie qu’en moyenne, l’écart absolu (ou erreur absolue) entre les valeurs observées et prédites est de 2,29 points de pourcentage. De nouveau, une plus faible valeur de RMSE indique un meilleur ajustement du modèle. Mais surtout, le RMSE permet d’évaluer avec quelle précision le modèle prédit la variable dépendante. Il est donc particulièrement important si l’objectif principal du modèle est de prédire des valeurs sur un échantillon d’observations pour lequel la variable dépendante est inconnue.\nCalcul du coefficient de détermination\nNous avons largement démontré que la variance totale est égale à la variance expliquée plus la variance non expliquée. La qualité du modèle peut donc être évaluée avec le coefficient de détermination (R2), soit le rapport entre les variances expliquée et totale :\n\\[\nR^2 = \\frac{SCE}{SCT} \\mbox{ avec } R^2 \\in \\left[0,1\\right]\n\\tag{4.15}\\]\nComparativement au RMSE qui est une mesure absolue, le coefficient de détermination est une mesure relative qui varie de 0 à 1. Il exprime la proportion de la variance de Y qui est expliquée par la variable X; autrement dit, plus sa valeur est élevée, plus X influence/est capable de prédire Y. Dans le cas présent, nous avons : R2 = 227,04 / 279,3 = 0,8129, ce qui signale que 81,3 % de la variance du pourcentage de cyclistes est expliquée par la distance entre la municipalité et le centre-ville de la région métropolitaine. Tel que signalé dans la section 4.3.2, la racine carrée du coefficient de détermination (R2) est égale au coefficient de corrélation (\\(r\\)) entre les deux variables.\nCalcul de la statistique F de Fisher\nLa statistique F de Fisher permet de vérifier la significativité globale du modèle.\n\\[\nF = (n-2)\\frac{R^2}{1-R^2} = (n-2)\\frac{SCE}{SCR}\n\\tag{4.16}\\]\nL’hypothèse nulle (H0 avec \\(\\beta_1=0\\)) est rejetée si la valeur calculée de F est supérieure à la valeur critique de la table F avec 1, n-2 degrés de liberté et un seuil \\(\\alpha\\) (p = 0,05 habituellement) (voir la table des valeurs critiques de F, section 14.2). Notez que nous utilisons rarement la table F puisqu’avec la fonction pf(f obtenu, 1, n-2, lower.tail = FALSE), nous obtenons obtient directement la valeur de p associée à la valeur de F. Concrètement, si le test F est significatif (avec p &lt; 0,05), plus la valeur de F est élevée, plus le modèle est efficace (et plus le R2 sera également élevé).\nNotez que la fonction summary renvoie les résultats du modèle, dont notamment le test F de Fisher.\n\n# utiliser la fonction summary\nsummary(modele)\n\n\nCall:\nlm(formula = Velo ~ KmCV, data = data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.5652 -1.8062  0.0906  2.2241  2.7125 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  30.6032     2.0729  14.763 4.36e-07 ***\nKmCV         -1.4478     0.2456  -5.895 0.000364 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.556 on 8 degrees of freedom\nMultiple R-squared:  0.8129,    Adjusted R-squared:  0.7895 \nF-statistic: 34.75 on 1 and 8 DF,  p-value: 0.0003637\n\n\nDans le cas présent, \\(F = (10 - 2)\\frac{\\mbox{0,8129}}{\\mbox{1-0,8129}} = (10-2)\\frac{\\mbox{227,04}}{\\mbox{52,26}} = \\mbox{34,75}\\) avec une valeur de \\(\\mbox{p &lt; 0,001}\\). Par conséquent, le modèle est significatif.\n\n4.4.4 Mise en œuvre dans R\nComment calculer une régression linéaire simple dans R. Rien de plus simple avec la fonction lm(formula = y ~ x, data= DataFrame).\n\ndf1 &lt;- read.csv(\"data/bivariee/Reg.csv\", stringsAsFactors = FALSE)\n## Création d'un objet pour le modèle\nmonmodele &lt;- lm(Velo ~ KmCV, df1)\n## Résultats du modèle avec la fonction summary\nsummary(monmodele)\n\n\nCall:\nlm(formula = Velo ~ KmCV, data = df1)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.5652 -1.8062  0.0906  2.2241  2.7125 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  30.6032     2.0729  14.763 4.36e-07 ***\nKmCV         -1.4478     0.2456  -5.895 0.000364 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.556 on 8 degrees of freedom\nMultiple R-squared:  0.8129,    Adjusted R-squared:  0.7895 \nF-statistic: 34.75 on 1 and 8 DF,  p-value: 0.0003637\n\n## Calcul du MSE et du RMSE\nMSE &lt;- mean(monmodele$residuals^2)\nRMSE &lt;- sqrt(MSE)\ncat(\"MSE = \", round(MSE, 2), \"; RMSE = \", round(RMSE,2), sep = \"\")\n\nMSE = 5.23; RMSE = 2.29\n\n\n\n4.4.5 Comment rapporter une régression linéaire simple\nNous avons calculé une régression linéaire simple pour prédire le pourcentage d’actifs occupés utilisant le vélo pour se rendre au travail en fonction de la distance entre la municipalité et le centre-ville de la région métropolitaine (en kilomètres). Le modèle obtient un F de Fisher significatif (F(1,8) = 34,75, p &lt; 0,001) et un R2 de 0,813. Le pourcentage de cyclistes peut être prédit par l’équation suivante : 30,603 - 1,448 x (distance au centre-ville en km)."
  },
  {
    "objectID": "04-bivarieeQuantiQuanti.html#sec-045",
    "href": "04-bivarieeQuantiQuanti.html#sec-045",
    "title": "4  Relation linéaire entre deux variables quantitatives",
    "section": "\n4.5 Quiz de révision du chapitre",
    "text": "4.5 Quiz de révision du chapitre\n\n\n\n\n\nD’après le nuage de points, les variables X et Y partagent une relation :\n\n\nRelisez au besoin la section 4.1.\n\n\n\n\n\n\nlinéaire positive\n\n\n\n\n\n\n\nlinéaire négative\n\n\n\n\n\n\n\ncurvilinéaire\n\n\n\n\n\n\n\nabsence de relation\n\n\n\n\n\n\n\n\n\n\nD’après le nuage de points, les deux variables partagent une relation :\n\n\nRelisez au besoin la section 4.1.\n\n\n\n\n\n\nlinéaire positive\n\n\n\n\n\n\n\nlinéaire négative\n\n\n\n\n\n\n\ncurvilinéaire\n\n\n\n\n\n\n\nabsence de relation\n\n\n\n\n\n\n\n\n\n\nLa valeur de la covariance peut être positive ou négative. Plus sa valeur absolue est élevée :\n\n\nRelisez au besoin la section 4.2.2.\n\n\n\n\n\n\nplus la relation linéaire entre les deux variables est importante\n\n\n\n\n\n\n\nplus la relation linéaire entre les deux variables est faible\n\n\n\n\n\n\n\ncurvilinéaire\n\n\n\n\n\n\n\nabsence de relation\n\n\n\n\n\n\n\n\n\n\nLes coefficients de corrélation (Pearson, Speaman, etc.) varient de à :\n\n\nRelisez au besoin la section 4.3.3.\n\n\n\n\n\n\n0 à 1\n\n\n\n\n\n\n\nmoins l’infini à plus l’infini\n\n\n\n\n\n\n\n0 à 100\n\n\n\n\n\n\n\n-1 à 1\n\n\n\n\n\n\n\n\n\n\nCette statistique est tributaire des unités de mesure des deux variables. Cet inconvénient s’applique à :\n\n\nRelisez au besoin la section 4.2.2.\n\n\n\n\n\n\nla corrélation de Pearson\n\n\n\n\n\n\n\nla corrélation de Spearman\n\n\n\n\n\n\n\nla covariance\n\n\n\n\n\n\n\nla corrélation de Kendall\n\n\n\n\n\n\n\n\n\n\nÀ la lecture du nuage de points, la corrélation de Pearson entre les deux variables est proche de :\n\n\nRelisez au besoin la section 4.1.\n\n\n\n\n\n\n0\n\n\n\n\n\n\n\n-1\n\n\n\n\n\n\n\n1\n\n\n\n\n\n\n\n\n\n\nLe coefficient de Spearman est le coefficient de Pearson calculé sur des variables transformées en :\n\n\nRelisez au besoin la section 4.3.3.\n\n\n\n\n\n\nrangs\n\n\n\n\n\n\n\nscores Z (variables centrées réduites)\n\n\n\n\n\n\n\nsur une échelle 0 à 100\n\n\n\n\n\n\n\n\n\n\nDans une régression linéaire, le résidu pour une observation est :\n\n\nRelisez au besoin la section 4.4.2.\n\n\n\n\n\n\nla différence entre la variance de Y et la variance expliquée\n\n\n\n\n\n\n\nla différence entre la valeur observée et la valeur prédite\n\n\n\n\n\n\n\nle carré de la différence entre la valeur observée et la valeur prédite\n\n\n\n\n\n\n\n\n\n\nLe coefficient de détermination (R2) varie de :\n\n\nRelisez au besoin la section 4.4.3.\n\n\n\n\n\n\n-1 à 1\n\n\n\n\n\n\n\n-100 à 100\n\n\n\n\n\n\n\n0 à 1\n\n\n\n\n\n\n\n\n\n\nUn facteur confondant est une sorte de fondant au chocolat?\n\n\nRelire le deuxième encadré à la section 4.4.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\nVérifier votre résultat\n\n\n\n\n\n\n\n\n\nMesserli, Franz H. 2012. « Chocolate consumption, cognitive Function, and Nobel laureates. » The new England Journal of Medicine 367 (16): 1563‑1564. https://doi.org/10.1056/nejmon1211064.\n\n\nPham, Thi-Thanh-Hien, Philippe Apparicio, Anne-Marie Séguin, Shawn Landry et Martin Gagnon. 2012. « Spatial distribution of vegetation in Montreal: an uneven distribution or environmental inequity? » Landscape and urban planning 107 (3): 214‑224. http://dx.doi.org/10.1016/j.landurbplan.2012.06.002.\n\n\nSchwarzkopf, Dietrich, Benjamin de Haas et Geraint Rees. 2012. « Better ways to improve standards in brain-behavior correlation analysis. » Frontiers in Human Neuroscience 6: 200. https://www.frontiersin.org/articles/10.3389/fnhum.2012.00200.\n\n\nWilcox, Rand R. 1994. « The percentage bend correlation coefficient. » Psychometrika 59 (4): 601‑616. https://doi.org/10.1007/BF02294395."
  },
  {
    "objectID": "05-bivarieeQualiQuali.html#sec-051",
    "href": "05-bivarieeQualiQuali.html#sec-051",
    "title": "5  Relation entre deux variables qualitatives",
    "section": "\n5.1 Construction de tableau de contingence",
    "text": "5.1 Construction de tableau de contingence\nLes données du tableau de contingence suivant décrivent 279 projets d’habitation à loyer modique (HLM) dans l’ancienne ville de Montréal, croisant les modalités de la période de construction (en colonne) et de la taille (en ligne) des projets HLM (Apparicio 2002). Les différents éléments du tableau sont décrits ci-dessous.\n\nLes fréquences observées (Count au tableau ci-dessous), nommées communément \\(f_{ij}\\), correspondent aux observations appartenant à la fois à la ie modalité de la variable en ligne et à la je modalité de la variable en colonne. À titre d’exemple, nous comptons 14 projets HLM construits entre 1985 et 1989 comprenant moins de 25 logements.\nLes marges du tableau sont les totaux pour chaque modalité en ligne (\\(n_{i.}\\)) et en colonne (\\(n_{j.}\\)). En guise d’exemple, sur les 279 projets HLM, 53 comprennent de 25 à 49 logements et 56 ont été construites entre 1968 et 1974. Bien entendu, la somme des marges en ligne (\\(n_{i.}\\)) est égale au nombre total d’observations (\\(n_{ij}\\)), tout comme la somme de marges en colonne (\\(n_{.j}\\)).\nTrois pourcentages sont disponibles (total, en ligne, en colonne; Total Percent, Row Percent et Column Percent au tableau ci-dessous). Ils sont respectivement la fréquence observée divisée par le nombre d’observations (\\(f_{ij}/n_{ij}\\times100\\)), par la marge en ligne (\\(f_{ij}/n_{i.} \\times 100\\)) et en colonne (\\(f_{ij}/n_{.j}\\times100\\)). En guise d’exemple, 5 % des 279 projets HLM ont été construites entre 1985 et 1989 et comprennent moins de 25 logements (pourcentage total, soit 14 / 279 × 100). Aussi, plus de la moitié des habitations de moins de 25 logements ont été construits entre 1990 et 1994 (pourcentage en ligne, 41 / 80 × 100). Finalement, près de 36 % des logements construits avant 1975 ont 100 logements et plus (20 / 56 × 100).\nLes fréquences théoriques (Expected Values au tableau ci-dessous), représentent les valeurs que l’on devrait observer théoriquement s’il y avait indépendance entre les modalités des deux variables; autrement dit, si la répartition des deux modalités des deux variables était dû au hasard. Pour le croisement de deux modalités, la fréquence théorique est égale au produit des marges divisé par le nombre total d’observations (\\(ft_{ij} = (n_{i.}n_{.j})/n_{ij}\\)). Par exemple, la fréquence théorique pour le croisement des modalités moins de 25 logements et avant 1975 est égale à : (80 × 56) / 279 = 16,06. Nous observons ici que la valeur théorique (16,06) est bien supérieure à la valeur réelle (6). Nous avons donc moins de projets HLM de moins de 25 logements avant 1975 auxquels nous pourrions nous attendre du hasard.\nLa déviation (Residual au tableau ci-dessous) est la différence entre la fréquence observée et la fréquence théorique (\\(f_{ij}-ft_{ij}\\)). Plus la déviation est grande, plus nous nous écartons d’une situation d’indépendance entre les deux modalités i et j. La somme des déviations sur une ligne ou sur une colonne est nulle. Si la déviation ij est nulle, la fréquence théorique est égale à la fréquence observée, ce qui signifie qu’il y a indépendance entre les modalités i et j. Une déviation positive traduit, quant à elle, une attraction entre les modalités i et j ou, autrement dit, une surreprésentation du phénomène ij; tandis qu’une déviation négative renvoie à une répulsion entre les modalités i et j, soit une sous-représentation du phénomène ij. Dans le cas précédent, nous observions six habitations de moins de 25 logements construits avant 1975 et une fréquence théorique de 16,06. La déviation est donc -10,06, soit une sous-représentation du phénomène.\nLa contribution au khi-deux (Chi-square contribution au tableau ci-dessous) est égale à la déviation au carré divisée par la fréquence théorique : \\(\\chi_{ij}^2 = (f_{ij}-ft_{ij})^2/ft_{ij}\\). Plus sa valeur est forte, plus il y a association entre les deux modalités. La somme des contributions au khi-deux représente le khi-deux total pour l’ensemble du tableau de contingence (ici à 63,54), que nous aborderons dans la section suivante.\n\n\n\n\n   Cell Contents\n|-------------------------|\n|                   Count |\n|         Expected Values |\n| Chi-square contribution |\n|             Row Percent |\n|          Column Percent |\n|           Total Percent |\n|                Residual |\n|-------------------------|\n\nTotal Observations in Table:  279 \n\n               | TabKhi2$Periode \nTabKhi2$Taille | Av. 1975  |  1975-79  |  1980-84  |  1985-89  |  1990-94  | Row Total | \n---------------|-----------|-----------|-----------|-----------|-----------|-----------|\n     &lt; 25 log. |        6  |       11  |        8  |       14  |       41  |       80  | \n               |    16.06  |    13.76  |    13.76  |    13.48  |    22.94  |           | \n               |     6.30  |     0.55  |     2.41  |     0.02  |    14.22  |           | \n               |     7.50% |    13.75% |    10.00% |    17.50% |    51.25% |    28.67% | \n               |    10.71% |    22.92% |    16.67% |    29.79% |    51.25% |           | \n               |     2.15% |     3.94% |     2.87% |     5.02% |    14.70% |           | \n               |   -10.06  |    -2.76  |    -5.76  |     0.52  |    18.06  |           | \n---------------|-----------|-----------|-----------|-----------|-----------|-----------|\n         25-49 |       10  |        5  |        8  |        8  |       22  |       53  | \n               |    10.64  |     9.12  |     9.12  |     8.93  |    15.20  |           | \n               |     0.04  |     1.86  |     0.14  |     0.10  |     3.05  |           | \n               |    18.87% |     9.43% |    15.09% |    15.09% |    41.51% |    19.00% | \n               |    17.86% |    10.42% |    16.67% |    17.02% |    27.50% |           | \n               |     3.58% |     1.79% |     2.87% |     2.87% |     7.89% |           | \n               |    -0.64  |    -4.12  |    -1.12  |    -0.93  |     6.80  |           | \n---------------|-----------|-----------|-----------|-----------|-----------|-----------|\n         50-99 |       20  |       21  |       22  |       21  |       15  |       99  | \n               |    19.87  |    17.03  |    17.03  |    16.68  |    28.39  |           | \n               |     0.00  |     0.92  |     1.45  |     1.12  |     6.31  |           | \n               |    20.20% |    21.21% |    22.22% |    21.21% |    15.15% |    35.48% | \n               |    35.71% |    43.75% |    45.83% |    44.68% |    18.75% |           | \n               |     7.17% |     7.53% |     7.89% |     7.53% |     5.38% |           | \n               |     0.13  |     3.97  |     4.97  |     4.32  |   -13.39  |           | \n---------------|-----------|-----------|-----------|-----------|-----------|-----------|\n      100 et + |       20  |       11  |       10  |        4  |        2  |       47  | \n               |     9.43  |     8.09  |     8.09  |     7.92  |    13.48  |           | \n               |    11.83  |     1.05  |     0.45  |     1.94  |     9.77  |           | \n               |    42.55% |    23.40% |    21.28% |     8.51% |     4.26% |    16.85% | \n               |    35.71% |    22.92% |    20.83% |     8.51% |     2.50% |           | \n               |     7.17% |     3.94% |     3.58% |     1.43% |     0.72% |           | \n               |    10.57  |     2.91  |     1.91  |    -3.92  |   -11.48  |           | \n---------------|-----------|-----------|-----------|-----------|-----------|-----------|\n  Column Total |       56  |       48  |       48  |       47  |       80  |      279  | \n               |    20.07% |    17.20% |    17.20% |    16.85% |    28.67% |           | \n---------------|-----------|-----------|-----------|-----------|-----------|-----------|\n\n \nStatistics for All Table Factors\n\n\nPearson's Chi-squared test \n------------------------------------------------------------\nChi^2 =  63.54291     d.f. =  12     p =  5.063109e-09 \n\n\n \n       Minimum expected frequency: 7.917563"
  },
  {
    "objectID": "05-bivarieeQualiQuali.html#sec-052",
    "href": "05-bivarieeQualiQuali.html#sec-052",
    "title": "5  Relation entre deux variables qualitatives",
    "section": "\n5.2 Test du khi-deux",
    "text": "5.2 Test du khi-deux\nAvec le test du khi-deux, nous postulons qu’il y a indépendance entre les modalités des deux variables qualitatives, soit l’hypothèse nulle (H0). Puis, nous calculons le nombre de degrés de liberté : \\(DL = (n-1)(l-1)\\), avec \\(l\\) et \\(n\\) étant respectivement les nombres de modalités en ligne et en colonne. Pour notre tableau de contingence, nous avons 12 degrés de liberté : \\((4-1)(5-1)=12\\).\nÀ partir du nombre de degrés de liberté et d’un seuil critique de significativité (prenons 5 % ici), nous pouvons trouver la valeur critique de khi-deux dans la table des valeurs critiques du khi-deux, soit 21,03 (section 14.1). Puisque la valeur du khi-deux calculée dans le tableau de contingence (63,54) est bien supérieure à celle obtenue dans le tableau des valeurs critiques (21,03), nous pouvons rejeter l’hypothèse d’indépendance au seuil de 5 %. Autrement dit, si les deux variables n’étaient pas associées, nous aurions eu moins de 5 % de chances de collecter des données avec ce niveau d’association, ce qui nous permet de rejeter l’hypothèse nulle (absence d’association). Notez que le test reste significatif avec des seuils de 1 % (p = 0,01) et 0,1 % (p = 0,001) puisque les valeurs critiques sont de 26,22 et de 32,91.\nBien entendu, une fois que nous connaissons le nombre de degrés de liberté, nous pouvons directement calculer les valeurs critiques pour différents seuils de signification et éviter ainsi de recourir à la table du du khi-deux. Dans la même veine, nous pouvons aussi calculer la valeur de p d’un tableau de contingence en spécifiant le nombre de degrés de liberté et la valeur du khi-deux obtenue.\n\ncat(\"Valeurs critiques du khi-deux avec le nombre de degrés de liberté\", \"\\n\",\n    round(qchisq(p=0.95,  df=12, lower.tail = FALSE),3), \"avec p=0,05\", \"\\n\",\n    round(qchisq(p=0.99,  df=12, lower.tail = FALSE),3), \"avec p=0,01\", \"\\n\",\n    round(qchisq(p=0.999, df=12, lower.tail = FALSE),3), \"avec p=0,0001\")\n\nValeurs critiques du khi-deux avec le nombre de degrés de liberté \n 5.226 avec p=0,05 \n 3.571 avec p=0,01 \n 2.214 avec p=0,0001\n\ncat(\"Valeur de p du khi-deux obtenu (63,54291) avec 12 degrés de liberté :\", \"\\n\",\n    pchisq(q=63.54291, df=12, lower.tail = FALSE))\n\nValeur de p du khi-deux obtenu (63,54291) avec 12 degrés de liberté : \n 5.063101e-09\n\n\n\n\n\n\n\nAutres mesures d’association\n\n\nOutre le khi-deux, d’autres mesures d’association permettent de mesurer le degré d’association entre deux variables qualitatives. Les plus courantes sont reportées dans le tableau 5.1. À des fins de comparaison, le khi-deux décrit précédemment est aussi reporté sur la première ligne du tableau.\n\n\n\n\nTableau 5.1: Autres mesures d’association entre deux variables qualitatives\n\nStatistique\nFormule\nPropriété et interprétation\n\n\n\nKhi-deux\n\\(\\chi^2 = \\sum \\frac{(f_{ij}-ft_{ij})^2}{ft_{ij}}\\)\nMesure classique du khi-deux calculée à partir des différences entre les fréquences observées et attendues. Valeur de p disponible.\n\n\nRatio de vraisemblance du khi-deux\n\\(G^2 = 2 \\sum f_{ij} \\ln{(\\frac{f_{ij}}{ft_{ij}})}\\)\nCalculé à partir du ratio entre les fréquences observées et attendues. Valeur de p disponible.\n\n\nkhi-deux de Mantel-Haenszel\n\\(Q_{MH}=(N−1)r^2\\)\navec r étant le coefficient de corrélation entre les deux variables qualitatives; par exemple, entre les valeurs des modalités de 1 à 5 de la variable période de construction et celles de 1 à 4 de la variable taille du projet HLM. Ce coefficient est très utile quand les deux variables qualitatives ne sont pas nominales, mais ordinales. Valeur de p disponible.\n\n\nCorrélation polychorique\nObtenue itérativement par maximum de vraisemblance\nDans le même esprit que le khi-deux de Mantel-Haenszel, la corrélation polychorique s’applique à deux variables ordinales. Plus spécifiquement, elle formule le postulat que deux variables théoriques normalement distribuées ont été mesurées de façon approximative avec deux échelles ordinales. Par exemple, en psychologie, le sentiment de bien-être et le sentiment de sécurité peuvent être conceptualisés comme deux variables continues normalement distribuées. Cependant, les mesurer directement est très difficile, nous avons donc recours à des échelles de Likert allant de 1 à 10. Pour cet exemple, il est pertinent d’utiliser la corrélation polychorique. Comme pour une corrélation de Pearson, la corrélation polychorique varie de -1 à 1, une valeur négative indiquant une relation inverse entre les deux variables théoriques et inversement. Valeur de p disponible.\n\n\nCoefficient Phi\n\\(\\phi=\\sqrt{\\frac{\\chi^2}{n}}\\)\nSimplement le khi-deux divisé par le nombre d’observations. Si les deux variables qualitatives comprennent deux modalités chacune alors \\(\\phi\\) varie de −1 à 1; sinon, de 0 à \\(min(\\sqrt{c-1}, \\sqrt{l-1})\\) avec c et l étant le nombre de modalités en colonne et en ligne. Par conséquent, ce coefficient est surtout utile pour les tableaux comprenant deux modalités pour chacune des variables. Pas de valeur de p disponible.\n\n\nV de Cramer\n\\(V=\\sqrt{\\frac{\\chi^2/n}{min(c-1,l-1)}}\\)\nIl représente un ajustement du coefficient Phi et varie de 0 à 1. Plus sa valeur est forte, plus les deux variables sont associées. À la lecture des deux formules, vous constaterez que, pour un tableau de 2x2, la valeur du V de Carmer sera égale à celle du Coefficient Phi. Pas de valeur de p disponible."
  },
  {
    "objectID": "05-bivarieeQualiQuali.html#sec-053",
    "href": "05-bivarieeQualiQuali.html#sec-053",
    "title": "5  Relation entre deux variables qualitatives",
    "section": "\n5.3 Mise en œuvre dans R",
    "text": "5.3 Mise en œuvre dans R\nPour calculer le khi-deux entre deux variables qualitatives, nous utilisons la fonction de base :\nchisq.test(x = ..., y = ...) qui renvoie le nombre de degrés de liberté, les valeurs du khi-deux et de p.\n\n# Importation du csv\ndataHLM &lt;- read.csv(\"data/bivariee/hlm.csv\")\n# Calcul du khi-deux avec la fonction de base chisq.test\nchisq.test(x = dataHLM$Taille, y = dataHLM$Periode)\n\n\n    Pearson's Chi-squared test\n\ndata:  dataHLM$Taille and dataHLM$Periode\nX-squared = 63.543, df = 12, p-value = 5.063e-09\n\n\nPour la construction du tableau de contingence, deux options sont possibles dépendamment de la structure de votre tableau de données. Premier cas de figure : votre tableau comprend une ligne par observation avec les différentes modalités dans deux colonnes (ici Periode et Taille). Dans la syntaxe ci-dessous, pour chacune des deux variables qualitatives, nous créons un facteur afin de spécifier un intitulé à chaque modalité (factor(levels =c(....), labels = c(..)). Puis, nous utilisons la fonction CrossTable du package gmodels. Pour obtenir les fréquences théoriques, les contributions locales au khi-deux et les déviations, nous spécifions les options suivantes : expected = TRUE, chisq=TRUE, resid=TRUE.\n\nlibrary(\"gmodels\")\n# Premiers enregistrements du tableau\nhead(dataHLM)\n\n  Periode Taille\n1       5      1\n2       5      1\n3       5      2\n4       5      1\n5       5      1\n6       5      2\n\n# La variable Periode comprend 5 modalités (de 1 à 5)\ntable(dataHLM$Periode)\n\n\n 1  2  3  4  5 \n56 48 48 47 80 \n\n# La variable Taille comprend 4 modalités (de 1 à 4)\ntable(dataHLM$Taille)\n\n\n 1  2  3  4 \n80 53 99 47 \n\n# Création d'un facteur pour les cinq modalités de la période de construction\ndataHLM$Periode &lt;- factor(dataHLM$Periode, \n                          levels = c(1,2,3,4,5), \n                          labels = c(\"&lt;1975\", \n                                     \"1975-1979\", \n                                     \"1980-1984\", \n                                     \"1985-1989\", \n                                     \"1990-1994\"))\n# Création d'un facteur pour les quatre modalités de la taille des habitations\ndataHLM$Taille &lt;- factor(dataHLM$Taille, \n                         levels = c(1,2,3,4), \n                         labels = c(\"&lt;25 log.\", \n                                    \"25-49\", \n                                    \"50-99\", \n                                    \"100 et +\"))\n# Pour construire un tableau de contingence, nous utilisons \n# la fonction CrossTable du package gmodels. \n# Les deux lignes ci-dessous sont mises en commentaire pour ne pas répéter le tableau.\n# CrossTable(x=dataHLM$Taille, y = dataHLM$Periode, digits = 2,\n#           expected = TRUE, chisq = TRUE, resid = TRUE, format=\"SPSS\")\n\nDeuxième cas de figure : vous disposez déjà d’un tableau de contingence, soit les fréquences observées (\\(f_{ij}\\)). Nous n’utilisons donc pas la fonction CrossTable, mais directement la fonction chisq.test.\n\n# Importation des données\ndf1 &lt;-  read.csv(\"data/bivariee/data_transport.csv\", stringsAsFactors = FALSE)\ndf1 # Visualisation du tableau\n\n                                    ModeTransport  Homme  Femme\n1 Automobile, camion ou fourgonnette - conducteur 689400 561830\n2   Automobile, camion ou fourgonnette - passager  21315  40010\n3                             Transport en commun 181435 238330\n4                                          A pied  43715  54360\n5                                      Bicyclette  24295  13765\n6                                     Autre moyen   8395   6970\n\nMatrice &lt;- as.matrix(df1[, c(\"Homme\" , \"Femme\")])\ndimnames(Matrice) &lt;- list(unique(df1$ModeTransport), Sexe=c(\"Homme\" , \"Femme\"))\n# Notez que vous pouvez saisir vos données directement si vous avez peu d'observations\nFemme &lt;- c(689400, 21315, 181435, 43715, 24295, 8395) # Vecteur de valeurs pour les femmes\nHomme &lt;- c(561830, 40010, 238330, 54360, 13765, 6970) # Vecteur de valeurs pour les hommes\nMatrice &lt;- as.table(cbind(Femme, Homme)) # Création du tableau\n# Nom des deux variables et de leurs modalités respectives\ndimnames(Matrice) &lt;- list(Transport=c(\"Automobile (conducteur)\",\n                                      \"Automobile (passager)\",\n                                      \"Transport en commun\",                            \n                                      \"À pied\",\n                                      \"Bicyclette\",\n                                      \"Autre moyen\"),\n                          Sexe=c(\"Homme\" , \"Femme\"))\n# Test du khi-deux\ntest &lt;- chisq.test(Matrice)\nprint(test)\n\n\n    Pearson's Chi-squared test\n\ndata:  Matrice\nX-squared = 29134, df = 5, p-value &lt; 2.2e-16\n\n# Fréquences observées (Fij)\ntest$observed\n\n                         Sexe\nTransport                  Homme  Femme\n  Automobile (conducteur) 689400 561830\n  Automobile (passager)    21315  40010\n  Transport en commun     181435 238330\n  À pied                   43715  54360\n  Bicyclette               24295  13765\n  Autre moyen               8395   6970\n\n# Fréquences théoriques (FTij)\nround(test$expected,0)\n\n                         Sexe\nTransport                  Homme  Femme\n  Automobile (conducteur) 643313 607917\n  Automobile (passager)    31530  29795\n  Transport en commun     215820 203945\n  À pied                   50425  47650\n  Bicyclette               19568  18492\n  Autre moyen               7900   7465\n\n# Déviations (Fij - FTij)\nround(test$observed-test$expected,0)\n\n                         Sexe\nTransport                  Homme  Femme\n  Automobile (conducteur)  46087 -46087\n  Automobile (passager)   -10215  10215\n  Transport en commun     -34385  34385\n  À pied                   -6710   6710\n  Bicyclette                4727  -4727\n  Autre moyen                495   -495\n\n# Contributions au khi-deux\nround((test$observed-test$expected)^2/test$expected,2)\n\n                         Sexe\nTransport                   Homme   Femme\n  Automobile (conducteur) 3301.74 3493.98\n  Automobile (passager)   3309.37 3502.05\n  Transport en commun     5478.22 5797.18\n  À pied                   892.81  944.80\n  Bicyclette              1141.71 1208.19\n  Autre moyen               31.04   32.85\n\n# Marges en ligne et en colonne\ncolSums(Matrice)\n\n Homme  Femme \n968555 915265 \n\nrowSums(Matrice)\n\nAutomobile (conducteur)   Automobile (passager)     Transport en commun \n                1251230                   61325                  419765 \n                 À pied              Bicyclette             Autre moyen \n                  98075                   38060                   15365 \n\n# Grand total\nsum(Matrice)\n\n[1] 1883820\n\n# Pourcentages\nround(Matrice/sum(Matrice)*100,2)\n\n                         Sexe\nTransport                 Homme Femme\n  Automobile (conducteur) 36.60 29.82\n  Automobile (passager)    1.13  2.12\n  Transport en commun      9.63 12.65\n  À pied                   2.32  2.89\n  Bicyclette               1.29  0.73\n  Autre moyen              0.45  0.37\n\n# Pourcentages en ligne\nround(Matrice/rowSums(Matrice)*100,2)\n\n                         Sexe\nTransport                 Homme Femme\n  Automobile (conducteur) 55.10 44.90\n  Automobile (passager)   34.76 65.24\n  Transport en commun     43.22 56.78\n  À pied                  44.57 55.43\n  Bicyclette              63.83 36.17\n  Autre moyen             54.64 45.36\n\n# Pourcentages en colonne\nround(Matrice/colSums(Matrice)*100,2)\n\n                         Sexe\nTransport                 Homme Femme\n  Automobile (conducteur) 71.18 58.01\n  Automobile (passager)    2.33  4.37\n  Transport en commun     18.73 24.61\n  À pied                   4.78  5.94\n  Bicyclette               2.51  1.42\n  Autre moyen              0.92  0.76\n\n\nPour obtenir les autres mesures d’association (tableau 5.2), nous pourrons utiliser la syntaxe suivante :\n\ndf1 &lt;- read.csv(\"data/bivariee/hlm.csv\")\n# Fonction pour calculer les autres mesures d'association\nAutresMesuresKhi2 &lt;- function(x, y){\n  testChi2 &lt;- chisq.test(x, y) # Calcul du khi-deux\n  n  &lt;- sum(testChi2$observed)  # Nombre d'observations\n  nc &lt;- ncol(testChi2$observed) # Nombre de colonnes\n  l &lt;- nrow(testChi2$observed) # Nombre de lignes\n  dl &lt;- (nc-1)*(l-1)            # Nombre de degrés de libertés\n  chi2 &lt;- testChi2$statistic   # Valeur du khi-deux\n  Pchi2 &lt;- testChi2$p.value    # P pour le khi-deux\n  \n  #Ratio de vraisemblance du khi-deux\n  G &lt;- 2*sum(testChi2$observed*log(testChi2$observed/testChi2$expected)) # G2\n  PG &lt;- pchisq(G, df=dl, lower.tail = FALSE) # P pour le G22\n  \n  # khi-deux de Mantel-Haenszel avec le package DescTools\n  MHTest &lt;- DescTools::MHChisqTest(testChi2$observed)\n  MH &lt;- MHTest$statistic\n  PMH &lt;- MHTest$p.value\n  \n  # Coefficient de correlation polychorique\n  df1 &lt;- data.frame(\"x\" = as.factor(x),\n                 \"y\" = as.factor(y))\n  polychoricCorr &lt;- correlation::cor_test(df1,\"x\" , \"y\", method = \"polychoric\")\n  polyR &lt;- polychoricCorr$rho\n  polyP &lt;- polychoricCorr$p\n\n  # Coefficient Phi et V de Cramer\n  phi &lt;- sqrt(chi2/n)\n  vc &lt;- sqrt(chi2/(n*min(nc-1,l-1)))\n  \n  # Tableau pour les résultats\n  dfsortie &lt;- data.frame(\n        Statistique = c(\"Khi-deux\", \n                        \"Ratio de vraisemblance du  khi-deux\", \n                        \"Khi-deux de Mantel-Haenszel\",\n                        \"Corrélation Polychorique\",\n                        \"Coefficient de Phi\",\n                        \"V de Cramer\"), \n        Valeur = round(c(chi2, G, MH, polyR, phi, vc),3), \n        P = round(c(Pchi2, PG, PMH, polyP , NA, NA),10))\n  return(dfsortie)\n}\n\ndfkhi2 &lt;- AutresMesuresKhi2(df1$Periode, df1$Taille)\n\n# Impression du tableau avec le package stargazer\nlibrary(stargazer)\nstargazer(dfkhi2, type = \"text\", summary = FALSE, rownames = FALSE, align = FALSE, digits = 3,\n          title = \"Mesures d'association entre les deux variables qualitatives\")\n\n\n\n\n\nTableau 5.2: Mesures d’association entre deux variables qualitatives\n\nStatistique\nValeur\nP\n\n\n\nKhi-deux\n63.543\n0\n\n\nRatio de vraisemblance du khi-deux\n67.286\n0\n\n\nKhi-deux de Mantel-Haenszel\n48.486\n0\n\n\nCorrélation Polychorique\n-0.479\n0\n\n\nCoefficient de Phi\n0.477\n\n\n\nV de Cramer\n0.276"
  },
  {
    "objectID": "05-bivarieeQualiQuali.html#sec-054",
    "href": "05-bivarieeQualiQuali.html#sec-054",
    "title": "5  Relation entre deux variables qualitatives",
    "section": "\n5.4 Interprétation d’un tableau de contingence",
    "text": "5.4 Interprétation d’un tableau de contingence\nNous vous proposons une démarche très simple pour vérifier l’association entre deux variables qualitatives avec les deux étapes suivantes :\n\nNous posons l’hypothèse nulle (H0), soit l’indépendance entre les deux variables.\nSi la valeur du khi-deux total du tableau de contingence est inférieure à la valeur critique du khi-deux avec p = 0,05 et le nombre de degrés de liberté de la table des valeurs critiques de khi-deux, alors il y a bien indépendance. La valeur de p est alors supérieure à 0,05. L’analyse s’arrête donc là! Autrement dit, il n’est pas nécessaire d’analyser le contenu de votre tableau de contingence puisqu’il n’y a pas d’association significative entre les modalités des deux variables. Vous pouvez simplement signaler que selon les résultats du test du khi-deux, il n’y a pas d’association significative entre les deux variables (\\(\\chi\\) = … avec p = …).\nS’il y a dépendance (\\(khi_{observé}^2 &gt; khi_{critique}^2\\)), trouvez les cellules ij où les contributions au khi-deux sont les plus fortes, c’est-à-dire où les associations entre les modalités i de la variable en ligne et les modalités j de la variable en colonne sont les plus marquées. Pour ces cellules, le phénomène ij est surreprésenté si la déviation est positive ou sous-représenté si la déviation est négative. Commentez ces associations et utilisez les pourcentages en ligne ou en colonne pour appuyer vos propos.\n\n\n\n\n\n\nRepérer les contributions au khi-deux les plus importantes\n\n\nPour repérer rapidement les cellules où les contributions au khi-deux sont les plus fortes, vous pouvez construire un graphique avec la fonction mosaic du package vcd. À la figure 5.1, la taille des rectangles représente les effectifs entre les deux modalités tandis que les associations sont représentées comme suit : en gris lorsqu’elles ne sont pas significatives, en rouge pour des déviations significatives et négatives et en bleu pour des déviations significatives et positives.\n\nlibrary(vcd)\nmosaic(~ Taille+Periode, \n         data = dataHLM, shade = TRUE, legend = TRUE,\n         labeling = labeling_border(rot_labels = c(45, 90),\n         just_labels = c(\"left\", \"center\")))\n\n\n\nFigure 5.1: Figure avec la fonction mosaic du package vcd\n\n\n\n\n\nExemple d’interprétation. « Les résultats du test du khi-deux signalent qu’il existe des associations entre les modalités de la taille et de la période de construction des projets d’habitation (\\(\\chi\\) = 63,5, p &lt; 0,001). Les fortes contributions au khi-deux et le signe positif ou négatif des déviations correspondantes permettent de repérer cinq associations majeures entre les modalités de taille et de période de construction des projets HLM : 1) la répulsion entre les projets d’habitation de moins de 25 logements et la période de construction 1964-1974; 2) l’attraction entre les projets d’habitation de 100 logements et plus et la période de construction de 1969-1974; 3) l’attraction entre les projets d’habitation de moins de 25 logements et la période de construction de 1990-1994; 4) la répulsion entre les projets d’habitation de 50 à 99 logements et la période de construction 1990-1994; 5) la répulsion entre les projets d’habitation de 100 logements et plus et la période de construction 1990-1994. On observe donc une tendance bien marquée dans l’évolution du type de construction entre 1970 et 1994 : entre 1969 et 1974, on a construit de grandes habitations dépassant souvent 100 logements; du milieu des années 1970 à la fin des années 1980, on privilégie la construction d’habitations de taille plus modeste, entre 50 et 100 logements; tandis qu’au début des années 1990, on opte plutôt pour des habitations de taille réduite (moins de 50 logements). Quelques chiffres à l’appui : sur les 56 habitations réalisées entre 1969 et 1974, 20 ont plus de 100 logements, 20 comprennent entre 50 et 99 logements et seules 10 ont moins de 25 logements. Près de la moitié des habitations construites entre 1975 et 1989 regroupent 50 à 99 logements (43,8 % pour la période 1975-1979, 45,8 % pour 1980-1984 et 44,7 % pour 1985-1989). Par contre, 51 % des habitations érigés à partir de 1990 disposent de moins de 25 logements » (Apparicio (2002), p. 117-118). Notez que cette évolution décroissante est aussi soutenue par le coefficient négatif de la corrélation polychorique.\nVous pouvez aussi construire un graphique pour appuyer vos constats, soit avec les pourcentages en ligne ou en colonne (figure 5.2 tirée de Apparicio (2002)).\n\n\nFigure 5.2: Taille des projets d’habitation à loyer modique selon la période de construction\n\nComment rapporter succinctement les résultats d’un test du khi-deux?\nLe test du khi-deux a été réalisé pour examiner la relation entre la taille et la période de construction des habitations HLM. Cette relation est significative : \\(\\chi^2\\)(12, N = 279) = 63,5, p &lt; 0,001. Plus les projets ont été construites récemment, plus ils sont de taille réduite.\nPour un texte en anglais, consultez https://www.socscistatistics.com/tutorials/chisquare/default.aspx."
  },
  {
    "objectID": "05-bivarieeQualiQuali.html#sec-055",
    "href": "05-bivarieeQualiQuali.html#sec-055",
    "title": "5  Relation entre deux variables qualitatives",
    "section": "\n5.5 Quiz de révision du chapitre",
    "text": "5.5 Quiz de révision du chapitre\n\n\n\n\n\nPour analyser la relation entre deux variables qualitatives, vous utilisez :\n\n\nRelisez au besoin l’introduction du chapitre 5.\n\n\n\n\n\n\nla covariance\n\n\n\n\n\n\n\nla régression linéaire simple\n\n\n\n\n\n\n\nle coefficient de corrélation de Pearson\n\n\n\n\n\n\n\nun tableau de continence et un test du khi2\n\n\n\n\n\n\n\nle coefficient de corrélation de Spearman\n\n\n\n\n\n\n\nun compteur Geiger\n\n\n\n\n\n\n\n\n\n\nDans un tableau de contingence, quels sont les éléments disponibles?\n\n\nRelisez au besoin la section 5.1.\n\n\n\n\n\n\nFréquences théoriques\n\n\n\n\n\n\n\nFréquences observées\n\n\n\n\n\n\n\nTrois pourcentages (total, en lignes et en colonnes)\n\n\n\n\n\n\n\nDéviations\n\n\n\n\n\n\n\nVariance\n\n\n\n\n\n\n\nContributions au khi-deux\n\n\n\n\n\n\n\n\n\n\nLa corrélation polychorique est particulièrement bien adaptée pour mesurer l’association entre deux variables qualitatives :\n\n\nRelisez au besoin l’encadré à la section 5.2.\n\n\n\n\n\n\nordinales\n\n\n\n\n\n\n\nnominales\n\n\n\n\n\n\n\n\n\n\nS’il y a indépendance entre les deux variables qualitatives (khi-deux observé inférieur au khi-deux critique), il n’est pas nécessaire d’analyser en détail le tableau de contingence.\n\n\nRelisez au besoin la section 5.4.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\nVérifier votre résultat\n\n\n\n\n\n\n\n\n\nApparicio, Philippe. 2002. « Apport des systèmes d’information géographique à l’étude de l’insertion des HLM dans les quartiers montréalais. » Thèse de doctorat, Université du Maine. http://www.theses.fr/2002LEMA3007."
  },
  {
    "objectID": "06-bivarieeQualiQuanti.html#sec-061",
    "href": "06-bivarieeQualiQuanti.html#sec-061",
    "title": "6  Relation entre une variable qualitative et une variable quantitative",
    "section": "\n6.1 Relation entre une variable quantitative et une variable qualitative à deux modalités",
    "text": "6.1 Relation entre une variable quantitative et une variable qualitative à deux modalités\n\n\n\n\n\nLes moyennes de deux groupes de population sont-elles significativement différentes?\n\n\nNous souhaitons ici comparer deux groupes de population en fonction d’une variable continue. Par exemple, pour deux échantillons respectivement d’hommes et de femmes travaillant dans le même secteur d’activité, nous pourrions souhaiter vérifier si les moyennes des salaires des hommes et des femmes sont différentes et ainsi vérifier la présence ou l’absence d’une iniquité systématique. En études urbaines, dans le cadre d’une étude sur un espace public, nous pourrions vouloir vérifier si la différence des moyennes du sentiment de sécurité des femmes et des hommes est significative (c’est-à-dire différente de 0).\nPour un même groupe, la moyenne de la différence d’un phénomène donné mesuré à deux moments est-elle ou non égale à zéro?\nAutrement dit, nous cherchons à comparer un même groupe d’individus avant et après une expérimentation ou dans deux contextes différents. Prenons un exemple d’application en études urbaines. Dans le cadre d’une étude sur la perception des risques associés à la pratique du vélo en ville, 50 personnes utilisant habituellement l’automobile pour se rendre au travail sont recrutées. L’expérimentation pourrait consister à leur donner une formation sur la pratique du vélo en ville et à les accompagner quelques jours durant leurs déplacements domicile-travail. Nous évaluerons la différence de leurs perceptions des risques associés à la pratique du vélo sur une échelle de 0 à 100 avant et après l’expérimentation. Nous pourrions supposer que la moyenne des différences est significativement négative, ce qui indiquerait que la perception du risque a diminué après l’expérimentation; autrement dit, la perception du risque serait plus faible en fin de période.\n\n\n\n6.1.1 Test t et ses différentes variantes\nLe t de Student, appelé aussi test t (t-test en anglais), est un test paramétrique permettant de comparer les moyennes de deux groupes (échantillons), qui peuvent être indépendantes ou non :\n\nÉchantillons indépendants (dits non appariés) : les observations de deux groupes qui n’ont aucun lien entre eux. Par exemple, nous souhaitons vérifier si les moyennes du sentiment de sécurité des hommes et des femmes, ou encore si, les moyennes des loyers entre deux villes sont statistiquement différentes. Ainsi, les tailles des deux échantillons peuvent être différentes (\\(n_a \\neq n_b\\)).\nÉchantillons dépendants (dits appariés) : les individus des deux groupes sont les mêmes et sont donc associés par paires. Autrement dit, nous avons deux séries de valeurs de taille identique \\(n_a = n_b\\) et \\(n_{ai}\\) est le même individu que \\(n_{bi}\\). Ce type d’analyse est souvent utilisée en études cliniques : pour \\(n\\) individus, nous disposons d’une mesure quantitative de leur état de santé pour deux séries (l’une avant le traitement, l’autre une fois le traitement terminé). Cela permet de comparer les mêmes individus avant et après un traitement; nous parlons alors d’étude, d’expérience ou d’analyse pré-post. Concrètement, nous cherchons à savoir si la moyenne des différences des observations avant et après est significativement différente de 0. Si c’est le cas, nous pouvons conclure que l’expérimentation a eu un impact sur le phénomène mesuré (variable continue). Ce type d’analyse pré-post peut aussi être utilisé pour évaluer l’impact du réaménagement d’un espace public (rue commerciale, place publique, parc, etc.). Par exemple, nous pourrions questionner le même échantillon de commerçant(e)s ou personnes l’utilisant avant et après le réaménagement d’une artère commerciale.\n\nCondition d’application. Pour utiliser les tests de Student et de Welch, la variable continue doit être normalement distribuée. Si elle est fortement anormale, nous utiliserons le test non paramétrique de Wilcoxon (section 6.1.2). Il existe trois principaux tests pour comparer les moyennes de deux groupes :\n\nTest de Student (test t) avec échantillons indépendants et variances similaires (méthode pooled). Les variances de deux groupes sont semblables quand leur ratio varie de 0,5 à 2, soit \\(\\mbox{0,5}&lt; (S^2_{X_A}/S^2_{X_B})&lt;\\mbox{2}\\).\nTest de Welch (appelé aussi Satterthwaite) avec échantillons indépendants quand les variances des deux groupes sont dissemblables.\nTest de Student (test t) avec échantillons dépendants.\n\nIl s’agit de vérifier si les moyennes des deux groupes sont statistiquement différentes avec les étapes suivantes :\n\nNous posons l’hypothèse nulle (H0), soit que les moyennes des deux groupes A et B ne sont pas différentes (\\(\\bar{X}_{A}=\\bar{X}_{B}\\)) ou, autrement dit, la différence des deux moyennes est nulle (\\(\\bar{X}_{A}-\\bar{X}_{B}=0\\)). L’hypothèse alternative (H1) est donc \\(\\bar{X}_{A}\\ne\\bar{X}_{B}\\).\nNous calculons la valeur de t et le nombre de degrés de liberté. La valeur de t est négative quand la moyenne du groupe A est inférieure au groupe B et inversement.\nNous comparons la valeur absolue de t (\\(\\mbox{|t|}\\)) avec celle issue de la table des valeurs critiques de T (section 13.2) avec le bon nombre de degrés de liberté et en choisissant un degré de signification (habituellement, p = 0,05). Si \\(\\mbox{|t|}\\) est supérieure à la valeur t critique, alors les moyennes sont statistiquement différentes au degré de signification retenu.\nSi les moyennes sont statistiquement différentes, nous pouvons calculer la taille de l’effet.\n\nCas 1. Test de Student pour des échantillons indépendants avec des variances similaires (méthode pooled). La valeur de t est le ratio entre la différence des moyennes des deux groupes (numérateur) et l’erreur type groupée des deux échantillons (dénominateur) :\n\\[\nt = \\frac{\\bar{X}_{A}-\\bar{X}_{B}}{\\sqrt{\\frac{S^2_p}{n_A}+\\frac{S^2_p}{n_B}}}\\mbox{ avec } S^2_p = \\frac{(n_A-1)S^2_{X_A}+(n_B-1)S^2_{X_B}}{n_A+n_B-2}\n\\tag{6.1}\\]\navec \\(n_A\\),\\(n_B\\), \\(S^2_{X_A}\\) et \\(S^2_{X_B}\\) étant respectivement les nombres d’observations et les variances pour les groupes A et B, \\(S^2_p\\) étant la variance groupée des deux échantillons et \\(n_A+n_B-2\\) étant le nombre de degrés de liberté.\nCas 2. Test de Welch pour des échantillons indépendants (avec variances dissemblables). Le test de Welch est très similaire au test de Student; seul le calcul de la valeur de t est différent, pour tenir compte des variances respectives des groupes :\n\\[\nt = \\frac{\\bar{X}_{A}-\\bar{X}_{B}}{\\sqrt{\\frac{S^2_{X_A}}{n_A}+\\frac{S^2_{X_B}}{n_B}}} \\mbox{ et } dl = \\frac{ \\left( \\frac{S^2_{X_A}}{n_A}+\\frac{S^2_{X_B}}{n_B} \\right)^2} {\\frac{S^4_{X_A}}{n^2_A(n_A-1)}+\\frac{S^4_{X_B}}{n^2_B(n_B-1)}}\n\\tag{6.2}\\]\nDans la syntaxe ci-dessous, nous avons écrit une fonction dénommée test_independants permettant de calculer les deux tests pour des échantillons indépendants. Dans cette fonction, vous pouvez repérer comment sont calculés les moyennes, les nombres d’observations et les variances pour les deux groupes, le nombre de degrés de liberté et les valeurs de t et de p pour les deux tests. Puis, nous avons créé aléatoirement deux jeux de données relativement à la vitesse de déplacement de cyclistes utilisant un vélo personnel ou un vélo en libre-service (généralement plus lourd) :\n\nAu cas 1, 60 cyclistes utilisant un vélo personnel roulant en moyenne à 18 km/h (écart-type de 1,5) et 50 autres utilisant un système de vélopartage avec une vitesse moyenne de 15 km/h (écart-type de 1,5).\nAu cas 2, 60 cyclistes utilisant un vélo personnel roulant en moyenne à 16 km/h (écart-type de 3) et 50 autres utilisant un système de vélopartage avec une vitesse moyenne de 15 km/h (écart-type de 1,5). Ce faible écart des moyennes, combiné à une plus forte variance réduit la significativité de la différence entre les deux groupes.\n\nD’emblée, l’analyse visuelle des boîtes à moustaches (figure 6.1) signale qu’au cas 1, contrairement au cas 2, les groupes sont plus homogènes (boîtes plus compactes) et les moyennes semblent différentes (les boîtes sont centrées différemment sur l’axe des ordonnées). Cela est confirmé par les résultats des tests.\n\nlibrary(\"ggplot2\")\nlibrary(\"ggpubr\")\n# fonction ------------------\ntstudent_independants &lt;- function(A, B){\n    x_a &lt;- mean(A)           # Moyenne du groupe A\n    x_b &lt;- mean(B)           # Moyenne du groupe B\n    var_a &lt;- var(A)          # Variance du groupe A\n    var_b &lt;- var(B)          # Variance du groupe B\n    sd_a &lt;- sqrt(var_a)      # Écart-type du groupe A\n    sd_b &lt;- sqrt(var_b)      # Écart-type du groupe B\n    ratio_v &lt;- var_a / var_b # ratio des variances\n    n_a &lt;- length(A)         # nombre d'observation du groupe A\n    n_b &lt;- length(B)         # nombre d'observation du groupe B\n    \n    # T-test (variances égales)\n    dl_test &lt;- n_a+n_b-2       # degrés de liberté\n    PooledVar &lt;- (((n_a-1)*var_a)+((n_b-1)*var_b))/dl_test\n    t_test &lt;- (x_a-x_b) / sqrt(((PooledVar/n_a)+(PooledVar/n_b)))\n    p_test &lt;-  2*(1-(pt(abs(t_test), dl_test)))     \n    # Test Welch-Sattherwaite (variances inégales)\n    t_welch &lt;- (x_a-x_b) / sqrt( (var_a/n_a) + (var_b/n_b))\n    dl_num = ((var_a/n_a) + (var_b/n_b))^2\n    dl_dem = ((var_a/n_a)^2/(n_a-1))  + ((var_b/n_b)^2/(n_b-1))\n    dl_welch = dl_num / dl_dem # degrés de liberté\n    p_welch &lt;- 2*(1-(pt(abs(t_welch), dl_welch)))     \n    \n    cat(\"\\n groupe A (n = \", n_a,\"), moy = \", round(x_a,1),\", \n           variance = \", round(var_a,1),\", écart-type = \", round(sd_a,1),\n        \"\\n groupe B (n = \", n_b,\"), moy = \", round(x_b,1),\", \n          variance = \", round(var_b,1),\", écart-type = \", round(sd_b,1),\n        \"\\n ratio variance = \", round(ratio_v,2),\n        \"\\n t-test (variances égales): t(dl = \", dl_test, \") = \", round(t_test,4),\n         \", p = \", round(p_test,6),\n         \"\\n t-Welch (variances inégales): t(dl = \", round(dl_welch,3), \") = \",\n        round(t_welch,4), \", p = \", round(p_welch,6),  sep = \"\")    \n  \n    if (ratio_v &gt; 0.5 && ratio_v &lt; 2)  {\n      cat(\"\\n Variances semblables. Utilisez le test de Student!\")\n      p &lt;- p_test\n    } else {\n      cat(\"\\n Variances dissemblables. Utilisez le test de Welch-Satterwaithe!\")\n      p &lt;- p_welch\n    }\n    \n    if (p &lt;=.05){\n      cat(\"\\n Les moyennes des deux groupes sont significativement différentes.\")\n    } else {\n      cat(\"\\n Les moyennes des deux groupes ne sont pas significativement différentes.\")\n    }\n}\n# CAS 1 : données fictives ------------------\n# Création du groupe A : 60 observations avec une vitesse moyenne de 18 et un écart-type de 1,5\nVelo1A &lt;- rnorm(60,18,1.5)\n# Création du groupe B : 50 observations avec une vitesse moyenne de 15 et un écart-type de 1,5\nVelo1B &lt;- rnorm(50,15,1.5)\ndf1 &lt;- data.frame(\n  vitesse = c(Velo1A,Velo1B), \n  type = c(rep(\"Vélo personnel\", length(Velo1A)), rep(\"Vélopartage\", length(Velo1B)))\n)\nboxplot1 &lt;- ggplot(data = df1, mapping=aes(x = type, y = vitesse, colour = type)) +\n  geom_boxplot(width=0.2)+\n  ggtitle(\"Données fictives (cas 1)\")+\n  xlab(\"Type de vélo\")+\n  ylab(\"Vitesse de déplacement (km/h)\")+\n  theme(legend.position = \"none\")\n# CAS 2 : données fictives ------------------\n# Création du groupe A : 60 observations avec une vitesse moyenne de 18 et un écart-type de 3\nVelo2A &lt;- rnorm(60,16,3)\n# Création du groupe B : 50 observations avec une vitesse moyenne de 15 et un écart-type de 1,5\nVelo2B &lt;- rnorm(50,15,1.5)\ndf2 &lt;- data.frame(\n  vitesse = c(Velo2A,Velo2B), \n  type = c(rep(\"Vélo personnel\", length(Velo2A)), rep(\"Vélopartage\", length(Velo2B)))\n)\nboxplot2 &lt;- ggplot(data = df2, mapping=aes(x = type, y = vitesse, colour = type)) +\n  geom_boxplot(width=0.2)+\n  ggtitle(\"Données fictives (cas 2)\")+\n  xlab(\"Type de vélo\")+\n  ylab(\"Vitesse de déplacement (km/h)\")+\n  theme(legend.position = \"none\")\nggarrange(boxplot1, boxplot2, ncol = 2, nrow = 1)\n# Appel de la fonction pour le cas 1\ntstudent_independants(Velo1A, Velo1B)\n\n\n groupe A (n = 60), moy = 17.9, \n           variance = 2.7, écart-type = 1.7\n groupe B (n = 50), moy = 15.1, \n          variance = 2.5, écart-type = 1.6\n ratio variance = 1.08\n t-test (variances égales): t(dl = 108) = 8.9846, p = 0\n t-Welch (variances inégales): t(dl = 105.744) = 9.0162, p = 0\n Variances semblables. Utilisez le test de Student!\n Les moyennes des deux groupes sont significativement différentes.\n\n# Appel de la fonction pour le cas 2\ntstudent_independants(Velo2A, Velo2B)\n\n\n groupe A (n = 60), moy = 16.2, \n           variance = 5.3, écart-type = 2.3\n groupe B (n = 50), moy = 15.2, \n          variance = 2.3, écart-type = 1.5\n ratio variance = 2.3\n t-test (variances égales): t(dl = 108) = 2.5702, p = 0.011527\n t-Welch (variances inégales): t(dl = 102.859) = 2.665, p = 0.008941\n Variances dissemblables. Utilisez le test de Welch-Satterwaithe!\n Les moyennes des deux groupes sont significativement différentes.\n\n\n\n\nFigure 6.1: Boîtes à moustaches sur des échantillons fictifs non appariés\n\n\n\n\n6.1.1.1 Principe de base et formulation pour des échantillons dépendants (appariés)\nNous disposons de plusieurs personnes pour lesquelles nous avons mesuré un phénomène (variable continue) à deux temps différents : généralement avant et après une expérimentation (analyse pré-post). Il s’agit de vérifier si la moyenne des différences des observations avant et après la période est différente de 0. Pour ce faire, nous réalisons les étapes suivantes :\n\nNous posons l’hypothèse nulle (H0), soit que la moyenne des différences entre les deux séries est égale à 0 (\\(\\bar{D} = 0\\) avec \\(d = {x}_{t_1}- {x}_{t_2}\\)). L’hypothèse alternative (H1) est donc \\(\\bar{D} \\ne 0\\). Notez que nous pouvons tester une autre valeur que 0.\nNous calculons la valeur de t et le nombre de degrés de liberté. La valeur de t est négative quand la moyenne des différences entre \\({X}_{t_1}\\) et \\({X}_{t_2}\\) est négative et inversement.\nNous comparons la valeur absolue de t (\\(\\mbox{|t|}\\)) avec celle issue de la table des valeurs critiques de T avec le nombre de degrés de liberté et en choisissant un degré de signification (habituellement, p = 0,05). Si \\(\\mbox{|t|}\\) est supérieure à la valeur t critique, alors les moyennes sont statistiquement différentes au degré de signification retenu.\n\nPour le test de Student avec des échantillons appariés, la valeur de t se calcule comme suit :\n\\[\nt = \\frac{\\bar{D}-\\mu_0}{\\sigma_D / \\sqrt{n}}\n\\tag{6.3}\\]\navec \\(\\bar{D}\\) étant la moyenne des différences entre les observations appariées de la série A et de la série B, \\(\\sigma_D\\) l’écart des différences, n le nombre d’observations, et finalement \\(\\mu_0\\) la valeur de l’hypothèse nulle que nous voulons tester (habituellement 0). Bien entendu, il est possible de fixer une autre valeur pour \\(\\mu_0\\) : par exemple, avec \\(\\mu_0 = 10\\), nous chercherions ainsi à vérifier si la moyenne des différences est significativement différente de 10. Le nombre de degrés de liberté est égal à \\(n-1\\).\nDans la syntaxe ci-dessous, nous avons écrit une fonction dénommée tstudent_dependants permettant de réaliser le test de Student pour des échantillons appariés. Dans cette fonction, vous pouvez repérer comment sont calculés la différence entre les observations pairées, la moyenne et l’écart-type de cette différence, puis le nombre de degrés de liberté, les valeurs de t et de p pour les deux tests.\nPour illustrer l’utilisation de la fonction, nous avons créé aléatoirement deux jeux de données. Imaginons que ces données décrivent 50 personnes utilisant habituellement l’automobile pour se rendre au travail. Pour ces personnes, nous avons généré des valeurs du risque perçu de l’utilisation du vélo (de 0 à 100), et ce, avant et après une période de 20 jours ouvrables durant lesquels elles devaient impérativement se rendre au travail à vélo.\n\nAu cas 1, les valeurs de risque ont une moyenne de 70 avant l’expérimentation et de 50 après l’expérimentation, avec des écarts-types de 5.\nAu cas 2, les valeurs de risque ont une moyenne de 70 avant et de 66 après, avec des écarts-types de 5.\n\nD’emblée, l’analyse visuelle des boîtes à moustaches (figure 6.2) pairées montre que la perception du risque semble avoir nettement diminué après l’expérimentation pour le cas 1, mais pas pour le cas 2. Cela est confirmé par les résultats des tests.\n\nlibrary(\"ggplot2\")\nlibrary(\"ggpubr\")\ntstudent_dependants &lt;- function(A, B, mu = 0){\n  d &lt;- A-B           # différences entre les observations pairées\n  moy &lt;- mean(d)     # Moyenne des différences\n  e_t &lt;- sd(d)       # Écart-type des différences\n  n   &lt;- length(A)   # nombre d'observations\n  dl  &lt;- n-1         # nombre de degrés de liberté (variances égales)\n  \n  t &lt;- (moy- mu) / (e_t/sqrt(n)) # valeur de t\n  p &lt;-  2*(1-(pt(abs(t), dl)))\n  \n  cat(\"\\n groupe A : moy = \", round(mean(A),1),\", var = \", \n         round(var(A),1),\", sd = \", round(sqrt(var(A)),1),\n      \"\\n groupe B : moy = \", round(mean(B),1),\", var = \", \n         round(var(B),1),\", sd = \", round(sqrt(var(B)),1),\n      \"\\n Moyenne des différences = \", round(mean(moy),1),\n      \"\\n Ecart-type des différences = \", round(mean(e_t),1),\n      \"\\n t(dl = \", dl, \") = \", round(t,2),\n      \", p = \", round(p,3),  sep = \"\")\n  \n  if (p &lt;=.05){\n    cat(\"\\n La moyenne des différences entre les échantillons est significative\")\n  }\n  else{\n    cat(\"\\n La moyenne des différences entre les échantillons n'est pas significative\")\n  }\n}\n# CAS 1 : données fictives ------------------\nAvant1 &lt;- rnorm(50,70,5)\nApres1 &lt;- rnorm(50,50,5)\ndf1 &lt;- data.frame(Avant=Avant1, Apres=Apres1)\nboxplot1 &lt;- ggpaired(df1, cond1 = \"Avant\", cond2 = \"Apres\", fill = \"condition\", \n                     palette = \"jco\", \n                     xlab = \"\", ylab = \"Sentiment de sécurité\", \n                     title = \"Données fictives (cas 1)\")\n# CAS 2 : données fictives ------------------\nAvant2 &lt;- rnorm(50,70,5)\nApres2 &lt;- rnorm(50,66,5)\ndf2 &lt;- data.frame(Avant=Avant2, Apres=Apres2)\nboxplot2 &lt;- ggpaired(df2, cond1 = \"Avant\", cond2 = \"Apres\", fill = \"condition\",\n                     palette = \"jco\", \n                     xlab = \"\", ylab = \"Sentiment de sécurité\", \n                     title = \"Données fictives (cas 2)\")\nggarrange(boxplot1, boxplot2, ncol = 2, nrow = 1)\n# Test t : appel de la fonction tstudent_dependants\ntstudent_dependants(Avant1, Apres1, mu = 0)\n\n\n groupe A : moy = 70.5, var = 29.6, sd = 5.4\n groupe B : moy = 49.8, var = 30.6, sd = 5.5\n Moyenne des différences = 20.7\n Ecart-type des différences = 7.9\n t(dl = 49) = 18.6, p = 0\n La moyenne des différences entre les échantillons est significative\n\ntstudent_dependants(Avant2, Apres2, mu = 0)\n\n\n groupe A : moy = 68.9, var = 28, sd = 5.3\n groupe B : moy = 66.2, var = 22.6, sd = 4.8\n Moyenne des différences = 2.7\n Ecart-type des différences = 7.2\n t(dl = 49) = 2.64, p = 0.011\n La moyenne des différences entre les échantillons est significative\n\n\n\n\nFigure 6.2: Boites à moustaches sur des échantillons fictifs appariés\n\n\n\n\n6.1.1.2 Mesure de la taille de l’effet\nLa taille de l’effet permet d’évaluer la magnitude (force) de l’effet d’une variable (ici la variable qualitative à deux modalités) sur une autre (ici la variable continue). Dans le cas d’une comparaison de moyennes (avec des échantillons pairés ou non), pour mesurer la taille de l’effet, nous utilisons habituellement le d de Cohen ou encore le g de Hedges; le second étant un ajustement du premier. Notez que nous analysons la taille de l’effet uniquement si le test de Student ou de Welch s’est révélé significatif (p &lt; 0,05).\nPourquoi utiliser le d de Cohen? Deux propriétés en font une mesure particulièrement intéressante. Premièrement, elle est facile à calculer puisque d est le ratio entre la différence de deux moyennes de groupes (A, B) et l’écart-type combiné des deux groupes. Deuxièmement, d représente ainsi une mesure standardisée de la taille de l’effet; elle permet ainsi l’évaluation de la taille de l’effet indépendamment de l’unité de mesure de la variable continue. Concrètement, cela signifie que, quelle que soit l’unité de mesure de la variable continue X, d est toujours exprimée en unité d’écart-type de X. Cette propriété facilite ainsi grandement les comparaisons entre des valeurs de d calculées sur différentes combinaisons de variables (au même titre que le coefficient de variation ou le coefficient de corrélation, par exemple). Pour des échantillons indépendants de tailles différentes, le d de Cohen s’écrit :\n\\[\n\\frac{\\bar{X}_{A}-\\bar{X}_{B}}{\\sqrt{\\frac{(n_A-1)S^2_A+(n_B-1)S^2_B}{n_A+n_B-2}}}\n\\tag{6.4}\\]\navec \\(n_A\\), \\(n_B\\), \\(S^2_{X_A}\\) et \\(S^2_{X_B}\\) étant respectivement les nombres d’observations et les variances pour les groupes A et B, \\(S^2_p\\).\nSi les échantillons sont de tailles identiques (\\(n_A=n_B\\)), alors d s’écrit :\n\\[\nd = \\frac{\\bar{X}_{A}-\\bar{X}_{B}}{\\sqrt{(S^2_A+\\S^2_B)/2}} = \\frac{\\bar{X}_{A}-\\bar{X}_{B}}{(\\sigma_A+\\sigma_B)/2}\n\\tag{6.5}\\]\navec \\(\\sigma_A\\) et \\(\\sigma_B\\) étant les écarts-types des deux groupes (rappel : l’écart-type est la racine carrée de la variance).\nLe g de Hedge est simplement une correction de d, particulièrement importante quand les échantillons sont de taille réduite.\n\\[\ng = d- \\left(1- \\frac{3}{4(n_A+n_B)-9} \\right)\n\\tag{6.6}\\]\nMoins utilisé en sciences sociales, mais surtout en études cliniques, le delta de Glass est simplement la différence des moyennes des deux groupes indépendants (numérateur) sur l’écart-type du deuxième groupe (dénominateur). Dans une étude clinique, nous avons habituellement un groupe qui subit un traitement (groupe de traitement) et un groupe qui reçoit un placebo (groupe de contrôle ou groupe témoin). L’effet de taille est ainsi évalué par rapport au groupe de contrôle :\n\\[\n\\Delta = \\frac{\\bar{X}_{A}-\\bar{X}_{B}}{\\sigma_B}\n\\tag{6.7}\\]\nFinalement, pour des échantillons dépendants (pairés), le delta de Glass s’écrit : \\(d = \\bar{D}/{\\sigma_D}\\) avec \\(\\bar{D}\\) et \\(\\sigma_D\\) étant la moyenne et l’écart-type des différences entre les observations.\nComment interpréter le d de Cohen? Un effet est considéré comme faible avec \\(\\lvert d \\rvert\\) à 0,2, modéré à 0,50 et fort à 0,80 (Cohen 1992). Notez que ces seuils ne sont que des conventions pour vous guider à interpréter la mesure de Cohen. D’ailleurs, dans son livre intitulé Statistical power analysis for the behavioral sciences, il écrit : « all conventions are arbitrary. One can only demand of them that they not be unreasonable » (Cohen 2013). Plus récemment, Sawilowsky (2009) a ajouté d’autres seuils à ceux proposés par Cohen (tableau 6.1).\n\n\n\n\nTableau 6.1: Conventions pour l’interprétation du d de Cohen\n\nSawilowsky\nCohen\n\n\n\n0,1 : Très faible\n\n\n\n0,2 : Faible\n0,2 : Faible\n\n\n0,5 : Moyen\n0,5 : Moyen\n\n\n0,8 : Fort\n0,8 : Fort\n\n\n1,2 : Très fort\n\n\n\n2,0 : Énorme\n\n\n\n\n\n\n\n\n6.1.1.3 Mise en œuvre dans R\nNous avons écrit précédemment les fonctions tstudent_independants et tstudent_dependants uniquement pour décomposer les différentes étapes de calcul des tests de Student et de Welch. Heureusement, il existe des fonctions de base (t.test et var.test) qui permettent de réaliser l’un ou l’autre de ces deux tests avec une seule ligne de code.\nLa fonction t.test permet ainsi de calculer les tests de Student et de Welch :\n\nt.test(x ~ y, data=, mu = 0, paired = FALSE, var.equal = FALSE,  conf.level = 0.95) ou t.test(x =, y =, mu = 0, paired = FALSE, var.equal = FALSE,  conf.level = 0.95).\nLe paramètre paired est utilisé pour spécifier si les échantillons sont dépendants (paired = TRUE) ou indépendants (paired = FALSE).\nLe paramètre var.equal est utilisé pour spécifier si les variances sont égales pour le test de Student (var.equal = TRUE) ou dissemblables pour le test de Welch (var.equal = FALSE).\nvar.test(x, y) ou var.test(x ~ y, data=) pour vérifier au préalable si les variances sont égales ou non et choisir ainsi un t de Student ou un t de Welch.\n\nLes fonctions cohens_d et hedges_g du package effectsize renvoient respectivement les mesures de d de Cohen et du g de Hedge :\n\ncohens_d(x ~ y, data = DataFrame, paired = FALSE, pooled_sd = TRUE) ou cohens_d(x, y, data = DataFrame, paired = FALSE, pooled_sd = TRUE)\nhedges_g(x ~ y, data = DataFrame, paired = FALSE, pooled_sd = TRUE) ou hedges_g(x, y, data = DataFrame, paired = FALSE, pooled_sd = TRUE)\nglass_delta(x ~ y, data = DataFrame, paired = FALSE, pooled_sd = TRUE) ou glass_delta(x, y, data = DataFrame, paired = FALSE, pooled_sd = TRUE)\n\nNotez que pour toutes ces fonctions, deux écritures sont possibles :\n\nx ~ y, data= avec un DataFrame dans lequel x est une variable continue et y et un facteur binaire\nx, y qui sont tous deux des vecteurs numériques (variable continue).\n\nExemple de test pour des échantillons indépendants\nLa figure 6.3 représente la cartographie du pourcentage de locataires par secteur de recensement (SR) pour la région métropolitaine de recensement de Montréal (RMR) en 2016, soit une variable continue. L’objectif est de vérifier si la moyenne de ce pourcentage des SR de l’agglomération de Montréal est significativement différente de celles de SR hors de l’agglomération.\n\n\nFigure 6.3: Pourcentage de locataires par secteur de recensement, région métropolitaine de recensement de Montréal, 2016\n\nLes résultats de la syntaxe ci-dessous signalent que le pourcentage de locataires par SR est bien supérieur dans l’agglomération (moyenne = 59,7 %; écart-type = 21,4 %) qu’en dehors de l’agglomération de Montréal (moyenne = 27,3 %; écart-type = 20,1 %). Cette différence de 32,5 points de pourcentage est d’ailleurs significative et très forte (t = -23,95; p &lt; 0,001, d de Cohen = 1,54).\n\nlibrary(\"foreign\")\nlibrary(\"effectsize\")\nlibrary(\"ggplot2\")\nlibrary(\"dplyr\")\n# Importation du fichier\ndfRMR &lt;- read.dbf(\"data/bivariee/SRRMRMTL2016.dbf\")\n# Définition d'un facteur binaire                  \ndfRMR$Montreal &lt;- factor(dfRMR$Montreal, \n                           levels = c(0,1), \n                           labels = c(\"Hors de Montréal\" , \"Montréal\"))\n# Comparaison des moyennes ------------------------\n# Boites à moustaches (boxplot)\nggplot(data = dfRMR, mapping=aes(x = Montreal, y = Locataire, colour = Montreal)) +\n  geom_boxplot(width=0.2)+\n  theme(legend.position = \"none\")+\n  xlab(\"Zone\")+ ylab(\"Pourcentage de locataires\")+\n  ggtitle(\"Locataires par secteur de recensement\", \n          subtitle = \"région métropolitaine de recensement de Montréal, 2016\")\n\n\n\n\n\n\n# Nombre d'observations, moyennes et écarts-types pour les deux échantillons\ngroup_by(dfRMR, Montreal) %&gt;%\n  summarise(\n    n = n(),\n    moy = mean(Locataire, na.rm = TRUE),\n    ecarttype = sd(Locataire, na.rm = TRUE)\n  )\n\n# A tibble: 2 × 4\n  Montreal             n   moy ecarttype\n  &lt;fct&gt;            &lt;int&gt; &lt;dbl&gt;     &lt;dbl&gt;\n1 Hors de Montréal   430  27.3      20.1\n2 Montréal           521  59.7      21.4\n\n# Nous vérifions si les variances sont égales avec la fonction var.test\n# quand la valeur de P est inférieure à 0,05 alors les variances diffèrent\nv &lt;- var.test(Locataire ~ Montreal, alternative = 'two.sided', conf.level = .95, data = dfRMR)\nprint(v)\n\n\n    F test to compare two variances\n\ndata:  Locataire by Montreal\nF = 0.88156, num df = 429, denom df = 520, p-value = 0.1739\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.7361821 1.0573195\nsample estimates:\nratio of variances \n         0.8815563 \n\n\nLe test indique que nous n’avons aucune raison de rejeter l’hypothèse nulle selon laquelle les variances sont égales. Pour l’île de Montréal, l’écart-type est de 21,4; il est de 20,1 hors de l’île, soit une différence négligeable.\n\n# Calcul du T de Student ou du T de Welch\np &lt;- v$p.value\nif(p &gt;= 0.05){\n  cat(\"\\n Les variances ne diffèrent pas!\",\n     \"\\n Nous utilisons le test de Student avec l'option var.equal = TRUE\", sep = \"\")\n    t.test(Locataire ~ Montreal,  # variable continue ~ facteur binaire \n           data = dfRMR,            # nom du DataFrame\n           conf.level = .95,       # intervalle de confiance pour la valeur de t\n           var.equal = TRUE)        # variances égales\n} else {\n  cat(\"\\n Les variances diffèrent!\",\n      \"\\n Nous utilisons le test de Welch avec l'option var.equal = FALSE\", sep = \"\")\n  t.test(Locataire ~ Montreal,   # variable continue ~ facteur binaire \n         data = dfRMR,           # nom du DataFrame\n         conf.level = .95,       # intervalle de confiance pour la valeur de t\n         var.equal = FALSE)        # variances différentes\n}\n\n\n Les variances ne diffèrent pas!\n Nous utilisons le test de Student avec l'option var.equal = TRUE\n\n\n\n    Two Sample t-test\n\ndata:  Locataire by Montreal\nt = -23.95, df = 949, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means between group Hors de Montréal and group Montréal is not equal to 0\n95 percent confidence interval:\n -35.11182 -29.79341\nsample estimates:\nmean in group Hors de Montréal         mean in group Montréal \n                      27.27340                       59.72601 \n\n# Effet de taille à analyser uniquement si le test est significatif\ncohens_d(Locataire ~ Montreal, data = dfRMR, paired = FALSE)\n\nCohen's d |         95% CI\n--------------------------\n-1.56     | [-1.71, -1.41]\n\n- Estimated using pooled SD.\n\nhedges_g(Locataire ~ Montreal, data = dfRMR, paired = FALSE)\n\nHedges' g |         95% CI\n--------------------------\n-1.56     | [-1.70, -1.41]\n\n- Estimated using pooled SD.\n\n\nNotez que les valeurs du d de Cohen et du g de Hedge sont très semblables; rappelons que le second est une correction du premier pour des échantillons de taille réduite. Avec 951 observations, nous disposons d’un échantillon suffisamment grand pour que cette correction soit négligeable.\nExemple de syntaxe pour un test de Student pour des échantillons dépendants\n\nlibrary(\"ggpubr\")\nlibrary(\"dplyr\")\nPre &lt;- c(79,71,81,83,77,74,76,74,79,70,66,85,69,69,82,\n         69,81,70,83,68,77,76,77,70,68,80,65,65,75,84)\nPost &lt;- c(56,47,40,45,49,51,54,47,44,54,42,56,45,45,48,\n          55,59,58,56,41,56,51,45,55,49,49,48,43,60,50)\n# Première façon de faire un tableau : avec deux colonnes Avant et Après\ndf1 &lt;- data.frame(Avant=Pre, Apres=Post)\nhead(df1)\n\n  Avant Apres\n1    79    56\n2    71    47\n3    81    40\n4    83    45\n5    77    49\n6    74    51\n\nggpaired(df1, cond1 = \"Avant\", cond2 = \"Apres\", fill = \"condition\", palette = \"jco\",\n         xlab = \"\", ylab = \"Variable continue\")\n\n\n\n\n\n\n# Nombre d'observations, moyennes et écart-types\ncat(nrow(df1), \" observations\",\n    \"\\nPOST. moy = \", round(mean(df1$Avant),1), \", e.t. = \", round(sd(df1$Avant),1),\n    \"\\nPRE.  moy = \", round(mean(df1$Apres),1), \", e.t. = \", round(sd(df1$Apres),1), sep = \"\")\n\n30 observations\nPOST. moy = 74.8, e.t. = 6.1\nPRE.  moy = 49.9, e.t. = 5.7\n\nt.test(Pre, Post, paired = TRUE)\n\n\n    Paired t-test\n\ndata:  Pre and Post\nt = 18.701, df = 29, p-value &lt; 2.2e-16\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n 22.11740 27.54926\nsample estimates:\nmean difference \n       24.83333 \n\n# Deuxième façon de faire un tableau : avec une colonne pour la variable continue\n# et une autre pour la variable qualitative\nn &lt;- length(Pre)*2\ndf2 &lt;- data.frame(\n       id=(1:n),\n       participant=(1:length(Pre)),\n       risque=c(Pre, Post)\n       )\ndf2$periode &lt;- ifelse(df2$id &lt;= length(Pre), \"Pré\", \"Post\")\nhead(df2)\n\n  id participant risque periode\n1  1           1     79     Pré\n2  2           2     71     Pré\n3  3           3     81     Pré\n4  4           4     83     Pré\n5  5           5     77     Pré\n6  6           6     74     Pré\n\n# nombre d'observations, moyennes et écarts-types pour les deux échantillons\ngroup_by(df2, periode) %&gt;%\n  summarise(\n    n = n(),\n    moy = mean(risque, na.rm = TRUE),\n    et = sd(risque, na.rm = TRUE)\n    )\n\n# A tibble: 2 × 4\n  periode     n   moy    et\n  &lt;chr&gt;   &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 Post       30  49.9  5.67\n2 Pré        30  74.8  6.10\n\nggpaired(data = df2, x = \"periode\", y = \"risque\", fill = \"periode\",\n         xlab = \"\", ylab = \"Variable continue\")\n\n\n\n\n\n\nPre &lt;- subset(df2, periode == \"Pré\")$risque\nPost &lt;- subset(df2, periode == \"Post\")$risque\nt.test(Pre, Post, paired = TRUE)\n\n\n    Paired t-test\n\ndata:  Pre and Post\nt = 18.701, df = 29, p-value &lt; 2.2e-16\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n 22.11740 27.54926\nsample estimates:\nmean difference \n       24.83333 \n\n\n\n6.1.1.4 Comparaison des moyennes pondérées\n\n\n\n\n\nMoyennes pondérées\n\n\nEn études urbaines et en géographie, le recours aux données agrégées (non individuelles) est fréquent, par exemple au niveau des secteurs de recensement (comprenant généralement entre 2500 à 8000 habitants). Dans ce contexte, un secteur de recensement plus peuplé devrait avoir un poids plus important dans l’analyse. Il est possible d’utiliser les versions pondérées des tests présentés précédemment. Prenons deux exemples pour illustrer le tout :\n\nPour chaque secteur de recensement des îles de Montréal et de Laval, nous avons calculé la distance au parc le plus proche à travers le réseau de rues avec un système d’information géographique (SIG). Nous souhaitons vérifier si les personnes âgées de moins de 15 ans résidant sur l’île de Montréal bénéficient en moyenne d’une meilleure accessibilité au parc.\nDans une étude sur la concentration de polluants atmosphériques dans l’environnement autour des écoles primaires montréalaises, Carrier et al. (2014) souhaitaient vérifier si les élèves fréquentant les écoles les plus défavorisées sont plus exposé(e)s au dioxyde d’azote (NO2) dans leur milieu scolaire. Pour ce faire, ils ont réalisé un test t sur un tableau avec comme observations les écoles primaires et trois variables : la moyenne de NO2 (variable continue), les quintiles extrêmes d’un indice de défavorisation (premier et dernier quintiles, variable qualitative) et le nombre d’élèves par école (variable pour la pondération).\n\nPour réaliser un test t pondéré, nous pouvons utiliser la fonction t_test du package sjstats.\n\n\nEn guise d’exemple appliqué, dans la syntaxe ci-dessous, nous avons refait le même test t que précédemment (Locataire ~ Montreal) en pondérant chaque secteur de recensement par le nombre de logements qu’il comprend.\n\nlibrary(\"sjstats\")\nlibrary(\"dplyr\")\n# Calcul des statistiques pondérées\ngroup_by(dfRMR, Montreal) %&gt;%\n  summarise(\n    n = sum(Logement),\n    MoyPond = weighted_mean(Locataire, Logement),\n    ecarttypePond = weighted_sd(Locataire, Logement)\n  )\n\n# A tibble: 2 × 4\n  Montreal              n MoyPond ecarttypePond\n  &lt;fct&gt;             &lt;int&gt;   &lt;dbl&gt;         &lt;dbl&gt;\n1 Hors de Montréal 856928    28.4          19.9\n2 Montréal         870354    60.0          20.8\n\n# Test t non pondéré\nt.test(Locataire ~ Montreal, dfRMR, \n       var.equal = TRUE, conf.level = .95)\n\n\n    Two Sample t-test\n\ndata:  Locataire by Montreal\nt = -23.95, df = 949, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means between group Hors de Montréal and group Montréal is not equal to 0\n95 percent confidence interval:\n -35.11182 -29.79341\nsample estimates:\nmean in group Hors de Montréal         mean in group Montréal \n                      27.27340                       59.72601 \n\n# Test t pondérée\nsjstats::t_test(dfRMR, \n                select  = \"Locataire\", \n                by = \"Montreal\", \n                weights = \"Logement\",\n                mu = 0,\n                paired = FALSE)\n\n# Two-Sample t-test (weighted)\n\n  Data: Locataire by Montreal\n  Group 1: Hors de Montréal (n = 856928, mean = 28.40)\n  Group 2: Montréal         (n = 870354, mean = 60.00)\n  Alternative hypothesis: true difference in means is not equal to 0\n\n  t = -23.88, Cohen's d = -0.81 (large effect), df = 928.3, p &lt; .001\n\n\n\n6.1.1.5 Comment rapporter un test de Student ou de Welch?\nPour les différentes versions du test, il est important de rapporter les valeurs de t et de p, les moyennes et écarts-types des groupes. Voici quelques exemples.\nTest de Student ou de Welch pour échantillons indépendants\n\nDans la région métropolitaine de Montréal en 2005, le revenu total des femmes (moyenne = 29 117 dollars; écart-type = 258 022) est bien inférieur à celui des hommes (moyenne = 44 463; écart-type = 588 081). La différence entre les moyennes des deux sexes (-15 345) en faveur des hommes est d’ailleurs significative (t = -27,09; p &lt; 0,001).\nIl y un effet significatif selon le sexe (t = -27,09; p &lt; 0,001), le revenu total des hommes (moyenne = 44 463; écart-type = 588 081) étant bien supérieur à celui des femmes (moyenne = 29 117; écart-type = 258 022).\n50 personnes se rendent au travail à vélo (moyenne = 33,7; écart-type = 8,5) contre 60 en automobile (moyenne = 34; écart-type = 8,7). Il n’y a pas de différence significative entre les moyennes d’âge des deux groupes (t(108) = -0,79; p = 0,427).\n\nTest de Student échantillons dépendants (pairés)\n\nNous constatons une diminution significative de la perception du risque après l’activité (moyenne = 49,9; écart-type = 5,7) comparativement à avant (moyenne = 74,8; écart-type = 6,1), avec une différence de -24,8 (t(29) = -18,7; p &lt; 0,001).\nLes résultats du pré-test (moyenne = 49,9; écart-type = 5,7) et du post-test (moyenne = 74,8; écart-type = 6,1) montrent qu’il y une diminution significative de la perception du risque (t(29) = -18,7; p &lt; 0,001).\n\nPour un texte en anglais, consultez https://www.socscistatistics.com/tutorials/ttest/default.aspx.\n\n6.1.2 Test non paramétrique de Wilcoxon\n\n\n\n\n\nTest non paramétrique de Wilcoxon\n\n\nSi la variable continue est fortement anormalement distribuée, il est déconseillé d’utiliser les tests de Student et de Welch. Nous privilégions le test des rangs signés de Wilcoxon (Wilcoxon rank-sum test en anglais). Attention, il est aussi appelé test U de Mann-Whitney. Ce test permet alors de vérifier si les deux groupes présentent des médianes différentes.\nPour ce faire, nous utilisons la fonction wilcox.test dans laquelle le paramètre paired permet de spécifier si les échantillons sont indépendants ou non (FALSE ou TRUE).\n\n\nDans l’exemple suivant, nous analysons le pourcentage de locataires dans les secteurs de recensement de la région métropolitaine de Montréal. Plus spécifiquement, nous comparons ce pourcentage entre les secteurs présents sur l’île et les secteurs hors de l’île. Il s’agit donc d’un test avec des échantillons indépendants.\n\nlibrary(\"foreign\")\nlibrary(\"dplyr\")\n###############################\n# Échantillons indépendants\n###############################\ndfRMR &lt;- read.dbf(\"data/bivariee/SRRMRMTL2016.dbf\")\n# Définition d'un facteur binaire                  \ndfRMR$Montreal &lt;- factor(dfRMR$Montreal, \n                           levels =   c(0,1), \n                           labels = c(\"Hors de Montréal\" , \"Montréal\"))\n# Calcul du nombre d'observations, des moyennes et \n# des écarts-types des rangs pour les deux échantillons\ngroup_by(dfRMR, Montreal) %&gt;%\n  summarise(\n    n = n(),\n    moy_rang = mean(rank(Locataire), na.rm = TRUE),\n    med_rang = median(rank(Locataire), na.rm = TRUE),\n    ecarttype_rang = sd(rank(Locataire), na.rm = TRUE)\n  )\n\n# A tibble: 2 × 5\n  Montreal             n moy_rang med_rang ecarttype_rang\n  &lt;fct&gt;            &lt;int&gt;    &lt;dbl&gt;    &lt;dbl&gt;          &lt;dbl&gt;\n1 Hors de Montréal   430     216.     216.           124.\n2 Montréal           521     261      261            151.\n\n# Test des rangs signés de Wilcoxon sur des échantillons indépendants\nwilcox.test(Locataire ~ Montreal, dfRMR)\n\n\n    Wilcoxon rank sum test with continuity correction\n\ndata:  Locataire by Montreal\nW = 33716, p-value &lt; 2.2e-16\nalternative hypothesis: true location shift is not equal to 0\n\n\nNous observons bien ici une différence significative entre le pourcentage de locataires des secteurs de recensement sur l’île (rang médian = 216) et ceux en dehors de l’île (rang médian = 261).\nPour le second exemple, nous générons deux jeux de données au hasard représentant une mesure d’une variable pré-traitement (pre) et post-traitement (post) pour un même échantillon.\n\n###############################\n# Échantillons dépendants\n###############################\npre &lt;- sample(60:80, 50, replace = TRUE)\npost &lt;- sample(30:65, 50, replace = TRUE)\ndf1 &lt;- data.frame(Avant=pre, Apres=post)\n# Nombre d'observations, moyennes et écart-types\ncat(nrow(df1), \" observations\",\n    \"\\nPOST. median = \", round(median(df1$Avant), 1), \n             \", moy = \", round(mean(df1$Avant), 1),\n    \"\\nPRE.  median = \", round(median(df1$Apres), 1), \n             \", moy = \", round(mean(df1$Apres), 1), sep = \"\")\n\n50 observations\nPOST. median = 71, moy = 70.1\nPRE.  median = 48, moy = 47.5\n\nwilcox.test(df1$Avant, df1$Apres, paired = TRUE)\n\n\n    Wilcoxon signed rank test with continuity correction\n\ndata:  df1$Avant and df1$Apres\nV = 1275, p-value = 7.722e-10\nalternative hypothesis: true location shift is not equal to 0\n\n\nÀ nouveau, nous obtenons une différence significative entre les deux variables.\nComment rapporter un test de Wilcoxon?\nLorsque nous rapportons les résultats d’un test de Wilcoxon, il est important de signaler la valeur du test (W), le degré de signification (valeur de p) et éventuellement la médiane des rangs ou de la variable originale pour les deux groupes. Voici quelques exemples :\n\nLes résultats du test des rangs signés de Wilcoxon signalent que les rangs de l’île de Montréal sont significativement plus élevés que ceux de l’île de Laval (W = 1223, p &lt; 0,001).\nLes résultats du test de Wilcoxon signalent que les rangs post-tests sont significativement plus faibles que ceux du pré-test (W = 1273,5, p &lt; 0,001).\nLes résultats du test de Wilcoxon signalent que la médiane des rangs pré-tests (médiane = 69) est significativement plus forte que celle du post-test (médiane = 50,5) (W = 1273,5, p &lt; 0,001)."
  },
  {
    "objectID": "06-bivarieeQualiQuanti.html#sec-062",
    "href": "06-bivarieeQualiQuanti.html#sec-062",
    "title": "6  Relation entre une variable qualitative et une variable quantitative",
    "section": "\n6.2 Relation entre une variable quantitative et une variable qualitative à plus de deux modalités",
    "text": "6.2 Relation entre une variable quantitative et une variable qualitative à plus de deux modalités\n\n\n\n\n\nExiste-t-il une relation entre une variable continue et une variable qualitative comprenant plus de deux modalités?\n\n\nPour répondre à cette question, nous avons recours à deux méthodes : l’analyse de variance – ANOVA, ANalysis Of VAriance en anglais – et le test non paramétrique de Kruskal-Wallis. La première permet de vérifier si les moyennes de plusieurs groupes d’une population donnée sont ou non significativement différentes; la seconde, si leurs médianes sont différentes.\n\n\n\n6.2.1 Analyse de variance\nL’analyse de variance (ANOVA) est largement utilisée en psychologie, en médecine et en pharmacologie. Prenons un exemple classique en pharmacologie pour tester l’efficacité d’un médicament. Quatre groupes de population sont constitués :\n\nun premier groupe d’individus pour lequel nous administrons un placebo (un médicament sans substance active), soit le groupe de contrôle ou le groupe témoin;\nun second groupe auquel nous administrons le médicament avec un faible dosage;\nun troisième avec un dosage moyen;\nun quatrième avec un dosage élevé.\n\nLa variable continue permet d’évaluer l’évolution de l’état de santé des individus (par exemple, la variation du taux de globules rouges dans le sang avant et après le traitement). Si le traitement est efficace, nous nous attendons alors à ce que les moyennes des deuxième, troisième et quatrième groupes soient plus élevées que celle du groupe de contrôle. Les différences de moyennes entre les second, troisième et quatrième groupes permettent aussi de repérer le dosage le plus efficace. Si nous n’observons aucune différence significative entre les groupes, cela signifie que l’effet du médicament ne diffère pas de l’effet d’un placébo.\nL’ANOVA est aussi très utilisée en études urbaines, principalement pour vérifier si un phénomène urbain varie selon plusieurs groupes d’une population donnée ou de régions géographiques. En guise d’exemple, le recours à l’ANOVA permet de répondre aux questions suivantes :\n\nLes moyennes des niveaux d’exposition à un polluant atmosphérique (variable continue) varient-elles significativement selon le mode de transport utilisé (automobile, vélo, transport en commun) pour des trajets similaires en heures de pointe?\nPour une métropole donnée, les moyennes des loyers (variable continue) sont-elles différentes entre les logements de la ville centre versus ceux localisés dans la première couronne et ceux de la seconde couronne?\n\n\n6.2.1.1 Calcul des trois variances pour l’ANOVA\nL’ANOVA repose sur le calcul de trois variances :\n\nla variance totale (VT) de la variable dépendante continue, soit la somme des carrés des écarts à la moyenne de l’ensemble de la population (équation 6.8);\nla variance intergroupe (Varinter) ou variance expliquée (VE), soit la somme des carrés des écarts entre la moyenne de chaque groupe et la moyenne de l’ensemble du jeu de données multipliées par le nombre d’individus appartenant à chacun des groupes (équation 6.9);\nla variance intragroupe (Varintra) ou variance non expliquée (VNE), soit la somme des variances des groupes de la variable indépendante (équation 6.10).\n\n\\[\nVT=\\sum_{i=1}^n (y_{i}-\\overline{y})^2\n\\tag{6.8}\\]\n\\[\nVar_{inter} \\mbox{ ou } VE=n_{g_1}\\sum_{i\\in{g_1}}(\\overline{y_{g_1}}-\\overline{y})^2 + n_{g_2}\\sum_{i\\in{g_2}}(\\overline{y_{g_2}}-\\overline{y})^2 + ... + n_{g_k}\\sum_{i\\in{g_n}}(\\overline{y_{g_k}}-\\overline{y})^2\n\\tag{6.9}\\]\n\\[\nVar_{intra} \\mbox{ ou } VNE=\\sum_{i\\in{g_1}}(y_{i}-\\overline{y_{g_1}})^2 + \\sum_{i\\in{g_2}}(y_{i}-\\overline{y_{g_2}})^2 + ... + \\sum_{i\\in{g_n}}(y_{i}-\\overline{y_{g_k}})^2\n\\tag{6.10}\\]\noù \\(\\overline{y}\\) est la moyenne de l’ensemble de la population; \\(\\overline{y_{g_1}}\\), \\(\\overline{y_{g_2}}\\), \\(\\overline{y_{g_k}}\\) sont respectivement les moyennes des groupes 1 à k (k étant le nombre de modalités de la variable qualitative) et \\(n_{g_1}\\),\\(n_{g_2}\\) et \\(n_{g_k}\\) sont les nombres d’observations dans les groupes 1 à k.\nLa variance totale (VT) est égale à la somme de la variance intergroupe (expliquée) et la variance intragroupe (non expliquée) (équation 6.11). Le ratio entre la variance intergroupe (expliquée) et la variance totale est dénommé Eta2 (équation 6.12). Il varie de 0 à 1 et exprime la proportion de la variance de la variable continue qui est expliquée par les différentes modalités de la variable qualitative.\n\\[\nVT = Var_{inter} + Var_{intra} \\mbox{ ou } VT = VNE + VE\n\\tag{6.11}\\]\n\\[\n\\eta^2= \\frac{Var_{inter}}{VT} \\mbox{ ou }  \\eta^2= \\frac{VE}{VT}\n\\tag{6.12}\\]\n\n\n\n\n\nLa décomposition de la variance totale : une notion fondamentale en statistique\n\n\nLa variance totale est égale à la somme des variances intragroupe et intergroupe. Nous verrons qu’elle est aussi utilisée pour évaluer la qualité d’une partition d’une population en plusieurs groupes dans le chapitre sur les méthodes de classification (chapitre 13). En ANOVA, nous retenons que :\n\nplus la variance intragroupe est faible, plus les différents groupes sont homogènes;\nplus la variance intergroupe est forte, plus les moyennes des groupes sont différentes et donc plus les groupes sont dissemblables.\n\nAutrement dit, plus la variance intergroupe (dissimilarité des groupes) est maximisée et corollairement plus la variance intragroupe (homogénéité de chacun des groupes) est minimisée, plus les groupes sont clairement distincts et plus l’ANOVA est performante.\n\n\nExaminons un premier jeu de données fictives sur la vitesse de déplacement de cyclistes (variable continue exprimée en km/h) et une variable qualitative comprenant trois groupes de cyclistes utilisant soit un vélo personnel (nA = 5), soit en libre-service (nB = 7), soit électrique (nC = 6) (tableau 6.2). D’emblée, nous notons que les moyennes de vitesse des trois groupes sont différentes : 17,6 km/h pour les cyclistes avec leur vélo personnel, 12,3 km/h celles et ceux avec des vélos en libre-service et 23,1 km/h pour les cyclistes avec un vélo électrique. Pour chaque observation, la troisième colonne du tableau représente les écarts à la moyenne globale mis au carré, tandis que les colonnes suivantes représentent la déviation au carré de chaque observation à la moyenne de son groupe d’appartenance. Ainsi, pour la première observation, nous avons \\((\\mbox{16,900} - \\mbox{17,339})^2 = \\mbox{0,193}\\) et \\((\\mbox{16,900} - \\mbox{17,580})^2~ = \\mbox{0,462}\\). Les valeurs des trois variances sont les suivantes :\n\nla variance totale (VT) est donc égale à la somme de la troisième colonne (\\(\\mbox{424,663}\\)).\nla variance intergroupe (expliquée, VE), elle est égale à \\(\\mbox{5}\\times(\\mbox{17,580-17,339})^2+\\mbox{7}\\times(\\mbox{12,257-17,339})^2+\\mbox{6}\\times(\\mbox{23,067-17,339})^2 = \\mbox{377,904}\\).\nla variance intragroupe (non expliquée, VNE) est égale à \\(\\mbox{11,228+21,537+13,993=46,758}\\).\n\nNous avons donc \\(VT = Var_{inter} + Var_{intra}\\), soit \\(\\mbox{424,663 = 377,904 + 46,758}\\) et \\(\\eta_2 = \\mbox{377,904 / 424,663 = 0,89}\\). Cela signale que 89 % de la variance de la vitesse des cyclistes est expliquée par le type de vélo utilisé.\n\nVeloA &lt;- c(16.9, 20.4, 16.1, 17.7, 16.8)\nVeloB &lt;- c(13.4, 11.3, 14.0, 12.4, 13.7, 8.5, 12.5)\nVeloC &lt;- c(22.9, 26.0, 23.6, 21.0, 22.3, 22.6)\nmoyA &lt;- mean(VeloA)\nmoyB &lt;- mean(VeloB)\nmoyC &lt;- mean(VeloC)\ngrandmoy &lt;- mean(c(VeloA,VeloB,VeloC))\nnA &lt;- length(VeloA)\nnB &lt;- length(VeloB)\nnC &lt;- length(VeloC)\nn &lt;- nA + nB + nC\nVT &lt;- sum((c(VeloA,VeloB, VeloC)-grandmoy)^2)\nVNE_A &lt;- sum((VeloA-moyA)^2)\nVNE_B &lt;- sum((VeloB-moyB)^2)\nVNE_C &lt;- sum((VeloC-moyC)^2)\nVNE &lt;- VNE_A + VNE_B + VNE_C\nVE &lt;- nA*(moyA-grandmoy)^2 + nB*(moyB-grandmoy)^2 + nC*(moyC-grandmoy)^2\nEta2 &lt;- round(VE / VT, 4)\n  \ndf &lt;- data.frame(\n  velo = c(rep(\"A. personnel\", length(VeloA)), \n           rep(\"B. libre-service\", length(VeloB)),\n           rep(\"C. électrique\", length(VeloC))),\n  kmh = c(VeloA,VeloB, VeloC))\ndf$VT &lt;- (df$kmh - grandmoy)^2\ndf$VNE_A &lt;- ifelse(df$velo == \"A. personnel\", (df$kmh - moyA)^2, NA)\ndf$VNE_B &lt;- ifelse(df$velo == \"B. libre-service\", (df$kmh - moyB)^2, NA)\ndf$VNE_C &lt;- ifelse(df$velo == \"C. électrique\", (df$kmh - moyC)^2, NA)\ndf_cas1 &lt;- df\ntabl &lt;- df\ntabl$velo &lt;- as.character(tabl$velo)\ntabl[19,1] &lt;- \"grande moyenne\"\ntabl[20,1] &lt;- \"moyenne groupe A\"\ntabl[21,1] &lt;- \"moyenne groupe B\"\ntabl[22,1] &lt;- \"moyenne groupe C \"\ntabl[19,2] &lt;- round(grandmoy,3)\ntabl[20,2] &lt;- round(moyA,3)\ntabl[21,2] &lt;- round(moyB,3)\ntabl[22,2] &lt;- round(moyC,3)\ntabl[23,1] &lt;- \"Variance totale\"\ntabl[24,1] &lt;- \"Variance intragroupe\"\ntabl[23,3] &lt;- sum(tabl$VT, na.rm = TRUE)\ntabl[24,4] &lt;- sum(tabl$VNE_A, na.rm = TRUE)\ntabl[24,5] &lt;- sum(tabl$VNE_B, na.rm = TRUE)\ntabl[24,6] &lt;- sum(tabl$VNE_C, na.rm = TRUE)\ntabl$VT &lt;- round(tabl$VT,3)\ntabl$VNE_A &lt;- round(tabl$VNE_A,3)\ntabl$VNE_B &lt;- round(tabl$VNE_B,3)\ntabl$VNE_C &lt;- round(tabl$VNE_C,3)\nopts &lt;- options(knitr.kable.NA = \"--\")\n\nknitr::kable(tabl, \n           caption = \"Données fictives et calcul des trois variances (cas 1)\",\n           format.args = list(decimal.mark = ',', big.mark = \" \"),\n             col.names = c(\"Type de vélo\",\n                \"km/h\",\n                \"$(y_{i}-\\\\overline{y})^2$\",\n                \"$(y_{i}-\\\\overline{y_{A}})^2$\",\n                \"$(y_{i}-\\\\overline{y_{B}})^2$\",\n                \"$(y_{i}-\\\\overline{y_{C}})^2$\"\n                ),\n                align= c(\"l\", \"c\", \"r\", \"r\", \"r\", \"r\")\n)\n\n\n\nTableau 6.2: Données fictives et calcul des trois variances (cas 1)\n\n\n\n\n\n\n\n\n\nType de vélo\nkm/h\n\\((y_{i}-\\overline{y})^2\\)\n\\((y_{i}-\\overline{y_{A}})^2\\)\n\\((y_{i}-\\overline{y_{B}})^2\\)\n\\((y_{i}-\\overline{y_{C}})^2\\)\n\n\n\nA. personnel\n16,900\n0,193\n0,462\n–\n–\n\n\nA. personnel\n20,400\n9,370\n7,952\n–\n–\n\n\nA. personnel\n16,100\n1,535\n2,190\n–\n–\n\n\nA. personnel\n17,700\n0,130\n0,014\n–\n–\n\n\nA. personnel\n16,800\n0,290\n0,608\n–\n–\n\n\nB. libre-service\n13,400\n15,515\n–\n1,306\n–\n\n\nB. libre-service\n11,300\n36,468\n–\n0,916\n–\n\n\nB. libre-service\n14,000\n11,148\n–\n3,038\n–\n\n\nB. libre-service\n12,400\n24,393\n–\n0,020\n–\n\n\nB. libre-service\n13,700\n13,242\n–\n2,082\n–\n\n\nB. libre-service\n8,500\n78,126\n–\n14,116\n–\n\n\nB. libre-service\n12,500\n23,415\n–\n0,059\n–\n\n\nC. électrique\n22,900\n30,926\n–\n–\n0,028\n\n\nC. électrique\n26,000\n75,015\n–\n–\n8,604\n\n\nC. électrique\n23,600\n39,202\n–\n–\n0,284\n\n\nC. électrique\n21,000\n13,404\n–\n–\n4,271\n\n\nC. électrique\n22,300\n24,613\n–\n–\n0,588\n\n\nC. électrique\n22,600\n27,679\n–\n–\n0,218\n\n\ngrande moyenne\n17,339\n–\n–\n–\n–\n\n\nmoyenne groupe A\n17,580\n–\n–\n–\n–\n\n\nmoyenne groupe B\n12,257\n–\n–\n–\n–\n\n\nmoyenne groupe C\n23,067\n–\n–\n–\n–\n\n\nVariance totale\n–\n424,663\n–\n–\n–\n\n\nVariance intragroupe\n–\n–\n11,228\n21,537\n13,993\n\n\n\n\n\n\nExaminons un deuxième jeu de données fictives pour lequel le type de vélo utilisé n’aurait que peu d’effet sur la vitesse des cyclistes (tableau 6.3). D’emblée, les moyennes des trois groupes semblent très similaires (19,3, 17,9 et 18,7). Les valeurs des trois variances sont les suivantes :\n\nla variance totale (VT) est égale à \\(\\mbox{121,756}\\).\nla variance intergroupe (expliquée, VE) est égale à \\(\\mbox{5}\\times(\\mbox{19,300-18,528})^2+\\mbox{7}\\times(\\mbox{17,871-18,528})^2+\\mbox{6}\\times(\\mbox{18,650-18,528})^2 = \\mbox{6,087}\\).\nla variance intragroupe (non expliquée, VNE) est égale à \\(\\mbox{9,140+50,254+56,275 = 115,669}\\).\n\nNous avons donc \\(VT = Var_{inter} + Var_{intra}\\), soit \\(\\mbox{121,756 = 6,087 + 115,669}\\) et \\(\\eta_2 = \\mbox{6,087 / 121,756 = 0,05}\\). Cela signale que 5 % de la variance de la vitesse des cyclistes est uniquement expliquée par le type de vélo utilisé.\n\n\n\n\nTableau 6.3: Données fictives et calcul des trois variances (cas 2)\n\n\n\n\n\n\n\n\n\nType de vélo\nkm/h\n\\((y_{i}-\\overline{y})^2\\)\n\\((y_{i}-\\overline{y_{A}})^2\\)\n\\((y_{i}-\\overline{y_{B}})^2\\)\n\\((y_{i}-\\overline{y_{C}})^2\\)\n\n\n\nA. personnel\n17,500\n1,056\n3,24\n–\n–\n\n\nA. personnel\n19,000\n0,223\n0,09\n–\n–\n\n\nA. personnel\n19,700\n1,374\n0,16\n–\n–\n\n\nA. personnel\n18,700\n0,030\n0,36\n–\n–\n\n\nA. personnel\n21,600\n9,439\n5,29\n–\n–\n\n\nB. libre-service\n13,700\n23,307\n–\n17,401\n–\n\n\nB. libre-service\n20,800\n5,163\n–\n8,577\n–\n\n\nB. libre-service\n15,100\n11,750\n–\n7,681\n–\n\n\nB. libre-service\n18,800\n0,074\n–\n0,862\n–\n\n\nB. libre-service\n21,500\n8,834\n–\n13,167\n–\n\n\nB. libre-service\n16,500\n4,112\n–\n1,881\n–\n\n\nB. libre-service\n18,700\n0,030\n–\n0,687\n–\n\n\nC. électrique\n16,600\n3,716\n–\n–\n4,203\n\n\nC. électrique\n16,300\n4,963\n–\n–\n5,523\n\n\nC. électrique\n15,600\n8,572\n–\n–\n9,303\n\n\nC. électrique\n20,000\n2,167\n–\n–\n1,822\n\n\nC. électrique\n24,600\n36,872\n–\n–\n35,402\n\n\nC. électrique\n18,800\n0,074\n–\n–\n0,022\n\n\ngrande moyenne\n18,528\n–\n–\n–\n–\n\n\nmoyenne groupe A\n19,300\n–\n–\n–\n–\n\n\nmoyenne groupe B\n17,871\n–\n–\n–\n–\n\n\nmoyenne groupe C\n18,650\n–\n–\n–\n–\n\n\nVariance totale\n–\n121,756\n–\n–\n–\n\n\nVariance intragroupe\n–\n–\n9,14\n50,254\n56,275\n\n\n\n\n\n\n\n6.2.1.2 Test de Fisher\nPour vérifier si les moyennes sont statistiquement différentes (autrement dit, si leur différence est significativement différente de 0), nous avons recours au test F de Fisher. Pour ce faire, nous posons l’hypothèse nulle (H0), soit que les moyennes des groupes sont égales; autrement dit que la variable qualitative n’a pas d’effet sur la variable continue (indépendance entre les deux variables). L’hypothèse alternative (H1) est donc que les moyennes sont différentes. Pour nos deux jeux de données fictives ci-dessus comprenant trois groupes, H0 signifie que \\(\\overline{y_{A}}=\\overline{y_{B}}=\\overline{y_{C}}\\). La statistique F se calcule comme suit :\n\\[\nF = \\frac{\\frac{Var{inter}}{k-1}}{\\frac{Var{intra}}{n-k}}\\mbox{ ou } F = \\frac{\\frac{VE}{k-1}}{\\frac{VNE}{n-k}}\n\\tag{6.13}\\]\noù \\(n\\) et \\(k\\) sont respectivement les nombres d’observations et de modalités de la variable qualitative. L’hypothèse nulle (les moyennes sont égales) est rejetée si la valeur du F calculé est supérieure à la valeur critique de la table F avec les degrés de liberté (k-1, n-k) et un seuil \\(\\alpha\\) (p=0,05 habituellement) (voir la table des valeurs critiques de F, section 13.2). Notez que nous utilisons rarement la table F puisqu’avec la fonction aov, nous obtenons directement la valeur F et celle de p qui lui est associée. Concrètement, si le test F est significatif (avec p &lt; 0,05), plus la valeur de F est élevée, plus la différence entre les moyennes est élevée.\nAppliquons rapidement la démarche du test F à nos deux jeux de données fictives qui comprennent 3 modalités pour la variable qualitative et 18 observations. Avec \\(\\alpha\\) = 0,05, 2 degrés de liberté (3-1) au numérateur et 15 au dénominateur (18-3), la valeur critique de F est de 3,68. Nous en concluons alors que :\n\nPour le cas A, le F calculé est égal à \\(\\mbox{(377,904 / 2) / (46,758 / 15) = 60,62}\\). Il est supérieur à la valeur F critique; les moyennes sont donc statistiquement différentes au seuil 0,05. Autrement dit, nous aurions eu moins de 5 % de chance d’obtenir un échantillon produisant ces résultats si en réalité la différence entre les moyennes était de 0.\nPour le cas B, le F calculé est égal à \\(\\mbox{(6,087 / 2) / (115,669 / 15) = 0,39}\\). Il est inférieur à la valeur F critique; les moyennes ne sont donc pas statistiquement différentes au seuil de 0,05.\n\n6.2.1.3 Conditions d’application de l’ANOVA et solutions de rechange\nTrois conditions d’application doivent être vérifiées avant d’effectuer une analyse de variance sur un jeu de données :\n\nNormalité des groupes. Le test de Fisher repose sur le postulat que les échantillons (groupes) sont normalement distribués. Pour le vérifier, nous avons recours au test de normalité de Shapiro–Wilk (section 2.5.4.1.3). Rappelez-vous toutefois que ce test est très restrictif, surtout pour de grands échantillons.\nHomoscédasticité. La variance dans les échantillons doit être la même (homogénéité des variances). Pour vérifier cette condition, nous utilisons les tests de Levene, de Bartlett ou de Breusch-Pagan.\nIndépendance des observations (pseudo-réplication). Chaque individu doit appartenir à un et un seul groupe. En d’autres termes, les observations ne sont pas indépendantes si plusieurs mesures (variable continue) sont faites sur un même individu. Si c’est le cas, nous utiliserons alors une analyse de variance sur des mesures répétées (voir le bloc à la fin du chapitre).\n\nQuelles sont les conséquences si les conditions d’application ne sont pas respectées? La non-vérification des conditions d’application cause deux problèmes distincts : elle affecte la puissance du test (sa capacité à détecter un effet, si celui-ci existe réellement) et le taux d’erreur de type 1 (la probabilité de trouver un résultat significatif alors qu’aucune relation n’existe réellement, soit un faux positif) (Glass, Peckham et Sanders 1972; Lix, Keselman et Keselman 1996).\n\nSi la distribution est asymétrique plutôt que centrée (comme pour une distribution normale), la puissance et le taux d’erreur de type 1 sont tous les deux peu affectés, car le test est non orienté (la différence de moyennes peut être négative ou positive).\nSi la distribution est leptocurtique (pointue, avec des extrémités de la distribution plus importantes), le taux d’erreur de type 1 est peu affecté; en revanche, la puissance du test est réduite. L’inverse s’observe si la distribution est platicurtique (aplatie, c’est-à-dire avec des extrémités de la distribution plus réduites.\nSi les groupes ont des variances différentes, le taux d’erreur de type 1 augmente légèrement.\nSi les observations ne sont pas indépendantes, à la fois le taux d’erreur de type 1 et la puissance du test sont fortement affectés.\nSi les échantillons sont petits, les effets présentés ci-dessus sont démultipliés.\nSi plusieurs conditions ne sont pas respectées, les conséquences présentées ci-dessus s’additionnent, voire se combinent.\n\nQue faire quand les conditions d’application relatives à la normalité ou à l’homoscédasticité ne sont vraiment pas respectées? Signalons d’emblée que le non-respect de ces conditions ne change rien à la décomposition de la variance (VT = Vintra+Vinter). Cela signifie que vous pouvez toujours calculer Eta2. Par contre, le test de Fisher ne peut pas être utilisé, car il est biaisé comme décrit précédemment. Quatre solutions sont envisageables :\n\nLorsque les échantillons sont fortement anormalement distribués, certains auteurs vont simplement transformer leur variable en appliquant une fonction logarithme (le plus souvent) ou racine carrée, inverse ou exponentielle, et reporter le test de Fisher calculé sur cette transformation. Attention toutefois! Transformer une variable ne va pas systématiquement la rapprocher d’une distribution normale et complique l’interprétation finale des résultats. Par conséquent, avant de recalculer votre test F, il convient de réaliser un test de normalité de Shapiro–Wilk et un test d’homoscédasticité (Levene, Bartlett ou Breusch-Pagan) sur la variable continue transformée.\nDétecter les observations qui contribuent le plus à l’anormalité et à l’hétéroscédasticité (valeurs aberrantes ou extrêmes). Supprimez-les et refaites votre ANOVA en vous assurant que les conditions sont désormais respectées. Notez que supprimer des observations peut être une pratique éthiquement questionnable en statistique. Si vos échantillons sont bien constitués et que la mesure collectée n’est pas erronée, pourquoi donc la supprimer? Si vous optez pour cette solution, prenez soin de comparer les résultats avant et après la suppression des observations. Si les conditions sont respectées après la suppression et que les résultats de l’ANOVA (Eta2 et test F de Fisher) sont très semblables, conservez donc les résultats de l’ANOVA initiale et signalez que vous avez procédé aux deux tests.\nLorsque les variances des groupes sont dissemblables, vous pouvez utiliser le test de Welch pour l’ANOVA au lieu du test F de Fisher.\nDernière solution, lorsque les deux conditions ne sont vraiment pas respectées, utilisez le test non paramétrique de Kruskal-Wallis. Par analogie au t de Student, il correspond au test des rangs signés de Wilcoxon. Ce test est décrit dans la section suivante.\n\nVous l’aurez compris, dans de nombreux cas en statistique, les choix méthodologiques dépendent en partie de la subjectivité des chercheur(se)s. Il faut s’adapter au jeu de données et à la culture statistique en vigueur dans votre champ d’études. N’hésitez pas à réaliser plusieurs tests différents pour évaluer la robustesse de vos conclusions et fiez-vous en premier lieu à ceux pour lesquels votre jeu de données est le plus adapté.\n\n6.2.2 Test non paramétrique de Kruskal-Wallis\nLe test non paramétrique de Kruskal-Wallis est une solution de rechange à l’ANOVA classique lorsque le jeu de données présente de graves problèmes de normalité et d’hétéroscédasticité. Cette méthode représente une ANOVA appliquée à une variable continue transformée préalablement en rangs. Du fait de la transformation en rangs, nous ne vérifions plus si les moyennes sont différentes, mais bel et bien si les médianes de la variable continue sont différentes. Pour ce faire, nous utiliserons la fonction kruskal.test.\n\n6.2.3 Mise en œuvre dans R\nDans une étude récente, Apparicio et al. (2018) ont comparé les expositions au bruit et à la pollution atmosphérique aux heures de pointe à Montréal en fonction du mode de transport utilisé. Pour ce faire, trois équipes de trois personnes ont été constituées : une personne à vélo, une autre en automobile et une dernière se déplaçant en transport en commun, équipées de capteurs de pollution, de sonomètres, de vêtements biométriques et d’une montre GPS. Chaque matin, à huit heures précises, les membres de chaque équipe ont réalisé un trajet d’un quartier périphérique de Montréal vers un pôle d’enseignement (université) ou d’emploi localisé au centre-ville. Le trajet inverse était réalisé le soir à 17 h. Au total, une centaine de trajets ont ainsi été réalisés. Des analyses de variance ont ainsi permis de comparer les trois modes (automobile, vélo et transport en commun) en fonction des temps de déplacement, des niveaux d’exposition au bruit, des niveaux d’exposition au dioxyde d’azote et de la dose totale inhalée de dioxyde d’azote. Nous vous proposons ici d’analyser une partie de ces données.\n\n6.2.3.1 Première ANOVA : différences entre les temps de déplacement\nComme première analyse de variance, nous vérifions si les moyennes des temps de déplacement sont différentes entre les trois modes de transport.\nDans un premier temps, nous calculons les moyennes des différents groupes. Nous pouvons alors constater que les moyennes sont très semblables : 37,7 minutes pour l’automobile versus 38,4 et 41,6 pour le vélo et le transport en commun. Aussi, les variances des trois groupes sont relativement similaires.\n\nlibrary(\"rstatix\")\n# chargement des DataFrames\nload(\"data/bivariee/dataPollution.RData\")\n# Statistiques descriptives pour les groupes (moyenne et écart-type)\ndf_TrajetsDuree %&gt;%                                 # Nom du DataFrame\n    group_by(Mode) %&gt;%                                # Variable qualitative\n    get_summary_stats(DureeMinute, type = \"mean_sd\")  # Variable continue \n\n# A tibble: 3 × 5\n  Mode    variable        n  mean    sd\n  &lt;chr&gt;   &lt;fct&gt;       &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 1. Auto DureeMinute    33  37.7  12.8\n2 2. Velo DureeMinute    33  38.4  15.2\n3 3. TC   DureeMinute    33  41.6  11.4\n\n\nPour visualiser la distribution des données pour les trois groupes, vous pouvez créer des graphiques de densité et en violon (figure 6.4). La juxtaposition des trois distributions montre que les distributions des valeurs pour les trois groupes sont globalement similaires. Cela est corroboré par le fait que les boîtes du graphique en violon sont situées à la même hauteur. Autrement dit, à la lecture des deux graphiques, il ne semble pas y avoir de différences significatives entre les trois groupes en termes de temps de déplacement.\n\nlibrary(\"ggplot2\")\nlibrary(\"ggpubr\")\n# Graphique de densité\nGraphDens &lt;- ggplot(data = df_TrajetsDuree, \n  mapping=aes(x = DureeMinute, colour = Mode, fill = Mode)) +\n  geom_density(alpha=0.55, mapping=aes(y = ..scaled..))+\n    labs(title = \"a. Graphique de densité\",\n         x = \"Densité\",\n         y = \"Durée du trajet (en minutes)\")\n# Graphique en violon\nGraphViolon &lt;- ggplot(df_TrajetsDuree, aes(x = Mode, y = DureeMinute)) +\n  geom_violin(fill = \"white\") +\n  geom_boxplot(width=0.1, aes(x = Mode, y = DureeMinute, fill = Mode))+\n  labs(title = \"b. Graphique en violon\",\n       x = \"Mode de transport\",\n       y = \"Durée du trajet (en minutes)\")+\n  theme(legend.position = \"none\")\nggarrange(GraphDens, GraphViolon)\n\n\n\nFigure 6.4: Graphiques de densité et en violon\n\n\n\nNous pouvons vérifier si les échantillons sont normalement distribués avec la fonction shapiro_test du package rstatix. À titre de rappel, l’hypothèse nulle (H0) de ce test est que la distribution est normale. Par conséquent, quand la valeur de p associée à la statistique de Shapiro est supérieure à 0,05, alors nous ne pouvons rejeter l’hypothèse d’une distribution normale (autrement dit, la distribution est anormale). À la lecture des résultats ci-dessous, seul le groupe utilisant le transport en commun présente une distribution proche de la normalité (p = 0,0504). Ce test étant très restrictif, il est fortement conseillé de visualiser le diagramme quantile-quantile pour chaque groupe (graphique QQ plot) (figure 6.5). Ces graphiques sont utilisés pour déterminer visuellement si une distribution empirique (observée sur des données), s’approche d’une distribution théorique (ici la loi normale). Si effectivement les deux distributions sont proches, les points du diagramme devraient tous tomber sur une ligne droite parfaite. Un intervalle de confiance (représenté ici en gris) peut être construit pour obtenir une interprétation plus nuancée. Dans notre cas, seules deux observations pour le vélo et deux autres pour l’automobile s’éloignent vraiment de la ligne droite. Nous pouvons considérer que ces trois distributions s’approchent d’une distribution normale.\n\nlibrary(\"dplyr\")\nlibrary(\"ggpubr\")\nlibrary(\"rstatix\")\n# Condition 1 : normalité des échantillons\n# Test pour la normalité des échantillons (groupes) : test de Shapiro\n df_TrajetsDuree %&gt;%          # Nom du DataFrame\n   group_by(Mode) %&gt;%         # Variable qualitative\n   shapiro_test(DureeMinute)  # Variable continue \n\n# A tibble: 3 × 4\n  Mode    variable    statistic         p\n  &lt;chr&gt;   &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;\n1 1. Auto DureeMinute     0.905 0.00729  \n2 2. Velo DureeMinute     0.797 0.0000288\n3 3. TC   DureeMinute     0.936 0.0504   \n\n# Graphiques qqplot pour les groupes\nggqqplot(df_TrajetsDuree, \"DureeMinute\", facet.by = \"Mode\", \n         xlab = \"Théorique\", ylab = \"Échantillon\")\n\n\n\nFigure 6.5: QQ Plot pour les groupes\n\n\n\nPour vérifier l’hypothèse d’homogénéité des variances, vous pouvez utiliser les tests de Levene, de Bartlett ou de Breusch-Pagan. Les valeurs de p, toutes supérieures à 0,05, signalent que la condition d’homogénéité des variances est respectée.\n\nlibrary(\"rstatix\")\nlibrary(\"lmtest\")\nlibrary(\"car\")\n# Condition 2 : homogénéité des variances (homocédasticité)\nleveneTest(DureeMinute ~ Mode, data = df_TrajetsDuree)\n\nLevene's Test for Homogeneity of Variance (center = median)\n      Df F value Pr(&gt;F)\ngroup  2  0.2418 0.7857\n      96               \n\nbartlett.test(DureeMinute ~ Mode, data = df_TrajetsDuree)\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  DureeMinute by Mode\nBartlett's K-squared = 2.6718, df = 2, p-value = 0.2629\n\nbptest(DureeMinute ~ Mode, data = df_TrajetsDuree)\n\n\n    studentized Breusch-Pagan test\n\ndata:  DureeMinute ~ Mode\nBP = 1.3322, df = 2, p-value = 0.5137\n\n\nDeux fonctions peuvent être utilisées pour calculer l’analyse de variance : la fonction de base aov(variable continue ~ variable qualitative, data = votre DataFrame) ou bien la fonction anova_test(variable continue ~ variable qualitative, data = votre DataFrame) du package rstatix. Comparativement à aov, l’avantage de la fonction anova_test est qu’elle calcule aussi le Eta2.\n\nlibrary(\"rstatix\")\nlibrary(\"car\")\nlibrary(\"effectsize\")\n# ANOVA avec la fonction aov\naov1 &lt;- aov(DureeMinute ~ Mode, data = df_TrajetsDuree)\nsummary(aov1)\n\n            Df Sum Sq Mean Sq F value Pr(&gt;F)\nMode         2    287   143.2    0.82  0.444\nResiduals   96  16781   174.8               \n\n# calcul de Eta2 avec la fonction eta_squared du package effectsize\neffectsize::eta_squared(aov1)\n\n# Effect Size for ANOVA\n\nParameter | Eta2 |       95% CI\n-------------------------------\nMode      | 0.02 | [0.00, 1.00]\n\n- One-sided CIs: upper bound fixed at [1.00].\n\n# ANOVA avec la fonction anova_test du package rstatix\nanova_test(DureeMinute ~ Mode, data = df_TrajetsDuree)\n\nANOVA Table (type II tests)\n\n  Effect DFn DFd    F     p p&lt;.05   ges\n1   Mode   2  96 0.82 0.444       0.017\n\n\nLa valeur de p associée à la statistique F (0,444) nous permet de conclure qu’il n’y a pas de différences significatives entre les moyennes des temps de déplacement des trois modes de transport.\n\n6.2.3.2 Deuxième ANOVA : différences entre les niveaux d’exposition au bruit\nDans ce second exercice, nous analysons les différences d’exposition au bruit. D’emblée, les statistiques descriptives révèlent que les moyennes sont dissemblables : 66,8 dB(A) pour l’automobile versus 68,8 et 74 pour le vélo et le transport en commun. Aussi, la variance du transport en commun est très différente des autres.\n\nlibrary(\"rstatix\")\n# chargement des DataFrames\nload(\"data/bivariee/dataPollution.RData\")\n# Statistiques descriptives pour les groupes (moyenne et écart-type)\n df_Bruit %&gt;%                                 # Nom du DataFrame\n   group_by(Mode) %&gt;%                                # Variable qualitative\n   get_summary_stats(laeq, type = \"mean_sd\")  # Variable continue \n\n# A tibble: 3 × 5\n  Mode    variable     n  mean    sd\n  &lt;chr&gt;   &lt;fct&gt;    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 1. Auto laeq      1094  66.8  4.56\n2 2. Velo laeq      1124  68.8  4.29\n3 3. TC   laeq      1207  74.0  6.79\n\n\nÀ la lecture des graphiques de densité et en violon (figure 6.6), il semble clair que les niveaux d’exposition au bruit sont plus faibles pour les automobilistes et plus élevés pour les cyclistes et surtout les personnes en transport en commun. En outre, la distribution des valeurs d’exposition au bruit dans le transport en commun semble bimodale. Cela s’explique par le fait que les niveaux de bruit sont beaucoup plus élevés dans le métro que dans les autobus.\n\nlibrary(\"ggplot2\")\nlibrary(\"ggpubr\")\n# Graphique en densité\nGraphDens &lt;- ggplot(data = df_Bruit, \n  mapping=aes(x = laeq, colour = Mode, fill = Mode)) +\n  geom_density(alpha=0.55, mapping=aes(y = ..scaled..))+\n  labs(title = \"a. graphique de densité\",\n       x = \"Exposition au bruit (dB(A))\")\n# Graphique en violon\nGraphViolon &lt;- ggplot(df_Bruit, aes(x = Mode, y = laeq)) +\n  geom_violin(fill = \"white\") +\n  geom_boxplot(width=0.1, aes(x = Mode, y = laeq, fill = Mode))+\n  labs(title = \"b. Graphique en violon\",\n       x = \"Mode de transport\",\n       y = \"Exposition au bruit (dB(A))\")+\n  theme(legend.position = \"none\")\nggarrange(GraphDens, GraphViolon)\n\n\n\nFigure 6.6: Graphique de densité et en violon\n\n\n\nLe test de Shapiro et les graphiques QQ plot (figure 6.7) révèlent que les distributions des trois groupes sont anormales. Ce résultat n’est pas surprenant si l’on tient compte de la nature logarithmique de l’échelle décibel.\n\nlibrary(\"dplyr\")\nlibrary(\"ggpubr\")\nlibrary(\"rstatix\")\n# Condition 1 : normalité des échantillons\n# Test pour la normalité des échantillons (groupes) : test de Shapiro\ndf_Bruit %&gt;%          # Nom du DataFrame\n  group_by(Mode) %&gt;%         # Variable qualitative\n  shapiro_test(laeq)  # Variable continue \n\n# A tibble: 3 × 4\n  Mode    variable statistic        p\n  &lt;chr&gt;   &lt;chr&gt;        &lt;dbl&gt;    &lt;dbl&gt;\n1 1. Auto laeq         0.971 4.92e-14\n2 2. Velo laeq         0.992 5.12e- 6\n3 3. TC   laeq         0.966 3.34e-16\n\n# Graphiques qqplot pour les groupes\nggqqplot(df_Bruit, \"laeq\", facet.by = \"Mode\", xlab = \"Théorique\", ylab = \"Échantillon\")\n\n\n\nFigure 6.7: QQ Plot pour les groupes\n\n\n\nEn outre, selon les valeurs des tests de Levene, de Bartlett ou de Breusch-Pagan, les variances ne sont pas égales.\n\nlibrary(\"rstatix\")\nlibrary(\"lmtest\")\nlibrary(\"car\")\n# Condition 2 : homogénéité des variances (homocédasticité)\nleveneTest(laeq ~ Mode, data = df_Bruit)\n\nLevene's Test for Homogeneity of Variance (center = median)\n        Df F value    Pr(&gt;F)    \ngroup    2   190.3 &lt; 2.2e-16 ***\n      3422                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nbartlett.test(laeq ~ Mode, data = df_Bruit)\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  laeq by Mode\nBartlett's K-squared = 306.64, df = 2, p-value &lt; 2.2e-16\n\nbptest(laeq ~ Mode, data = df_Bruit)\n\n\n    studentized Breusch-Pagan test\n\ndata:  laeq ~ Mode\nBP = 279.85, df = 2, p-value &lt; 2.2e-16\n\n\nÉtant donné que les deux conditions (normalité et homogénéité des variances) ne sont pas respectées, il est préférable d’utiliser un test non paramétrique de Kruskal-Wallis. Calculons toutefois préalablement l’ANOVA classique et l’ANOVA de Welch puisque les variances ne sont pas égales. Les valeurs de p des deux tests (Fisher et Welch) signalent que les moyennes d’exposition au bruit sont statistiquement différentes entre les trois modes de transport.\n\nlibrary(\"rstatix\")\n# ANOVA avec la fonction anova_test du package rstatix\nanova_test(laeq ~ Mode, data = df_Bruit)\n\nANOVA Table (type II tests)\n\n  Effect DFn  DFd       F         p p&lt;.05   ges\n1   Mode   2 3422 544.214 6.12e-206     * 0.241\n\n# ANOVA avec le test de Welch puisque les variances ne sont pas égales\nwelch_anova_test(laeq ~ Mode, data = df_Bruit)\n\n# A tibble: 1 × 7\n  .y.       n statistic   DFn   DFd         p method     \n* &lt;chr&gt; &lt;int&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;      \n1 laeq   3425      446.     2 2248. 9.47e-164 Welch ANOVA\n\n\nUne fois démontré que les moyennes sont différentes, le test de Tukey est particulièrement intéressant puisqu’il nous permet de repérer les différences de moyennes significatives deux à deux, tout en ajustant les valeurs de p obtenues en fonction du nombre de comparaisons effectuées. Ci-dessous, nous constatons que toutes les paires sont statistiquement différentes et que la différence de moyennes entre les automobilistes et les cyclistes est de 1,9 dB(A) et surtout de 7,1 dB(A) entre les automobilistes et les personnes ayant pris le transport en commun.\n\naov2 &lt;- aov(laeq ~ Mode, data = df_Bruit)\n# Test de Tukey pour comparer les moyennes entre elles\nTukeyHSD(aov2, conf.level = 0.95)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = laeq ~ Mode, data = df_Bruit)\n\n$Mode\n                    diff      lwr      upr p adj\n2. Velo-1. Auto 1.941698 1.406343 2.477053     0\n3. TC-1. Auto   7.113506 6.587309 7.639703     0\n3. TC-2. Velo   5.171808 4.649307 5.694309     0\n\n\nLe calcul du test non paramétrique de Kruskal-Wallis avec la fonction kruskal.test démontre aussi que les médianes des groupes sont différentes (p &lt; 0,001). De manière comparable au test de Tukey, la fonction pairwise.wilcox.test permet aussi de repérer les différences significatives entre les paires de groupes. Pour conclure, tant l’ANOVA que le test non paramétrique de Kruskal-Wallis indiquent que les trois modes de transport sont significativement différents quant à l’exposition au bruit, avec des valeurs plus faibles pour les automobilistes comparativement aux cyclistes et aux personnes ayant pris le transport en commun.\n\n# Test de Kruskal-Wallis\nkruskal.test(laeq ~ Mode, data = df_Bruit)\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  laeq by Mode\nKruskal-Wallis chi-squared = 784.74, df = 2, p-value &lt; 2.2e-16\n\n# Calcul de la moyenne des rangs pour les trois groupes\ndf_Bruit$laeqRank &lt;- rank(df_Bruit$laeq)\ndf_Bruit %&gt;%\n  group_by(Mode) %&gt;%\n  get_summary_stats(laeqRank, type = \"mean\")\n\n# A tibble: 3 × 4\n  Mode    variable     n  mean\n  &lt;chr&gt;   &lt;fct&gt;    &lt;dbl&gt; &lt;dbl&gt;\n1 1. Auto laeqRank  1094 1188.\n2 2. Velo laeqRank  1124 1572.\n3 3. TC   laeqRank  1207 2320.\n\n# Comparaison des groupes avec la fonction pairwise.wilcox.test\npairwise.wilcox.test(df_Bruit$laeq, df_Bruit$Mode, p.adjust.method = \"BH\")\n\n\n    Pairwise comparisons using Wilcoxon rank sum test with continuity correction \n\ndata:  df_Bruit$laeq and df_Bruit$Mode \n\n        1. Auto 2. Velo\n2. Velo &lt;2e-16  -      \n3. TC   &lt;2e-16  &lt;2e-16 \n\nP value adjustment method: BH \n\n\n\n6.2.4 Comment rapporter les résultats d’une ANOVA et du test de Kruskal-Wallis\nPlusieurs éléments doivent être reportés pour détailler les résultats d’une ANOVA ou d’un test de Kruskal-Wallis : la valeur de F, de W (dans le cas d’une ANOVA de Welch) ou du χ2 (Kruskal-Wallis), les valeurs de p, les moyennes ou médianes respectives des groupes et éventuellement un tableau détaillant les écarts intergroupes obtenus avec les tests de Tukey ou Wilcoxon par paires.\n\nLes résultats de l’analyse de variance à un facteur démontrent que le mode de transport utilisé n’a pas d’effet significatif sur le temps de déplacement en heures de pointe à Montréal (F(2,96) = 0,82, p = 0,444). En effet, pour des trajets de dix kilomètres entre un quartier périphérique et le centre-ville, les cyclistes (Moy = 38,4, ET = 15,2) arrivent en moyenne moins d’une minute après les automobilistes (Moy = 37,7, ET = 12,8) et moins de quatre minutes comparativement aux personnes ayant pris le transport en commun (Moy = 41,6, ET = 11,4).\nLes résultats de l’analyse de variance à un facteur démontrent que le mode de transport utilisé a un impact significatif sur le niveau d’exposition en heures de pointe à Montréal (F(2,96) = 544, p &lt; 0,001 et Welch(2,96) = 446, p &lt; 0,001). En effet, les personnes en transport en commun (Moy = 74,0, ET = 6,79) et les cyclistes (Moy = 68,8, ET = 4,3) ont des niveaux d’exposition au bruit significativement plus élevés que les automobilistes (Moy = 66,8, ET = 4,56).\nLes résultats du test de Kruskal-Wallis démontrent qu’il existe des différences significatives d’exposition au bruit entre les trois modes de transport (χ2(2) = 784,74, p &lt; 0,001) avec des moyennes de rangs de 1094 pour l’automobile, de 1124 pour le vélo et de 1207 pour le transport en commun.\n\n\n\n\n\n\nAutres extensions de l’ANOVA\n\n\nNous avons vu que l’ANOVA permet de comparer les moyennes d’une variable continue à partir d’une variable qualitative comprenant plusieurs modalités (facteur) pour des observations indépendantes. Il y a donc une seule variable dépendante (continue) et une seule variable indépendante. Sachez qu’il existe de nombreuses extensions de l’ANOVA classique :\n\nUne ANOVA à deux facteurs, soit avec une variable dépendante continue et deux variables indépendantes qualitatives (two-way ANOVA en anglais). Nous évaluons ainsi les effets des deux variables (a, b) et de leur interaction (ab) sur une variable continue.\nUne ANOVA multifacteur avec une variable dépendante continue et plus de deux variables indépendantes qualitatives. Par exemple, avec trois variables qualitatives pour expliquer la variable continue, nous incluons les effets de chaque variable qualitative (a, b, c), ainsi que de leurs interactions (ab, ac, bc, abc).\nL’analyse de covariance (ANCOVA, ANalysis of COVAriance en anglais) comprend une variable dépendante continue, une variable indépendante qualitative (facteur) et plusieurs variables indépendantes continues dites covariables. L’objectif est alors de vérifier si les moyennes d’une variable dépendante sont différentes pour plusieurs groupes d’une population donnée, après avoir contrôlé l’effet d’une ou de plusieurs variables continues. Par exemple, pour une métropole donnée, nous pourrions vouloir comparer les moyennes de loyers entre la ville-centre et ceux des première et seconde couronnes (facteur), une fois contrôlée la taille de ces derniers (variable covariée continue). En effet, une partie de la variance des loyers s’explique certainement par la taille des logements.\nL’analyse de variance multivariée (MANOVA, Multivariate ANalysis Of VAriance en anglais) comprend deux variables dépendantes continues ou plus et une variable indépendante qualitative (facteur). Par exemple, nous souhaiterions comparer les moyennes d’exposition au bruit et à différents polluants (dioxyde d’azote, particules fines, ozone) (variables dépendantes continues) selon le mode de transport utilisé (automobile, vélo, transport en commun), soit le facteur.\nL’analyse de covariance multivariée (MANCOVA, Multivariate ANalysis of COVAriance en anglais), soit une analyse qui comprend deux variables dépendantes continues ou plus (comme la MANOVA) et une variable qualitative comme variable indépendante (facteur) et une covariable continue ou plus.\n\nPour le test t, nous avons vu qu’il peut s’appliquer soit à deux échantillons indépendants (non appariés), soit à deux échantillons dépendants (appariés). Notez qu’il existe aussi des extensions de l’ANOVA pour des échantillons pairés. Nous parlons alors d’analyse de variance sur des mesures répétées. Par exemple, nous pourrions évaluer la perception du sentiment de sécurité relativement à la pratique du vélo d’hiver pour un échantillon de cyclistes ayant décidé de l’adopter récemment, et ce, à plusieurs moments : avant leur première saison, à la fin de leur premier hiver, à la fin de leur second hiver. Autre exemple, nous pourrions sélectionner un échantillon d’individus (100, par exemple) pour lesquels nous évaluerions leurs perceptions de l’environnement sonore dans différents lieux de la ville. Comme pour l’ANOVA classique (échantillons non appariés), il existe des extensions de l’ANOVA sur des mesures répétées permettant d’inclure plusieurs facteurs (groupes de population); nous mesurons alors une variable continue pour plusieurs groupes d’individus à différents moments ou pour des conditions différentes. Il est aussi possible de réaliser une ANOVA pour des mesures répétées avec une ou plusieurs covariables continues.\nBref, si l’ANOVA était un roman, elle serait certainement « un monde sans fin » de Ken Follett! Notez toutefois que la SUPERNOVA, la BOSSA-NOVA et le CASANOVA ne sont pas des variantes de l’ANOVA!"
  },
  {
    "objectID": "06-bivarieeQualiQuanti.html#sec-063",
    "href": "06-bivarieeQualiQuanti.html#sec-063",
    "title": "6  Relation entre une variable qualitative et une variable quantitative",
    "section": "\n6.3 Conclusion sur la troisième partie",
    "text": "6.3 Conclusion sur la troisième partie\nDans le cadre de cette troisième partie du livre, nous avons abordé les principales méthodes exploratoires et confirmatoires bivariées permettant d’évaluer la relation entre deux variables. La figure 6.8 propose un résumé de ces méthodes.\n\n\nFigure 6.8: Principales méthodes bivariées"
  },
  {
    "objectID": "06-bivarieeQualiQuanti.html#sec-064",
    "href": "06-bivarieeQualiQuanti.html#sec-064",
    "title": "6  Relation entre une variable qualitative et une variable quantitative",
    "section": "\n6.4 Quiz de révision du chapitre",
    "text": "6.4 Quiz de révision du chapitre\n\n\n\n\n\nComment comparer les moyennes de deux groupes?\n\n\nRelisez au besoin la section 6.1.1.\n\n\n\n\n\n\nt de Student (test t)\n\n\n\n\n\n\n\nAnalyse de variance (ANOVA)\n\n\n\n\n\n\n\nCovariance et corrélation\n\n\n\n\n\n\n\nTest de Kruskal-Wallis\n\n\n\n\n\n\n\n\n\n\nComment comparer les médianes de plus de deux groupes?\n\n\nRelisez au besoin la section 6.1.2.\n\n\n\n\n\n\nt de Student (test t)\n\n\n\n\n\n\n\nAnalyse de variance (ANOVA)\n\n\n\n\n\n\n\nTest de Kruskal-Wallis\n\n\n\n\n\n\n\nTest de Wilcoxon\n\n\n\n\n\n\n\n\n\n\nLes observations de deux groupes qui n’ont aucun lien entre eux; les tailles des deux échantillons peuvent être différentes. Cette affirmation s’applique à des\n\n\nRelisez au besoin le début de la section 6.1.1.\n\n\n\n\n\n\néchantillons indépendants (dits non appariés)\n\n\n\n\n\n\n\néchantillons dépendants (dits appariés)\n\n\n\n\n\n\n\n\n\n\nLorsque les variances des deux groupes sont dissemblables, quel test utilisez-vous?\n\n\nRelisez au besoin la section 6.1.1.\n\n\n\n\n\n\nTest de Student (test t)\n\n\n\n\n\n\n\nTest de Welch (appelé aussi Satterthwaite)\n\n\n\n\n\n\n\nAnalyse de variance (ANOVA)\n\n\n\n\n\n\n\n\n\n\nCes boîtes à moustaches s’appliquent à des :\n\n\nRelisez au besoin la section 6.1.1.1.\n\n\n\n\n\n\néchantillons dépendants (dits appariés)\n\n\n\n\n\n\n\néchantillons indépendants (dits non appariés)\n\n\n\n\n\n\n\n\n\n\nPlus la variance intergroupe (dissimilarité des groupes) est maximisée et corollairement plus la variance intragroupe (homogénéité de chacun des groupes) est minimisée, plus les groupes sont clairement distincts et plus l’ANOVA est performante. Selon vous, à la lecture de ces graphiques, l’ANOVA risque-t-elle d’être très performante?\n\n\nRelisez au besoin la section 6.2.1.1.\n\n\n\n\n\n\nOui\n\n\n\n\n\n\n\nNon\n\n\n\n\n\n\n\n\n\n\nQuelles sont les trois conditions d’application de l’ANOVA?\n\n\nRelisez au besoin la section 6.2.1.3.\n\n\n\n\n\n\nNormalité des groupes\n\n\n\n\n\n\n\nHomogénéité des variances des groupes (homoscédasticité)\n\n\n\n\n\n\n\nIndépendance des observations (pseudo-réplication)\n\n\n\n\n\n\n\nIl faut deux groupes\n\n\n\n\n\n\n\nLes groupes doivent être de taille égale\n\n\n\n\n\n\n\n\n\n\nLe test non paramétrique de Kruskal-Wallis permet de comparer les médianes de plus de deux groupes.\n\n\nRelisez au besoin la section 6.2.2.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\n\nSur quelle(s) variances est basée l’ANOVA?\n\n\nRelire le deuxième encadré à la section 6.2.1.1.\n\n\n\n\n\n\nLa variance totale\n\n\n\n\n\n\n\nLa variance intragroupe\n\n\n\n\n\n\n\nLa variance intergroupe\n\n\n\n\n\n\n\n\n\n\nQuelles sont les variantes de l’ANOVA?\n\n\nRelire le deuxième encadré à la section 6.2.4.\n\n\n\n\n\n\nUne ANOVA à deux facteurs\n\n\n\n\n\n\n\nUne ANOVA multifacteur\n\n\n\n\n\n\n\nL’analyse de covariance (ANCOVA)\n\n\n\n\n\n\n\nL’analyse de variance multivariée (MANOVA)\n\n\n\n\n\n\n\nL’analyse de covariance multivariée (MANCOVA)\n\n\n\n\n\n\n\nLa SUPERNOVA\n\n\n\n\n\n\n\nLa BOSSANOVA\n\n\n\n\n\n\n\nLe CASANOVA\n\n\n\n\n\n\n\n\n\nVérifier votre résultat\n\n\n\n\n\n\n\n\n\nApparicio, Philippe, Jérémy Gelb, Mathieu Carrier, Marie-Ève Mathieu et Simon Kingham. 2018. « Exposure to noise and air pollution by mode of transportation during rush hours in Montreal. » Journal of Transport Geography 70: 182‑192. https://doi.org/10.1016/j.jtrangeo.2018.06.007.\n\n\nCarrier, Mathieu, Philippe Apparicio, Anne-Marie Séguin et Dan Crouse. 2014. « Ambient air pollution concentration in Montreal and environmental equity: Are children at risk at school? » Case Studies on Transport Policy 2 (2): 61‑69. https://doi.org/10.1016/j.cstp.2014.06.003.\n\n\nCohen, Jacob. 1992. « A power primer. » Psychological bulletin 112 (1): 155‑159. https://doi.org/10.1037/0033-2909.112.1.155.\n\n\n———. 2013. Statistical power analysis for the behavioral sciences. Academic press.\n\n\nGlass, Gene V, Percy D Peckham et James R Sanders. 1972. « Consequences of failure to meet assumptions underlying the fixed effects analyses of variance and covariance. » Review of educational research 42 (3): 237‑288.\n\n\nLix, Lisa M, Joanne C Keselman et HJ Keselman. 1996. « Consequences of assumption violations revisited: A quantitative review of alternatives to the one-way analysis of variance F test. » Review of educational research 66 (4): 579‑619. https://doi.org/10.3102/00346543066004579.\n\n\nSawilowsky, Shlomo S. 2009. « New effect size rules of thumb. » Journal of Modern Applied Statistical Methods 8 (2): 467‑474. https://doi.org/10.22237/jmasm/1257035100."
  },
  {
    "objectID": "07-regressionlineaire.html#sec-071",
    "href": "07-regressionlineaire.html#sec-071",
    "title": "7  Régression linéaire multiple",
    "section": "\n7.1 Objectifs de la régression linéaire multiple et construction d’un modèle de régression",
    "text": "7.1 Objectifs de la régression linéaire multiple et construction d’un modèle de régression\nSelon Barbara G. Tabachnich et Linda S. Fidell (2007), un modèle de régression permet de répondre à deux objectifs principaux relevant chacun d’une approche de modélisation particulière.\nLa première approche a pour objectif d’identifier les relations entre une variable dépendante (VD) et plusieurs variables indépendantes (VI). Il s’agit alors de déterminer si ces relations sont positives ou négatives, significatives ou non et d’évaluer leur ampleur. La construction du modèle de régression repose alors sur un cadre théorique et la formulation d’hypothèses, sur les relations entre chacune des VI et la VD.\nLa seconde approche est exploratoire et très utilisée en forage ou en fouille de données (data mining en anglais). Parmi un grand ensemble de variables disponibles dans un jeu de données, elle vise à identifier la ou les variables permettant de prédire le plus efficacement (précisément) une variable dépendante. Parfois, ce type de démarche ne repose ni sur un cadre théorique ni sur la formulation d’hypothèses entre les VI et la VD. Dans des cas extrêmes, on s’intéresse uniquement à la capacité de prédiction du modèle, et ce, sans analyser les associations entre les VI et la VD. L’objectif étant d’obtenir le modèle le plus efficace possible afin de prédire à l’avenir la valeur de la variable dépendante pour des observations pour lesquelles elle est inconnue. Pour ce faire, nous avons recours à des régressions séquentielles (stepwise regressions) dans lesquelles les variables peuvent être ajoutées une à une au modèle ou retirées de celui-ci; nous conserverons dans le modèle final uniquement celles qui ont un apport explicatif significatif. Signalons d’emblée que dans le reste du chapitre, comme du livre, nous ne nous étendons pas plus sur cette approche de modélisation, et ce, pour deux raisons. D’une part, cette approche met souvent en évidence des relations significatives entre des variables sans qu’il y ait une relation de causalité entre elles. D’autre part, en sciences sociales, un modèle de régression doit être basé sur un cadre théorique et conceptuel élaboré à la suite à d’une revue de littérature rigoureuse.\n\n\n\n\n\nCadre conceptuel et élaboration d’un modèle de régression\n\n\nPour bien construire un modèle de régression, il convient de définir un cadre conceptuel élaboré à la suite à une revue de littérature sur le sujet de recherche. Ce cadre conceptuel permet d’identifier les dimensions et les concepts clefs permettant d’expliquer le phénomène à l’étude. Par la suite, pour chacun de ces concepts ou les dimensions, il est alors possible 1) d’identifier les différentes variables indépendantes qui sont introduites dans le modèle et 2) de formuler une hypothèse pour chacune d’elles. Par exemple, pour telle ou telle variable explicative, on s’attendra à ce qu’elle fasse augmenter ou diminuer significativement la variable dépendante. De nouveau, la formulation de cette hypothèse doit s’appuyer sur une interprétation théorique de la relation entre la VI et la VD.\nPrenons en guise d’exemple une étude récente portant sur la multiexposition des cyclistes au bruit et à la pollution atmosphérique (Gelb et Apparicio 2020). Dans cet article, les auteurs s’intéressent aux caractéristiques de l’environnement urbain qui contribuent à augmenter ou réduire l’exposition des cyclistes à la pollution de l’air et au bruit routier. Pour ce faire, une collecte de données primaires a été réalisée avec trois cyclistes dans les rues de Paris du 4 au 7 septembre 2017. Au total, 64 heures et 964 kilomètres ont ainsi été parcourus à vélo afin de maximiser la couverture de la ville de Paris et les types d’environnements urbains traversés.\nLeur cadre conceptuel est schématisé à la figure 7.1. Les deux variables indépendantes (à expliquer) sont l’exposition au dioxyde d’azote (NO2) et l’exposition au bruit (mesurée en décibel dB(A)). Avant d’identifier les caractéristiques de l’environnement urbain affectant ces deux expositions, plusieurs facteurs, dits variables de contrôle, sont considérés. Par exemple, la concentration de NO2 varie en fonction des conditions météorologiques (vent, température et humidité) et de la pollution d’arrière-plan (variant selon le moment de la journée, le jour de la semaine et la localisation géographique au sein de la ville). Ces dimensions ne sont pas le centre d’intérêt direct de l’étude. En effet, les auteurs s’intéressent aux impacts des caractéristiques locales de l’environnement urbain. Pour pouvoir les identifier sans biais, il est nécessaire de contrôler (filtrer) l’ensemble de ces autres facteurs.\nDans leur cadre conceptuel, les auteurs regroupent les caractéristiques locales de l’environnement urbain en trois grandes dimensions : les caractéristiques du segment (type de rues ou de voies cyclables empruntés, intersections traversées, pente et vitesse), celles de la forme urbaine (densité résidentielle, végétation, ouverture de la rue et occupations du sol) et celles du trafic (nombre et types de véhicules croisés, congestion et zones 30 km/h). Une fois ce cadre conceptuel construit, il reste alors à identifier les variables qui permettent d’opérationnaliser chacun de concepts retenus.\n\n\nFigure 7.1: Exemple de cadre conceptuel\n\nNotion de variables de contrôle versus variables explicatives\nDans un modèle de régression, nous distinguons habituellement trois types de variables : la variable dépendante (Y) que nous souhaitons prédire ou expliquer et les variables indépendantes (X) qui peuvent être soit des variables de contrôle (covariates en anglais), soit des variables explicatives. Les premières sont des facteurs qu’il faut prendre en compte (contrôler) avant d’évaluer nos variables d’intérêt (explicatives).\nDans l’exemple précédent, les chercheurs voulaient évaluer l’impact des caractéristiques de l’environnement urbain (variables explicatives) sur les expositions des cyclistes au dioxyde d’azote et au bruit, et ce, une fois contrôlés les effets de facteurs reconnus comme ayant un impact significatif sur la concentration de ces polluants (conditions météorologiques et la pollution d’arrière-plan). Autrement dit, si les variables de contrôle n’avaient pas été prises en compte, l’étude des variables d’intérêt serait biaisée par les effets de ces facteurs qui n’auraient pas été contrôlés. À titre d’exemple, il est possible que les zones de circulation limitées à 30 km/h soient concentrées dans les quartiers centraux et denses de Paris. Dans ces quartiers, la pollution d’arrière-plan a tendance à être supérieure. Si nous ne tenons pas compte de cette pollution d’arrière-plan, nous pourrions arriver à la conclusion que les zones de 30 km/h sont des milieux dans lesquels les cyclistes sont plus exposés à la pollution atmosphérique.\nConstruction de modèles de régression imbriqués, incrémentiels\nEn lien avec le cadre conceptuel du modèle, il est fréquent de construire plusieurs modèles emboîtés. Par exemple, à partir du cadre conceptuel (figure 7.1), les auteurs auraient très bien pu construire quatre modèles :\n\nun premier avec uniquement les variables de contrôle (modèle A);\nun second incluant les variables de contrôle et les variables explicatives de la dimension des caractéristiques du segment (modèle B);\nun troisième reprenant les variables du modèle B dans lequel sont introduites les variables explicatives relatives à la forme urbaine (modèle C);\nun dernier modèle dans lequel sont ajoutées les variables explicatives relatives aux conditions du trafic (modèle D).\n\nL’intérêt d’une telle approche est qu’elle permet d’évaluer successivement l’apport explicatif de chacune des dimensions du modèle; nous y reviendrons dans la section 7.3.2.\nNous disons alors que deux modèles sont imbriqués lorsque le modèle avec le plus de variables comprend également toutes les variables du modèle avec le moins de variables."
  },
  {
    "objectID": "07-regressionlineaire.html#sec-072",
    "href": "07-regressionlineaire.html#sec-072",
    "title": "7  Régression linéaire multiple",
    "section": "\n7.2 Principes de base de la régression linéaire multiple",
    "text": "7.2 Principes de base de la régression linéaire multiple\n\n7.2.1 Un peu d’équations…\nLa régression linéaire multiple vise à déterminer une équation qui résume le mieux les relations linéaires entre une variable dépendante (Y) et un ensemble de variables indépendantes (X). L’équation de régression s’écrit alors :\n\\[\ny_i = \\beta_{0} + \\beta_{1}x_{1i} + \\beta_{2}x_{2i} +\\ldots+ \\beta_{k}x_{ki} + \\epsilon_{i}\n\\tag{7.1}\\]\navec :\n\n\\(y_i\\), la valeur de la variable dépendante Y pour l’observation i\n\\(\\beta_{0}\\), la constante, soit la valeur prédite pour Y quand toutes les variables indépendantes sont égales à 0\n\\(k\\) le nombre de variables indépendantes\n\\(\\beta_{1}\\) à \\(\\beta_{k}\\), les coefficients de régression pour les variables indépendantes de 1 à k (\\(X_{1}\\) à \\(X_{k}\\))\n\\(\\epsilon_{i}\\), le résidu pour l’observation de i, soit la partie de la valeur de \\(y_i\\) qui n’est pas expliquée par le modèle de régression.\n\nNotez qu’il existe plusieurs écritures simplifiées de cette équation. D’une part, il est possible de ne pas indiquer l’observation i et de remplacer les lettres grecques bêta et epsilon (\\(\\beta\\) et \\(\\epsilon\\)) par les lettres b et e :\n\\[\nY = b_{0} + b_{1}X_{1} + b_{2}X_{2} +\\ldots+ b_{k}X_{k} + e\n\\tag{7.2}\\]\nD’autre part, cette équation peut être présentée sous forme matricielle. Rappelez-vous que, pour chacune des n observations de l’échantillon, une équation est formulée :\n\\[\n\\left\\{\\begin{array}{l}\ny_{1}=\\beta_{0}+\\beta_{1} x_{1,1}+\\ldots+\\beta_{p} x_{1, k}+\\varepsilon_{1} \\\\\ny_{2}=\\beta_{0}+\\beta_{1} x_{2,1}+\\ldots+\\beta_{p} x_{2, k}+\\varepsilon_{2} \\\\\n\\cdots \\\\\ny_{n}=\\beta_{0}+a_{1} x_{n, 1}+\\ldots+\\beta_{p} x_{n, k}+\\varepsilon_{n}\n\\end{array}\\right.\n\\tag{7.3}\\]\nPar conséquent, sous forme matricielle, l’équation s’écrit :\n\\[\n\\left(\\begin{array}{c}\ny_{1} \\\\\n\\vdots \\\\\ny_{n}\n\\end{array}\\right)=\\left(\\begin{array}{cccc}\n1 & x_{1,1} & \\cdots & x_{1, k} \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\n1 & x_{n, 1} & \\cdots & x_{n, k}\n\\end{array}\\right)\\left(\\begin{array}{c}\n\\beta_{0} \\\\\n\\beta_{1} \\\\\n\\vdots \\\\\n\\beta_{k}\n\\end{array}\\right)+\\left(\\begin{array}{c}\n\\varepsilon_{1} \\\\\n\\vdots \\\\\n\\varepsilon_{n}\n\\end{array}\\right)\n\\tag{7.4}\\]\nou tout simplement :\n\\[\nY = X\\beta + \\epsilon\n\\tag{7.5}\\]\navec :\n\n\\(Y\\), un vecteur de dimension \\(n \\times 1\\) pour la variable dépendante, soit une colonne avec n observations\n\\(X\\), une matrice de dimension \\(n \\times (k + 1)\\) pour les k variables indépendantes, incluant une autre colonne (avec la valeur de 1 pour les n observations) pour la constante d’où \\(k + 1\\)\n\\(\\beta\\), un vecteur de dimension \\(k + 1\\), soit les coefficients de régression pour les k variables et la constante\n\\(\\epsilon\\), un vecteur de dimension \\(n \\times 1\\) pour les résidus.\n\n\n\n\n\n\nParties expliquée et non expliquée de la régression linéaire multiple\n\n\nVous aurez compris que, comme pour la régression linéaire simple (section 4.4), l’équation de la régression linéaire multiple comprend aussi une partie expliquée et une autre non expliquée (stochastique) par le modèle : \\[\nY  = \\underbrace{\\beta_{0} + \\beta_{1}X_{i} + \\beta_{2}X_{i} +\\ldots+ \\beta_{k}X_{k}}_{\\mbox{partie expliquée par le modèle}}+ \\underbrace{\\epsilon}_{\\mbox{partie non expliquée (stochastique)}}\n\\tag{7.6}\\]\n\\[\nY  = \\underbrace{X\\beta}_{\\mbox{partie expliquée par le modèle}}+ \\underbrace{\\epsilon}_{\\mbox{partie non expliquée (stochastique)}}\n\\tag{7.7}\\]\n\n\n\n7.2.2 Hypothèses de la régression linéaire multiple\nUn modèle est bien construit s’il respecte plusieurs hypothèses liées à la régression, dont les principales étant :\n\nHypothèse 1. La variable dépendante doit être continue et non-bornée. Quant aux variables indépendantes (VI), elles peuvent être quantitatives (discrètes ou continues) et qualitatives (nominale ou ordinale).\nHypothèse 2. La variance de chaque VI doit être supérieure à 0. Autrement dit, toutes les observations ne peuvent avoir la même valeur.\nHypothèse 3. Indépendance des termes d’erreur. Les résidus des observations (\\(\\epsilon_{1}, \\epsilon_{2}, \\ldots, \\epsilon_{n}\\)) ne doivent pas être corrélés entre eux. Autrement dit, les observations doivent être indépendantes les unes des autres, ce qui n’est souvent pas le cas pour des mesures temporelles. Par exemple, l’application du cadre conceptuel sur la modélisation de l’exposition des cyclistes au bruit et à la pollution atmosphérique (figure 7.1)) est basée sur des données primaires collectées lors de trajets réalisés à vélo dans une ville donnée. Par conséquent, deux observations qui se suivent ont bien plus de chances de se ressembler – du point de vue des mesures de pollution et des caractéristiques de l’environnement urbain – que deux observations tirées au hasard dans le jeu de données. Ce problème d’autocorrélation temporelle doit être contrôlé, sinon, les coefficients de régression seront biaisés.\nHypothèse 4. Normalité des résidus avec une moyenne centrée sur zéro.\nHypothèse 5. Absence de colinéarité parfaite entre les variables explicatives. Par exemple, dans un modèle, nous ne pouvons pas introduire à la fois les pourcentages de locataires et de propriétaires, car pour chaque observation, la somme des deux donne 100 %. Nous avons donc une corrélation parfaite entre ces deux variables : le coefficient de corrélation de Pearson entre ces deux variables est égal à 1. Par conséquent, le modèle ne peut pas être estimé avec ces deux variables et l’une des deux est automatiquement ôtée.\nHypothèse 6. Homoscédasticité des erreurs (ou absence d’hétéroscédasticité). Les résidus doivent avoir une variance constante, c’est-à-dire qu’elle doit être la même pour chaque observation. Il y a homoscédasticité lorsqu’il y a une absence de corrélation entre les résidus et les valeurs prédites. Si cette condition n’est pas respectée, nous parlons alors d’hétéroscédasticité.\nHypothèse 7. Le modèle est bien spécifié. Un modèle est mal spécifié (construit) quand « une ou plusieurs variables non pertinentes sont incluses dans le modèle » ou « qu’une ou plusieurs variables pertinentes sont exclues du modèle » (Bressoux 2010, 138‑139). Concrètement, l’inclusion d’une variable non pertinente ou l’omission d’une variable peut entraîner une mauvaise estimation des effets des variables explicatives du modèle.\n\nPour connaître les conséquences de la violation de chacune de ces hypothèses, vous pourrez notamment consulter l’excellent ouvrage de Bressoux (2010, 103‑110). Retenez ici que le non-respect de ces hypothèses produit des coefficients de régression biaisés."
  },
  {
    "objectID": "07-regressionlineaire.html#sec-073",
    "href": "07-regressionlineaire.html#sec-073",
    "title": "7  Régression linéaire multiple",
    "section": "\n7.3 Évaluation de la qualité d’ajustement du modèle",
    "text": "7.3 Évaluation de la qualité d’ajustement du modèle\nPour illustrer la régression linéaire multiple, nous utilisons un jeu de données tiré d’un article portant sur la distribution spatiale de la végétation sur l’île de Montréal abordée sous l’angle de l’équité environnementale (Apparicio et al. 2016). Dans cette étude, les auteurs veulent vérifier si certains groupes de population (personnes à faible revenu, minorités visibles, personnes âgées et enfants de moins de 15 ans) ont ou non une accessibilité plus limitée à la végétation urbaine. En d’autres termes, cet article tente de répondre à la question suivante : une fois contrôlées les caractéristiques de la forme urbaine (densité de population et âge du bâti), est-ce que les quatre groupes de population résident dans des îlots urbains avec proportionnellement moins ou plus de végétation?\nDans le tableau 7.1, sont reportées les variables utilisées (calculées au niveau des îlots de l’île de Montréal) introduites dans le modèle de régression :\n\nle pourcentage de la superficie de l’îlot couverte par de la végétation, soit la variable indépendante (VI);\ndeux variables indépendantes de contrôle (VC) relatives à la forme urbaine;\nles pourcentages des quatre groupes de population comme variables indépendantes explicatives (VE).\n\nNotez que ce jeu de données est utilisé tout au long du chapitre. L’équation de départ du premier modèle de régression est donc :\nVegPct ~ HABHA + AgeMedian + Pct_014 + Pct_65P + Pct_MV + Pct_FR\n\n\n\n\nTableau 7.1: Statistiques descriptives pour les variables du modèle\n\n\n\n\n\n\n\n\n\n\n\n\n\nNom\nIntitulé\nType\nMoy.\nE.-T.\nQ1\nQ2\nQ3\n\n\n\nVegPct\nVegPct\nVégétation (%)\nVD\n35,1\n18,6\n20,3\n33,8\n49,0\n\n\nHABHA\nHABHA\nHabitants au km2\nVC\n87,8\n74,0\n36,9\n68,4\n120,5\n\n\nAgeMedian\nAgeMedian\nÂge médian des bâtiments\nVC\n52,1\n25,2\n37,2\n49,0\n61,0\n\n\nPct_014\nPct_014\nMoins de 15 ans (%)\nVE\n15,9\n5,3\n12,5\n15,9\n19,3\n\n\nPct_65P\nPct_65P\n65 ans et plus (%)\nVE\n14,9\n8,3\n9,6\n13,9\n18,2\n\n\nPct_MV\nPct_MV\nMinorités visibles (%)\nVE\n21,0\n16,4\n8,3\n17,2\n29,6\n\n\nPct_FR\nPct_FR\nPersonnes à faible revenu (%)\nVE\n23,6\n16,0\n11,1\n21,3\n33,7\n\n\n\n\n\n\n\n7.3.1 Mesures de la qualité d’un modèle\nComme pour la régression linéaire simple (section 4.4), les trois mesures les plus couramment utilisées pour évaluer la qualité d’un modèle sont :\n\nLe coefficient de détermination (R2) qui indique la proportion de la variance de la variable dépendante expliquée par les variables indépendantes du modèle (équation 7.9). Il varie ainsi de 0 à 1.\nLa statistique de Fisher qui permet d’évaluer la significativité globale du modèle (équation 7.10). Dans le cas d’une régression linéaire multiple, l’hypothèse nulle du test F est que toutes les valeurs des coefficients de régression des variables indépendantes sont égales à 0; autrement dit, qu’aucune des variables indépendantes n’a d’effet sur la variable dépendante. Tel que décrit à la section 4.4.3, il est possible d’obtenir une valeur de p rattachée à la statistique F avec k degrés de liberté au dénominateur et n-k-1 degrés de liberté au numérateur (k et n étant respectivement le nombre de variables indépendantes et le nombre d’observations). Lorsque la valeur de p est inférieure à 0,05, nous pourrons en conclure que le modèle est globalement significatif, c’est-à-dire qu’au moins un coefficient de régression est significativement différent de zéro. Notez qu’il est plutôt rare qu’un modèle de régression, comprenant plusieurs variables indépendantes, soit globalement non significatif (P &gt; 0,05), et ce, surtout s’il est basé sur un cadre conceptuel et théorique solide. Le test de la statistique de Fisher est donc facile à passer et ne constitue pas une preuve absolue de la pertinence du modèle.\nL’erreur quadratique moyenne (RMSE) qui indique l’erreur absolue moyenne du modèle exprimée dans l’unité de mesure de la variable dépendante, autrement dit l’écart absolu moyen entre les valeurs observées et prédites du modèle (équation 7.11). Une valeur élevée indique que le modèle se trompe largement en moyenne et inversement.\n\n\n\n\n\n\nRappel sur la décomposition de la variance et calcul du R2, de la statistique F et du RMSE\n\n\nRappelez-vous que la variance totale (SCT) est égale à la somme de la variance expliquée (SCE) par le modèle et de la variance non expliquée (SCR) par le modèle.\n\\[\n\\underbrace{\\sum_{i=1}^n (y_{i}-\\bar{y})^2}_{\\mbox{variance de Y}} = \\underbrace{\\sum_{i=1}^n (\\widehat{y}_i-\\bar{y})^2}_{\\mbox{var. expliquée}} + \\underbrace{\\sum_{i=1}^n (y_{i}-\\widehat{y})^2}_{\\mbox{var. non expliquée}} \\Rightarrow\nSCT = SCE + SCR\n\\tag{7.8}\\]\navec :\n\n\n\\(y_{i}\\) est la valeur observée de la variable dépendante pour i;\n\n\\(\\bar{y}\\) est la valeur moyenne de la variable dépendante;\n\n\\(\\widehat{y}_i\\) est la valeur prédite de la variable dépendante pour i.\n\nÀ partir des trois variances (totale, expliquée et non expliquée), il est alors possible de calculer les trois mesures de la qualité d’ajustement du modèle.\n\\[\nR^2 = \\frac{\\sum_{i=1}^n (\\widehat{y}_i-\\bar{y})^2}{\\sum_{i=1}^n (y_{i}-\\bar{y})^2} = \\frac{SCE}{SCT} \\mbox{ avec } R^2 \\in \\left[0,1\\right]\n\\tag{7.9}\\]\n\\[\nF = \\frac{\\frac{\\sum_{i=1}^n (\\widehat{y}_i-\\bar{y})^2}{k}}{\\frac{\\sum_{i=1}^n (y_{i}-\\widehat{y})^2}{n-k-1}} = \\frac{\\frac{SCE}{k}}{\\frac{SCR}{n-k-1}} = \\frac{\\frac{R^2}{k}} {\\frac{1-R^2}{n-k-1}} = \\frac{(n-k-1)R^2}{k(1-R^2)}\n\\tag{7.10}\\]\n\\[\nRMSE = \\sqrt{\\frac{\\sum_{i=1}^n (y_{i}-\\widehat{y})^2}{n}} = \\sqrt{\\frac{SCR}{n}}\n\\tag{7.11}\\]\n\n\nGlobalement, plus un modèle de régression est efficace, plus les valeurs du R2 et de la statistique F sont élevées et inversement, plus celle de RMSE est faible. En effet, remarquez qu’à l’équation 7.10, la statistique F peut être obtenue à partir du R2; par conséquent, plus la valeur du R2 est forte (proche de 1), plus celle de F est aussi élevée. Notez aussi que plus un modèle est performant, plus la partie expliquée par le modèle (SCE) est importante et plus celle non expliquée (SCR) est faible; ce qui signifie que plus le R2 est proche de 1 (équation 7.9), plus le RMSE – calculé à partir du SCR – est faible (équation 7.11).\nLa syntaxe R ci-dessous illustre comment calculer les différentes variances (SCT, SCE et SCR) à partir des valeurs observées et prédites par le modèle, puis les valeurs du R2, de F et du RMSE. Nous verrons par la suite qu’il est possible d’obtenir directement ces valeurs à partir de la fonction summary(VotreModele).\n\n# Chargement des données\nload(\"data/lm/DataVegetation.RData\")\n\n# Construction du modèle de régression\nModele1 &lt;- lm(VegPct ~ HABHA+AgeMedian+Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal)\n\n# Nombre d'observations \nn &lt;- nrow(DataFinal)\n# Nombre de variables indépendantes (coefficients moins la constante)\nk &lt;- length(Modele1$coefficients)-1\n# Vecteur pour les valeurs observées\nYobs &lt;- DataFinal$VegPct\n# Vecteur pour les valeurs prédites\nYpredit &lt;- Modele1$fitted.values\n# Variance totale\nSCT &lt;- sum((Yobs-mean(Yobs))^2)\n# Variance expliquée\nSCE &lt;- sum((Ypredit-mean(Yobs))^2)\n# Variance résidelle\nSCR &lt;- sum((Yobs-Ypredit)^2)\n#  Calcul du coefficient de détermination (R2)\nR2 &lt;- SCE / SCT\n#  Calcul de la valeur de F\nvaleurF &lt;- (R2 / k) /((1-R2)/(n-k-1))\n\ncat(\"R2 =\", round(SCE / SCT,4),\n    \"\\nF de Fisher = \", round(valeurF,0),\n    \"\\nRMSE =\", round(sqrt(SCR/ n),4)\n    )\n\nR2 = 0.4182 \nF de Fisher =  1223 \nRMSE = 14.1575\n\n\n\n7.3.2 Comparaison des modèles incrémentiels\nTel que signalé plus haut, il est fréquent de construire plusieurs modèles de régression imbriqués. Cette démarche est très utile pour évaluer l’apport de l’introduction d’un nouveau bloc de variables dans un modèle. De manière exploratoire, cela permet également de vérifier si l’introduction d’une variable indépendante supplémentaire dans un modèle a ou non un apport significatif et ainsi de décider de la conserver, ou non, dans le modèle final selon le principe de parcimonie.\n\n\n\n\n\nLe principe de parcimonie\n\n\nLe principe de parcimonie appliqué aux régressions correspond à l’idée qu’il est préférable de disposer d’un modèle plus simple que d’un modèle compliqué pour expliquer un phénomène si la qualité de leurs prédictions – qualité d’ajustement des deux modèles – est équivalente.\nUne première justification de ce principe trouve son origine dans la philosophie des sciences avec le rasoir d’Ockham. Il s’agit d’un principe selon lequel il est préférable de privilégier des théories faisant appel à un plus petit nombre d’hypothèses. L’idée centrale étant d’éviter d’apporter des réponses à une question qui soulèveraient davantage de nouvelles questions. Dans le cas d’une régression, nous pourrions être tenté d’ajouter de nombreuses variables indépendantes pour améliorer la capacité de prédiction du modèle. Cette stratégie conduit généralement à observer des relations contraires à nos connaissances entre les variables du modèle, ce qui soulève de nouvelles questions de recherche (pas toujours judicieuses…). Dans notre quotidien, si une casserole tombe de son support, il est plus raisonnable d’imaginer que nous l’avions mal fixée que d’émettre l’hypothèse qu’un fantôme l’a volontairement fait tomber! Cette seconde hypothèse soulève d’autres questions (pas toujours judicieuses…) sur la nature d’un fantôme, son identité, la raison le poussant à agir, etc.\nUne seconde justification de ce principe s’observe dans la pratique statistique : des modèles plus complexes ont souvent une plus faible capacité de généralisation. En effet, un modèle complexe et trop bien ajusté aux données observées est souvent incapable d’effectuer des prédictions justes pour de nouvelles données. Ce phénomène est appelé surajustement ou surinterprétation (overfitting en anglais). Le surajustement résultant de modèles trop complexes entre en conflit direct avec l’enjeu principal de l’inférence en statistique : pouvoir généraliser des observations faites sur un échantillon au reste d’une population.\nNotez que ce principe de parcimonie ne signifie pas que vous devez systématiquement retirer toutes les variables non significatives de votre analyse. En effet, il peut y avoir un intérêt théorique à démontrer l’absence de relation entre des variables. Il s’agit plutôt d’une ligne de conduite à garder à l’esprit lors de l’élaboration du cadre théorique et de l’interprétation des résultats.\n\n\nMathématiquement, plus nous ajoutons de variables supplémentaires dans un modèle, plus le R2 augmente. On ne peut donc pas utiliser directement le R2 pour comparer deux modèles de régression ne comprenant pas le même nombre de variables indépendantes. Nous privilégions alors l’utilisation du R2 ajusté qui, comme illustré dans l’équation 7.12, tient compte à la fois des nombres d’observations et des variables indépendantes utilisées pour construire le modèle.\n\\[\nR^2_{\\text {ajusté}}= 1 - \\frac{(1-R^2)(n-1)}{n-k-1} \\mbox{ avec } R^2_{\\text {ajusté}} \\in \\left[0,1\\right]\n\\tag{7.12}\\]\nSi le R2 ajusté du second modèle est supérieur au premier modèle, cela signifie qu’il y a un gain de la variance expliquée entre le premier et le second modèle. Ce gain est-il pour autant significatif? Pour y répondre, il convient de comparer les valeurs des statistiques F des deux modèles. Pour ce faire, nous calculons le F incrémentiel et la valeur de p qui lui est associé avec comme degrés de liberté, le nombre de variables indépendantes ajoutées (\\(k_2-k_1\\)) et \\(n-k_2-1\\). Si la valeur de p &lt; 0,05, nous pouvons conclure que le gain de variance expliquée par le second modèle est significatif comparativement au premier modèle (au seuil de 5 %).\n\\[\nF_{\\text {incrémentiel}}= \\frac{\\frac{R^2_2-R^2_1}{k_2-k_1}} {\\frac{1-R^2_2}{n-k_2-1}}\n\\tag{7.13}\\]\navec \\(R^2_1\\) et \\(R^2_2\\) étant les coefficients de détermination des modèles 1 et 2 et \\(k_1\\) et \\(k_2\\) étant les nombres de variables indépendantes qu’ils comprennent (\\(k_2 &gt; k_1\\)).\nIllustrons le tout avec deux modèles. Dans la syntaxe R ci-dessous, nous avons construit un premier modèle avec uniquement les variables de contrôle (modele1), soit deux variables indépendantes (HABHA et AgeMedian). Puis, dans un second modèle (modele2), nous ajoutons comme variables indépendantes les pourcentages des quatre groupes de population (Pct_014, Pct_65P, Pct_MV, Pct_FR). Repérez comment sont calculés les R2 ajustés pour les modèles et le F incrémentiel.\nLe R2 ajusté passe de 0,269 à 0,418 des modèles 1 à 2 signalant que l’ajout des quatre variables indépendantes augmente considérablement la variance expliquée. Autrement dit, le second modèle est bien plus performant. Le F incrémentiel s’élève à 653,8 et est significatif (p &lt; 0,001). Notez que la syntaxe ci-dessous illustre comment calculer les valeurs du R2 ajusté et du F incrémentiel à partir des équations 7.12 et 7.13. Sachez toutefois qu’il est possible d’obtenir directement le R2 ajusté avec la fonction summary(VotreModele) et le F incrémentiel avec la fonction anova(modele1, modele2).\n\nmodele1 &lt;- lm(VegPct ~ HABHA+AgeMedian, data = DataFinal)\nmodele2 &lt;- lm(VegPct ~ HABHA+AgeMedian+Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal)\n\n# nombre d'observations pour les deux modèles\nn1 &lt;- length(modele1$fitted.values)\nn2 &lt;- length(modele2$fitted.values)\n\n# nombre de variables indépendantes\nk1 &lt;- length(modele1$coefficients)-1\nk2 &lt;- length(modele2$coefficients)-1\n\n# coefficient de détermination\nR2m1 &lt;- summary(modele1)$r.squared\nR2m2 &lt;- summary(modele2)$r.squared\n\n# coefficient de détermination ajusté\nR2ajustm1 &lt;- 1-(((n1-1)*(1-R2m1)) / (n1-k1-1))\nR2ajustm2 &lt;- 1-(((n2-1)*(1-R2m2)) / (n2-k2-1))\n\n# Statistique F\nFm1 &lt;- summary(modele1)$fstatistic[1]\nFm2 &lt;- summary(modele2)$fstatistic[1]\n\n# F incrémentiel\nFincrementiel &lt;- ((R2m2-R2m1) / (k2 - k1)) / ( (1-R2m2)/(n2-k2-1))\npFinc &lt;- pf(Fincrementiel, k2-k1, n2-k2-1, lower.tail = FALSE)\n\ncat(\"\\nR2 (modèle 1) =\", round(R2m1,4), \n    \"; R2 ajusté = \", round(R2ajustm1,4), \n    \"; F =\", round(Fm1, 1),\n    \"\\nR2 (modèle 2) =\", round(R2m2,4), \n    \"; R2 ajusté = \", round(R2ajustm2,4), \n    \"; F =\", round(Fm2, 1),\n    \"\\nF incrémentiel =\", round(Fincrementiel,1), \n    \"; p = \", round(pFinc,3)\n)\n\n\nR2 (modèle 1) = 0.2691 ; R2 ajusté =  0.269 ; F = 1879.2 \nR2 (modèle 2) = 0.4182 ; R2 ajusté =  0.4179 ; F = 1222.5 \nF incrémentiel = 653.8 ; p =  0\n\n# F incrémentiel avec la fonction anova\nanova(modele1, modele2)\n\nAnalysis of Variance Table\n\nModel 1: VegPct ~ HABHA + AgeMedian\nModel 2: VegPct ~ HABHA + AgeMedian + Pct_014 + Pct_65P + Pct_MV + Pct_FR\n  Res.Df     RSS Df Sum of Sq     F    Pr(&gt;F)    \n1  10207 2570964                                 \n2  10203 2046427  4    524537 653.8 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "07-regressionlineaire.html#sec-074",
    "href": "07-regressionlineaire.html#sec-074",
    "title": "7  Régression linéaire multiple",
    "section": "\n7.4 Différentes mesures pour les coefficients de régression",
    "text": "7.4 Différentes mesures pour les coefficients de régression\nLa fonction summary(nom du modèle) permet d’obtenir les résultats du modèle de régression. D’emblée, signalons que le modèle est globalement significatif (F(6, 10203) = 1123, p = 0,000) avec un R2 de 0,4182 indiquant que les variables indépendantes du modèle expliquent 41,82 % de la variance du pourcentage de végétation dans les îlots de l’île de Montréal.\n\nmodelereg &lt;- lm(VegPct ~ HABHA+AgeMedian+Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal)\nsummary(modelereg)\n\n\nCall:\nlm(formula = VegPct ~ HABHA + AgeMedian + Pct_014 + Pct_65P + \n    Pct_MV + Pct_FR, data = DataFinal)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-48.876  -9.757  -0.232   9.499 103.830 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 26.355774   0.882235  29.874   &lt;2e-16 ***\nHABHA       -0.070401   0.002202 -31.975   &lt;2e-16 ***\nAgeMedian    0.010790   0.006369   1.694   0.0902 .  \nPct_014      1.084478   0.032179  33.702   &lt;2e-16 ***\nPct_65P      0.400531   0.018835  21.265   &lt;2e-16 ***\nPct_MV      -0.031112   0.010406  -2.990   0.0028 ** \nPct_FR      -0.348256   0.011640 -29.918   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 14.16 on 10203 degrees of freedom\nMultiple R-squared:  0.4182,    Adjusted R-squared:  0.4179 \nF-statistic:  1223 on 6 and 10203 DF,  p-value: &lt; 2.2e-16\n\n\n\n7.4.1 Coefficients de régression : évaluer l’effet des variables indépendantes\nLes différents résultats pour les coefficients sont reportés au tableau 7.2.\nLa constante (\\(\\beta_0\\)) est la valeur attendue de la variable dépendante (Y) quand les valeurs de toutes les variables indépendantes sont égales à 0. Pour ce modèle, quand les variables indépendantes sont égales à 0, plus du quart de la superficie des îlots serait en moyenne couverte par de la végétation (\\(\\beta_0\\) = 26,36). Notez que la constante n’a pas toujours une interprétation pratique. Il est par exemple très invraisemblable d’avoir un îlot avec de la population dans lequel il n’y aurait aucune personne à faible revenu, aucune personne ne déclarant appartenir à une minorité visible, aucun enfant de moins de 15 ans et aucune personne âgée de 65 ans et plus. La constante a donc avant tout un rôle mathématique dans le modèle.\nLe coefficient de régression (\\(\\beta_1\\) à \\(\\beta_k\\)) indique le changement de la variable dépendante (Y) lorsque la variable indépendante augmente d’une unité, toutes choses étant égales par ailleurs. Il permet ainsi d’évaluer l’effet d’une augmentation d’une unité dans laquelle est mesurée la VI sur la VD.\n\n\n\n\n\nQue signifie l’expression toutes choses étant égales par ailleurs pour un coefficient de régression?\n\n\nAprès l’apprentissage du grec, grâce aux nombreuses équations intégrées au livre, passons au latin! L’expression toutes choses étant égales par ailleurs vient du latin ceteris paribus, à ne pas confondre avec c’est terrible Paris en bus (petite blague formulée par un étudiant ayant suivi le cours Méthodes quantitatives appliquées en études urbaines à l’INRS il y a quelques années)! Certains auteurs emploient encore ceteris paribus : il est donc possible que vous la retrouviez dans un article scientifique…\nPlus sérieusement, l’expression toutes choses étant égales par ailleurs signifie que l’on estime l’effet de la variable indépendante sur la variable dépendante, si toutes les autres variables indépendantes restent constantes ou autrement dit, une fois contrôlés tous les autres prédicteurs.\n\n\n\n\n\n\nTableau 7.2: Différentes mesures pour les coefficients\n\n\n\n\n\n\n\n\n\n\n\nVariable\nCoef.\nErreur type\nValeur de T\nP\ncoef. 2,5 %\ncoef. 97,5 %\n\n\n\n\nConstante\n26,356\n0,882\n29,870\n0,000\n24,626\n28,085\n***\n\n\nHABHA\n-0,070\n0,002\n-31,970\n0,000\n-0,075\n-0,066\n***\n\n\nAgeMedian\n0,011\n0,006\n1,690\n0,090\n-0,002\n0,023\n.\n\n\nPct_014\n1,084\n0,032\n33,700\n0,000\n1,021\n1,148\n***\n\n\nPct_65P\n0,401\n0,019\n21,260\n0,000\n0,364\n0,437\n***\n\n\nPct_MV\n-0,031\n0,010\n-2,990\n0,003\n-0,052\n-0,011\n**\n\n\nPct_FR\n-0,348\n0,012\n-29,920\n0,000\n-0,371\n-0,325\n***\n\n\n\n\n\n\nÀ partir des coefficients du tableau 7.2, l’équation du modèle de régression s’écrit alors comme suit :\nVegPct = 26,356 − 0,070 HABHA  + 0,011 AgeMedian + 1,084 Pct_014 + 0,401 Pct_65P −0,031 Pct_MV − 0,348 Pct_FR + e\nComment interpréter un coefficient de régression pour une variable indépendante?\nLe signe du coefficient de régression indique si la variable indépendante est associée positivement ou négativement avec la variable dépendante. Par exemple, plus la densité de population est importante à travers les îlots de l’île de Montréal, plus la couverture végétale diminue.\nQuant à la valeur absolue du coefficient, elle indique la taille de l’effet du prédicteur. Par exemple, 1,084 signifie que si toutes les autres variables indépendantes restent constantes, alors le pourcentage de végétation dans l’îlot augmente de 1,084 points de pourcentage pour chaque différence d’un point de pourcentage d’enfants de moins de 15 ans. Toutes choses étant égales par ailleurs, une augmentation de 10 % d’enfants dans un îlot entraîne alors une hausse de 10,8 % de la couverture végétale dans l’îlot.\nL’analyse des coefficients montre ainsi qu’une fois contrôlées les deux caractéristiques relatives à la forme urbaine (densité de population et âge médian des bâtiments), plus les pourcentages d’enfants et de personnes âgées sont élevés, plus la couverture végétale de l’îlot est importante (B = 1,084 et 0,401), toutes choses étant égales par ailleurs. À l’inverse, de plus grands pourcentages de personnes à faible revenu et de minorités sont associés à une plus faible couverture végétale (B = −0,348 et −0,031).\nL’erreur type du coefficient de régression\nL’erreur type d’un coefficient permet d’évaluer son niveau de précision, soit le degré d’incertitude vis-à-vis du coefficient. Succinctement, elle correspond à l’écart-type de l’estimation (coefficient); elle est ainsi toujours positive. Plus la valeur de l’erreur type est faible, plus l’estimation du coefficient est précise. Notez toutefois qu’il n’est pas judicieux de comparer les erreurs types des coefficients pour des variables exprimées dans des unités de mesure différentes.\nComme nous le verrons plus loin, l’utilité principale de l’erreur type est qu’elle permet de calculer la valeur de t et l’intervalle de confiance du coefficient de régression.\n\n7.4.2 Coefficients de régression standardisés : repérer les variables les plus importantes du modèle\nUn coefficient de régression est exprimé dans les unités de mesure des variables indépendante (VI) et dépendante (VD) : une augmentation d’une unité de la VI a un effet de \\(\\beta\\) (valeur de coefficient) unité de mesure sur la VD, toutes choses étant égales par ailleurs. Prenons l’exemple d’un modèle fictif dans lequel une variable indépendante mesurée en mètres obtient un coefficient de régression de 0,000502. Si cette variable était exprimée en kilomètres et non en mètres, son coefficient serait alors de 0,502 (\\(0,000502 \\times 1000 = 0,502\\)). Cela explique que pour certaines variables, il est souvent préférable de modifier l’unité de mesure, particulièrement pour les variables de distance ou de revenu. Par exemple, dans un modèle de régression, nous introduisons habituellement une variable de revenu par tranche de mille dollars ou le loyer mensuel par tranche de cent dollars, puisque les coefficients du revenu ou de loyer exprimé en dollars risquent d’être extrêmement faibles. Concrètement, cela signifie que nous divisons la variable revenu par 1000 et celle du loyer par 100 avant de l’introduire dans le modèle.\nDu fait de leur unités de mesure souvent différentes, vous aurez compris que nous ne pouvons pas comparer directement les coefficients de régression afin de repérer la ou les variables indépendantes (X) qui ont les effets (impacts) les plus importants sur la variable dépendante (Y). Pour remédier à ce problème, nous utilisons les coefficients de régression standardisés. Ces coefficients standardisés sont simplement les valeurs de coefficients de régression qui seraient obtenus si toutes les variables du modèle (VD et VI) étaient préalablement centrées réduites (soit avec une moyenne égale à 0 et un écart-type égal à 1; consultez la section 2.5.5.2 pour un rappel). Puisque toutes les variables du modèle sont exprimées en écarts-types, les coefficients standardisés permettent ainsi d’évaluer l’effet relatif des VI sur la VD. Cela permet ainsi de repérer la ou les variables les plus « importantes » du modèle.\nL’interprétation d’un coefficient de régression standardisé est donc la suivante : il indique le changement en termes d’unités d’écart-type de la variable dépendante (Y) à chaque ajout d’un écart-type de la variable indépendante, toutes choses étant égales par ailleurs.\nLe coefficient de régression standardisé peut être aussi facilement calculé en utilisant les écarts-types des deux variables VI et VD :\n\\[\n\\beta_{z}= \\beta \\frac{s_x}{s_y}\n\\tag{7.14}\\]\nLa syntaxe R ci-dessous illustre trois façons d’obtenir les coefficients standardisés :\n\nen centrant et réduisant préalablement les variables avec la fonction scale avant de construire le modèle avec la fonction lm;\nen calculant les écarts-types de VD et de VI et en appliquant l’équation 7.14;\navec la fonction lm.beta du package QuantPsyc. Cette dernière méthode est moins « verbeuse » (deux lignes de code uniquement), mais nécessite de charger un package supplémentaire.\n\n\n# Modèle de régression\nModele1 &lt;- lm(VegPct ~ HABHA+AgeMedian+Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal)\n\n#  Méthode 1 : lm sur des variables centrées réduites\nModeleZ &lt;- lm(scale(VegPct) ~ scale(HABHA)+scale(AgeMedian)+\n                           scale(Pct_014)+scale(Pct_65P)+\n                           scale(Pct_MV)+scale(Pct_FR), data = DataFinal)\ncoefs &lt;- ModeleZ$coefficients\ncoefs[1:length(coefs)]\n\n     (Intercept)     scale(HABHA) scale(AgeMedian)   scale(Pct_014) \n    3.721649e-16    -2.806891e-01     1.467299e-02     3.093456e-01 \n  scale(Pct_65P)    scale(Pct_MV)    scale(Pct_FR) \n    1.788453e-01    -2.755087e-02    -3.004544e-01 \n\n#  Méthode 2 : à partir de l'équation\n# Écart-type de la variable dépendante\nVDet &lt;- sd(DataFinal$VegPct)\ncat(\"Écart-type de Y =\", round(VDet,3))\n\nÉcart-type de Y = 18.562\n\n# Écarts-types des variables indépendantes\nVI &lt;- c(\"HABHA\" , \"AgeMedian\" , \"Pct_014\" , \"Pct_65P\" , \"Pct_MV\" , \"Pct_FR\")\nVIet &lt;- sapply(DataFinal[VI], sd)\n# Coefficients de régression du modèle sans la constante\ncoefs &lt;- Modele1$coefficients[1:length(VIet)+1]\n# Coefficients de régression du modèle\ncoefstand &lt;- coefs * (VIet / VDet)\ncoefstand\n\n      HABHA   AgeMedian     Pct_014     Pct_65P      Pct_MV      Pct_FR \n-0.28068906  0.01467299  0.30934560  0.17884535 -0.02755087 -0.30045437 \n\n#  Méthode 3 : avec la fonction lm.beta du package QuantPsyc\nlibrary(QuantPsyc)\nlm.beta(lm(VegPct ~ HABHA+AgeMedian+Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal))\n\n      HABHA   AgeMedian     Pct_014     Pct_65P      Pct_MV      Pct_FR \n-0.28068906  0.01467299  0.30934560  0.17884535 -0.02755087 -0.30045437 \n\n\n\n\n\n\nTableau 7.3: Calcul des coefficients standardisés\n\n\nVariable dépendante\nÉcart-type\nCoef.\nCoef. standardisé\n\n\n\nHABHA\nHABHA\n74,008\n-0,070\n-0,281\n\n\nAgeMedian\nAgeMedian\n25,241\n0,011\n0,015\n\n\nPct_014\nPct_014\n5,295\n1,084\n0,309\n\n\nPct_65P\nPct_65P\n8,289\n0,401\n0,179\n\n\nPct_MV\nPct_MV\n16,438\n-0,031\n-0,028\n\n\nPct_FR\nPct_FR\n16,015\n-0,348\n-0,300\n\n\n\n\n\n\nPar exemple, pour la variable Pct_014, le coefficient de régression standardisé est égal à :\n\\[\n\\beta_{z}= 1,084 \\times \\frac{5,295}{18,562}=0,309\n\\tag{7.15}\\]\navec 1,084 étant le coefficient de régression de Pct_014, 5,295 et 18,562 étant respectivement les écarts-types de Pct_014 (variable indépendante) et de VegPct (variable dépendante).\nAu tableau 7.3, nous constatons que la valeur absolue du coefficient de régression pour HABHA est inférieure à celle de Pct_65P (−0,070 versus 0,401), ce qui n’est pas le cas pour leur coefficient standardisé (−0,281 versus 0,179). Rappelez-vous aussi que nous ne pouvons pas directement comparer les effets de ces deux variables à partir des coefficients de régression puisqu’elles sont exprimées dans des unités de mesure différentes : HABHA est exprimée en habitants par hectare et Pct_65P en pourcentage. À la lecture des coefficients standardisés, nous pouvons en conclure que la variable HABHA a un effet relatif plus important que Pct_65P (−0,281 versus 0,179).\n\n7.4.3 Significativité des coefficients de régression : valeurs de t et de p\n\nUne fois les coefficients de régression obtenus, il convient de vérifier s’ils sont ou non significativement différents de 0. Si le coefficient de régression d’une variable indépendante est significativement différent de 0, nous concluons que la variable a un effet significatif sur la variable dépendante, toutes choses étant égales par ailleurs. Pour ce faire, il suffit de calculer la valeur de t qui est simplement le coefficient de régression divisé par son erreur type.\n\\[\nt=\\frac{\\beta_k - 0}{s(\\beta_k)}  \n\\tag{7.16}\\]\navec \\(s(\\beta_k)\\) étant l’erreur type du coefficient de régression. Notez que dans l’équation 7.16, nous indiquons habituellement \\(-0\\), pour signaler que l’on veut vérifier si le coefficient est différent de 0. En guise d’exemple, au tableau 7.2, la valeur de t de la variable HABHA est bien égale à :\n\\(\\mbox{−0,070401 / 0,002202 = −31,975}\\).\n\n\n\n\n\nDémarche pour vérifier si un coefficient est significativement différent de 0\n\n\n\nPoser l’hypothèse nulle (H0) stipulant que le coefficient est égal à 0, soit \\(H_0 : \\beta_k = 0\\). L’hypothèse alternative (H1) est que le coefficient est différent de 0, soit \\(H_1 : B_k \\neq 0\\).\nCalculer la valeur de t, soit le coefficient de régression divisé par son erreur type (équation 7.16).\nCalculer le nombre de degrés de liberté, soit \\(dl = n − k - 1\\), n et k étant respectivement les nombres d’observations et de variables indépendantes.\nChoisir un seuil de signification alpha (5 %, 1 % ou 0,1 %, soit p = 0,05, 0,01 ou 0,01).\nTrouver la valeur critique de t dans la table T de Student (section 14.3) avec p et le nombre de degrés de liberté (dl).\nValider ou réfuter l’hypothèse nulle (H0) :\n\n\nsi la valeur de t est inférieure à la valeur critique de t avec dl et le seuil choisi, nous confirmons H0 : le coefficient n’est pas significativement différent de 0.\nsi la valeur de t est supérieure à la valeur critique de t avec dl et le seuil choisi, nous réfutons l’hypothèse nulle, et choisissons l’hypothèse alternative (H1) stipulant que le coefficient est significativement différent de 0.\n\nValeurs critiques de la valeur de t à retenir!\nLorsque le nombre de degrés de liberté (n − k - 1) est très important (supérieur à 2500), et donc le nombre d’observations de votre jeu de données, nous retenons habituellement les valeurs critiques suivantes : 1,65 (p = 0,10), 1,96 (p = 0,05), 2,58 (p = 0,01) et 3,29 (p=0,001). Concrètement, cela signifie que :\n\nune valeur de t supérieure à 1,96 ou inférieure à -1,96 nous informe que la relation entre la variable indépendante et la variable dépendante est significative positivement ou négativement au seuil de 5 %. Autrement dit, vous avez moins de 5 % de chances de vous tromper en affirmant que le coefficient de régression est bien significativement différent de 0.\nune valeur de t supérieure à 2,58 ou inférieure à -2,58 nous informe que la relation entre la variable indépendante et la variable dépendante est significative positivement ou négativement au seuil de 5 %. Autrement dit, vous avez moins de 1 % de chances de vous tromper en affirmant que le coefficient de régression est bien significativement différent de 0.\nune valeur de t supérieure à 3,29 ou inférieure à -3,29 nous informe que la relation entre la variable indépendante et la variable dépendante est significative positivement ou négativement au seuil de 5 %. Autrement dit, vous avez moins de 0,1 % de chances de vous tromper en affirmant que le coefficient de régression est bien significativement différent de 0.\n\nConcrètement, retenez et utilisez les seuils de \\(\\pm\\mbox{1,96}\\), \\(\\pm\\mbox{2,58}\\) et \\(\\pm\\mbox{3,29}\\) pour repérer les variables significatives positivement ou négativement aux seuils respectifs de 0,5, 0,1 et 0,001.\nQue signifient les seuils 0,10, 0,05 et 0,001?\nL’interprétation exacte des seuils de significativité des coefficients d’une régression est quelque peu alambiquée, mais mérite de s’y attarder. En effet, indiquer qu’un coefficient est significatif est souvent perçu comme un argument fort pour une théorie, il est donc nécessaire d’avoir du recul et de bien comprendre ce que l’on entend par significatif.\nSi un coefficient est significatif au seuil de 5 % dans notre modèle, cela signifie que si, pour l’ensemble d’une population, la valeur du coefficient est de 0 en réalité, alors nous avions moins de 5 % de chances de collecter un échantillon (pour cette population) ayant produit un coefficient aussi fort que celui que nous observons dans notre propre échantillon. Par conséquent, il serait très invraisemblable que le coefficient soit 0 puisque nous avons effectivement collecté un tel échantillon. Il s’agit d’une forme d’argumentation par l’absurde propre à la statistique fréquentiste.\nNotez que si 100 études étaient conduites sur le même sujet et dans les mêmes conditions, nous nous attendrions à ce que 5 d’entre elles trouvent un coefficient significatif, du fait de la variation des échantillons. Ce constat souligne le fait que la recherche est un effort collectif et qu’une seule étude n’est pas suffisante pour trancher sur un sujet. Les revues systématiques de la littérature sont donc des travaux particulièrement importants pour la construction du consensus scientifique.\nNe pas confondre significativité et effet de la variable indépendante\nAttention, un coefficient significatif n’est pas toujours intéressant! Autrement dit, bien qu’il soit significatif à un seuil donné (par exemple, p = 0,05), cela ne veut pas dire pour autant qu’il ait un effet important sur la variable dépendante. Il faut donc analyser simultanément les valeurs de p et des coefficients de régression. Afin de mieux saisir l’effet d’un coefficient significatif, il est intéressant de représenter graphiquement l’effet marginal d’une variable indépendante (VI) sur une variable dépendante (VD), une fois contrôlées les autres VI du modèle de régression (section 7.7.4).\n\n\nPrenons deux variables indépendantes du tableau 7.2 – HABHA et AgeMedian – et vérifions si leurs coefficients de régression respectifs (−0,070 et 0,011) sont significatifs. Appliquons la démarche décrite dans l’encadré ci-dessus :\n\nNous posons l’hypothèse nulle stipulant que la valeur de ces deux coefficients est égale à 0, soit \\(H_0 : \\beta_k = 0\\).\nLa valeur de t est égale à −0,070401 / 0,002202 = −31,97139 pour HABHA et à 0,010790 / 0,006369 = 1,694144 pour AgeMedian.\nLe nombre de degrés de liberté est égal à \\(\\mbox{dl} = \\mbox{n}-\\mbox{k}-\\mbox{1} = \\mbox{10 210} − \\mbox{6} - \\mbox{1} = \\mbox{10 203}\\).\nNous choisissons respectivement les seuils \\(\\alpha\\) de 0,10, 0,05, 0,01 ou 0,001.\nAvec 10210 degrés de liberté, les valeurs critiques de la table T de Student (section 13.3) sont de 1,65 (p = 0,10), 1,96 (p = 0,05), 2,58 (p = 0,01), 3,29 (p = 0,001).\nIl reste à valider ou réfuter l’hypothèse nulle (H0) :\n\n\npour HABHA, la valeur absolue de t (−31,975) est supérieure à la valeur critique de 3,29. Son coefficient de régression est donc significativement différent de 0. Autrement dit, ce prédicteur a un effet significatif et négatif sur la variable dépendante.\npour AgeMedian, la valeur absolue de t (1,694) est supérieure à 1,65 (p = 0,10), mais inférieure à 1,96 (p = 0,05), à 2,58 (p = 0,01), à 3,29 (p = 0,001). Par conséquent, ce coefficient est différent de 0 uniquement au seuil de p = 0,10 et non au seuil de p = 0,05. Cela signifie que bous avons un peu moins de 10 % de chances de se tromper en affirmant que cette variable a un effet significatif sur la variable dépendante.\n\n\n\n\n\n\nCalculer et obtenir des valeurs de p dans R\n\n\nIl est très rare d’utiliser la table T de Student pour obtenir un seuil de significativité. D’une part, il est possible de calculer directement la valeur de p à partir de la valeur de t et du nombre de degrés de liberté avec la fonction pt avec les paramètres suivants :\npt(q= abs(valeur de T), df= nombre de degrés de liberté, lower.tail = FALSE) *2\n\n# Degrés de liberté\ndl &lt;- nrow(DataFinal) - (length(Modele1$coefficients) - 1) + 1\n\n# Valeurs de T\nValeurT &lt;- summary(Modele1)$coefficients[,3]\n\n# Calcul des valeurs de P\nValeurP &lt;- pt(q= abs(ValeurT), df= dl, lower.tail = FALSE) *2\n\ndf_tp &lt;- data.frame(\n                ValeurT = round(ValeurT,3), \n                ValeurP = round(ValeurP,3)\n)\nprint(df_tp)\n\n            ValeurT ValeurP\n(Intercept)  29.874   0.000\nHABHA       -31.975   0.000\nAgeMedian     1.694   0.090\nPct_014      33.702   0.000\nPct_65P      21.265   0.000\nPct_MV       -2.990   0.003\nPct_FR      -29.918   0.000\n\n\nD’autre part, la fonction summary renvoie d’emblée les valeurs de t et de p. Par convention, R, comme la plupart des logiciels d’analyses statistiques, utilise aussi des symboles pour indiquer le seuil de signification du coefficient (voir tableau 7.3) :\n’***’ p &lt;= 0,001\n’**’ p &lt;= 0,01\n’*’ p &lt;= 0,05\n‘.’ p &lt;= 0,10\n\n\n\n7.4.4 Intervalle de confiance des coefficients\nFinalement, il est possible de calculer l’intervalle de confiance d’un coefficient à partir d’un niveau de signification (habituellement 0,95 ou encore 0,99). Pour ce faire, la fonction confint(nom du modèle, level=.95) est très utile. L’intérêt de ces intervalles de confiance pour les coefficients de régression est double :\n\nIl permet de vérifier si le coefficient est ou non significatif au seuil retenu. Pour cela, la borne inférieure et la borne supérieure du coefficient doivent être toutes deux négatives ou positives. À l’inverse, un intervalle à cheval sur 0, soit avec une borne inférieure négative et une borne supérieure positive, n’est pas significatif.\nIl permet d’estimer la précision de l’estimation; plus l’intervalle du coefficient est réduit, plus l’estimation de l’effet de la variable indépendante est précise. Inversement, un intervalle large signale que le coefficient est incertain.\n\nCela explique que de nombreux auteurs reportent les intervalles de confiance dans les articles scientifiques (habituellement à 95 %). Dans le modèle présenté ici, il est alors possible d’écrire : toutes choses étant égales par ailleurs, le pourcentage d’enfants de moins de 15 ans est positivement et significativement associé avec le pourcentage de la couverture végétale dans l’îlot (B = 1,084; IC 95 % = [1,021 - 1,148], p &lt; 0,001).\nEn guise d’exemple, à la lecture de la sortie R ci-dessous, l’estimation de l’effet de la variable indépendante AgeMedian sur la variable VegPct se situe dans l’intervalle -0,002 à 0,023 qui est à cheval sur 0. Contrairement aux autres variables, nous ne pouvons donc pas en conclure que cet effet est significatif avec p = 0,05.\n\n# Intervalle de confiance à 95 % des coefficients\nround(confint(Modele1, level=.95),3)\n\n             2.5 % 97.5 %\n(Intercept) 24.626 28.085\nHABHA       -0.075 -0.066\nAgeMedian   -0.002  0.023\nPct_014      1.021  1.148\nPct_65P      0.364  0.437\nPct_MV      -0.052 -0.011\nPct_FR      -0.371 -0.325\n\n\n\n\n\n\n\nComment est calculé un intervalle de confiance?\n\n\nL’intervalle du coefficient est obtenu à partir de :\n\nla valeur du coefficient (\\(\\beta_k\\)),\nla valeur de son erreur type \\(s(\\beta_k)\\) et\nla valeur critique de T (\\(t_{\\alpha/2}\\)) obtenue avec \\(n-k-1\\) degrés de liberté et le niveau de significativité retenu (95 %, 99 % ou 99,9 %).\n\n\\[\nIC_{\\beta_k}=  \\left[ \\beta_k - t_{\\alpha/2} \\times s(\\beta_k) ; \\beta_k + t_{\\alpha/2} \\times s(\\beta_k)  \\right]\n\\tag{7.17}\\]\nAutrement dit, lorsque vous disposez d’un nombre très important d’observations, les intervalles de confiance s’écrivent simplement avec les fameuses valeurs critiques de T de 1,96, 2,58, 3,29 :\n\\[\n\\mbox{Intervalle à 95 \\%\\: } IC_{\\beta_k}=  \\left[ \\beta_k - 1,96 \\times s(\\beta_k) ; \\beta_k + 1,96 \\times s(\\beta_k)  \\right]\n\\tag{7.18}\\]\n\\[\n\\mbox{Intervalle à 99 \\%\\: } IC_{\\beta_k}=  \\left[ \\beta_k - 2,58 \\times s(\\beta_k) ; \\beta_k + 2,58 \\times s(\\beta_k)  \\right]\n\\tag{7.19}\\]\n\\[\n\\mbox{Intervalle à 99,9 \\%\\: } IC_{\\beta_k}=  \\left[ \\beta_k - 3,29 \\times s(\\beta_k) ; \\beta_k + 3,29 \\times s(\\beta_k)  \\right]\n\\tag{7.20}\\]\nLa syntaxe R ci-dessous illustre comment calculer les intervalles de confiance à 95 % à partir de l’équation 7.17. Rappelez-vous toutefois qu’il est bien plus simple d’utiliser la fonction confint:\n\nround(confint(Modele1, level=.95),3)\nround(confint(Modele1, level=.99),3)\nround(confint(Modele1, level=.999),3)\n\n\n# Coeffients de régression\ncoefs &lt;- Modele1$coefficients\n\n# Erreur type des coef.\ncoefs_se &lt;- summary(Modele1)$coefficients[,2]\n\n# Nombre de degrés de liberté\nn &lt;- length(Modele1$fitted.values)\nk &lt;- length(Modele1$coefficients)-1\ndl &lt;- n-k-1\n\n# valeurs critiques de T\nt95 &lt;-  qt(p=1 - (0.05/2),  df=dl)\nt99 &lt;-  qt(p=1 - (0.01/2),  df=dl)\nt99.9 &lt;-  qt(p=1 - (0.001/2),  df=dl)\ncat(\"Valeurs critiques de T en fonction du niveau de confiance\",\n    \"\\n et du nombre de degrés de liberté\",\n    \"\\n95 % : \", t95,\n    \"\\n99 % : \", t99,\n    \"\\n99,9 % : \", t99.9\n    )\n\nValeurs critiques de T en fonction du niveau de confiance \n et du nombre de degrés de liberté \n95 % :  1.960197 \n99 % :  2.576311 \n99,9 % :  3.291481\n\n# Intervalle de confiance à 95\ndata.frame(\n  IC2.5  = round(coefs-t95*coefs_se,3),\n  IC97.5 = round(coefs+t95*coefs_se,3)\n  )\n\n             IC2.5 IC97.5\n(Intercept) 24.626 28.085\nHABHA       -0.075 -0.066\nAgeMedian   -0.002  0.023\nPct_014      1.021  1.148\nPct_65P      0.364  0.437\nPct_MV      -0.052 -0.011\nPct_FR      -0.371 -0.325\n\n# Intervalle de confiance à 99\ndata.frame(\n  IC0.5 = round(coefs-t99*coefs_se,3),\n  IC99.5 = round(coefs+t99*coefs_se,3)\n)\n\n             IC0.5 IC99.5\n(Intercept) 24.083 28.629\nHABHA       -0.076 -0.065\nAgeMedian   -0.006  0.027\nPct_014      1.002  1.167\nPct_65P      0.352  0.449\nPct_MV      -0.058 -0.004\nPct_FR      -0.378 -0.318\n\n# Intervalle de confiance à 99.9\ndata.frame(\n  IC0.05 = round(coefs-t99.9*coefs_se,3),\n  IC99.95 = round(coefs+t99.9*coefs_se,3)\n  )\n\n            IC0.05 IC99.95\n(Intercept) 23.452  29.260\nHABHA       -0.078  -0.063\nAgeMedian   -0.010   0.032\nPct_014      0.979   1.190\nPct_65P      0.339   0.463\nPct_MV      -0.065   0.003\nPct_FR      -0.387  -0.310"
  },
  {
    "objectID": "07-regressionlineaire.html#sec-075",
    "href": "07-regressionlineaire.html#sec-075",
    "title": "7  Régression linéaire multiple",
    "section": "\n7.5 Introduction de variables explicatives particulières",
    "text": "7.5 Introduction de variables explicatives particulières\n\n7.5.1 Exploration des relations non linéaires\n\n7.5.1.1 Variable indépendante avec une fonction polynomiale\nDans la section 4.1, nous avons vu que la relation entre deux variables continues n’est pas toujours linéaire; elle peut être aussi curvilinéaire. Pour explorer les relations curvilinéaires, nous introduisons la variable indépendante sous la forme polynomiale d’ordre 2 (voir le prochain encadré). L’équation de régression s’écrit alors :\n\\[\nY = b_{0} + b_{1}X_{1} + b_{11}X_{1}^2 + b_{2}X_{2} +\\ldots+ b_{k}X_{k} + e\n\\tag{7.21}\\]\nDans l’équation 7.21, la première variable indépendante est introduite dans le modèle de régression à la fois dans sa forme originelle et mise au carré : \\(b_{1}X_{1} + b_{11}X_{1}^2\\). Un coefficient différent est ajusté pour chacune de ces deux versions de la variable \\(X_{1}\\).\nLa démographie est probablement la discipline des sciences sociales qui a le plus recours aux régressions polynomiales. En effet, la variable âge est souvent introduite comme variable explicative dans sa forme originale et mise au carré. L’objectif est de vérifier si l’âge partage ou non une relation curvilinéaire avec un phénomène donné : par exemple, il pourrait y être associé positivement jusqu’à un certain seuil (45 ans par exemple), puis négativement à partir de ce seuil.\n\n\n\n\n\nRégression polynomiale et nombre d’ordres\n\n\nSachez qu’il est aussi possible de construire des régressions polynomiales avec plus de deux ordres. Par exemple, une régression polynomiale d’ordre 3 comprend une variable dans sa forme originelle, puis mise au carré et au cube. Cela a l’inconvénient d’augmenter corollairement le nombre de coefficients. Nous verrons au chapitre 11 qu’il existe une solution plus élégante et efficace : le recours aux modèles de régressions linéaires généralisés additifs avec des splines. Dans le cadre de cette section, nous nous limitons à des régressions polynomiales d’ordre 2.\n\\[\n\\mbox{Ordre 2 : } Y = b_{0} + b_{1}X_{1} + b_{11}X_{}^2 + b_{2}X_{2} +\\ldots+ b_{k}X_{k} + e\n\\tag{7.22}\\]\n\\[\n\\mbox{Ordre 3 : } Y = b_{0} + b_{1}X_{1} + b_{11}X_{}^2 + b_{111}X_{}^3 + b_{2}X_{2} +\\ldots+ b_{k}X_{k} + e\n\\tag{7.23}\\]\n\\[\n\\mbox{Ordre 4 : } Y = b_{0} + b_{1}X_{1} + b_{11}X_{}^2 + b_{111}X_{}^3 + b_{1111}X_{}^4 + b_{2}X_{2} +\\ldots+ b_{k}X_{k} + e\n\\tag{7.24}\\]\n\n\nPour construire une régression polynomiale dans R, il est possible d’utiliser deux fonctions de R :\n\n\nI(VI^2) avec VI qui est la variable indépendante sur laquelle est appliquée la mise au carré.\n\npoly(VI,2) qui utilise une forme polynomiale orthogonale pour éviter les problèmes de corrélation entre les deux termes, c’est-à-dire entre VI et VI2.\n\nCes deux méthodes produisent les mêmes résultats pour les autres variables dépendantes et pour la qualité d’ajustement du modèle (R2, F, etc.). Nous privilégions la seconde fonction pour éviter de détecter à tort des problèmes de multicolinéarité excessive.\nAppliquons cette démarche à la variable AgeMedian (âge médian des bâtiments) afin de vérifier si elle partage ou non une relation curvilinéaire avec la couverture végétale de l’îlot. À la lecture des résultats pour les deux modèles, les constats suivants peuvent être avancés :\n\nLe R2 ajusté passe de 0,4179 à 0,4378 du modèle 1 au modèle 2, ce qui signale un gain de variance expliquée.\nLe F incrémentiel entre les deux modèles s’élève à 362,64 et est significatif (p &lt; 0,001). Nous pouvons donc en conclure que le second modèle est plus performant que le premier, ce qui signale que la forme curvilinéaire pour AgeMedian (modèle 2) est plus efficace que la forme linéaire (modèle 1).\nDans le premier modèle, le coefficient de régression pour AgeMedian n’est pas significatif. L’âge médian des bâtiments n’est donc pas associé linéairement avec la variable dépendante.\nDans le second modèle, la valeur du coefficient de poly(AgeMedian, 2)1 est positive et celle de poly(AgeMedian, 2)2 est négative et significative. Cela indique qu’il existe une relation linéaire en forme de U inversé. Si le premier coefficient avait été négatif et le second positif, nous aurions alors conclu que la forme curvilinéaire prend la forme d’un U.\n\n\n# régression linéaire\nmodele1 &lt;- lm(VegPct ~ HABHA+AgeMedian+Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal)\n# régression polynomiale\nmodele2 &lt;- lm(VegPct ~ HABHA+poly(AgeMedian,2)+Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal)\n# affichage des résultats du modèle 1\nsummary(modele1)\n\n\nCall:\nlm(formula = VegPct ~ HABHA + AgeMedian + Pct_014 + Pct_65P + \n    Pct_MV + Pct_FR, data = DataFinal)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-48.876  -9.757  -0.232   9.499 103.830 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 26.355774   0.882235  29.874   &lt;2e-16 ***\nHABHA       -0.070401   0.002202 -31.975   &lt;2e-16 ***\nAgeMedian    0.010790   0.006369   1.694   0.0902 .  \nPct_014      1.084478   0.032179  33.702   &lt;2e-16 ***\nPct_65P      0.400531   0.018835  21.265   &lt;2e-16 ***\nPct_MV      -0.031112   0.010406  -2.990   0.0028 ** \nPct_FR      -0.348256   0.011640 -29.918   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 14.16 on 10203 degrees of freedom\nMultiple R-squared:  0.4182,    Adjusted R-squared:  0.4179 \nF-statistic:  1223 on 6 and 10203 DF,  p-value: &lt; 2.2e-16\n\n# affichage des résultats du modèle 1\nsummary(modele2)\n\n\nCall:\nlm(formula = VegPct ~ HABHA + poly(AgeMedian, 2) + Pct_014 + \n    Pct_65P + Pct_MV + Pct_FR, data = DataFinal)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-49.659  -9.361  -0.159   9.034 105.160 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          2.968e+01  7.535e-01  39.383  &lt; 2e-16 ***\nHABHA               -7.107e-02  2.164e-03 -32.839  &lt; 2e-16 ***\npoly(AgeMedian, 2)1  1.134e+01  1.598e+01   0.710  0.47788    \npoly(AgeMedian, 2)2 -2.721e+02  1.429e+01 -19.043  &lt; 2e-16 ***\nPct_014              9.969e-01  3.196e-02  31.198  &lt; 2e-16 ***\nPct_65P              3.219e-01  1.896e-02  16.972  &lt; 2e-16 ***\nPct_MV              -2.888e-02  1.023e-02  -2.823  0.00476 ** \nPct_FR              -3.562e-01  1.145e-02 -31.116  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 13.92 on 10202 degrees of freedom\nMultiple R-squared:  0.4382,    Adjusted R-squared:  0.4378 \nF-statistic:  1137 on 7 and 10202 DF,  p-value: &lt; 2.2e-16\n\n# test de Fisher pour comparer les modèles\nanova(modele1, modele2)\n\nAnalysis of Variance Table\n\nModel 1: VegPct ~ HABHA + AgeMedian + Pct_014 + Pct_65P + Pct_MV + Pct_FR\nModel 2: VegPct ~ HABHA + poly(AgeMedian, 2) + Pct_014 + Pct_65P + Pct_MV + \n    Pct_FR\n  Res.Df     RSS Df Sum of Sq      F    Pr(&gt;F)    \n1  10203 2046427                                  \n2  10202 1976182  1     70245 362.64 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nConstruction d’un graphique des effets marginaux\nPour visualiser la relation linéaire et curvilinéaire, nous vous proposons de réaliser un graphique des effets marginaux à partir de la syntaxe ci-dessous.\nLes graphiques des effets marginaux permettent de visualiser l’impact d’une variable indépendante sur la variable dépendante d’une régression. Nous nous basons pour cela sur les prédictions effectuées par le modèle. Admettons que nous nous intéressons à l’effet de la variable X1 sur la variable Y. Il est possible de créer de nouvelles données fictives pour lesquelles l’ensemble des autres variables X sont fixées à leur moyenne respective, et seule X1 est autorisée à varier. En utilisant l’équation de régression du modèle sur ces données fictives, nous pouvons observer l’évolution de la valeur prédite de Y quand X1 augmente ou diminue, et ce, toutes choses étant égales par ailleurs (puisque toutes les autres variables ont une valeur fixe). Cette approche est particulièrement intéressante pour décrire des effets non linéaires obtenus avec des polynomiales, mais aussi des interactions comme nous le verrons plus tard. Elle est également utilisée dans les modèles linéaires généralisés (GLM) et additifs (GAM) (chapitres 8 et 11). Notez qu’il est aussi important de représenter, sur ce type de graphique, l’incertitude de la prédiction. Pour cela, il est possible de construire des intervalles de confiance à 95 % autour de la prédiction en utilisant l’erreur standard de la prédiction (renvoyée par la fonction predict).\n\nlibrary(ggplot2)\n# Statistique sur la variable AgeMedian qui varie de 0 à 226 ans\nsummary(DataFinal$AgeMedian)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00   37.25   49.00   52.11   61.00  226.00 \n\n# Création d'un DataFrame temporaire\n# remarquez que les autres variables indépendantes sont constantes :\n# nous leur avons attribué leur moyenne correspondante\ndf &lt;- data.frame(\n  HABHA = mean(DataFinal$HABHA),\n  AgeMedian= seq(0,200, by = 2),\n  AgeMedian2 = seq(0,200, by = 2)**2,\n  Pct_014= mean(DataFinal$Pct_014),\n  Pct_65P= mean(DataFinal$Pct_65P),\n  Pct_MV= mean(DataFinal$Pct_MV),\n  Pct_FR= mean(DataFinal$Pct_FR)\n)\n\n# Calcul de la valeur de t pour un intervalle à 95 %\nn &lt;- length(modele1$fitted.values) \nk &lt;- length(modele1$coefficients)-1\nt95 &lt;- qt(p=1 - (0.05/2),  df=n-k-1)\n\n# Calcul des valeurs prédites pour le 1er modèle\n# avec l'intervalle de confiance à 95 %\npredsM1 &lt;- predict(modele1, se = TRUE, newdata = df)\ndf$predM1 &lt;- predsM1$fit\ndf$lowerM1 &lt;- predsM1$fit - t95*predsM1$se.fit\ndf$upperM1 &lt;- predsM1$fit + t95*predsM1$se.fit\n\n# Calcul des valeurs prédites pour le 2e modèle\n# avec l'intervalle de confiance à 95 %\npredsM2 &lt;- predict(modele2, se = TRUE, newdata = df)\ndf$predM2 &lt;- predsM2$fit\ndf$lowerM2 &lt;- predsM2$fit - t95*predsM2$se.fit\ndf$upperM2 &lt;- predsM2$fit + t95*predsM2$se.fit\n\n# Graphique\nggplot(data = df) + \n  geom_ribbon(aes(x = AgeMedian, ymin = lowerM1, ymax = upperM1), \n             fill = rgb(0.1,0.1,0.1,0.4)) + \n  geom_path(aes(x = AgeMedian, y = predM1), color = \"blue\", size = 1)+\n  \n  geom_ribbon(aes(x = AgeMedian, ymin = lowerM2, ymax = upperM2), \n              fill = rgb(0.1,0.1,0.1,0.4)) + \n  geom_path(aes(x = AgeMedian, y = predM2), color = \"red\", size = 1)+\n  \n  labs(title = \"Effet marginal de l'âge médian des bâtiments sur la\",\n       subtitle = \"couverture végétale des îlots de l'île de Montréal\",\n       caption = \"bleu : relation linéaire; rouge : curvilinéaire\",\n       x = \"Âge médian des bâtiments\",\n       y = \"Couverture végétale (%)\")\n\n\n\nFigure 7.2: Relations linéaire et curvilinéaire\n\n\n\nLa figure 7.2 démontre bien que la relation linéaire n’est pas significative : la pente est extrêmement faible, ce qui signale que l’effet de l’âge médian est presque nul (B = 0,0108, p = 0,0902). En revanche, la relation curvilinéaire est plus intéressante : la couverture végétale croît quand l’âge médian des bâtiments dans l’îlot augmente de 0 à 60 ans environ, puis elle décroît.\n\n7.5.1.2 Variable indépendante sous forme logarithmique\nUne autre manière d’explorer une relation non linéaire est d’intégrer la variable sous forme logarithmique (Hanck et al. 2019, 212‑218). L’interprétation du coefficient de régression est alors plus complexe : 1 % d’augmentation de la variable \\(X_k\\) entraîne un changement de \\(\\mbox{0,01} \\times \\beta_k\\) de la variable dépendante. Autrement dit, il n’est plus exprimé dans les unités de mesure originales des deux variables.\nAu tableau 7.4, le coefficient de -6,855 pour la variable logHABHA s’interprète alors comme suit : un changement de 1 % de la variable densité de population entraîne une diminution de \\(\\mbox{0,01} \\times -\\mbox{6,855 =} -\\mbox{0,07}\\) de la couverture végétale dans l’île, toutes choses étant égales par ailleurs.\n\n\n\n\nTableau 7.4: Modèle avec une variable indépendante sous forme logarithmique\n\n\n\n\n\n\n\n\n\n\n\nVariable\nCoef.\nErreur type\nValeur de T\nP\ncoef. 2,5 %\ncoef. 97,5 %\n\n\n\n\nConstante\n52,831\n1,001\n52,780\n0,000\n50,868\n54,793\n***\n\n\nlogHABHA\n-6,855\n0,168\n-40,730\n0,000\n-7,185\n-6,525\n***\n\n\nAgeMedian ordre 1\n11,985\n15,586\n0,770\n0,442\n-18,568\n42,537\n\n\n\nAgeMedian ordre 2\n-286,144\n13,942\n-20,520\n0,000\n-313,473\n-258,816\n***\n\n\nPct_014\n0,941\n0,031\n30,090\n0,000\n0,879\n1,002\n***\n\n\nPct_65P\n0,306\n0,019\n16,550\n0,000\n0,270\n0,343\n***\n\n\nPct_MV\n-0,036\n0,010\n-3,650\n0,000\n-0,056\n-0,017\n***\n\n\nPct_FR\n-0,344\n0,011\n-31,210\n0,000\n-0,366\n-0,323\n***\n\n\n\n\n\n\nPuisque l’interprétation du coefficient de régression de \\(log(\\beta_k)\\) est plus complexe, il convient de s’assurer que son apport au modèle est justifié, et ce, de deux façons :\n\nComparez les mesures d’ajustement des deux modèles (surtout les R2 ajustés). Si le R2 ajusté du modèle avec \\(log(\\beta_k)\\) est plus élevé que celui avec \\(\\beta_k\\), alors la transformation logarithmique fait de votre variable indépendante un meilleur prédicteur, toutes choses étant égales par ailleurs.\nConstruisez les graphiques des effets marginaux de votre variable afin de vérifier si la relation qu’elle partage avec votre VD est plutôt logarithmique que linéaire (figure 7.3). Notez que cette approche graphique peut aussi ne donner aucune indication lorsque vos données sont très dispersées ou que la relation est faible entre votre variable dépendante et indépendante.\n\n\nlibrary(ggpubr)\nlibrary(ggplot2)\nlibrary(ggeffects)\n\n# Modèles\nmodele1a &lt;- lm(VegPct ~ HABHA+poly(AgeMedian,2)+\n              Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal)\nmodele1b &lt;- lm(VegPct ~ log(HABHA)+poly(AgeMedian,2)+\n              Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal)\n\n# Valeurs prédites\nfit1a &lt;- ggpredict(modele1a, terms = \"HABHA\")\nfit1b &lt;- ggpredict(modele1b, terms = \"HABHA\")\n# Graphiques\nG1a &lt;- ggplot(fit1a, aes(x, predicted)) +\n      geom_point(data = DataFinal, mapping = aes(x = HABHA, y = VegPct),\n                 size = 0.2, color = rgb(0.1,0.1,0.1,0.4)) + \n      geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .3, fill = \"red\")+\n      geom_line(color = \"red\") +\n      labs(title = \"Variable non transformée\",\n           y = \"VD: valeur prédite\",\n           x = \"Habitants km2\") + \n  ylim(0,100) + xlim(0,600)\n\nG1b &lt;- ggplot(fit1b, aes(x, predicted)) +\n      geom_point(data = DataFinal, mapping = aes(x = HABHA, y = VegPct),\n                 size = 0.2, color = rgb(0.1,0.1,0.1,0.4)) + \n      geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .3, fill = \"red\")+\n      geom_line(color = \"red\") +\n      labs(title = \"Variable transformée (log)\",\n           y = \"VD: valeur prédite\",\n           x = \"Habitants km2\")\n\nG1aG1b &lt;- ggarrange(G1a, G1b, nrow = 1)\nG1aG1b\n\n\n\nFigure 7.3: Effet marginal de la densité de population\n\n\n\n\n7.5.2 Variable indépendante qualitative dichotomique\nIl est très fréquent d’introduire une variable qualitative dichotomique comme variable explicative ou de contrôle dans un modèle. À titre de rappel, une variable dichotomique comprend deux modalités (section 2.1.2).\nDans le modèle ci-dessous, nous voulons vérifier si un îlot situé sur le territoire de la ville de Montréal a proportionnellement moins de végétation qu’un îlot situé dans une autre municipalité de l’île de Montréal, toutes choses étant égales par ailleurs. Pour ce faire, nous créons une variable binaire dénommée VilleMtl qui prend la valeur de 1 pour les îlots de la ville de Montréal et 0 pour ceux d’une autre municipalité.\nNous obtenons ainsi un coefficient de régression pour VilleMtl de -7,699 (tableau 7.5). Cela signifie que si toutes les autres variables indépendantes du modèle étaient constantes, alors un îlot de la ville de Montréal aurait en moyenne une valeur de -7,7 % de moins de végétation comparativement à un îlot situé dans une autre municipalité.\n\n# Création d'une variable muette pour Montréal (0 ou 1)\nDataFinal$VilleMtl &lt;- ifelse(DataFinal$SDRNOM == \"Montréal\", 1, 0)\n# Modèle avec la variable dichtonomique\nmodele3 &lt;- lm(VegPct ~ VilleMtl+log(HABHA)+poly(AgeMedian,2)+\n              Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal)\n\n\n\n\n\nTableau 7.5: Modèle avec une variable dichotomique\n\n\n\n\n\n\n\n\n\n\n\nVariable\nCoef.\nErreur type\nValeur de T\nP\ncoef. 2,5 %\ncoef. 97,5 %\n\n\n\n\nConstante\n57,676\n1,009\n57,140\n0,000\n55,697\n59,654\n***\n\n\nVilleMtl\n-7,699\n0,377\n-20,430\n0,000\n-8,438\n-6,960\n***\n\n\nlog(HABHA)\n-6,174\n0,168\n-36,680\n0,000\n-6,504\n-5,844\n***\n\n\nAgeMedian ordre 1\n-14,871\n15,334\n-0,970\n0,332\n-44,929\n15,186\n\n\n\nAgeMedian ordre 2\n-280,251\n13,668\n-20,500\n0,000\n-307,044\n-253,459\n***\n\n\nPct_014\n0,794\n0,031\n25,230\n0,000\n0,732\n0,856\n***\n\n\nPct_65P\n0,270\n0,018\n14,810\n0,000\n0,234\n0,306\n***\n\n\nPct_MV\n-0,028\n0,010\n-2,890\n0,004\n-0,047\n-0,009\n**\n\n\nPct_FR\n-0,294\n0,011\n-26,550\n0,000\n-0,316\n-0,273\n***\n\n\n\n\n\n\n\n\n\n\n\nBien interpréter un coefficient d’une variable dichotomique\n\n\nNous avons vu que le coefficient de régression (\\(\\beta_k\\)) indique le changement de la variable dépendante (Y), lorsque la variable indépendante augmente d’une unité, toutes choses étant égales par ailleurs.\nPour une variable dichotomique, le coefficient indique le changement de Y quand les observations appartiennent à la modalité qui a la valeur de 1 (ici la ville de Montréal), comparativement à celle qui a la valeur de 0 (autres municipalités de l’île de Montréal), toutes choses étant égales par ailleurs.\nLa modalité qui a la valeur de 0 est alors appelée modalité ou catégorie de référence.\nAutrement dit, si la variable avait été codée : 0 pour la ville de Montréal et 1 pour les autres municipalités, alors le coefficient aurait été de 7,699.\nPour éviter d’oublier quelle est la modalité de référence (valeur de 0), nous verrons plus tard (dans la section mise en œuvre des modèles de régression dans R (section 7.7) qu’il peut être préférable de définir un facteur avec la fonction as.factor et d’indiquer la catégorie de référence avec la fonction relevel(x, ref).\n\n\nComme pour une variable indépendante introduite avec une fonction polynomiale, il peut être très intéressant d’illustrer l’effet marginal de la variable dichotomique avec un graphique qui montre l’écart entre les moyennes des deux modalités, une fois contrôlées les autres variables indépendantes (figure 7.4). Notez que dans ce graphique, les barres d’erreurs situées au sommet des rectangles représentent les intervalles à 95 % des prédictions du modèle.\n\n\n\n\nFigure 7.4: Effet marginal d’une variable dichotomique\n\n\n\n\n7.5.3 Variable indépendante qualitative polytomique\nIl est possible d’introduire une variable qualitative polytomique comme variable explicative ou de contrôle dans un modèle. À titre de rappel, une variable polytomique comprend plus de deux modalités, qu’elle soit nominale ou ordinale (section 2.1.2).\nEn guise d’exemple, une variable qualitative pourrait être : différents groupes de population (groupes d’âge, minorités visibles, catégories socioprofessionnelles, etc.), différents territoires ou régions (ville centrale, première couronne, deuxième couronne, etc.), une variable continue transformée en quatre ou cinq catégories ordinales selon les quartiles ou les quintiles.\n\n7.5.3.1 Comment construire un modèle de régression avec une variable explicative qualitative polytomique?\nPrenons l’exemple d’un modèle de régression comprenant deux variables indépendantes : l’une continue (X1), l’autre qualitative (X2) avec quatre modalités (A, B, C et D). L’introduction de la variable qualitative dans le modèle revient à :\n\nTransformer chaque modalité en variable muette (binaire). Nous avons ainsi quatre nouvelles variables binaires : X2A, X2B, X2C et X2D. Par exemple, pour X2A, les observations de la modalité A se verront affecter la valeur de 1 versus 0 pour les autres observations. La même démarche s’applique à X2B, X2C et X2D (voir tableau 7.6).\nToutes les modalités transformées en variables muettes sont introduites dans le modèle comme variables indépendantes sauf celle servant de catégorie de référence. Pourquoi sauf une? Si nous mettions toutes les modalités en variable muette, alors chaque observation serait repérée par une valeur de 1, « il y aurait alors une parfaite multicolinéarité et aucune solution unique pour les coefficients de régression ne pourrait être trouvée » (Bressoux 2010, 128).\nPar exemple, si nous choisissons la modalité A comme catégorie de référence, l’équation de régression s’écrit alors :\n\n\\[\nY = b_{0} + b_{1}X_{1} + b_{2B}X_{2B} + b_{2C}X_{2C} + b_{2D}X_{2D}+ e\n\\tag{7.25}\\]\n\nVous aurez compris que choisir la modalité D comme catégorie de référence revient à écrire l’équation suivante :\n\n\\[\nY = b_{0} + b_{1}X_{1} + b_{2A}X_{2A} + b_{2B}X_{2B} + b_{2C}X_{2C} + e\n\\tag{7.26}\\]\n\n\n\n\nTableau 7.6: Transformation d’une variable qualitative en variables muettes pour chaque modalité\n\nobs\nY\nX1\nX2\nX2A\nX2B\nX2C\nX2D\n\n\n\n1\n50,09\n24,51\nA\n1\n0\n0\n0\n\n\n2\n59,54\n16,67\nA\n1\n0\n0\n0\n\n\n3\n44,26\n17,64\nA\n1\n0\n0\n0\n\n\n4\n58,92\n20,19\nB\n0\n1\n0\n0\n\n\n5\n41,23\n17,16\nB\n0\n1\n0\n0\n\n\n6\n23,25\n19,65\nB\n0\n1\n0\n0\n\n\n7\n41,04\n25,97\nC\n0\n0\n1\n0\n\n\n8\n52,68\n15,92\nC\n0\n0\n1\n0\n\n\n9\n56,24\n24,84\nD\n0\n0\n0\n1\n\n\n10\n33,43\n18,37\nD\n0\n0\n0\n1\n\n\n\n\n\n\n\n7.5.3.2 Comment interpréter les coefficients des modalités d’une variable explicative qualitative polytomique\nLes coefficients des différentes modalités s’interprètent en fonction de la catégorie de référence. Dans l’exemple ci-dessous, nous avons inclus la ville de Montréal comme catégorie de référence (tableau 7.7). Toutes choses étant égales par ailleurs, nous pouvons alors constater que  :\n\nen moyenne, les îlots résidentiels de Senneville et de Baie-D’Urfé ont respectivement 23,235 % et 21,400 % plus de végétation que ceux de la ville de Montréal.\nla seule municipalité comprenant en moyenne moins de végétation dans ses îlots résidentiels est Montréal-Est (-13,334 %).\nnous remarquons aussi que les îlots des municipalités de Sainte-Anne-de-Bellevue, de Montréal-Ouest et de Côte-Saint-Luc ne présentent pas significativement moins ou plus de végétation que ceux de la ville de Montréal (leurs valeurs de p sont supérieures à 0,05).\n\nPar conséquent, les valeurs de t et de p pour une modalité permettent de vérifier si elle est ou non significativement différente de la catégorie de référence.\n\n\n\n\nTableau 7.7: Modèle avec une variable polytomique (ville de Montréal en catégorie de référence)\n\n\n\n\n\n\n\n\n\nVariable\nCoef.\nErreur type\nValeur de T\nP\n\n\n\n\nConstante\n48,193\n0,992\n48,580\n0,000\n***\n\n\nlog(HABHA)\n-5,836\n0,168\n-34,840\n0,000\n***\n\n\nAgeMedian ordre 1\n-11,807\n15,648\n-0,750\n0,451\n\n\n\nAgeMedian ordre 2\n-266,469\n13,613\n-19,570\n0,000\n***\n\n\nPct_014\n0,794\n0,032\n25,190\n0,000\n***\n\n\nPct_65P\n0,277\n0,018\n15,130\n0,000\n***\n\n\nPct_MV\n-0,036\n0,010\n-3,740\n0,000\n***\n\n\nPct_FR\n-0,279\n0,011\n-25,340\n0,000\n***\n\n\nMunicipalité\n\n\n\n\n\n\n\nref : Montréal\n–\n–\n–\n–\n–\n\n\nBaie-D’Urfé\n21,400\n1,635\n13,090\n0,000\n***\n\n\nBeaconsfield\n14,112\n0,893\n15,810\n0,000\n***\n\n\nCôte-Saint-Luc\n0,172\n1,035\n0,170\n0,868\n\n\n\nDollard-Des Ormeaux\n7,960\n0,748\n10,640\n0,000\n***\n\n\nDorval\n11,157\n0,971\n11,490\n0,000\n***\n\n\nHampstead\n3,080\n1,599\n1,930\n0,054\n.\n\n\nKirkland\n6,937\n1,014\n6,840\n0,000\n***\n\n\nMont-Royal\n12,699\n0,894\n14,210\n0,000\n***\n\n\nMontréal-Est\n-13,334\n1,920\n-6,940\n0,000\n***\n\n\nMontréal-Ouest\n3,306\n1,819\n1,820\n0,069\n.\n\n\nPointe-Claire\n9,896\n0,866\n11,430\n0,000\n***\n\n\nSainte-Anne-de-Bellevue\n0,342\n1,904\n0,180\n0,858\n\n\n\nSenneville\n23,235\n3,793\n6,130\n0,000\n***\n\n\nWestmount\n2,255\n1,088\n2,070\n0,038\n*\n\n\n\n\n\n\nUtilisons maintenant comme référence la municipalité qui avait le coefficient le plus fort dans le modèle précédent, soit Senneville (tableau 7.8). Bien entendu, les coefficients des variables continues et de la constante ne changent pas. Par contre, les coefficients de toutes les municipalités sont négatifs puisque la municipalité de Senneville est celle qui a proportionnellement le plus de végétation dans ses îlots, toutes choses étant égales par ailleurs.\n\n\n\n\nTableau 7.8: Modèle avec une variable polytomique (Senneville en catégorie de référence\n\n\n\n\n\n\n\n\n\nVariable\nCoef.\nErreur type\nValeur de T\nP\n\n\n\n\nConstante\n71,429\n3,846\n18,570\n0,000\n***\n\n\nlog(HABHA)\n-5,836\n0,168\n-34,840\n0,000\n***\n\n\nAgeMedian ordre 1\n-11,807\n15,648\n-0,750\n0,451\n\n\n\nAgeMedian ordre 2\n-266,469\n13,613\n-19,570\n0,000\n***\n\n\nPct_014\n0,794\n0,032\n25,190\n0,000\n***\n\n\nPct_65P\n0,277\n0,018\n15,130\n0,000\n***\n\n\nPct_MV\n-0,036\n0,010\n-3,740\n0,000\n***\n\n\nPct_FR\n-0,279\n0,011\n-25,340\n0,000\n***\n\n\nMunicipalité\n\n\n\n\n\n\n\nref : Senneville\n–\n–\n–\n–\n–\n\n\nBaie-D’Urfé\n-1,835\n4,093\n-0,450\n0,654\n\n\n\nBeaconsfield\n-9,123\n3,866\n-2,360\n0,018\n*\n\n\nCôte-Saint-Luc\n-23,064\n3,918\n-5,890\n0,000\n***\n\n\nDollard-Des Ormeaux\n-15,275\n3,852\n-3,970\n0,000\n***\n\n\nDorval\n-12,078\n3,891\n-3,100\n0,002\n**\n\n\nHampstead\n-20,156\n4,094\n-4,920\n0,000\n***\n\n\nKirkland\n-16,298\n3,911\n-4,170\n0,000\n***\n\n\nMont-Royal\n-10,537\n3,875\n-2,720\n0,007\n**\n\n\nMontréal\n-23,235\n3,793\n-6,130\n0,000\n***\n\n\nMontréal-Est\n-36,570\n4,231\n-8,640\n0,000\n***\n\n\nMontréal-Ouest\n-19,930\n4,187\n-4,760\n0,000\n***\n\n\nPointe-Claire\n-13,339\n3,865\n-3,450\n0,001\n***\n\n\nSainte-Anne-de-Bellevue\n-22,893\n4,225\n-5,420\n0,000\n***\n\n\nWestmount\n-20,980\n3,927\n-5,340\n0,000\n***\n\n\n\n\n\n\nÀ l’inverse, si nous utilisons Montréal-Est comme modalité de référence, soit la municipalité avec le coefficient le plus faible dans le premier modèle, tous les coefficients deviendront positifs (tableau 7.9).\n\n\n\n\nTableau 7.9: Modèle avec une variable polytomique (Montréal-Est en catégorie de référence)\n\n\n\n\n\n\n\n\n\nVariable\nCoef.\nErreur type\nValeur de T\nP\n\n\n\n\nConstante\n34,859\n2,109\n16,530\n0,000\n***\n\n\nlog(HABHA)\n-5,836\n0,168\n-34,840\n0,000\n***\n\n\nAgeMedian ordre 1\n-11,807\n15,648\n-0,750\n0,451\n\n\n\nAgeMedian ordre 2\n-266,469\n13,613\n-19,570\n0,000\n***\n\n\nPct_014\n0,794\n0,032\n25,190\n0,000\n***\n\n\nPct_65P\n0,277\n0,018\n15,130\n0,000\n***\n\n\nPct_MV\n-0,036\n0,010\n-3,740\n0,000\n***\n\n\nPct_FR\n-0,279\n0,011\n-25,340\n0,000\n***\n\n\nMunicipalité\n\n\n\n\n\n\n\nref : Montréal-Est\n–\n–\n–\n–\n–\n\n\nBaie-D’Urfé\n34,735\n2,495\n13,920\n0,000\n***\n\n\nBeaconsfield\n27,446\n2,091\n13,130\n0,000\n***\n\n\nCôte-Saint-Luc\n13,506\n2,167\n6,230\n0,000\n***\n\n\nDollard-Des Ormeaux\n21,294\n2,053\n10,370\n0,000\n***\n\n\nDorval\n24,491\n2,134\n11,480\n0,000\n***\n\n\nHampstead\n16,414\n2,478\n6,620\n0,000\n***\n\n\nKirkland\n20,272\n2,159\n9,390\n0,000\n***\n\n\nMont-Royal\n26,033\n2,101\n12,390\n0,000\n***\n\n\nMontréal\n13,334\n1,920\n6,940\n0,000\n***\n\n\nMontréal-Ouest\n16,640\n2,628\n6,330\n0,000\n***\n\n\nPointe-Claire\n23,230\n2,087\n11,130\n0,000\n***\n\n\nSainte-Anne-de-Bellevue\n13,676\n2,687\n5,090\n0,000\n***\n\n\nSenneville\n36,570\n4,231\n8,640\n0,000\n***\n\n\nWestmount\n15,590\n2,196\n7,100\n0,000\n***\n\n\n\n\n\n\n\n\n\n\n\nComment choisir la catégorie de référence?\n\n\nPlusieurs options sont possibles. Vous pouvez retenir :\n\nla modalité comprenant le plus d’observations;\nla modalité avec la plus forte valeur pour la variable dépendante;\nla modalité avec la plus faible valeur pour la variable dépendante;\nla modalité qui fait le plus de sens avec votre cadre théorique. Prenons l’exemple d’une variable qualitative comprenant plusieurs groupes d’âge (15-29 ans, 30-39 ans, 40-49 ans, 50-54 ans, 65 ans et plus). Si votre étude porte sur les jeunes et que vous souhaitez comparer leur situation comparativement aux autres groupes d’âge, toutes choses étant égales par ailleurs, sélectionnez bien évidemment la modalité des 15 à 29 ans comme catégorie de référence.\n\nMais surtout, évitez de choisir une catégorie comprenant très peu d’observations.\n\n\n\n7.5.3.3 Effet marginal d’une variable explicative qualitative polytomique\nComme pour une variable dichotomique, il est possible d’illustrer l’effet marginal de la variable qualitative dichotomique avec un graphique. Quelle que soit la catégorie de référence choisie, le graphique est le même. La figure 7.5 illustre ainsi la valeur moyenne, avec son intervalle de confiance à 95 %, de la végétation dans les îlots résidentiels de chacune des municipalités de la région de Montréal, ceteris paribus.\n\n\n\n\nFigure 7.5: Effet marginal d’une variable polytomique\n\n\n\n\n7.5.4 Variables d’interaction\n\n7.5.4.1 Variable d’interaction entre deux variables continues\nUne interaction entre deux variables indépendantes continues consiste à simplement les multiplier (\\(X_1 \\times X_2\\)). Le modèle s’écrit alors :\n\\[\nY = \\beta_{0} + \\beta_{1}X_{1} + \\beta_{2}X_{2} + \\beta_{3}(X_{1}\\times X_{2}) +\\ldots+ \\beta_{k}X_{k} + e\n\\tag{7.27}\\]\nUn nouveau coefficient (\\(\\beta_{3}\\)) s’ajoute pour l’interaction (la multiplication) entre les deux variables continues. Pourquoi ajouter une interaction entre deux variables? L’objectif est d’évaluer l’effet d’une augmentation de \\(\\beta_{1}\\) en fonction d’un niveau donné de \\(\\beta_{2}\\) et inversement. Cela permet ainsi de répondre à la question suivante : l’effet de la variable \\(\\beta_{1}\\) est-il influencé par la variable \\(\\beta_{2}\\) et inversement?\nPrenons un exemple concret pour illustrer le tout. Premièrement, nous ajoutons DistCBDkm comme VI, soit la distance au centre-ville exprimée en kilomètres. Notez que pour ne pas surspécifier le modèle, les variables dichotomique VilleMtl ou polytomique Municipalité ont été préalablement ôtées. Le coefficient (B = 0,659, p &lt; 0,001) signale que plus nous nous éloignons du centre-ville, plus la couverture végétale des îlots augmente significativement. En guise d’exemple, toutes choses étant égales par ailleurs, un îlot situé à dix kilomètres du centre-ville aura en moyenne 6,59 % plus de végétation (tableau 7.10).\n\n\n\n\nTableau 7.10: Modèle avec la distance au centre-ville (km)\n\nVariable\nCoef.\nErreur type\nValeur de T\nP\n\n\n\n\nConstante\n41,061\n1,085\n37,830\n0,000\n***\n\n\nlog(HABHA)\n-5,555\n0,172\n-32,300\n0,000\n***\n\n\nAgeMedian ordre 1\n176,921\n16,582\n10,670\n0,000\n***\n\n\nAgeMedian ordre 2\n-298,735\n13,560\n-22,030\n0,000\n***\n\n\nPct_014\n0,763\n0,031\n24,440\n0,000\n***\n\n\nPct_65P\n0,321\n0,018\n17,860\n0,000\n***\n\n\nPct_MV\n-0,018\n0,010\n-1,880\n0,060\n.\n\n\nPct_FR\n-0,288\n0,011\n-26,260\n0,000\n***\n\n\nDistCBDkm\n0,659\n0,027\n24,460\n0,000\n***\n\n\n\n\n\n\nDans ce modèle (tableau 7.10), les pourcentages d’enfants de moins de 15 ans et de 65 ans et plus (Pct_014 et Pct_65P) sont associés positivement à la variable dépendante tandis que le pourcentage de personnes à faible revenu (Pct_FR) est associé négativement.\nQue se passe-t-il si nous introduisons une variable d’interaction entre DistCBDkm et Pct_FR (tableau 7.11)? L’effet du pourcentage de personnes à faible revenu (%) est significatif et négatif lorsqu’il est mis en interaction avec la distance au centre-ville. Cela indique que plus l’îlot est éloigné du centre-ville, plus Pct_FR a un effet négatif sur la couverture végétale (B = −0,011, p &lt; 0,001).\n\n\n\n\nTableau 7.11: Modèle avec une variable d’interaction entre deux VI continues\n\nVariable\nCoef.\nErreur type\nValeur de T\nP\n\n\n\n\nConstante\n38,382\n1,137\n33,760\n0,000\n***\n\n\nlog(HABHA)\n-5,505\n0,172\n-32,080\n0,000\n***\n\n\nAgeMedian ordre 1\n160,523\n16,672\n9,630\n0,000\n***\n\n\nAgeMedian ordre 2\n-310,666\n13,610\n-22,830\n0,000\n***\n\n\nPct_014\n0,786\n0,031\n25,130\n0,000\n***\n\n\nPct_65P\n0,345\n0,018\n18,960\n0,000\n***\n\n\nPct_MV\n-0,018\n0,010\n-1,820\n0,069\n.\n\n\nPct_FR\n-0,191\n0,017\n-11,500\n0,000\n***\n\n\nDistCBDkm\n0,821\n0,034\n24,060\n0,000\n***\n\n\nDistCBDkmX_Pct_FR\n-0,011\n0,001\n-7,700\n0,000\n***\n\n\n\n\n\n\nÀ nouveau, il est possible de représenter l’effet de cette interaction à l’aide d’un graphique des effets marginaux. Notez cependant que nous devons représenter l’effet simultané de deux variables indépendantes sur notre variable dépendante, ce qu’il est possible de faire avec une carte de chaleur. La figure 7.6 représente donc l’effet moyen de l’interaction sur la prédiction dans le premier panneau, ainsi que l’intervalle de confiance à 95 % de la prédiction dans les deuxième et troisième panneaux.\nNous constatons ainsi que le modèle prédit des valeurs de végétation les plus faibles lorsque le pourcentage de personnes à faible revenu est élevé et que la distance au centre-ville est élevée (en haut à droite à la figure 7.6). En revanche, les valeurs les plus élevées de végétation sont atteintes lorsque la distance au centre-ville est élevée et que le pourcentage de personnes à faible revenu est faible (en bas à droite). Il semble donc que l’éloignement au centre-ville soit associé avec une augmentation de la densité végétale, mais que cette augmentation puisse être mitigée par l’augmentation parallèle du pourcentage de personnes à faible revenu.\n\n\n\n\nFigure 7.6: Effet marginal de l’interaction entre deux variables continues\n\n\n\nNotez que dans la figure 7.6, la relation entre les deux variables indépendantes et la variable dépendante apparaît non linéaire du fait de l’interaction. À titre de comparaison, si nous utilisons les prédictions du modèle 5 (sans interaction), nous obtenons les prédictions présentées à la figure 7.7. Vous pouvez constater sur cette figure sans interaction que les deux effets des variables indépendantes sont linéaires puisque toutes les lignes sont parallèles.\n\n\n\n\nFigure 7.7: Effets marginaux de deux variables continues en cas d’absence d’interaction\n\n\n\n\n7.5.4.2 Variable d’interaction entre une variable continue et une variable dichotomique\nUne interaction entre une VI continue et une VI dichotomique consiste aussi à les multiplier (\\(X_1 \\times D_2\\)); le modèle s’écrit alors :\n\\[\nY = \\beta_{0} + \\beta_{1}X_{1} + \\beta_{2}D_{2} + \\beta_{3}(X_{1}\\times D_{2}) +\\ldots+ \\beta_{k}X_{k} + e\n\\tag{7.28}\\]\nPour interpréter le coefficient \\(B_3\\), il convient alors de bien connaître le nom de la modalité ayant la valeur de 1 (0 étant la modalité de référence). Dans le modèle présenté au tableau 7.12, nous avons multiplié la variable dichotomique ville de Montréal (VilleMtl) avec le pourcentage de personnes à faible revenu (Pct_FR). Les résultats de ce modèle démontrent que, toutes choses étant égales par ailleurs :\n\nÀ chaque augmentation d’une unité du pourcentage à faible revenu (Pct_FR), le pourcentage de la couverture végétale diminue significativement de −0,444.\nComparativement à un îlot situé dans une autre municipalité de l’île de Montréal, un îlot de la ville de Montréal a en moyenne −9,804 de couverture végétale.\nÀ chaque augmentation d’une unité de Pct_FR pour un îlot de la Ville Montréal, la couverture végétale augmente de 0,166 comparativement à une autre municipalité de l’île. En d’autres termes, le Pct_FR sur le territoire de la ville de Montréal est associé à une diminution de la couverture végétale moins forte que les autres municipalités, comme illustré à la figure 7.8) (pentes en rouge et en bleu).\n\n\n\n\n\nTableau 7.12: Modèle avec les variables d’interaction entre une VI continue et une VI dichotomique\n\nVariable\nCoef.\nErreur type\nValeur de T\nP\n\n\n\n\nConstante\n59,275\n1,053\n56,300\n0,000\n***\n\n\nlog(HABHA)\n-6,160\n0,168\n-36,640\n0,000\n***\n\n\nAgeMedian ordre 1\n-20,719\n15,354\n-1,350\n0,177\n\n\n\nAgeMedian ordre 2\n-278,141\n13,656\n-20,370\n0,000\n***\n\n\nPct_014\n0,789\n0,031\n25,100\n0,000\n***\n\n\nPct_65P\n0,278\n0,018\n15,200\n0,000\n***\n\n\nPct_MV\n-0,030\n0,010\n-3,030\n0,002\n**\n\n\nPct_FR\n-0,444\n0,030\n-14,550\n0,000\n***\n\n\nVilleMtl\n-9,804\n0,549\n-17,850\n0,000\n***\n\n\nVilleMtlX_Pct_FR\n0,166\n0,032\n5,260\n0,000\n***\n\n\n\n\n\n\nL’interaction entre une variable qualitative et une variable quantitative peut être représentée par un graphique des effets marginaux. La pente (coefficient) de la variable quantitative varie en fonction des deux catégories de la variable qualitative dichotomique (figure 7.8).\n\n\n\n\nFigure 7.8: Graphique de l’effet marginal de l’interaction entre une variable quantitative et qualitative\n\n\n\n\n7.5.4.3 Variable d’interaction entre deux variables dichotomiques\n\n\n\n\n\nVariable d’interaction entre deux variables dichotomiques\n\n\nNous avons vu qu’il est possible d’introduire une variable d’interaction entre deux variables continues ou entre une variable continue et une autre dichotomique. Sachez qu’il est aussi possible d’introduire une interaction entre deux variables dichotomiques. Sur le sujet, vous pouvez consulter la section 8.3 de l’excellent ouvrage de Hanck et al. (2019)."
  },
  {
    "objectID": "07-regressionlineaire.html#sec-076",
    "href": "07-regressionlineaire.html#sec-076",
    "title": "7  Régression linéaire multiple",
    "section": "\n7.6 Diagnostics de la régression",
    "text": "7.6 Diagnostics de la régression\nPour illustrer comment vérifier si le modèle respecte ou non les hypothèses de la régression, nous utilisons le modèle suivant :\nmodele3 &lt;- lm(VegPct ~ log(HABHA)+poly(AgeMedian,2)+Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal)\n\n7.6.1 Nombre d’observations\nTous les auteurs ne s’entendent pas sur le nombre d’observations minimal que devrait comprendre une régression linéaire multiple, tant s’en faut! Parallèlement, d’autres auteurs proposent aussi des méthodes de simulation pour estimer les coefficients de régression sur un jeu de données comprenant peu d’observations. Bien qu’aucune règle ne soit bien établie, la question du nombre d’observations mérite d’être posée puisqu’un modèle basé sur trop peu d’observations risque de produire des coefficients de régression peu fiables. Par faible fiabilité des coefficients, nous entendons que la suppression d’une ou de plusieurs observations pourrait drastiquement changer l’effet et/ou la significativité d’une ou de plusieurs variables explicatives.\nDans un ouvrage classique intitulé Using Multivariate Statistics, Barbara Tabachnick et Linda Fidell (2007, 123‑124) proposent deux règles de pouce (à la louche) :\n\n\\(n \\geq 50 + 8k\\) avec \\(n\\) et \\(k\\) étant respectivement les nombres d’observations et de variables indépendantes, pour tester le coefficient de corrélation multiple (R2).\n\\(n \\geq 104 + k\\) pour tester individuellement chaque variable indépendante.\n\nDans le modèle, nous avons 10 210 observations et variables indépendantes. Les deux conditions sont donc largement respectées.\n\n7.6.2 Normalité des résidus\nPour vérifier si les résidus sont normalement distribués, trois démarches largement décrites dans la section 2.5.4 peuvent être utilisées :\n\nle calcul des coefficients d’asymétrie et d’aplatissement;\nles tests de normalité, particulièrement celui de Jarque-Bera basé sur un test multiplicateur de Lagrange;\nles graphiques (histogramme avec courbe normale et diagramme quantile-quantile) (figure 7.9).\n\nLes deux premières démarches étant parfois très restrictives, nous accordons habituellement une attention particulière aux graphiques.\nPour notre modèle, les coefficients d’asymétrie (−0,263) et d’aplatissement (1,149) signalent que la distribution est plutôt symétrique, mais leptokurtique, c’est-à-dire que les valeurs des résidus sont bien réparties autour de 0, mais avec une faible dispersion. Puisque la valeur de p associée au test de Jarque-Bera est inférieure à 0,05, nous pouvons en conclure que la distribution des résidus est anormale. La forme pointue de la distribution est d’ailleurs confirmée à la lecture de l’histogramme avec la courbe normale et du diagramme quantile-quantile.\n\n\nSkewness Kurtosis \n  -0.161    1.193 \n\n\n\n    Robust Jarque Bera Test\n\ndata:  residus\nX-squared = 513.15, df = 2, p-value &lt; 2.2e-16\n\n\n\n\nFigure 7.9: Vérification de la normalité des résidus\n\n\n\n\n7.6.3 Linéarité et homoscédasticité des résidus\nUn modèle est efficace si la dispersion des résidus est homogène sur tout le spectre des valeurs prédites de la variable dépendante. Dans le cas d’une absence d’homoscédasticité – appelée problème d’hétéroscédasticité –, le nuage de points construit à partir des résidus et des valeurs prédites (figure 7.10) prend la forme d’une trompette ou d’un entonnoir : les résidus sont alors faibles quand les valeurs prédites sont faibles et sont de plus en plus élevés au fur et à mesure que les valeurs prédites augmentent.\n\n\n\n\nFigure 7.10: Distribution des résidus en fonction des valeurs prédites\n\n\n\nLe test de Breusch-Pagan est souvent utilisé pour vérifier l’homoscédasticité des résidus. Il est construit avec les hypothèses suivantes :\n\nH0 : homoscédasticité, c’est-à-dire que les termes d’erreur ont une variance constante à travers les valeurs prédites.\nH1 : hétéroscédasticité.\n\nSi la valeur de p associée à ce test est inférieure à 0,05, nous réfutons l’hypothèse nulle et nous concluons qu’il y a un problème d’hétéroscédasticité, ce qui est le cas pour notre modèle.\n\n\n\n    studentized Breusch-Pagan test\n\ndata:  modele3\nBP = 1722, df = 8, p-value &lt; 2.2e-16\n\n\n\n7.6.4 Absence de multicolinéarité excessive\nUn modèle présente un problème de multicolinéarité excessive lorsque deux variables indépendantes ou plus sont très fortement corrélées entre elles. Rappelez-vous qu’un coefficient de régression estime l’effet d’une variable dépendante (\\(X_k\\)) si toutes les autres VI restent constantes (c’est-à-dire une fois les autres VI contrôlées, toutes choses étant égales par ailleurs…).\nPrenons deux variables indépendantes (\\(X_1\\) et \\(X_2\\)) fortement corrélées avec un coefficient de Pearson très élevé (0,90 par exemple). Admettons que chacune des deux VI a un effet important et significatif sur votre VD lorsqu’une seule est introduite dans le modèle. Si les deux variables sont introduites dans le même modèle, vous évaluez donc l’effet de \\(X_1\\) une fois contrôlé \\(X_2\\) et l’effet de \\(X_2\\) une fois contrôlé \\(X_1\\). Par conséquent, l’effet de l’une des deux devient très faible, voire probablement non significatif.\n\n7.6.4.1 Comment évaluer la multicolinéarité?\nPour ce faire, nous utilisons habituellement le facteur d’inflation de la variance (Variance Inflation Factor – VIF en anglais). Le calcul de ce facteur pour chaque VI est basé sur trois étapes.\n\nPour chaque VI, nous construisons un modèle de régression multiple où elle est expliquée par toutes les autres variables indépendantes du modèle. Par exemple, pour la première VI (\\(X_1\\)), l’équation du modèle s’écrit :\n\n\\[\nX_1 = b_0 + b_2X_2 +\\ldots+ b_kX_k + e\n\\tag{7.29}\\]\n\nÀ partir de cette équation, nous obtenons ainsi un \\(R^2\\) qui nous indique la proportion de la variance de \\(X_1\\) expliquée par les autres VI. Par convention, nous calculons la tolérance (équation 7.30) qui indique la proportion de la variance de \\(X_k\\) n’étant pas expliquée par les autres VI. En guise d’exemple, une valeur de tolérance égale à 0,1 signale que 90 % de la variance de \\(X_k\\) est expliqué par les autres variables, ce qui est un problème de multicolinéarité en soit. Concrètement, plus la valeur de la tolérance est proche de zéro, plus c’est problématique.\n\n\\[\n\\mbox{Tolérance}_k=1-R_k^2=\\frac{1}{VIF_k}\n\\tag{7.30}\\]\n\nPuis, nous calculons le facteur d’inflation de la variance (équation 7.31). Là encore, des règles de pouce (à la louche) sont utilisées. Certains considéreront une valeur de VIF supérieur à 10 (soit une tolérance à 0,1 ou inférieure) comme problématique, d’autres retiendront le seuil de 5 plus conservateur (soit une tolérance à 0,2 ou inférieure).\n\n\\[\nVIF_k = \\frac{1}{1-R_k^2}\n\\tag{7.31}\\]\nPour notre modèle, toutes les valeurs de VIF sont inférieures à 2, indiquant, sans l’ombre d’un doute, l’absence de multicolinéarité excessive.\n\n\n                    GVIF Df GVIF^(1/(2*Df))\nVilleMtl           1.319  1           1.149\nlog(HABHA)         1.342  1           1.159\npoly(AgeMedian, 2) 1.399  2           1.087\nPct_014            1.601  1           1.265\nPct_65P            1.317  1           1.147\nPct_MV             1.483  1           1.218\nPct_FR             1.818  1           1.348\n\n\n\n7.6.4.2 Comment régler un problème de multicolinéarité?\n\nLa prudence est de mise! Si une ou plusieurs variables présentent une valeur de VIF supérieure à 5, construisez une matrice de corrélation de Pearson (section 4.3.7) et repérez les valeurs de corrélation supérieures à 0,8 ou inférieures à −0,8. Vous repérerez ainsi les corrélations problématiques entre deux variables indépendantes du modèle.\nRefaites ensuite un modèle en ôtant la variable indépendante avec la plus forte valeur de VIF (7 ou 12 par exemple), et revérifiez les valeurs de VIF. Refaites cette étape si le problème de multicolinéarité excessive persiste.\n\n\n\n\n\n\nUne multicolinéarité excessive n’est pas forcément inquiétante\n\n\nNous avons vu plus haut comment introduire des variables indépendantes particulières comme des variables d’interaction (\\(X_1 \\times X_2\\)) ou des variables sous une forme polynomiale (ordre 2 : \\(X_1 + X_1^2\\); ordre 3 : \\(X_1 + X_1^2 + X_1^3\\), etc.). Bien entendu, ces termes composant les variables d’interaction ou d’une forme polynomiale sont habituellement fortement corrélés entre eux. Cela n’est toutefois pas problématique!\nDans l’exemple ci-dessous, nous obtenons deux valeurs de VIF très élevées pour la variable d’interaction Pct_014:DistCBDkm (16,713) et l’un des paramètres à partir duquel elle est calculée, soit DistCBDkm (12,526).\n\n\n                     GVIF Df GVIF^(1/(2*Df))\nlog(HABHA)          1.426  1           1.194\npoly(AgeMedian, 2)  1.768  2           1.153\nPct_014             3.326  1           1.824\nPct_65P             1.359  1           1.166\nPct_MV              1.495  1           1.223\nPct_FR              1.810  1           1.345\nDistCBDkm          12.526  1           3.539\nPct_014:DistCBDkm  16.713  1           4.088\n\n\n\n\n\n7.6.5 Absence d’observations aberrantes\n\n7.6.5.1 Détection des observations très influentes du modèle\nLors de l’analyse des corrélations (section 4.3), nous avons vu que des valeurs extrêmes peuvent avoir un impact important sur le coefficient de corrélation de Pearson. Le même principe s’applique à la régression multiple, pour laquelle nous nous s’attendrions à ce que chaque observation joue un rôle équivalent dans la détermination de l’équation du modèle.\nAutrement dit, il est possible que certaines observations avec des valeurs extrêmes – fortement dissemblables des autres – aient une influence importante, voire démesurée, dans l’estimation du modèle. Concrètement, cela signifie que si elles étaient ôtées, les coefficients de régression et la qualité d’ajustement du modèle pourraient changer drastiquement. Deux mesures sont habituellement utilisées pour évaluer l’influence de chaque observation sur le modèle :\n\n\nLa statistique de la distance de Cook qui mesure l’influence de chaque observation sur les résultats du modèle. Brièvement, la distance de Cook évalue l’influence de l’observation i en la supprimant du modèle (équation 7.32). Plus sa valeur est élevée, plus l’observation joue un rôle important dans la détermination de l’équation de régression.\n\n\\[\nD_i = \\frac{\\sum_{j=1}^n(\\widehat{y}_i-\\widehat{y}_{i(j)})^2}{ks^2}\n\\tag{7.32}\\]\navec \\(\\widehat{y}_{i(j)}\\) la valeur prédite quand l’observation i est ôté du modèle, k le nombre de variables indépendantes et \\(s^2\\) l’erreur quadratique moyenne du modèle.\n\n\nLa statistique de l’effet levier (leverage value en anglais) qui varie de 0 (aucune influence) à 1 (explique tout le modèle). La somme de toutes les valeurs de cette statistique est égale au nombre de VI dans le modèle.\n\nQuel critère retenir pour détecter les observations avec potentiellement une trop grande influence sur le modèle?\nPour les repérer, voire les supprimer, plusieurs auteur(e)s proposent les seuils suivants : \\(4/n\\) ou \\(8/n\\) ou \\(16/n\\). Avec 10210 observations dans le modèle, les seuils seraient les suivants :\n\n\nNombre d'observations = 10210 (100 %) \n 4/n = 0.00039 \n 8/n = 0.00078 \n 16/n = 0.00157 \nObservations avec une valeur supérieure ou égale aux différents seuils \n 4/n = 605 soit 5.93 % \n 8/n = 275 soit 2.69 % \n 16/n = 133 soit 1.3 %\n\n\nLe critère de \\(4/n\\) étant plutôt sévère, nous privilégions généralement celui de \\(8/n\\), voire \\(16/n\\). Il est aussi possible de construire un nuage de points pour les repérer (figure 7.11).\n\n\n\n\nFigure 7.11: Repérage graphique les valeurs influentes du modèle\n\n\n\n\n7.6.5.2 Quoi faire avec les observations très influentes du modèle\nTrois approches sont possibles :\n\nRecourir à des régressions boostrap, ce qui permet généralement de supprimer l’effet de ces observations. Brièvement, le principe général est de créer un nombre élevé d’échantillons du jeu de données initial (1000 à 2000 itérations par exemple) et de construire un modèle de régression pour chacun d’eux. On obtiendra ainsi des intervalles de confiance pour les coefficients de régression et les mesures d’ajustement du modèle.\nSupprimer les observations trop influentes (avec l’un des critères de \\(4/n\\), \\(8/n\\) et \\(16/n\\) vus plus haut). Une fois supprimées, il convient 1) de recalculer le modèle, 2) de refaire le diagnostic de la régression au complet et finalement, 3) de comparer les modèles avant et après suppression des valeurs trop influentes, notamment la qualité d’ajustement du modèle (R2 ajusté) et les coefficients de régression. Des changements importants indiqueront que le premier modèle est potentiellement biaisé.\nUtiliser un modèle linéaire généralisé (GLM) permettant d’utiliser une distribution différente correspondant plus à votre jeu de données (chapitre 8)."
  },
  {
    "objectID": "07-regressionlineaire.html#sec-077",
    "href": "07-regressionlineaire.html#sec-077",
    "title": "7  Régression linéaire multiple",
    "section": "\n7.7 Mise en œuvre dans R",
    "text": "7.7 Mise en œuvre dans R\n\n7.7.1 Fonctions lm, summary() et confint()\n\nLes fonctions de base lm, summary() et confint() permettent respectivement 1) de construire un modèle, 2) d’afficher ces résultats et 3) d’obtenir les intervalles de confiance des coefficients de régression :\n\nmonModele &lt;- lm(Y ~X1+X2+..+Xk) avec Y étant la variable dépendante et les variables indépendantes (X1 à Xk) étant séparées par le signe +.\nsummary(monModele)\nconfint(monModele, level=.95).\n\nDans la syntaxe ci-dessous, vous retrouverez les différents modèles abordés dans les sections précédentes; remarquez que toutes que les lignes summary sont mises en commentaires afin de ne pas afficher les résultats des modèles.\n\n# Chargement des données\nload(\"data/lm/DataVegetation.RData\")\n\n# 1er modèle de régression\nmodele1 &lt;- lm(VegPct ~ HABHA+AgeMedian+Pct_014+Pct_65P+Pct_MV+Pct_FR,\n              data = DataFinal)\n# summary(Modele1)\n\n# 2e modèle de régression : fonction polynomiale d'ordre 2 (poly(AgeMedian,2))\nmodele2 &lt;- lm(VegPct ~ HABHA+poly(AgeMedian,2)+Pct_014+Pct_65P+Pct_MV+Pct_FR,\n              data = DataFinal)\n# summary(Modele2)\n\n# 3e modèle de régression : forme logarithmique (log(HABHA))\nmodele3 &lt;- lm(VegPct ~ log(HABHA)+poly(AgeMedian,2)+Pct_014+Pct_65P+Pct_MV+Pct_FR,\n              data = DataFinal)\n# summary(Modele3)\n\n# 4e modèle de régression : VI dichotomique\n# création de la variable dichotomique (VilleMtl)\nDataFinal$VilleMtl &lt;- ifelse(DataFinal$SDRNOM == \"Montréal\", 1, 0)\nmodele4 &lt;- lm(VegPct ~ log(HABHA)+poly(AgeMedian,2)+Pct_014+Pct_65P+Pct_MV+Pct_FR+\n                       VilleMtl, # variable dichotomique\n              data = DataFinal)\n# summary(Modele4)\n\n# 5e modèle de régression : VI polytomique\n# création de la variable polytomique (Munic)\nDataFinal$Munic &lt;- relevel(DataFinal$SDRNOM, ref = \"Montréal\")\nmodele5 &lt;- lm(VegPct ~ log(HABHA)+poly(AgeMedian,2)+Pct_014+Pct_65P+Pct_MV+Pct_FR+\n                       Munic, data = DataFinal)\n# summary(Modele5)\n\n\n# 6e modèle de régression : interaction entre deux VI continues, \n# soit DistCBDkm*Pct_014\nmodele6 &lt;- lm(VegPct ~ log(HABHA)+poly(AgeMedian,2)+Pct_014+Pct_65P+Pct_MV+Pct_FR+\n                       DistCBDkm+DistCBDkm*Pct_014,\n                data = DataFinal)\n# summary(Modele6)\n\n# 7e modèle de régression : interaction entre une VI continue et une VI dichotomique,\n# soit VilleMtl*Pct_FR\nmodele8 &lt;- lm(VegPct ~ log(HABHA)+poly(AgeMedian,2)+Pct_014+Pct_65P+Pct_MV+Pct_FR+\n                       VilleMtl*Pct_FR,\n                data = DataFinal)\n# summary(Modele7)\n\nÀ la figure 7.12, les résultats de la régression linéaire multiple, obtenus avec la summary(monModele), sont présentés en quatre sections distinctes :\n\nLe rappel de l’équation du modèle.\nQuelques statistiques descriptives sur les résidus du modèle, soit la différence entre les valeurs observées et prédites.\nUn tableau pour les coefficients de régression comprenant plusieurs colonnes, à savoir les coefficients de régression (Estimate), l’erreur type du coefficient (Std. Error), la valeur de t (t value) et la probabilité associée à la valeur de t (Pr(&gt;|t|)). La première ligne de ce tableau (Estimate) est pour la constante (Intercept en anglais) et celles qui suivent sont pour les variables indépendantes.\nLes mesures d’ajustement du modèle, dont le RMSE (Residual standard error), les R2 classique (Multiple R-squared) et ajusté (Adjusted R-squared), la statistique F avec le nombre de degrés de liberté en lignes (nombre d’observations) et en colonnes (n-k-1) ainsi que la valeur de p qui est lui associée (F-statistic:  1223 on 6 and 10203 DF,  p-value: &lt; 2.2e-16).\n\n\n\nFigure 7.12: Différentes parties obtenues avec la fonction summary(Modèle)\n\n\n# Intervalle de confiance des coefficients à 95 %\nconfint(modele3)\n\n                           2.5 %        97.5 %\n(Intercept)           50.8684505   54.79255157\nlog(HABHA)            -7.1847527   -6.52495353\npoly(AgeMedian, 2)1  -18.5676034   42.53686203\npoly(AgeMedian, 2)2 -313.4726002 -258.81630119\nPct_014                0.8793672    1.00190861\nPct_65P                0.2699504    0.34250907\nPct_MV                -0.0557951   -0.01681481\nPct_FR                -0.3659445   -0.32269562\n\n\n\n7.7.2 Comparaison des modèles\nTel que détaillé à la section 7.3.2, pour comparer des modèles imbriqués, il convient d’analyser les valeurs du R2 ajusté et du F incrémentiel, ce qui peut être fait en trois étapes.\nPremière étape. Il peut être judicieux d’afficher l’équation des différents modèles afin de se remémorer les VI introduites dans chacun d’eux, et ce, avec la fonction MonModèle$call$formula.\n\n# Rappel des équations des huit modèles \nprint(modele1$call$formula)\n\nVegPct ~ HABHA + AgeMedian + Pct_014 + Pct_65P + Pct_MV + Pct_FR\n\nprint(modele2$call$formula)\n\nVegPct ~ HABHA + poly(AgeMedian, 2) + Pct_014 + Pct_65P + Pct_MV + \n    Pct_FR\n\nprint(modele3$call$formula)\n\nVegPct ~ log(HABHA) + poly(AgeMedian, 2) + Pct_014 + Pct_65P + \n    Pct_MV + Pct_FR\n\nprint(modele4$call$formula)\n\nVegPct ~ log(HABHA) + poly(AgeMedian, 2) + Pct_014 + Pct_65P + \n    Pct_MV + Pct_FR + VilleMtl\n\nprint(modele5$call$formula)\n\nVegPct ~ log(HABHA) + poly(AgeMedian, 2) + Pct_014 + Pct_65P + \n    Pct_MV + Pct_FR + Munic\n\nprint(modele6$call$formula)\n\nVegPct ~ log(HABHA) + poly(AgeMedian, 2) + Pct_014 + Pct_65P + \n    Pct_MV + Pct_FR + DistCBDkm + DistCBDkm * Pct_014\n\nprint(modele7$call$formula)\n\nVegPct ~ log(HABHA) + poly(AgeMedian, 2) + Pct_014 + Pct_65P + \n    Pct_MV + Pct_FR + VilleMtl + VilleMtlX_Pct_FR\n\n\nDeuxième étape. La syntaxe ci-dessous vous permet de comparer les R2 ajustés des différents modèles. Nous constatons ainsi que :\n\nLa valeur du R2 ajusté du modèle 2 est supérieure à celle du modèle 1 (0,4378 versus 0,4179), signalant que la forme polynomiale d’ordre 2 pour l’âge médian des bâtiments (poly(AgeMedian, 2)) améliore la prédiction comparativement à la forme originelle de (AgeMedian).\nLa valeur du R2 ajusté du modèle 3 est supérieure à celle du modèle 2 (0,4653 versus 0,4378), signalant que la forme logarithmique pour la densité de population (log(HABHA)) améliore la prédiction comparativement à la forme originelle (HABHA).\nLa valeur du R2 ajusté du modèle 4 est supérieure à celle du modèle 3 (0,4863 versus 0,4653), signalant que l’introduction de la variable dichotomique (VilleMtl) pour la municipalité apporte un gain de variance expliquée non négligeable.\nLa valeur du R2 ajusté du modèle 5 est supérieure à celle du modèle 4 (0,5064 versus 0,4863), signalant que l’introduction de la variable polytomique pour les municipalités de l’île de Montréal (Muni) améliore la prédiction du modèle comparativement à la variable dichotomique (VilleMtl).\nLa valeur du R2 ajusté du modèle 6 est supérieure à celle du modèle 2 (0,4953 versus 0,4378), signalant que l’introduction d’une variable d’interaction entre deux variables continues (DistCBDkm + DistCBDkm * Pct_014) apporte également un gain substantiel comparativement au modèle 2, ne comprenant pas cette variable d’interaction.\nLa valeur du R2 ajusté du modèle 7 est supérieure à celle du modèle 2 (0,4877 versus 0,4378), signalant que l’introduction d’une variable d’interaction entre une variable continue et la variable dichotomique (DistCBDkm + DistCBDkm * Pct_014) apporte également un gain substantiel comparativement au modèle 2, ne comprenant pas cette variable d’interaction.\n\n\ncat(\"\\nComparaison des R2 ajustés :\",\n    \"\\nModèle 1.\", round(summary(modele1)$adj.r.squared,4), \n    \"\\nModèle 2.\", round(summary(modele2)$adj.r.squared,4), \n    \"\\nModèle 3.\", round(summary(modele3)$adj.r.squared,4), \n    \"\\nModèle 4.\", round(summary(modele4)$adj.r.squared,4), \n    \"\\nModèle 5.\", round(summary(modele5)$adj.r.squared,4), \n    \"\\nModèle 6.\", round(summary(modele6)$adj.r.squared,4), \n    \"\\nModèle 7.\", round(summary(modele7)$adj.r.squared,4)\n)\n\n\nComparaison des R2 ajustés : \nModèle 1. 0.4179 \nModèle 2. 0.4378 \nModèle 3. 0.4653 \nModèle 4. 0.4863 \nModèle 5. 0.5064 \nModèle 6. 0.4953 \nModèle 7. 0.4877\n\n\nTroisième étape. La syntaxe ci-dessous permet d’obtenir le F incrémentiel pour des modèles ne comprenant pas le même nombre de variables dépendantes, et ce, en utilisant la fonction anova(modele1, modele2, ..., modelen).\nPar exemple, la syntaxe anova(modele1, modele2) permet de comparer les deux modèles et signale que le gain de variance expliquée entre les deux modèles (R2 de 0,4179 et de 0,4378) est significatif (F incrémentiel = 362,64; p &lt; 0,001).\n\n# Comparaison des deux modèles uniquement (modèles 1 et 2)\nanova(modele1, modele2)\n\nAnalysis of Variance Table\n\nModel 1: VegPct ~ HABHA + AgeMedian + Pct_014 + Pct_65P + Pct_MV + Pct_FR\nModel 2: VegPct ~ HABHA + poly(AgeMedian, 2) + Pct_014 + Pct_65P + Pct_MV + \n    Pct_FR\n  Res.Df     RSS Df Sum of Sq      F    Pr(&gt;F)    \n1  10203 2046427                                  \n2  10202 1976182  1     70245 362.64 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nIl est aussi possible de comparer plusieurs modèles simultanément. Notez que dans la syntaxe ci-dessous, le troisième modèle n’est pas inclus, car il comprend le même nombre de variables indépendantes que le second modèle; il en va de même pour le sixième modèle comparativement au cinquième. Ici aussi, l’analyse des valeurs de F et de p vous permettent de vérifier si les modèles, et donc leurs R2 ajustés, sont significativement différents (quand p &lt; 0,05).\n\n# Comparaison de plusieurs modèles\nanova(modele1, modele2, modele4, modele5, modele7)\n\nAnalysis of Variance Table\n\nModel 1: VegPct ~ HABHA + AgeMedian + Pct_014 + Pct_65P + Pct_MV + Pct_FR\nModel 2: VegPct ~ HABHA + poly(AgeMedian, 2) + Pct_014 + Pct_65P + Pct_MV + \n    Pct_FR\nModel 3: VegPct ~ log(HABHA) + poly(AgeMedian, 2) + Pct_014 + Pct_65P + \n    Pct_MV + Pct_FR + VilleMtl\nModel 4: VegPct ~ log(HABHA) + poly(AgeMedian, 2) + Pct_014 + Pct_65P + \n    Pct_MV + Pct_FR + Munic\nModel 5: VegPct ~ log(HABHA) + poly(AgeMedian, 2) + Pct_014 + Pct_65P + \n    Pct_MV + Pct_FR + VilleMtl + VilleMtlX_Pct_FR\n  Res.Df     RSS  Df Sum of Sq        F    Pr(&gt;F)    \n1  10203 2046427                                     \n2  10202 1976182   1     70245  412.995 &lt; 2.2e-16 ***\n3  10201 1805547   1    170636 1003.224 &lt; 2.2e-16 ***\n4  10188 1732849  13     72698   32.878 &lt; 2.2e-16 ***\n5  10200 1800664 -12    -67815   33.226 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\n\nQuel modèle choisir?\n\n\nNous avons déjà évoqué le principe de parcimonie. À titre de rappel, l’ajout de variables indépendantes qui s’avèrent significatives fait inévitablement augmenter la variance expliquée et ainsi la valeur R2 ajusté. Par contre, elle peut rendre le modèle plus complexe à analyser, voire entraîner un surajustement du modèle. Nous avons vu que l’introduction des variables ditchtomique, polytomique et d’interaction avait pour effet d’augmenter la capacité de prédiction du modèle. Quoi qu’il en soit, le gain de variance expliquée s’élève à environ 4 % entre le troisième modèle versus le cinquième et le sixième :\n\nModèle 3 (R2=0,465). VegPct ~ log(HABHA) + poly(AgeMedian, 2) + Pct_014 + Pct_65P + Pct_MV + Pct_FR\n\nModèle 5 (R2=0,506). VegPct ~ log(HABHA) + poly(AgeMedian, 2) + Pct_014 + Pct_65P + Muni\n\nModèle 6 (R2=0,495). VegPct ~ log(HABHA) + poly(AgeMedian, 2) + Pct_014 + Pct_65P + Pct_MV + Pct_FR + DistCBDkm + DistCBDkm * Pct_014\n\n\nPar conséquent, il est légitime de se questionner sur le bien-fondé de conserver ces variables indépendantes additionnelles : Muni pour le modèle 5 et DistCBDkm + DistCBDkm * Pct_014 pour le modèle 6. Trois options sont alors envisageables :\n\nBien entendu, conservez l’une ou l’autre de ces variables additionnelles si elles sont initialement reliées à votre cadre théorique.\nConservez l’une ou l’autre de ces variables additionnelles si elles permettent de répondre à une question spécifique (non prévue initialement) et si les associations ainsi révélées méritent, selon vous, discussion.\nSupprimez-les si leur apport est limité et ne fait que complexifier le modèle.\n\n\n\n\n7.7.3 Diagnostic sur un modèle\n\n7.7.3.1 Vérification le nombre d’observations\nLa syntaxe suivante permet de vérifier si le nombre d’observations est suffisant pour tester le R2 et chacune des variables indépendantes.\n\nmodele3 &lt;- lm(VegPct ~ log(HABHA)+poly(AgeMedian,2)+\n                       Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal)\n# Nombre d'observation\nnobs &lt;- length(modele3$fitted.values)\n# Nombre de variables indépendantes (coefficients moins la constante)\nk &lt;- length(modele3$coefficients)-1\n# Première règle de pouce\nif(nobs &gt;= 50+(8*k)){\n    cat(\"\\nNombre d'observations suffisant pour tester le R2\")\n}else{\n  cat(\"\\nAttention! Nombre d'observations insuffisant pour tester le R2\")\n}\n\n\nNombre d'observations suffisant pour tester le R2\n\n# Deuxième règle de pouce\nif(nobs &gt;= 104+k){\n    cat(\"\\nNombre d'observations suffisant pour tester individuellement chaque VI\")\n}else{\n  cat(\"\\nAttention! Nombre d'observations insuffisant\",\n  \"\\npour tester individuellement chaque VI\")\n}\n\n\nNombre d'observations suffisant pour tester individuellement chaque VI\n\n\n\n7.7.3.2 Vérification la normalité des résidus\nLa syntaxe suivante permet de vérifier la normalité des résidus selon les trois démarches classiques : 1) coefficients d’asymétrie et d’aplatissement, 2) test de normalité de Jarque-Bera (fonction JarqueBeraTest du package DescTools) et 3) les graphiques (histogramme avec courbe normale et diagramme quantile-quantile).\n\nlibrary(DescTools)\nlibrary(stats)\nlibrary(ggplot2)\nlibrary(ggpubr)\n\n# Vecteur pour les résidus du modèle\nresidus &lt;- modele3$residuals\n# 1. coefficients d’asymétrie et d’aplatissement \nc(Skewness= round(DescTools::Skew(residus),3), \n  Kurtosis = round(DescTools::Kurt(residus),3))\n\nSkewness Kurtosis \n  -0.263    1.149 \n\n# 2. Test de normalité de Jarque-Bera\nJarqueBeraTest(residus)\n\n\n    Robust Jarque Bera Test\n\ndata:  residus\nX-squared = 528.51, df = 2, p-value &lt; 2.2e-16\n\n# 3. Graphiques \nGhisto &lt;- ggplot() +\n  geom_histogram(aes(x = residus, y = ..density..),\n                 bins = 30, color = \"#343a40\", fill = \"#a8dadc\") +\n  stat_function(fun = dnorm, \n                args = list(mean = mean(residus),\n                            sd = sd(residus)), \n                color = \"#e63946\", size = 1.2, linetype = \"dashed\")+\n  labs(title = \"Histogramme et courbe normale\",\n      y = \"densité\", \"Résidus du modèle\")\n\nGqqplot &lt;- qplot(sample = residus)+\n  geom_qq_line(line.p = c(0.25, 0.75),\n               color = \"#e63946\", size = 1.2)+\n  labs(title = \"Diagramme quantile-quantile\",\n     x = \"Valeurs théoriques\",\n     y = \"Résidus\")\nggarrange(Ghisto, Gqqplot, ncol = 2, nrow = 1)\n\n\n\nFigure 7.13: Diagnostic : la normalité des résidus\n\n\n\n\n7.7.3.3 Évaluation de la linéarité et l’homoscédasticité des résidus\nLa syntaxe suivante permet de vérifier si l’hypothèse d’homoscédasticité des résidus est respectée avec : 1) un nuage de points entre les valeurs prédites et des résidus, 3) les graphiques (histogramme avec courbe normale et diagramme quantile-quantile) et 2) le test de Breusch-Pagan (fonction bptest du package lmtest).\n\n# 1. Test de Breusch-Pagan pour vérifier l'homoscédasticité\nlibrary(lmtest)\nbptest(modele3)\n\n\n    studentized Breusch-Pagan test\n\ndata:  modele3\nBP = 1651.5, df = 7, p-value &lt; 2.2e-16\n\nif(bptest(modele3)$p.value &lt; 0.05){\n  cat(\"\\nAttention : problème d'hétéroscédasticité des résidus\")\n}else{\n   cat(\"\\nParfait : homoscédasticité des résidus\")\n}\n\n\nAttention : problème d'hétéroscédasticité des résidus\n\n# 2. Graphique entre les valeurs prédites et les résidus\nresidus &lt;-  modele3$residuals\nypredits &lt;- modele3$fitted.values\n\nggplot() +\n  geom_point(aes(x = ypredits, y = residus),\n                 color = \"#343a40\", fill = \"#a8dadc\",\n                 alpha = 0.2, size = 0.8) +\n  geom_smooth(aes(x = ypredits, y = residus), \n              method = lm, color = \"red\")+\n  labs(x = \"Valeurs prédites\", y = \"Résidus\")\n\n\n\n\n\nFigure 7.14: Distribution des résidus en fonction des valeurs prédites\n\n\n\n\n7.7.3.4 Vérification la multicolinéarité excessive\nPour vérifier la présence ou l’absence de multicolinéarité excessive, nous utilisons habituellement la fonction vif du package car.\n\nlibrary(car)\n# facteur d'inflation de la variance\nround(car::vif(modele3),3)\n\n                    GVIF Df GVIF^(1/(2*Df))\nlog(HABHA)         1.289  1           1.136\npoly(AgeMedian, 2) 1.387  2           1.085\nPct_014            1.518  1           1.232\nPct_65P            1.304  1           1.142\nPct_MV             1.480  1           1.217\nPct_FR             1.730  1           1.315\n\n# problème de multicolinéarité (VIF &gt; 10)?\ncar::vif(modele3) &gt; 10\n\n                    GVIF    Df GVIF^(1/(2*Df))\nlog(HABHA)         FALSE FALSE           FALSE\npoly(AgeMedian, 2) FALSE FALSE           FALSE\nPct_014            FALSE FALSE           FALSE\nPct_65P            FALSE FALSE           FALSE\nPct_MV             FALSE FALSE           FALSE\nPct_FR             FALSE FALSE           FALSE\n\n# problème de multicolinéarité (VIF &gt; 5)?\ncar::vif(modele3) &gt; 5 \n\n                    GVIF    Df GVIF^(1/(2*Df))\nlog(HABHA)         FALSE FALSE           FALSE\npoly(AgeMedian, 2) FALSE FALSE           FALSE\nPct_014            FALSE FALSE           FALSE\nPct_65P            FALSE FALSE           FALSE\nPct_MV             FALSE FALSE           FALSE\nPct_FR             FALSE FALSE           FALSE\n\n\n\n7.7.3.5 Répérage des valeurs très influentes du modèle\nLa syntaxe suivante permet d’évaluer le nombre de valeurs très influentes dans le modèle avec les critères de \\(\\mbox{4/n}\\), \\(\\mbox{8/n}\\) et \\(\\mbox{16/n}\\) pour la distance de Cook.\n\nnobs &lt;- length(modele3$fitted.values)\nDistanceCook &lt;- cooks.distance(modele3)\nn4 &lt;- length(DistanceCook[DistanceCook &gt; 4/nobs])\nn8 &lt;- length(DistanceCook[DistanceCook &gt; 8/nobs])\nn16 &lt;-  length(DistanceCook[DistanceCook &gt; 16/nobs])\ncat(\"Nombre d'observations =\", nobs, \"(100 %)\",\n    \"\\n 4/n =\", round(4/nobs,5),\n    \"\\n 8/n =\", round(8/nobs,5),\n    \"\\n 16/n =\", round(16/nobs,5),\n\"\\nObservations avec une valeur supérieure ou égale aux différents seuils\",\n    \"\\n 4/n =\", n4, \"soit\", round(n4/nobs*100,2),\" %\",\n    \"\\n 8/n =\", n8, \"soit\", round(n8/nobs*100,2),\" %\",\n    \"\\n 16/n =\", n16, \"soit\", round(n16/nobs*100,2), \" %\"\n    )\n\nNombre d'observations = 10210 (100 %) \n 4/n = 0.00039 \n 8/n = 0.00078 \n 16/n = 0.00157 \nObservations avec une valeur supérieure ou égale aux différents seuils \n 4/n = 604 soit 5.92  % \n 8/n = 285 soit 2.79  % \n 16/n = 132 soit 1.29  %\n\n\nVous pouvez également construire un nuage de points avec la distance de Cook et l’effet de levier (leverage value) pour repérer visuellement les observations très influentes (figure 7.15).\n\nlibrary(car)\nlibrary(ggpubr)\nDistanceCook &lt;- cooks.distance(modele3)\nLeverageValue &lt;- hatvalues(modele3)\n\nG1 &lt;- ggplot()+\n  geom_point(aes(x = LeverageValue, y = DistanceCook), \n             alpha = 0.2, size = 2, col = \"black\", fill = \"red\")+\n  labs(x = \"Effet levier\",\n       y = \"Distance de Cook\",\n       title = \"Repérer les valeurs influentes\",\n       subtitle = \"(toutes les observations)\")\n\nG2 &lt;- ggplot()+\n  geom_point(aes(x = LeverageValue, y = DistanceCook), \n             alpha = 0.2, size = 2, col = \"black\", fill = \"red\")+\n  ylim(0,0.01)+\n  xlim(0,0.01)+\n  labs(x = \"Effet levier\",\n       y = \"Distance de Cook\",\n       title = \"Repérer les valeurs influentes\",\n       subtitle = \"(agrandissement)\")\n\nggarrange(G1, G2, nrow = 1, ncol = 2)\n\n\n\nFigure 7.15: Repérage graphique des valeurs influentes du modèle\n\n\n\n\n7.7.3.6 Construction d’un nouveau modèle en supprimant les observations très influentes du modèle\nDans un premier temps, il convient de construire un nouveau modèle sans les valeurs influentes du modèle de départ.\n\n# Nombre d'observation dans le modèle 3\nnobs &lt;-length(modele3$fitted.values)\n# Distance de Cook\ncook &lt;- cooks.distance(modele3)\n# Les observations très influentes avec le critère de 16/n\nDataSansOutliers &lt;- cbind(DataFinal, cook)\nDataSansOutliers &lt;- DataSansOutliers[DataSansOutliers$cook  &lt; 8/nobs, ]\nmodele3b &lt;- lm(VegPct ~ log(HABHA)+poly(AgeMedian,2)+Pct_014+Pct_65P+Pct_MV+Pct_FR,\n              data = DataSansOutliers)\nnobsb &lt;-length(modele3b$fitted.values)\n\nComparez les valeurs du R2 ajusté des deux modèles. Habituellement, la suppression des valeurs très influentes s’accompagne d’une augmentation du R2 ajusté. C’est notamment le cas ici puisque sa valeur grimpe de 0,4653 à 0,5684, signalant ainsi un gain important pour la variance expliquée.\n\ncat(\"\\nComparaison des R2 ajustés :\",\n    \"\\nModèle de départ (n=\", nobs, \"), \",\n    round(summary(modele3)$adj.r.squared,4), \n    \"\\nModèle sans les observations très influentes (n=\", nobsb, \"), \",\n    round(summary(modele3b)$adj.r.squared,4),\n    sep = \"\"\n)\n\n\nComparaison des R2 ajustés :\nModèle de départ (n=10210), 0.4653\nModèle sans les observations très influentes (n=9925), 0.5684\n\n\nPour le modèle, il convient alors de refaire le diagnostic de la régression et de vérifier si la suppression des observations très influentes a amélioré : 1) la normalité, la linéarité et l’homoscédasticité des résidus, 2) la multicolinéarité excessive et 3) l’absence de valeurs trop influentes.\nLa normalité des résidus s’est-elle ou non améliorée?\nPour ce faire, comparez les valeurs d’asymétrie, d’aplatissement et du test de Jarque-Bera et les graphiques de normalité. À la lecture des valeurs :\n\nl’asymétrie est très similaire (-0,260 à -0,265);\nl’aplatissement s’est amélioré (1,183 à 0,164);\nle test de Jarque-Bera signale toujours un problème de normalité (p &lt; 0,001), mais sa valeur a nettement diminué (548,7 à 131,24);\nles graphiques démontrent une nette amélioration de la normalité des résidus (figure 7.16).\n\n\n# 1. coefficients d’asymétrie et d’aplatissement \nresmodele3  &lt;- rstudent(modele3)\nresmodele3b &lt;- rstudent(modele3b)\n  \nc(Skewness= round(Skew(resmodele3),3), \n  Kurtosis = round(Kurt(resmodele3),3))\n\nSkewness Kurtosis \n  -0.260    1.183 \n\nc(Skewness= round(Skew(resmodele3b),3), \n  Kurtosis = round(Kurt(resmodele3b),3))\n\nSkewness Kurtosis \n  -0.265    0.164 \n\n# 2. Test de normalité de Jarque-Bera\nJarqueBeraTest(resmodele3)\n\n\n    Robust Jarque Bera Test\n\ndata:  resmodele3\nX-squared = 548.7, df = 2, p-value &lt; 2.2e-16\n\nJarqueBeraTest(resmodele3b)\n\n\n    Robust Jarque Bera Test\n\ndata:  resmodele3b\nX-squared = 131.24, df = 2, p-value &lt; 2.2e-16\n\n# 3. Graphiques \nGhisto1 &lt;- ggplot() +\n  geom_histogram(aes(x = resmodele3, y = ..density..),\n                 bins = 30, color = \"#343a40\", fill = \"#a8dadc\") +\n  stat_function(fun = dnorm,  args = list(mean = mean(resmodele3),\n                                          sd = sd(resmodele3)), \n                color = \"#e63946\", size = 1.2, linetype = \"dashed\")+\n  labs(title = \"Modèle de départ\", y = \"densité\", x = \"Résidus studentisés\")\n\nGqqplot1 &lt;- qplot(sample = residus)+\n  geom_qq_line(line.p = c(0.25, 0.75), color = \"#e63946\", size = 1.2)+\n  labs(title = \"Modèle de départ\", x = \"Valeurs théoriques\", y = \"Résidus studentisés\")\n\nGhisto2 &lt;- ggplot() +\n  geom_histogram(aes(x = resmodele3b, y = ..density..),\n                 bins = 30, color = \"#343a40\", fill = \"#a8dadc\") +\n  stat_function(fun = dnorm,  args = list(mean = mean(resmodele3b),\n                                          sd = sd(resmodele3b)), \n                color = \"#e63946\", linewidth = 1.2, linetype = \"dashed\")+\n  labs(title = \"Modèle après suppression\", x = \"Valeurs théoriques\", y = \"Résidus studentisés\")\n\nGqqplot2 &lt;- qplot(sample = resmodele3b)+\n  geom_qq_line(line.p = c(0.25, 0.75), color = \"#e63946\", size = 1.2)+\n  labs(title = \"Modèle après suppression\",x = \"Valeurs théoriques\", y = \"Résidus studentisés\")\n\nlibrary(ggpubr)\nggarrange(Ghisto1, Ghisto2, Gqqplot1, Gqqplot2, ncol = 2, nrow = 2)\n\n\n\nFigure 7.16: Normalité des résidus avant et après la suppression des valeurs influentes\n\n\n\nLe problème d’hétéroscédasticité est-il corrigé?\n\nla valeur du test de Breusch-Pagan est beaucoup plus faible, mais il semble persister un problème d’hétéroscédasticité.\n\n\n# homoscédasticité des résidus améliorée ou non?\nlibrary(lmtest)\nlibrary(ggpubr)\n\nbptest(modele3)\n\n\n    studentized Breusch-Pagan test\n\ndata:  modele3\nBP = 1651.5, df = 7, p-value &lt; 2.2e-16\n\nbptest(modele3b)\n\n\n    studentized Breusch-Pagan test\n\ndata:  modele3b\nBP = 640.53, df = 7, p-value &lt; 2.2e-16\n\nresmodele3  &lt;- residuals(modele3)\nresmodele3b &lt;- residuals(modele3b)\nypredits3 &lt;- modele3$fitted.values\nypredits3b &lt;- modele3b$fitted.values\n\nG1 &lt;- ggplot() +\n  geom_point(aes(x = ypredits3, y = resmodele3),\n                 color = \"#343a40\", fill = \"#a8dadc\", alpha = 0.2, size = 0.8) +\n  geom_smooth(aes(x = ypredits3, y = resmodele3),  method = lm, color = \"red\")+\n  labs(title = \"Modèle de départ\",x = \"Valeurs prédites\", y = \"Résidus studentisés\")\n\nG2 &lt;- ggplot() +\n  geom_point(aes(x = ypredits3b, y = resmodele3b),\n                 color = \"#343a40\", fill = \"#a8dadc\", alpha = 0.2, size = 0.8) +\n  geom_smooth(aes(x = ypredits3b, y = resmodele3b),  method = lm, color = \"red\")+\n  labs(title = \"Modèle après suppression\",x = \"Valeurs prédites\", y = \"Résidus studentisés\")\n\nggarrange(G1, G2, ncol = 2, nrow = 1)\n\n\n\n\n\nFigure 7.17: Amélioration de l’homoscédasticité des résidus\n\n\n\nFinalement, il convient de comparer les coefficients de régression.\n\n# Comparaison des coefficients\nsummary(modele3)\n\n\nCall:\nlm(formula = VegPct ~ log(HABHA) + poly(AgeMedian, 2) + Pct_014 + \n    Pct_65P + Pct_MV + Pct_FR, data = DataFinal)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-66.848  -8.660   0.381   8.961  83.269 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          5.283e+01  1.001e+00  52.781  &lt; 2e-16 ***\nlog(HABHA)          -6.855e+00  1.683e-01 -40.730  &lt; 2e-16 ***\npoly(AgeMedian, 2)1  1.198e+01  1.559e+01   0.769 0.441958    \npoly(AgeMedian, 2)2 -2.861e+02  1.394e+01 -20.525  &lt; 2e-16 ***\nPct_014              9.406e-01  3.126e-02  30.093  &lt; 2e-16 ***\nPct_65P              3.062e-01  1.851e-02  16.546  &lt; 2e-16 ***\nPct_MV              -3.630e-02  9.943e-03  -3.651 0.000262 ***\nPct_FR              -3.443e-01  1.103e-02 -31.212  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 13.57 on 10202 degrees of freedom\nMultiple R-squared:  0.4657,    Adjusted R-squared:  0.4653 \nF-statistic:  1270 on 7 and 10202 DF,  p-value: &lt; 2.2e-16\n\nsummary(modele3b)\n\n\nCall:\nlm(formula = VegPct ~ log(HABHA) + poly(AgeMedian, 2) + Pct_014 + \n    Pct_65P + Pct_MV + Pct_FR, data = DataSansOutliers)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-46.417  -7.734   0.456   8.290  40.085 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)          6.748e+01  9.869e-01  68.370  &lt; 2e-16 ***\nlog(HABHA)          -1.000e+01  1.720e-01 -58.167  &lt; 2e-16 ***\npoly(AgeMedian, 2)1  4.357e+01  1.387e+01   3.142  0.00168 ** \npoly(AgeMedian, 2)2 -3.564e+02  1.250e+01 -28.510  &lt; 2e-16 ***\nPct_014              8.351e-01  2.870e-02  29.101  &lt; 2e-16 ***\nPct_65P              2.271e-01  1.807e-02  12.566  &lt; 2e-16 ***\nPct_MV              -8.517e-03  9.109e-03  -0.935  0.34976    \nPct_FR              -2.924e-01  1.028e-02 -28.440  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 11.96 on 9917 degrees of freedom\nMultiple R-squared:  0.5687,    Adjusted R-squared:  0.5684 \nF-statistic:  1868 on 7 and 9917 DF,  p-value: &lt; 2.2e-16\n\n\n\n7.7.4 Graphiques pour les effets marginaux\nTel que signalé ultérieurement, il est courant de représenter l’effet marginal d’une VI sur une VD, une fois contrôlées les autres VI. Pour ce faire, il est possible d’utiliser les packages ggplot2 et ggeffects.\n\n7.7.4.1 Effet marginal pour une variable continue\nLa syntaxe ci-dessous illustre comment obtenir un graphique pour nos quatre variables explicatives. Bien entendu, si le coefficient de régression est positif (comme pour les pourcentages de jeunes de moins de 15 ans et les personnes âgées), la pente est alors montante, et inversement descendante pour des coefficients négatifs (comme pour les personnes ayant déclaré appartenir à une minorité visible et les personnes à faible revenu). En outre, plus la valeur absolue du coefficient est forte, plus la pente est prononcée.\n\nlibrary(ggplot2)\nlibrary(ggeffects)\nlibrary(ggpubr)\n\n# Création d'un DataFrame pour les valeurs prédites pour chaque VI continue\nfitV1 &lt;- ggpredict(modele3, terms = \"Pct_014\")\nfitV2 &lt;- ggpredict(modele3, terms = \"Pct_65P\")\nfitV3 &lt;- ggpredict(modele3, terms = \"Pct_MV\")\nfitV4 &lt;- ggpredict(modele3, terms = \"Pct_FR\")\n\n# Construction des graphiques\nG1 &lt;-ggplot(fitV1, aes(x, predicted)) +\n    # ligne de régression\n    geom_line(color = \"red\", linewidth = 1) +\n    # intervalle de confiance à 95 %\n    geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .3)+\n    #  Titres\n  labs(y = \"valeur prédite Y\", x = \"Moins de 15 ans (%)\")\n\nG2 &lt;-ggplot(fitV2, aes(x, predicted)) +\n  geom_line(color = \"red\", linewidth = 1) +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .3)+\n  labs(y = \"valeur prédite Y\", x = \"65 ans et plus (%)\")\n\nG3 &lt;-ggplot(fitV3, aes(x, predicted)) +\n  geom_line(color = \"blue\", linewidth = 1) +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .3)+\n  labs(y = \"valeur prédite Y\", x = \"Minorités visibles (%)\")\n\nG4 &lt;-ggplot(fitV4, aes(x, predicted)) +\n  geom_line(color = \"blue\", linewidth = 1) +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .3)+\n  labs(y = \"valeur prédite Y\", x = \"Personne à faible revenu (%)\")\n\n# Assemblage des graphiques\nggarrange(G1, G2, G3, G4, ncol =2, nrow =2)\n\n\n\nFigure 7.18: Effets marginaux pour des variables continues\n\n\n\n\n7.7.4.2 Effet marginal pour une variable avec une fonction polynomiale d’ordre 2\n\nlibrary(ggplot2)\nlibrary(ggeffects)\nlibrary(ggpubr)\n\nfitAgeMedian &lt;- ggpredict(modele3, terms = \"AgeMedian\")\n\n ggplot(fitAgeMedian, aes(x, predicted)) +\n  geom_line(color = \"green\", linewidth = 1) +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .3)+\n  labs(title = \"Variable sous forme polynomiale (ordre 2)\",\n       y = \"VD: valeur prédite\", x = \"Âge médian des bâtiments\")\n\n\n\nFigure 7.19: Effet marginal d’une variable avec un fonction polynomiale d’ordre 2\n\n\n\n\n7.7.4.3 Effet marginal pour une variable transformée en logarithme\n\nfitHabHa &lt;- ggpredict(modele3, terms = \"HABHA\")\n\nggplot(fitHabHa, aes(x, predicted)) +\n  geom_line(color = \"blue\", linewidth = 1) +\n  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .3)+\n  labs(y = \"VD: valeur prédite\", x = \"Habitants km2\")\n\n\n\nFigure 7.20: Effet du logarithme de la densité\n\n\n\n\n7.7.4.4 Effet marginal pour une variable dichotomique\n\n# Valeurs prédites selon le modèle avec la variable dichotomique\nfitVilleMtl &lt;- ggpredict(modele4, terms = \"VilleMtl\")\n# Graphique\nggplot(fitVilleMtl, aes(x = x, y = predicted)) +\n  geom_bar(stat = \"identity\", position = position_dodge(), fill = \"wheat\") +\n  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), alpha = .9, position = position_dodge())+\n  labs(title = \"Effet marginal de la ville de Montréal sur la végétation\",\n       x = \"Municipalités de la région de Montréal\",\n       y = \"Couverture végétation de l'îlot (%)\")+\n  scale_x_continuous(breaks=c(0,1),\n                     labels = c(\"Autre municipalité\", \"Ville de Montréal\"))\n\n\n\nFigure 7.21: Effet marginal d’une variable dichotomique\n\n\n\n\n7.7.4.5 Effet marginal pour une variable polytomique\n\n# Valeurs prédites selon le modèle avec la variable polytomique\nfitVilles &lt;- ggpredict(modele5, terms = \"Munic\")\n# Graphique\nGraphique &lt;- ggplot(fitVilles, aes(x = x, y = predicted)) +\n  geom_bar(stat = \"identity\", position = position_dodge(), fill = \"wheat\") +\n  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), alpha = .9, position = position_dodge())+\n  labs(title = \"Effet marginal de la ville de Montréal sur la végétation\",\n       x = \"Municipalités de la région de Montréal\",\n       y = \"Couverture végétation de l'îlot (%)\")\n\n# Rotation du graphique\nGraphique + coord_flip()\n\n\n\nFigure 7.22: Effet marginal d’une variable polytomique\n\n\n\n\n7.7.4.6 Effet marginal pour une variable d’interaction (deux VI continues)\n\nlibrary(metR) # pour ajouter des labels aux contours\n\ndf &lt;- expand.grid(\n  DistCBDkm = seq(0,33,0.1),\n  Pct_FR = seq(0,95,1),\n  HABHA = mean(DataFinal$HABHA),\n  AgeMedian = mean(DataFinal$AgeMedian),\n  Pct_014 = mean(DataFinal$Pct_014),\n  Pct_65P = mean(DataFinal$Pct_65P),\n  Pct_MV = mean(DataFinal$Pct_MV)\n)\n\ndf$DistCBDkmX_Pct_FR &lt;-  df$DistCBDkm * df$Pct_FR\npred &lt;- predict(modele6, newdata = df, se = TRUE)\ndf$pred &lt;- pred$fit\ndf$pred_se &lt;- pred$se.fit\ndf$lower &lt;- df$pred - 1.96 * df$pred_se\ndf$upper &lt;- df$pred + 1.96 * df$pred_se\n\nP1 &lt;- ggplot(data = df) + \n  geom_tile(aes(x = DistCBDkm, y = Pct_FR, fill = pred)) +\n  stat_contour(aes(x = DistCBDkm, y = Pct_FR, z = pred), \n               color = \"black\", linetype = \"dashed\") + \n  geom_text_contour(aes(x = DistCBDkm, y = Pct_FR, z = pred), )+\n  scale_fill_viridis(discrete = FALSE) + \n  labs(x = \"Distance au centre-ville\", \n       y = \"Pers à faible revenu (%)\",\n       fill = \"\",\n       subtitle = \"Prédiction\")\n\nP2 &lt;- ggplot(data = df) + \n  geom_tile(aes(x = DistCBDkm, y = Pct_FR, fill = lower)) +\n  stat_contour(aes(x = DistCBDkm, y = Pct_FR, z = lower), \n               color = \"black\", linetype = \"dashed\") + \n  geom_text_contour(aes(x = DistCBDkm, y = Pct_FR, z = lower), )+\n  scale_fill_viridis(discrete = FALSE)+ \n  labs(x = \"Distance au centre-ville\", \n       y = \"Pers à faible revenu (%)\",\n       fill = \"\",\n       subtitle = \"IC 2,5 %\")\n\nP3 &lt;- ggplot(data = df) + \n  geom_tile(aes(x = DistCBDkm, y = Pct_FR, fill = upper)) +\n  stat_contour(aes(x = DistCBDkm, y = Pct_FR, z = upper), \n               color = \"black\", linetype = \"dashed\") + \n  geom_text_contour(aes(x = DistCBDkm, y = Pct_FR, z = upper), )+\n  scale_fill_viridis(discrete = FALSE)+ \n  labs(x = \"Distance au centre-ville\", \n       y = \"Pers à faible revenu (%)\",\n       fill = \"\",\n       subtitle = \"IC 97,5 %\")\n\nggarrange(P1, P2, P3, common.legend = FALSE, ncol = 2, nrow = 2)\n\n\n\nFigure 7.23: Effet marginal de l’interaction entre deux variables continues\n\n\n\n\n7.7.4.7 Effet marginal pour une variable d’interaction (une VI continue et une VI dichotomique)\n\ndf &lt;- expand.grid(\n  VilleMtl = c(0,1),\n  Pct_FR = seq(0,95,1),\n  HABHA = mean(DataFinal$HABHA),\n  AgeMedian = mean(DataFinal$AgeMedian),\n  Pct_014 = mean(DataFinal$Pct_014),\n  Pct_65P = mean(DataFinal$Pct_65P),\n  Pct_MV = mean(DataFinal$Pct_MV)\n)\ndf$VilleMtlX_Pct_FR &lt;- df$VilleMtl * df$Pct_FR\nhead(df, n=5)\n\n  VilleMtl Pct_FR   HABHA AgeMedian  Pct_014  Pct_65P   Pct_MV VilleMtlX_Pct_FR\n1        0      0 87.7694  52.11494 15.89268 14.86761 20.96675                0\n2        1      0 87.7694  52.11494 15.89268 14.86761 20.96675                0\n3        0      1 87.7694  52.11494 15.89268 14.86761 20.96675                0\n4        1      1 87.7694  52.11494 15.89268 14.86761 20.96675                1\n5        0      2 87.7694  52.11494 15.89268 14.86761 20.96675                0\n\npred &lt;- predict(modele7, se = TRUE, newdata = df)\ndf$pred &lt;- pred$fit\ndf$upper &lt;- df$pred + 1.96*pred$se.fit\ndf$lower &lt;- df$pred - 1.96*pred$se.fit\ndf$VilleMtl_str &lt;- ifelse(df$VilleMtl==0,\"Autre municipalité\" , \"Ville de Montréal\")\nDataFinal$VilleMtl_str &lt;- ifelse(DataFinal$VilleMtl==0,\"Autre municipalité\" , \"Ville de Montréal\")\ncols &lt;- c(\"Autre municipalité\" =\"#1d3557\" ,\"Ville de Montréal\"=\"#e63946\")\n\nggplot(data = df) +\n  geom_point(data = DataFinal, mapping = aes(x = Pct_FR, y = VegPct, color = VilleMtl_str),\n             size = 0.2, alpha = 0.2)+\n  geom_ribbon(aes(x = Pct_FR, ymin = lower, ymax = upper, group = VilleMtl_str),\n              fill = rgb(0.1,0.1,0.1,0.4))+\n  geom_path(aes(x = Pct_FR, y = pred, color = VilleMtl_str), size = 1) +\n  scale_colour_manual(values = cols)+\n  labs(x = \"Personnes à faible revenu (%)\",\n       y = \"Densité de végétation prédite (%)\",\n       color = \"\")\n\n\n\nFigure 7.24: Graphique de l’effet marginal de l’interaction entre une variable quantitative et qualitative"
  },
  {
    "objectID": "07-regressionlineaire.html#sec-078",
    "href": "07-regressionlineaire.html#sec-078",
    "title": "7  Régression linéaire multiple",
    "section": "\n7.8 Quiz de révision du chapitre",
    "text": "7.8 Quiz de révision du chapitre\n\n\n\n\n\nQuels modèles sont imbriqués?\n\n\nRelisez au besoin la section 7.3.2.\n\n\n\n\n\n\nModèle A : Y = X1 + X2 + X3 / Modèle B : Y = X1 + X2 + X3 + X4 + X5\n\n\n\n\n\n\n\nModèle A : Y = X1 + X4 + X5 / Modèle B : Y = X1 + X2 + X3 + X7 + X8\n\n\n\n\n\n\n\n\n\n\nQuelle mesure relative à la qualité d’ajustement du modèle indique la proportion de la variance de la variable dépendante expliquée par les variables indépendantes du modèle?\n\n\nRelisez au besoin la section 7.3.1.\n\n\n\n\n\n\nStatistique de Fisher\n\n\n\n\n\n\n\nCoefficient de détermination (R2)\n\n\n\n\n\n\n\nL’erreur quadratique moyenne (RMSE)\n\n\n\n\n\n\n\nLe coefficient de régression standardisé\n\n\n\n\n\n\n\n\n\n\nLe R2 ajusté permet de comparer des modèles avec des nombres de variables indépendantes et/ou d’observations différents\n\n\nRelisez au besoin le début de la section 7.3.2.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\n\nComment repérer les variables les plus importantes du modèle?\n\n\nRelisez au besoin la section 7.4.2.\n\n\n\n\n\n\nCoefficients de régression\n\n\n\n\n\n\n\nCoefficients de régression standardisés\n\n\n\n\n\n\n\nErreurs types\n\n\n\n\n\n\n\n\n\n\nComment évaluer la significativité des coefficients?\n\n\nRelisez au besoin la section 7.4.3.\n\n\n\n\n\n\nValeur de t\n\n\n\n\n\n\n\nValeur de p\n\n\n\n\n\n\n\nR2\n\n\n\n\n\n\n\nF de Fisher\n\n\n\n\n\n\n\n\n\n\nPour un nombre très élevé d’observations, quelle affirmation est vraie pour les valeurs de t et de p?\n\n\nRelisez au besoin la [section Section 7.4.3).\n\n\n\n\n\n\n1,96 (p &lt;= 0,05); 2,58 (p &lt;= 0,01); 3,29 (p &lt;= 0,001)\n\n\n\n\n\n\n\n1,96 (p &lt;= 0,001); 2,58 (p &lt;= 0,01); 3,29 (p &lt;= 0,05)\n\n\n\n\n\n\n\n2,96 (p &lt;= 0,05); 3,58 (p &lt;= 0,01); 4,29 (p &lt;= 0,001)\n\n\n\n\n\n\n\n\n\n\nUne variable indépendante dont l’intervalle de confiance à 95 % du coefficient de régression est de [-15,06 ; 28,17] est-elle significatif au seuil de p = 0,05?\n\n\nRelisez au besoin la section 7.4.4.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\n\nComment poser un diagnostic sur un modèle de régression linéaire?\n\n\nRelisez le deuxième encadré à la section 7.6.\n\n\n\n\n\n\nNombre d’observations\n\n\n\n\n\n\n\nNormalité des résidus\n\n\n\n\n\n\n\nLinéarité et homoscédasticité des résidus\n\n\n\n\n\n\n\nAbsence de multicolinéarité excessive\n\n\n\n\n\n\n\nAbsence d’observations trop influentes\n\n\n\n\n\n\n\nNombre de variables indépendantes\n\n\n\n\n\n\n\n\n\nVérifier votre résultat\n\n\n\n\n\n\n\n\n\nApparicio, Philippe, Thi-Thanh-Hien Pham, Anne-Marie Séguin et Jean Dubé. 2016. « Spatial distribution of vegetation in and around city blocks on the Island of Montreal: A double environmental inequity? » Applied Geography 76: 128‑136. http://dx.doi.org/10.1016/j.apgeog.2016.09.023.\n\n\nBressoux, Pascal. 2010. Modélisation statistique appliquée aux sciences sociales. De boeck.\n\n\nGelb, Jérémy et Philippe Apparicio. 2020. « Modelling cyclists’ multi-exposure to air and noise pollution with low-cost sensors: The case of Paris. » Atmosphere 11 (4): 422. https://doi.org/10.3390/atmos11040422.\n\n\nHanck, Christoph, Martin Arnold, Alexander Gerber et Martin Schmelzer. 2019. Introduction to econometrics with R. s.n. https://www.econometrics-with-r.org/ITER.pdf.\n\n\nTabachnick, Barbara G, Linda S Fidell et Jodie B Ullman. 2007. Using multivariate statistics. Pearson."
  },
  {
    "objectID": "08-GLM.html#sec-081",
    "href": "08-GLM.html#sec-081",
    "title": "8  Régressions linéaires généralisées (GLM)",
    "section": "\n8.1 Qu’est qu’un modèle GLM?",
    "text": "8.1 Qu’est qu’un modèle GLM?\nNous avons vu qu’une régression linéaire multiple (LM) ne peut être appliquée que si la variable dépendante analysée est continue et si elle est normalement distribuée, une fois les variables indépendantes contrôlées. Il s’agit d’une limite très importante puisqu’elle ne peut être utilisée pour modéliser et prédire des variables binaires, multinomiales, de comptage, ordinales ou plus simplement des données anormalement distribuées. Une seconde limite importante des LM est que l’influence des variables indépendantes sur la variable dépendante ne peut être que linéaire. L’augmentation d’une unité de X conduit à une augmentation (ou diminution) de \\(\\beta\\) (coefficient de régression) unités de Y, ce qui n’est pas toujours représentatif des phénomènes étudiés. Afin de dépasser ces contraintes, Nelder et Wedderburn (1972) ont proposé une extension des modèles LM, soit les modèles linéaires généralisés (GLM).\n\n8.1.1 Formulation d’un GLM\nPuisqu’un modèle GLM est une extension des modèles LM, il est possible de traduire un modèle LM sous forme d’un GLM. Nous utilisons ce point de départ pour détailler la morphologie d’un GLM. Nous avons vu dans la section précédente qu’un modèle LM est formulé de la façon suivante (notation matricielle) :\n\\[\nY = \\beta_0 + X\\beta + \\epsilon\n\\tag{8.1}\\]\nAvec \\(\\beta_0\\) la constante (intercept en anglais) et \\(\\beta\\) un vecteur de coefficients de régression pour les k variables indépendantes (X).\nD’après cette formule, nous modélisons la variable Y avec une équation de régression linéaire et un terme d’erreur que nous estimons être normalement distribué. Nous pouvons reformuler ce simple LM sous forme d’un GLM avec l’écriture suivante :\n\\[\n\\begin{aligned}\n&Y \\sim Normal(\\mu,\\sigma)\\\\\n&g(\\mu) = \\beta_0 + \\beta X\\\\\n&g(x) = x\n\\end{aligned}\n\\tag{8.2}\\]\nPas de panique! Cette écriture se lit comme suit : la variable Y est issue d’une distribution normale \\((Y \\sim Normal)\\) avec deux paramètres : \\(\\mu\\) (sa moyenne) et \\(\\sigma\\) (son écart-type). \\(\\mu\\) varie en fonction d’une équation de régression linéaire (\\(\\beta_0 + \\beta X\\)) transformée par une fonction de lien g (détaillée plus loin). Dans ce cas précis, la fonction de lien est appelée fonction identitaire puisqu’elle n’applique aucune transformation (\\(g(x) = x\\)). Notez ici que le second paramètre de la distribution normale \\(\\sigma\\) (paramètre de dispersion) a une valeur fixe et ne dépend donc pas des variables indépendantes à la différence de \\(\\mu\\). Dans ce modèle spécifiquement, les paramètres à estimer sont \\(\\sigma\\), \\(\\beta_0\\) et \\(\\beta\\). Notez que dans la notation traditionnelle, la fonction de lien est appliquée au paramètre modélisé. Il est possible de renverser cette notation en utilisant la réciproque (\\(g'\\)) de la fonction de lien (\\(g\\)) :\n\\[\ng(\\mu) = \\beta_0 + \\beta X \\Longleftrightarrow \\mu = g'(\\beta_0 + \\beta X)\n\\text{ si : }g'(g(x)) = x\n\\tag{8.3}\\]\nDans un modèle GLM, la distribution attendue de la variable Y est déclarée de façon explicite ainsi que la façon dont nos variables indépendantes conditionnent cette distribution. Ici, c’est la moyenne (\\(\\mu\\)) de la distribution qui est modélisée, nous nous intéressons ainsi au changement moyen de Y provoqué par les variables X.\nAvec cet exemple, nous voyons les deux composantes supplémentaires d’un modèle GLM :\n\nLa distribution supposée de la variable Y conditionnée par les variables X (ici, la distribution normale).\nUne fonction de lien associant l’équation de régression formée par les variables indépendantes et un paramètre de la distribution retenue (ici, la fonction identitaire et le paramètre \\(\\mu\\)).\n\nNotez également que l’estimation des paramètres d’un modèle GLM (ici, \\(\\beta_0\\), \\(\\beta X\\) et \\(\\sigma\\)) ne se fait plus avec la méthode des moindres carrés ordinaires utilisée pour les modèles LM. À la place, la méthode par maximum de vraisemblance (maximum likelihood) est la plus souvent utilisée, mais certains packages utilisent également la méthode des moments (method of moments). Ces deux méthodes nécessitent des échantillons plus grands que la méthode des moindres carrés. Dans le cas spécifique d’un modèle GLM utilisant une distribution normale, la méthode des moindres carrés et la méthode par maximum de vraisemblance produisent les mêmes résultats.\n\n8.1.2 Autres distributions et rôle de la fonction de lien\nÀ première vue, il est possible de se demander pourquoi ajouter ces deux éléments puisqu’ils ne font que complexifier le modèle. Pour mieux saisir la pertinence des GLM, prenons un exemple appliqué au cas d’une variable binaire. Admettons que nous souhaitons modéliser / prédire la probabilité qu’une personne à vélo décède lors d’une collision avec un véhicule motorisé. Notre variable dépendante est donc binaire (0 = survie, 1 = décès) et nous souhaitons la prédire avec trois variables continues que sont : la vitesse de déplacement du ou de la cycliste (\\(x_1\\)), la vitesse de déplacement du véhicule (\\(x_2\\)) et la masse du véhicule (\\(x_3\\)). Puisque la variable Y n’est pas continue, il serait absurde de supposer qu’elle est issue d’une distribution normale. Il serait plus logique de penser qu’elle provient d’une distribution de Bernoulli (pour rappel, une distribution de Bernoulli permet de modéliser un phénomène ayant deux issues possibles comme un lancer de pièce de monnaie (section 2.4). Plus spécifiquement, nous pourrions formuler l’hypothèse que nos trois variables \\(x_1\\), \\(x_2\\) et \\(x_3\\) influencent le paramètre p (la probabilité d’occurrence de l’évènement) d’une distribution de Bernoulli. À partir de ces premières hypothèses, nous pouvons écrire le modèle suivant :\n\\[\n\\begin{aligned}\n&Y \\sim Bernoulli(p)\\\\\n&g(p) = \\beta_0 + \\beta X\\\\\n&g(x) = x\n\\end{aligned}\n\\tag{8.4}\\]\nToutefois, le résultat n’est pas entièrement satisfaisant. En effet, p est une probabilité et, par nature, ce paramètre doit être compris entre 0 et 1 (entre 0 et 100 % de « chances de décès », ni plus ni moins). L’équation de régression que nous utilisons actuellement peut produire des résultats compris entre \\(-\\infty\\) et \\(+\\infty\\) pour p puisque rien ne contraint la somme \\(\\beta_0+ \\beta_1x_1+\\beta_2x_2+ \\beta_3x_3\\) à être comprise entre 0 et 1. Il est possible de visualiser le problème soulevé par cette situation avec les figures suivantes. Admettons que nous avons observé une variable Y binaire et que nous savons qu’elle est influencée par une variable X qui, plus elle augmente, plus les chances que Y soit 1 augmentent (figure 8.1).\n\n\n\n\nFigure 8.1: Exemple de données issues d’une distribution de Bernoulli\n\n\n\nSi nous utilisons l’équation de régression actuelle, cela revient à trouver la droite la mieux ajustée passant dans ce nuage de points (figure 8.2).\n\n\n\n\nFigure 8.2: Ajustement d’une droite de régression aux données issues d’une distribution de Bernoulli\n\n\n\nCe modèle semble bien cerner l’influence positive de X sur Y, mais la droite est au final très éloignée de chaque point, indiquant un faible ajustement du modèle. De plus, la droite prédit des probabilités négatives lorsque X est inférieur à −2,5 et des probabilités supérieures à 1 quand X est supérieur à 1. Elle est donc loin de bien représenter les données.\nC’est ici qu’intervient la fonction de lien. La fonction identitaire que nous avons utilisée jusqu’ici n’est pas satisfaisante, nous devons la remplacer par une fonction qui conditionnera la somme \\(\\beta_0+ \\beta_1x_1+\\beta_2x_2+ \\beta_3x_3\\) pour donner un résultat entre 0 et 1. Une candidate toute désignée est la fonction sigmoidale, plus souvent appelée la fonction logistique!\n\\[\n\\begin{aligned}\n&Y \\sim Bernoulli(p)\\\\\n&S(p) = \\beta_0 + \\beta X\\\\\n&S(x) = \\frac{e^{x}}{e^x+1}\n\\end{aligned}\n\\tag{8.5}\\]\nLa fonction logistique prend la forme d’un S. Plus la valeur entrée dans la fonction est grande, plus le résultat produit par la fonction est proche de 1 et inversement. Si nous reprenons l’exemple précédent, nous obtenons le modèle illustré à la figure 8.3.\n\n\n\n\nFigure 8.3: Utilisation de la fonction de lien logistique\n\n\n\nUne fois cette fonction insérée dans le modèle, nous constatons qu’une augmentation de la somme \\(\\beta_0+ \\beta_1x_1+\\beta_2x_2+ \\beta_3x_3\\) conduit à une augmentation de la probabilité p et inversement, et que cet effet est non linéaire. Nous avons donc maintenant un GLM permettant de prédire la probabilité d’un décès lors d’un accident en combinant une distribution et une fonction de lien adéquates.\n\n8.1.3 Conditions d’application\nLa famille des GLM englobe de (très) nombreux modèles du fait de la diversité de distributions existantes et des fonctions de liens utilisables. Cependant, certaines combinaisons sont plus souvent utilisées que d’autres. Nous présentons donc dans les prochaines sections les modèles GLM les plus communs. Les conditions d’application varient d’un modèle à l’autre, il existe cependant quelques conditions d’application communes à tous ces modèles :\n\nl’indépendance des observations (et donc des erreurs);\nl’absence de valeurs aberrantes / fortement influentes;\nl’absence de multicolinéarité excessive entre les variables indépendantes.\n\nCes trois conditions sont également valables pour les modèles LM tel qu’abordé dans le chapitre 7. La distance de Cook peut ainsi être utilisée pour détecter les potentielles valeurs aberrantes et le facteur d’inflation de la variance (VIF) pour détecter la multicolinéarité. Les conditions d’application particulières sont détaillées dans les sections dédiées à chaque modèle.\n\n8.1.4 Résidus et déviance\nDans la section sur la régression linéaire simple, nous avons présenté la notion de résidu, soit l’écart entre la valeur observée (réelle) de Y et la valeur prédite par le modèle. Pour un modèle GLM, ces résidus traditionnels (aussi appelés résidus naturels) ne sont pas très informatifs si la variable à modéliser est binaire, multinomiale ou même de comptage. Lorsque l’on travaille avec des GLM, nous préférons utiliser trois autres formes de résidus, soit les résidus de Pearson, les résidus de déviance et les résidus simulés.\nLes résidus de Pearson sont une forme ajustée des résidus classiques, obtenus par la division des résidus naturels par la racine carrée de la variance modélisée. Leur formule varie donc d’un modèle à l’autre puisque l’expression de la variance change en fonction de la distribution du modèle. Pour un modèle GLM gaussien, elle s’écrit :\n\\[\nr_i = \\frac{y_i - \\mu_i}{\\sigma}\n\\tag{8.6}\\]\nPour un modèle GLM de Bernoulli, elle s’écrit :\n\\[\nr_i = \\frac{y_i - p_i}{\\sqrt{p_i(1-p_i)}}\n\\tag{8.7}\\]\navec \\(\\mu_i\\) et \\(p_i\\) les prédictions du modèle pour l’observation i.\nLes résidus de déviance sont basés sur le concept de likelihood présenté dans la section 2.5.4.2. Pour rappel, le likelihood, ou la vraisemblance d’un modèle, correspond à la probabilité conjointe d’avoir observé les données Y selon le modèle étudié. Pour des raisons mathématiques (voir section 2.5.4.2), le log likelihood est plus souvent calculé. Plus cette valeur est forte, moins le modèle se trompe. Cette interprétation est donc inverse à celle des résidus classiques, c’est pourquoi le log likelihood est généralement multiplié par −2 pour retrouver une interprétation intuitive. Ainsi, pour chaque observation i, nous pouvons calculer :\n\\[\nd_i = \\mbox{-2} \\times log(P(y_i|M_e))\n\\tag{8.8}\\]\navec \\(d_i\\) le résidu de déviance et \\(P(y_i|M_e)\\) la probabilité d’avoir observé la valeur \\(y_i\\) selon le modèle étudié (\\(M_e\\)).\nLa somme de tous ces résidus est appelée la déviance totale du modèle.\n\\[\nD(M_e) = \\sum_{i=1}^n \\mbox{-2} \\times log(P(y_i|M_e))\n\\tag{8.9}\\]\nIl s’agit donc d’une quantité représentant à quel point le modèle est erroné vis-à-vis des données. Notez qu’en tant que telle, la déviance n’a pas d’interprétation directe en revanche, elle est utilisée pour calculer des mesures d’ajustement des modèles GLM.\nLes résidus simulés sont une avancée récente dans le monde des GLM, ils fournissent une définition et une interprétation harmonisée des résidus pour l’ensemble des modèles GLM. Dans la section sur les LM (section 7.2.2), nous avons vu comment interpréter les graphiques des résidus pour détecter d’éventuels problèmes dans le modèle. Cependant, cette technique est bien plus compliquée à mettre en œuvre pour les GLM puisque la forme attendue des résidus varie en fonction de la distribution choisie pour modéliser Y. La façon la plus efficace de procéder est d’interpréter les graphiques des résidus simulés qui ont la particularité d’être identiquement distribués, quel que soit le modèle GLM construit. Ces résidus simulés sont compris entre 0 et 1 et sont calculés de la manière suivante :\n\nÀ partir du modèle GLM construit, simuler S fois (généralement 1 000) une variable Y’ avec autant d’observation (n) que Y. Cette variable simulée est une combinaison de la prédiction du modèle (coefficient et variables indépendantes) et de sa dispersion (variance). Ces simulations représentent des variations vraisemblables de la variable Y si le modèle est correctement spécifié. En d’autres termes, si le modèle représente bien le phénomène à l’origine de la variable Y, alors les simulations Y’ issues du modèle devraient être proches de la variable Y originale. Pour une explication plus détaillée de ce que signifie simuler des données à partir d’un modèle, référez-vous au bloc attention intitulé Distinction entre simulation et prédiction dans la section 8.1.5.2.\nPour chaque observation, nous obtenons ainsi S valeurs formant une distribution \\(Ds_i\\), soit les valeurs simulées par le modèle pour cette observation.\nPour chacune de ces distributions, nous calculons la probabilité cumulative d’observer la vraie valeur \\(Y_i\\) d’après la distribution \\(Ds_i\\). Cette valeur est comprise entre 0 (toutes les valeurs simulées sont plus grandes que \\(Y_i\\)) et 1 (toutes les valeurs simulées sont inférieures à \\(Y_i\\)).\n\nSi le modèle est correctement spécifié, le résultat attendu est que la distribution de ces résidus est uniforme. En effet, il y a autant de chances que les simulations produisent des résultats supérieurs ou inférieurs à \\(Y_i\\) si le modèle représente bien le phénomène (Dunn et Smyth 1996; Gelman et Hill 2006). Si la distribution des résidus ne suit pas une loi uniforme, cela signifie que le modèle échoue à reproduire le phénomène à l’origine de Y, ce qui doit nous alerter sur sa pertinence.\n\n8.1.5 Vérification l’ajustement\nIl existe trois façons de vérifier l’ajustement d’un modèle GLM :\n\nutiliser des mesures d’ajustement (AIC, pseudo-R2, déviance expliquée, etc.);\ncomparer les distributions de la variable originale et celle des prédictions;\ncomparer les prédictions du modèle avec les valeurs originales.\n\nNotez d’emblée que vérifier la qualité d’ajustement d’un modèle (ajustement aux données originales) ne revient pas à vérifier la validité d’un modèle (respect des conditions d’application). Cependant, ces deux éléments sont généralement liés, car un modèle mal ajusté a peu de chances d’être valide et inversement.\n\n8.1.5.1 Mesures d’ajustement\nLes mesures d’ajustement sont des indicateurs plus ou moins arbitraires dont le principal intérêt est de faciliter la comparaison entre plusieurs modèles similaires. Il est nécessaire de les reporter, car dans certains cas, ils peuvent indiquer que des modèles sont très mal ajustés.\n\n8.1.5.1.1 Déviance expliquée\nRappelons que la déviance d’un modèle est une quantité représentant à quel point le modèle est erroné. L’objectif de l’indicateur de la déviance expliquée est d’estimer le pourcentage de la déviance maximale observable dans les données que le modèle est parvenu à expliquer. La déviance maximale observable dans les données est obtenue en utilisant la déviance totale du modèle nul (notée \\(M_n\\), soit un modèle dans lequel aucune variable indépendante n’est ajoutée et ne comportant qu’une constante). Cette déviance est maximale puisqu’aucune variable indépendante n’est présente dans le modèle. Nous calculons ensuite le pourcentage de cette déviance totale qui a été contrôlée par le modèle étudié (\\(M_e\\)).\n\\[\n\\mbox{déviance expliquée} = \\frac{D(M_n) - D(M_e)}{D(M_n)} = 1- \\frac{D(M_e)}{D(M_n)}\n\\tag{8.10}\\]\nIl s’agit donc d’un simple calcul de pourcentage entre la déviance maximale (\\(D(M_n)\\)) et la déviance expliquée par le modèle étudié (\\(D(M_n )-D(M_e)\\)). Cet indicateur est compris entre 0 et 1 : plus il est petit, plus la capacité de prédiction du modèle est faible. Attention, cet indicateur ne tient pas compte de la complexité du modèle. Ajouter une variable indépendante supplémentaire ne fait qu’augmenter la déviance expliquée, ce qui ne signifie pas que la complexification du modèle soit justifiée (voir l’encadré sur le principe de parcimonie, section 7.3.2).\n\n8.1.5.1.2 Pseudo-R2\n\nLe R2 est une mesure d’ajustement représentant la part de la variance expliquée dans un modèle linéaire classique. Cette mesure n’est pas directement transposable au cas des GLM puisqu’ils peuvent être appliqués à des variables non continues et anormalement distribuées. Toutefois, il existe des mesures semblables appelées pseudo-R2, remplissant un rôle similaire. Notez cependant qu’ils ne peuvent pas être interprétés comme le R2 classique (d’une régression linéaire multiple) : ils ne représentent pas la part de la variance expliquée. Ils sont compris dans l’intervalle 0 et 1; plus leurs valeurs s’approchent de 1, plus le modèle est ajusté.\n\n\n\n\nTableau 8.1: Principaux pseudos-\\(R^2\\)\n\n\n\n\n\n\n\nNom\nFormule\nCommentaire\n\n\n\nMcFadden\n\\(1-\\frac{loglike(M_e)}{loglike(M_n)}\\)\nLe rapport des loglikelihood, très proche de la déviance expliquée.\n\n\nMcFadden ajusté\n\\(1-\\frac{loglike(M_e)-K}{loglike(M_n)}\\)\nVersion ajustée du R2 de McFadden tenant compte du nombre de paramètres (k) dans le modèle.\n\n\nEfron\n\\(1-\\frac{\\sum_{i=1}^n(y_i-\\hat{y}_i)^2}{\\sum_{i=1}^n(y_i-\\bar{y}_i)^2}\\)\nRapport entre la somme des résidus classiques au carré (numérateur) et de la somme des écarts au carré à la moyenne (dénominateur). Notez que pour un GLM gaussien, ce pseudo-R2 est identique au R2 classique.\n\n\nCox & Snell\n\\(1-e^{-\\frac{2}{n}({loglike(M_e) - loglike(M_n))}}\\)\nTransformation de la déviance afin de la mettre sur une échelle de 0 à 1 (mais ne pouvant atteindre exactement 1).\n\n\nNagelkerke\n\\(\\frac{1-e^{-\\frac{2}{n}({loglike(M_e) - loglike(M_n))}}}{1-e^{\\frac{2*loglike(M_n)}{n}}}\\)\nAjustement du R2 de Cox et Snell pour que l’échelle de valeurs possibles puisse comporter 1 (attention, car les valeurs de ce R2 tendent à être toujours plus fortes que les autres).\n\n\n\n\n\n\nEn dehors du pseudo-R2 de McFadden ajusté, aucune de ces mesures ne tient compte de la complexité du modèle. Il est cependant important de les reporter, car des valeurs très faibles indiquent vraisemblablement un modèle avec une moindre capacité informative. À l’inverse, des valeurs trop fortes pourraient indiquer un problème de surajustement (voir encadré sur le principe de parcimonie, section 7.3.2).\n\n8.1.5.1.3 Critère d’information d’Akaike (AIC)\nProbablement l’indicateur le plus répandu, sa formule est relativement simple, car il s’agit seulement d’un ajustement de la déviance :\n\\[\nAIC = D(M_e) + 2K\n\\tag{8.11}\\]\navec K le nombre de paramètres à estimer dans le modèle (coefficients, paramètres de distribution, etc.).\nL’AIC n’a pas d’interprétation directe, mais permet de comparer deux modèles imbriqués (section 7.3.2). Plus l’AIC est petit, mieux le modèle est ajusté. L’idée derrière cet indicateur est relativement simple. Si la déviance D est grande, alors le modèle est mal ajusté. Ajouter des paramètres (des coefficients pour de nouvelles variables X, par exemple) ne peut que réduire D, mais cette réduction n’est pas forcément suffisamment grande pour justifier la complexification du modèle. L’AIC pondère donc D en lui ajoutant 2 fois le nombre de paramètres du modèle. Un modèle plus simple (avec moins de paramètres) parvenant à une même déviance est préférable à un modèle complexe (principe de parcimonie ou du rasoir d’Ockham), ce que permet de « quantifier » l’AIC. Attention, l’AIC ne peut pas être utilisé pour comparer des modèles non imbriqués. Notez que d’autres indicateurs similaires comme le WAIC, le BIC et le DIC sont utilisés dans un contexte d’inférence bayésienne. Retenez simplement que ces indicateurs sont conceptuellement proches du AIC et s’interprètent (à peu de choses près) de la même façon.\n\n8.1.5.2 Comparaison des distributions originales et prédites\nUne façon rapide de vérifier si un modèle est mal ajusté est de comparer la forme de la distribution originale et celle capturée par le modèle. L’idée est la suivante : si le modèle est bien ajusté aux données, il est possible de se servir de celui-ci pour générer de nouvelles données dont la distribution ressemble à celle des données originales. Si une différence importante est observable, alors les résultats du modèle ne sont pas fiables, car le modèle échoue à reproduire le phénomène étudié. Cette lecture graphique ne permet pas de s’assurer que le modèle est valide ou bien ajusté, mais simplement d’écarter rapidement les mauvais candidats. Notez que cette méthode ne s’applique pas lorsque la variable modélisée est binaire, multinomiale ou ordinale. Le graphique à réaliser comprend donc la distribution de la variable dépendante Y (représentée avec un histogramme ou un graphique de densité) et plusieurs distributions simulées à partir du modèle. Cette approche est plus répandue dans la statistique bayésienne, mais elle reste pertinente dans l’approche fréquentiste. Il est rare de reporter ces figures, mais elles doivent faire partie de votre diagnostic.\n\n\n\n\n\nDistinction entre simulation et prédiction\n\n\nNotez ici que simuler des données à partir d’un modèle et effectuer des prédictions à partir d’un modèle sont deux opérations différentes. Prédire une valeur à partir d’un modèle revient simplement à appliquer son équation de régression à des données. Si nous réutilisons les mêmes données, la prédiction renvoie toujours le même résultat, il s’agit de la partie systématique (ou déterministe) du modèle. Pour illustrer cela, admettons que nous avons ajusté un modèle GLM de type gaussien (fonction de lien identitaire) avec trois variables continues \\(X_1\\), \\(X_2\\) et \\(X_3\\) et des coefficients respectifs de 0,5, 1,2 et 1,8 ainsi qu’une constante de 7. Nous pouvons utiliser ces valeurs pour prédire la valeur attendue de \\(Y\\) quand \\(X_1= 3\\), \\(X_2= 5\\) et \\(X_3 = 5\\) :\n\\(\\mbox{Prédiction} = \\mbox{7 + 3}\\times \\mbox{0,5 + 5}\\times \\mbox{1,2 + 5}\\times\\mbox{1,8 = 23,5}\\)\nEn revanche, simuler des données à partir d’un modèle revient à ajouter la dimension stochastique (aléatoire) du modèle. Puisque notre modèle GLM est gaussien, il comporte un paramètre \\(\\sigma\\) (son écart-type); admettons, pour cet exemple, qu’il est de 1,2. Ainsi, avec les données précédentes, il est possible de simuler un ensemble infini de valeurs dont la distribution est la suivante : \\(Normal(\\mu = \\mbox{23,5, } \\sigma = \\mbox{1,2})\\). 95 % du temps, ces valeurs simulées se trouveront dans l’intervalle \\(\\mbox{[21,1-25,9]}\\) (\\(\\mu - 2\\sigma \\text{; } \\mu + 2\\sigma\\)), puisque cette distribution est normale. Les valeurs simulées dépendent donc de la distribution choisie pour le modèle et de l’ensemble des paramètres du modèle, pas seulement de l’équation de régression.\nSi vous aviez à ne retenir qu’une seule phrase de ce bloc, retenez que la prédiction ne se réfère qu’à la partie systématique du modèle (équation de régression), alors que la simulation incorpore la partie stochastique (aléatoire) de la distribution du modèle. Deux prédictions effectuées sur des données identiques donnent nécessairement des résultats identiques, ce qui n’est pas le cas pour la simulation.\n\n\n\n8.1.5.3 Comparaison des prédictions du modèle avec les valeurs originales\nLes prédictions d’un modèle devraient être proches des valeurs réelles observées. Si ce n’est pas le cas, alors le modèle n’est pas fiable et ses paramètres ne sont pas informatifs. Dépendamment de la nature de la variable modélisée (quantitative ou qualitative), plusieurs approches peuvent être utilisées pour quantifier l’écart entre valeurs réelles et valeurs prédites.\n\n8.1.5.3.1 Pour une variable quantitative\nLa mesure la plus couramment utilisée pour une variable quantitative est l’erreur moyenne quadratique (Root Mean Square Error – RMSE en anglais).\n\\[\nRMSE = \\sqrt{\\frac{\\sum_{i=1}^n(y_i - \\hat{y_i})^2}{n}}\n\\tag{8.12}\\]\nIl s’agit de la racine carrée de la moyenne des écarts au carré entre valeurs réelles et prédites. Le RMSE est exprimé dans la même unité que la donnée originale et nous donne une indication sur l’erreur moyenne de la prédiction du modèle. Admettons, par exemple, que nous modélisons les niveaux de bruit environnemental en ville en décibels et que notre modèle de régression ait un RMSE de 3,5. Cela signifierait qu’en moyenne notre modèle se trompe de 3,5 décibels (erreur pouvant être négative ou positive), ce qui serait énorme (3 décibels correspondent à une multiplication par deux de l’intensité sonore) et nous amènerait à reconsidérer la fiabilité du modèle. Notez que l’usage d’une moyenne quadratique plutôt qu’une moyenne arithmétique permet de donner plus d’influence aux larges erreurs et donc de pénaliser davantage des modèles faisant parfois de grosses erreurs de prédiction. Le RMSE est donc très sensible à la présence de valeurs aberrantes. À la place de la moyenne quadratique, il est possible d’utiliser la simple moyenne arithmétique des valeurs absolues des erreurs (MAE). Cette mesure est cependant moins souvent utilisée :\n\\[\nMAE = \\frac{\\sum_{i=1}^n|y_i - \\hat{y_i|}}{n}\n\\tag{8.13}\\]\nCes deux mesures peuvent être utilisées pour comparer la capacité de prédiction de deux modèles appliqués aux mêmes données, même s’ils ne sont pas imbriqués. Elles ne permettent cependant pas de prendre en compte la complexité du modèle. Un modèle plus complexe aura toujours des valeurs de RMSE et de MAE plus faibles.\n\n8.1.5.3.2 Pour une variable qualitative\nLorsque l’on modélise une variable qualitative, une erreur revient à prédire la mauvaise catégorie pour une observation. Il est ainsi possible de compter, pour un modèle, le nombre de bonnes et de mauvaises prédictions et d’organiser cette information dans une matrice de confusion. Cette dernière prend la forme suivante pour un modèle binaire :\n\n\n\n\nTableau 8.2: Exemple de matrice de confusion\n\nValeur prédite / Valeur réelle\nA\nB\nTotal (%)\n\n\n\nA\n15\n3\n18 (41,9)\n\n\nB\n5\n20\n25 (51,1)\n\n\nTotal (%)\n20 (46,6)\n23 (53,5)\n43 (81,4)\n\n\n\n\n\n\nEn colonne du tableau 8.2, nous avons les catégories observées et en ligne, les catégories prédites. La diagonale représente les prédictions correctes. Dans le cas présent, le modèle a bien catégorisé 35 (15 + 20) observations sur 43, soit une précision totale de 81,4 %; huit sont mal classifiées (18,6 %); cinq avec la modalité A ont été catégorisées comme des B, soit 20 % des A, et seules trois B ont été catégorisées comme des A (13 %).\nLa matrice ci-dessus (tableau 8.2) ne comporte que deux catégories possibles puisque la variable Y modélisée est binaire. Il est facile d’étendre le concept de matrice de confusion au cas des variables avec plus de deux modalités (multinomiale). Le tableau 8.3 est un exemple de matrice de confusion multinomiale.\n\n\n\n\nTableau 8.3: Exemple de matrice de confusion multinomiale\n\n\n\n\n\n\n\n\n\nValeur prédite / Valeur réelle\nA\nB\nC\nD\nTotal (%)\n\n\n\nA\n15\n3\n1\n5\n24 (18,7)\n\n\nB\n5\n20\n2\n12\n39 (30,4)\n\n\nC\n2\n10\n25\n8\n45 (35,2)\n\n\nD\n1\n0\n5\n14\n20 (15,6)\n\n\nTotal (%)\n23 (18,1)\n33 (25,7)\n33 (25,7)\n39 (30,5)\n128\n\n\n\n\n\n\nTrois mesures pour chaque catégorie peuvent être utilisées pour déterminer la capacité de prédiction du modèle :\n\nLa précision (precision en anglais), soit le nombre de fois où une catégorie a été correctement prédite, divisé par le nombre de fois où la catégorie a été prédite.\nLe rappel (recall en anglais), soit le nombre de fois où une catégorie a été correctement prédite divisé par le nombre de fois où elle se trouve dans les données originales.\nLe score F1 est la moyenne harmonique entre la précision et le rappel, soit :\n\n\\[\n\\text{F1} = 2 \\times \\frac{\\text{précision} \\times \\text{rappel}}{\\text{précision} + \\text{rappel}}\n\\tag{8.14}\\]\nIl est possible de calculer les moyennes pondérées des différents indicateurs (macro-indicateurs) afin de disposer d’une valeur d’ensemble pour le modèle. La pondération est faite en fonction du nombre de cas observé de chaque catégorie; l’idée étant qu’il est moins grave d’avoir des indicateurs plus faibles pour des catégories moins fréquentes. Cependant, il est tout à fait possible que cette pondération ne soit pas souhaitable. C’est par exemple le cas dans de nombreuses études en santé portant sur des maladies rares où l’attention est concentrée sur ces catégories peu fréquentes.\nLe coefficient de Kappa (variant de 0 à 1) peut aussi être utilisé pour quantifier la fidélité générale de la prédiction du modèle. Il est calculé avec l’équation 8.15 :\n\\[\nk = \\frac{Pr(a)-Pr(e)}{1-Pr(e)}\n\\tag{8.15}\\]\navec \\(Pr(a)\\) la proportion d’accords entre les catégories observées et les catégories prédites, et \\(Pr(e)\\) la probabilité d’un accord aléatoire entre les catégories observées et les catégories prédites (équation 8.16).\n\\[\nPr(e) = \\sum^{J}_{j=1} \\frac{Cnt_{prédit}(j)}{n\\times2} \\times \\frac{Cnt_{réel}(j)}{n\\times2}\n\\tag{8.16}\\]\navec n le nombre d’observations, \\(Cnt_{prédit}(j)\\) le nombre de fois où le modèle prédit la catégorie j et \\(Cnt_{réel}(j)\\) le nombre de fois où la catégorie j a été observée.\nPour l’interprétation du coefficient de Kappa, référez-vous au tableau 8.4.\n\n\n\n\nTableau 8.4: Inteprétation des valeurs du coefficient de Kappa\n\nK\nInterprétation\n\n\n\n&lt; 0\nDésaccord\n\n\n0 - 0,20\nAccord très faible\n\n\n0,21 - 0,40\nAccord faible\n\n\n0,41 - 0,60\nAccord modéré\n\n\n0,61 - 0,80\nAccord fort\n\n\n0,81 - 1\nAccord presque parfait\n\n\n\n\n\n\nEnfin, un test statistique basé sur la distribution binomiale peut être utilisé pour vérifier que le modèle atteint un niveau de précision supérieur au seuil de non-information. Ce seuil correspond à la proportion de la modalité la plus présente dans le jeu de données. Dans la matrice de confusion utilisée dans le tableau 8.4, ce seuil est de 30,5 % (catégorie D), ce qui signifie qu’un modèle prédisant tout le temps la catégorie D aurait une précision de 30,5 % pour cette catégorie. Il est donc nécessaire que notre modèle fasse mieux que ce seuil.\nDans le cas de la matrice de confusion du tableau 8.3, nous obtenons donc les valeurs affichées dans le tableau 8.5.\n\n\n\n\nTableau 8.5: Indicateurs de qualité de prédiction\n\n\nprécision\nrappel\nF1\n\n\n\nA\n65,2\n31,3\n42,3\n\n\nB\n60,6\n25,6\n36,0\n\n\nC\n75,8\n27,8\n40,7\n\n\nD\n35,9\n35,0\n35,4\n\n\nmacro\n57,8\n30,0\n38,2\n\n\nKappa\n0,44\n\n\n\n\nValeur de p (précision &gt; NIR)\n&lt; 0,0001\n\n\n\n\n\n\n\n\nÀ la lecture du tableau 8.5, nous remarquons que :\n\nLa catégorie D est la moins bien prédite des quatre catégories (faible précision et faible rappel).\nLa catégorie C a une forte précision, mais un faible rappel, ce qui signifie que de nombreuses observations étant originalement des A, B ou D ont été prédites comme des C. Ce constat est également vrai pour la catégorie B.\nLe coefficient de Kappa indique un accord modéré entre les valeurs originales et la prédiction.\nLa probabilité que la précision du modèle ne dépasse pas le seuil de non-information est inférieure à 0,001, indiquant que le modèle à une précision supérieure à ce seuil.\n\n8.1.6 Comparaison de deux modèles GLM\nTel qu’abordé dans le chapitre sur les régressions linéaires classiques, il est courant de comparer plusieurs modèles imbriqués (section 7.3.2). Cette procédure permet de déterminer si l’ajout d’une ou de plusieurs variables contribue à significativement améliorer le modèle. Il est possible d’appliquer la même démarche aux GLM à l’aide du test de rapport de vraisemblance (likelihood ratio test). Le principe de base de ce test est de comparer le likelihood de deux modèles GLM imbriqués; la valeur de ce test se calcule avec l’équation suivante :\n\\[\nLR = 2(loglik(M_2) - loglik(M_1))\n\\tag{8.17}\\]\navec \\(M_2\\) un modèle reprenant toutes les variables du modèle \\(M_1\\), impliquant donc que \\(loglik(M_2) &gt;= loglik(M_1)\\).\nAvec ce test, nous supposons que le modèle \\(M_2\\), qui comporte plus de paramètres que le modèle \\(M_1\\), devrait être mieux ajusté aux données. Si c’est bien le cas, la différence entre les loglikelihood de deux modèles devrait être supérieure à zéro. La valeur calculée LR suit une distribution du khi-deux avec un nombre de degrés de liberté égal au nombre de paramètres supplémentaires dans le modèle \\(M_2\\) comparativement à \\(M_1\\). Avec ces deux informations, il est possible de déterminer la valeur de p associée à ce test et de déterminer si \\(M_2\\) est significativement mieux ajusté que \\(M_1\\) aux données. Notez qu’il existe aussi deux autres tests (test de Wald et test de Lagrange) ayant la même fonction. Il s’agit, dans les deux cas, d’approximation du test de rapport des vraisemblances dont la puissance statistique est inférieure au test de rapport de vraisemblance (Neyman, Pearson et Pearson 1933).\nDans les prochaines sections, nous décrivons les modèles GLM les plus couramment utilisés. Il en existe de nombreuses variantes que nous ne pouvons pas toutes décrire ici. L’objectif est de comprendre les rouages de ces modèles afin de pouvoir, en cas de besoin, transposer ces connaissances sur des modèles plus spécifiques. Pour faciliter la lecture de ces sections, nous vous proposons une carte d’identité de chacun des modèles présentés. Elles contiennent l’ensemble des informations pertinentes à retenir pour chaque modèle."
  },
  {
    "objectID": "08-GLM.html#sec-082",
    "href": "08-GLM.html#sec-082",
    "title": "8  Régressions linéaires généralisées (GLM)",
    "section": "\n8.2 Modèles GLM pour des variables qualitatives",
    "text": "8.2 Modèles GLM pour des variables qualitatives\nNous abordons en premier les principaux GLM utilisés pour modéliser des variables binaires, multinomiales et ordinales. Prenez bien le temps de saisir le fonctionnement du modèle logistique binomial, car il sert de base pour les trois autres modèles présentés.\n\n8.2.1 Modèle logistique binomial\nLe modèle logistique binomial est une généralisation du modèle de Bernoulli que nous avons présenté dans l’introduction de cette section. Le modèle logistique binomiale couvre donc deux cas de figure :\n\nLa variable observée est binaire (0 ou 1). Dans ce cas, le modèle logistique binomiale devient un simple modèle de Bernoulli.\nLa variable observée est un comptage (nombre de réussites) et nous disposons d’une autre variable avec le nombre de réplications de l’expérience. Par exemple, pour chaque intersection d’un réseau routier, nous pourrions avoir le nombre de décès à vélo (variable Y de comptage) et le nombre de collisions vélo / automobile (variable quantifiant le nombre d’expériences, chaque collision étant une expérience). Spécifiquement, nous tentons de prédire le paramètre p de la distribution binomiale à l’aide de notre équation de régression et de la fonction logistique comme fonction de lien. Notez ici que cette fonction de lien influence directement l’interprétation des paramètres du modèle. Pour rappel, cette fonction est définie comme :\n\n\\[\ng(x) = ln(\\frac{x}{1-x})\n\\]\navec \\(ln\\) étant le logarithme naturel.\nAu-delà de sa propriété mathématique assurant que \\(g(x) \\in \\mathopen[0,1\\mathclose]\\), cette fonction offre une interprétation intéressante. La partie \\(\\frac{x}{1-x}\\) est une cote et s’interprète en termes de chances d’observer un évènement. Par exemple, dans le cas des accidents de cyclistes, si la probabilité d’observer un décès suite à une collision est de 0,1, alors la cote de cet évènement est \\(\\frac{\\frac{1}{10}}{\\frac{9}{10}} = \\frac{1}{9}\\) soit un contre neuf. Dans un modèle GLM logistique, les coefficients ajustés pour les variables indépendantes représentent des logarithmes de rapport de cote, car ils comparent les chances d’observer l’évènement (y = 1) en fonction des valeurs des variables indépendantes.\n\n\n\n\nTableau 8.6: Carte d’identité du modèle logistique binomial\n\n\n\n\n\n\nType de variable dépendante\nVariable binaire (0 ou 1) ou comptage de réussite à une expérience (ex : 3 réussites sur 5 expériences)\n\n\nDistribution utilisée\nBinomiale\n\n\nFormulation\n\n\\(Y \\sim Binomial(p)\\) \\(g(p) = \\beta_0 + \\beta X\\) \\(g(x) = log(\\frac{x}{1-x})\\)\n\n\n\nFonction de lien\nLogistique\n\n\nParamètre modélisé\np\n\n\nParamètres à estimer\n\n\\(\\beta_0\\), \\(\\beta\\)\n\n\n\nConditions d’application\nNon-séparation complète, absence de sur-dispersion ou de sous-dispersion\n\n\n\n\n\n\n\n8.2.1.1 Interprétation des paramètres\nLes seuls paramètres à estimer du modèle sont les coefficients \\(\\beta\\) et la constante \\(\\beta_0\\). La fonction de lien logistique transforme la valeur de ces coefficients, en conséquence, ils ne peuvent plus être interprétés directement. \\(\\beta_0\\) et \\(\\beta\\) sont exprimés dans une unité particulière: des logarithmes de rapports de cote (log odd ratio). Le rapport de cote est relativement facile à interpréter contrairement à son logarithme. Pour l’obtenir, il suffit d’utiliser la fonction exponentielle (l’inverse de la fonction logarithme) pour passer des log rapports de cote à de simples rapports de cote. Donc si \\(exp(\\beta)\\) est inférieur à 1, il réduit les chances d’observer l’évènement et inversement si \\(exp(\\beta)\\) est supérieur à 1.\nPar exemple, admettons que nous ayons un coefficient \\(\\beta_1\\) de 1,2 pour une variable \\(X_1\\) dans une régression logistique. Il est nécessaire d’utiliser son exponentiel pour l’interpréter de façon intuitive. \\(exp\\mbox{(1,2)} = \\mbox{3,32}\\), ce qui signifie que lorsque \\(X_1\\) augmente d’une unité, les chances d’observer 1 plutôt que 0 comme valeur de Y sont multipliées par 3,32. Admettons maintenant que \\(\\beta_1\\) vaille −1,2, nous calculons donc \\(exp\\mbox{(-1,2) = 0,30}\\), ce qui signifie qu’à chaque augmentation d’une unité de \\(X_1\\), les chances d’observer 1 plutôt que 0 comme valeur de Y sont multipliées par 0,30. En d’autres termes,les chances d’observer 1 plutôt que 0 sont divisées par 3,33 (\\(\\mbox{1}/\\mbox{0,30} = \\mbox{3,33}\\)), soit une diminution de 70 % (\\(\\mbox{1}-\\mbox{0,3} = \\mbox{0,7}\\)) des chances d’observer 1 plutôt que 0.\n\n\n\n\n\nLes rapports de cotes\n\n\nLe rapport de cote ou rapport des chances est une mesure utilisée pour exprimer l’effet d’un facteur sur une probabilité. Il est très utilisé dans le domaine de la santé, mais aussi des paris. Prenons un exemple concret avec le port du casque à vélo. Si sur 100 accidents impliquant des cyclistes portant un casque, nous observons seulement 3 cas de blessures graves à la tête, contre 15 dans un second groupe de 100 cyclistes ne portant pas de casque, nous pouvons calculer le rapport de cote suivant :\n\\[\n\\frac{p(1-q)}{q(1-p)} = \\frac{\\mbox{0,15} \\times (\\mbox{1}-\\mbox{0,03})}{\\mbox{0,03} \\times (\\mbox{1}-\\mbox{0,15})} = \\mbox{5,71}\n\\]\navec p la probabilité d’observer le phénomène (ici la blessure grave à la tête) dans le groupe 1 (ici les cyclistes sans casque) et q la probabilité d’observer le phénomène dans le groupe 2 (ici les cyclistes avec un casque). Ce rapport de cote indique que les cyclistes sans casques ont 5,71 fois plus de risques de se blesser gravement à la tête lors d’un accident comparativement aux cyclistes portant un casque.\n\n\n\n8.2.1.2 Conditions d’application\nLa non-séparation complète signifie qu’aucune des variables X n’est, à elle seule, capable de parfaitement distinguer les deux catégories 0 et 1 de la variable Y. Dans un tel cas de figure, les algorithmes d’ajustement utilisés pour estimer les paramètres des modèles sont incapables de converger. Notez aussi l’absurdité de créer un modèle pour prédire une variable Y si une variable X est capable à elle seule de la prédire à coup sûr. Ce problème est appelé un effet de Hauck-Donner. Il est assez facile de le repérer, car la plupart du temps les fonctions de R signalent ce problème (message d’erreur sur la convergence). Sinon, des valeurs extrêmement élevées ou faibles pour certains rapports de cote peuvent aussi indiquer un effet de Hauck-Donner.\nLa sur-dispersion est un problème spécifique aux distributions n’ayant pas de paramètre de dispersion (binomiale, de Poisson, exponentielle, etc.), pour lesquelles la variance dépend directement de l’espérance. La sur-dispersion désigne une situation dans laquelle les résidus (ou erreurs) d’un modèle sont plus dispersés que ce que suppose la distribution utilisée. À l’inverse, il est aussi possible (mais rare) d’observer des cas de sous-dispersion (lorsque la dispersion des résidus est plus petite que ce que suppose la distribution choisie). Ce cas de figure se produit généralement lorsque le modèle parvient à réaliser une prédiction trop précise pour être crédible. Si vous rencontrez une forte sous-dispersion, cela signifie souvent que l’une de vos variables indépendantes provoque une séparation complète. La meilleure option, dans ce cas, est de supprimer la variable en question du modèle. La variance attendue d’une distribution binomiale est \\(nb \\times p \\times(1-p)\\), soit le produit entre le nombre de tirages, la probabilité de réussite et la probabilité d’échec. À titre d’exemple, si nous considérons une distribution binomiale avec un seul tirage et 50 % de chances de réussite, sa variance serait : \\(1 \\times \\mbox{0,5} \\times \\mbox{(1}-\\mbox{0,5}) = \\mbox{0,25}\\).\nPlusieurs raisons peuvent expliquer la présence de sur-dispersion dans un modèle :\n\nil manque des variables importantes dans le modèle, conduisant à un mauvais ajustement et donc une sur-dispersion des erreurs;\nles observations ne sont pas indépendantes, impliquant qu’une partie de la variance n’est pas contrôlée et augmente les erreurs;\nla probabilité de succès de chaque expérience varie d’une répétition à l’autre (différentes distributions).\n\nLa conséquence directe de la sur-dispersion est la sous-estimation de la variance des coefficients de régression. En d’autres termes, la sur-dispersion conduit à sous-estimer notre incertitude quant aux coefficients obtenus et réduit les valeurs de p calculées pour ces coefficients. Les risques de trouver des résultats significatifs à cause des fluctuations d’échantillonnage augmentent.\nPour détecter une sur-dispersion ou une sous-dispersion dans un modèle logistique binomial, il est possible d’observer les résidus de déviance du modèle. Ces derniers sont supposés suivre une distribution du khi-deux avec n−k degrés de liberté (avec n le nombre d’observations et k le nombre de coefficients dans le modèle). Par conséquent, la somme des résidus de déviance d’un modèle logistique binomiale divisée par le nombre de degrés de liberté devrait être proche de 1. Une légère déviation (jusqu’à 0,15 au-dessus ou au-dessous de 1) n’est pas alarmante; au-delà, il est nécessaire d’ajuster le modèle.\nNotez que si la variable Y modélisée est exactement binaire (chaque expérience est indépendante et n’est composée que d’un seul tirage) et que le modèle utilise donc une distribution de Bernoulli, le test précédent pour détecter une éventuelle sur-dispersion n’est pas valide. Hilbe (2009) parle de sur-dispersion implicite pour le modèle de Bernoulli et recommande notamment de toujours ajuster les erreurs standards des modèles utilisant des distributions de Bernoulli, binomiale et de Poisson. L’idée ici est d’éviter d’être trop optimiste face à l’incertitude du modèle sur les coefficients et de l’ajuster en conséquence. Pour cela, il est possible d’utiliser des quasi-distributions ou des estimateurs robustes (Zeileis 2004). Notez que si le modèle ne souffre pas de sur ou sous-dispersion, ces ajustements produisent des résultats équivalents aux résultats non ajustés.\n\n8.2.1.3 Exemple appliqué dans R\nPrésentation des données\nPour illustrer le modèle logistique binomial, nous utilisons ici un jeu de données proposé par l’Union européenne : l’enquête de déplacement sur la demande pour des systèmes de transports innovants. Pour cette enquête, un échantillon de 1 000 individus représentatifs de la population a été constitué dans chacun des 26 États membres de l’UE, soit un total de 26 000 observations. Pour chaque individu, plusieurs informations ont été collectées relatives à la catégorie socioprofessionnelle, le mode de transport le plus fréquent, le temps du trajet de son déplacement le plus fréquent et son niveau de sensibilité à la cause environnementale. Nous modélisons ici la probabilité qu’un individu déclare utiliser le plus fréquemment le vélo comme moyen de transport. Les variables explicatives sont résumées au tableau 8.7. Il existe bien évidemment un grand nombre de facteurs individuels qui influence la prise de décision sur le mode de transport. Les résultats de ce modèle ne doivent donc pas être pris avec un grand sérieux; il est uniquement construit à des fins pédagogiques, sans cadre conceptuel solide.\n\n\n\n\nTableau 8.7: Variables indépendantes utilisées pour prédire le mode de transport le plus utilisé\n\n\n\n\n\n\n\nNom de la variable\nSignification\nType de variable\nMesure\n\n\n\nPays\nPays de résidence\nVariable multinomiale\nLe nom d’un des 26 pays membres de l’UE\n\n\nSexe\nSexe biologique\nVariable binaire\nHomme ou femme\n\n\nAge\nÂge biologique\nVariable continue\nL’âge en nombre d’années variant de 16 à 84 ans dans le jeu de données\n\n\nEducation\nNiveau d’éducation maximum atteint\nVariable multinomiale\nPremier cycle, secondaire inférieur (classes supérieures de l’école élémentaire), secondaire, troisième cycle\n\n\nStatutEmploi\nEmployé ou non\nVariable binaire\nEmployé ou non\n\n\nRevenu\nNiveau de revenu autodéclaré\nVariable multinomiale\nTrès faible revenu, faible revenu, revenu moyen, revenu élevé, revenu très élevé, sans reponse\n\n\nResidence\nLieu de résidence\nVariable multinomiale\nZone rurale, petite ou moyenne ville (moins de 250 000 habitants), grande ville (entre 250 000 et 1 million d’habitants) , aire métropolitaine (plus d’un million d’habitants)\n\n\nDuree\nDurée du voyage le plus fréquent autodéclarée (en minutes)\nVariable continue\nNombre de minutes\n\n\nConsEnv\nPréoccupation environnementale\nVariable ordinale\nÉchelle de Likert de 1 à 10\n\n\n\n\n\n\nVérification des conditions d’application\nLa première étape de la vérification des conditions d’application est de calculer les valeurs du facteur d’inflation de variance (VIF) pour s’assurer de l’absence de multicolinéarité trop forte entre les variables indépendantes. L’ensemble des valeurs de VIF sont inférieures à 5, indiquant l’absence de multicolinéarité excessive dans le modèle.\n\nlibrary(car)\n# Chargement des données\ndfenquete &lt;- read.csv(\"data/glm/enquete_transport_UE.csv\", encoding = 'UTF-8')\ndfenquete$Pays &lt;- relevel(as.factor(dfenquete$Pays), ref = \"Allemagne\")\n# Vérification du VIF\nmodel1 &lt;- glm(y ~\n              Pays + Sexe + Age + Education + StatutEmploi + Revenu +\n              Residence + Duree + ConsEnv,\n            family = binomial(link=\"logit\"),\n            data = dfenquete\n)\nvif(model1)\n\n                 GVIF Df GVIF^(1/(2*Df))\nPays         1.794797 27        1.010890\nSexe         1.028618  1        1.014208\nAge          1.060256  1        1.029687\nEducation    1.428872  3        1.061285\nStatutEmploi 1.151879  1        1.073256\nRevenu       1.220934  5        1.020162\nResidence    1.130526  3        1.020658\nDuree        1.042638  1        1.021096\nConsEnv      1.090987  1        1.044503\n\n\nLa seconde étape de vérification est le calcul des distances de Cook et l’identification d’éventuelles valeurs aberrantes (figure 8.4).\n\n# Calcul et représentation des distances de Cook\ncookd &lt;- data.frame(\n  dist = cooks.distance(model1),\n  oid = 1:nrow(dfenquete)\n)\nggplot(cookd) + \n  geom_point(aes(x = oid, y = dist ), color = rgb(0.1,0.1,0.1,0.4), size = 1)+\n  geom_hline(yintercept = 0.002, color = \"red\")+\n  labs(x = \"observations\", y = \"distance de Cook\") + \n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank())\n\n\n\nFigure 8.4: Distances de Cook pour le modèle binomial avec toutes les observations\n\n\n\nLe calcul de la distance de Cook révèle un ensemble d’observations se démarquant nettement des autres (délimitées dans la figure 8.4) par la ligne rouge). Nous les isolons dans un premier temps pour les analyser.\n\n# Isoler les observations avec de très fortes valeurs de Cook\n# valeur seuil choisie : 0,002\ncas_etranges &lt;- subset(dfenquete, cookd$dist&gt;=0.002)\ncat(nrow(cas_etranges),'observations se démarquant dans le modèle')\n\n19 observations se démarquant dans le modèle\n\nprint(cas_etranges)\n\n          X y       Pays  Sexe Age            Education Statut_emploi\n7660   7660 1  Slovaquie homme  50           universite      Employed\n25150 25150 1      Malte homme  16           secondaire  Not Employed\n25227 25227 1      Malte femme  53 secondaire inferieur  Not Employed\n25309 25309 1      Malte femme  32           secondaire      Employed\n25322 25322 1      Malte homme  38           universite      Employed\n25536 25536 1      Malte homme  27           universite      Employed\n25541 25541 1      Malte homme  38 secondaire inferieur      Employed\n25549 25549 1      Malte homme  31           universite      Employed\n25690 25690 1 Luxembourg homme  32           universite      Employed\n26190 26190 1     Chypre homme  24           secondaire  Not Employed\n26201 26201 1     Chypre homme  25           secondaire      Employed\n26244 26244 1     Chypre homme  32           secondaire      Employed\n26269 26269 1     Chypre homme  60           secondaire  Not Employed\n26303 26303 1     Chypre homme  59           secondaire  Not Employed\n26393 26393 1     Chypre homme  30        premier cycle      Employed\n26444 26444 1     Chypre femme  52           universite      Employed\n26516 26516 1     Chypre homme  21           universite  Not Employed\n26549 26549 1     Chypre homme  28           universite      Employed\n26600 26600 1     Chypre homme  36           secondaire      Employed\n            Revenu            Residence Duree mode_pref StatutEmploi ConsEnv\n7660         moyen          zone rurale   775      velo      employe       7\n25150        moyen          zone rurale    15      velo  sans emploi       3\n25227        moyen          zone rurale    45    marche  sans emploi       5\n25309        moyen petite-moyenne ville    25    marche      employe       4\n25322        eleve          zone rurale    30    marche      employe      10\n25536   tres eleve petite-moyenne ville    14      velo      employe      10\n25541        moyen          zone rurale     5    marche      employe       8\n25549 sans reponse petite-moyenne ville    60      velo      employe      10\n25690   tres eleve petite-moyenne ville   720      velo      employe       6\n26190        moyen         grande ville    20      velo  sans emploi       5\n26201       faible          zone rurale    20      velo      employe       5\n26244  tres faible petite-moyenne ville    18      velo      employe       4\n26269        moyen petite-moyenne ville     5      velo  sans emploi       7\n26303        moyen          zone rurale     7      velo  sans emploi       8\n26393   tres eleve petite-moyenne ville    61      velo      employe       5\n26444        eleve petite-moyenne ville   120      velo      employe       3\n26516        moyen petite-moyenne ville    25      velo  sans emploi       8\n26549  tres faible petite-moyenne ville    15      velo      employe       2\n26600        moyen petite-moyenne ville     8      velo      employe       1\n\n\nÀ la lecture des valeurs pour ces 19 cas étranges, nous remarquons que la plupart des observations proviennent de Malte et de Chypre. Ces deux petites îles constituent des cas particuliers en Europe et devraient vraisemblablement faire l’objet d’une analyse séparée. Nous décidons donc de les retirer du jeu de données. Deux autres observations étranges sont observables en Slovaquie et au Luxembourg. Dans les deux cas, les répondants ont renseigné des temps de trajet fantaisistes de respectivement 775 et 720 minutes. Nous les retirons donc également de l’analyse.\n\n# Retirer les observations aberrantes\ndfenquete2 &lt;- subset(dfenquete, (dfenquete$Pays %in% c(\"Malte\", \"Chypre\")) == F & \n                  dfenquete$Duree &lt; 400)\n# Réajuster le modèle\nmodel2 &lt;- glm(y ~\n              Pays + Sexe + Age + Education + StatutEmploi + Revenu +\n              Residence + Duree + ConsEnv,\n            family = binomial(link=\"logit\"),\n            data = dfenquete2)\n# Recalculer la distance de Cook\ncookd &lt;- data.frame(\n  dist = cooks.distance(model2),\n  oid = 1:nrow(dfenquete2)\n)\nggplot(cookd) + \n  geom_point(aes(x = oid, y = dist ), color = rgb(0.1,0.1,0.1,0.4), size = 1)+\n  labs(x = \"observations\", y = \"distance de Cook\") + \n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank())\n\n\n\nFigure 8.5: Distances de Cook pour le modèle binomial sans les valeurs aberrantes\n\n\n\nAprès avoir retiré ces valeurs aberrantes, nous n’observons plus de nouveaux cas singuliers avec les distances de Cook (figure 8.5).\nLa prochaine étape de vérification des conditions d’application est l’analyse des résidus simulés. Nous commençons donc par calculer ces résidus et afficher leur histogramme (figure 8.6).\n\nlibrary(DHARMa)\n# Extraire les probabilités prédites par le modèle\nprobs &lt;- predict(model2, type = \"response\")\n# Calculer 1000 simulations a partir du modele ajuste\nsims &lt;- lapply(1:length(probs), function(i){\n  p &lt;- probs[[i]]\n  vals &lt;- rbinom(n = 1000, size = 1, prob = p)\n})\nmatsim &lt;- do.call(rbind, sims)\n# Utiliser le package DHARMa pour calculer les résidus simulés\nsim_res &lt;- createDHARMa(simulatedResponse = matsim, \n                            observedResponse = dfenquete2$y,\n                            fittedPredictedResponse = probs,\n                            integerResponse = TRUE)\nggplot()+\n  geom_histogram(aes(x = residuals(sim_res)),\n                 bins = 30, fill = \"white\", color = rgb(0.3,0.3,0.3))+\n  labs(x = \"résidus simulés\", y = \"fréquence\")\n\n\n\nFigure 8.6: Distribution des résidus simulés pour le modèle binomial\n\n\n\nL’histogramme indique clairement que les résidus simulés suivent une distribution uniforme (figure 8.6). Il est possible d’aller plus loin dans le diagnostic en utilisant la fonction plot sur l’objet sim_res. La partie de droite de la figure ainsi obtenue (figure 8.7) est un diagramme de quantiles-quantiles (ou Q-Q plot). Les points du graphique sont supposés suivre une ligne droite matérialisée par la ligne rouge. Une déviation de cette ligne indique un éloignement des résidus de leur distribution attendue. Trois tests sont également réalisés par la fonction :\n\nLe premier (Test de Kolmogorov-Smirnov, KS test) permet de tester si les points dévient significativement de la ligne droite. Dans notre cas, la valeur de p n’est pas significative, indiquant que les résidus ne dévient pas de la distribution uniforme.\nLe second test permet de vérifier la présence de sur ou sous-dispersion. Dans notre cas, ce test n’est pas significatif, n’indiquant aucun problème de sur-dispersion ou de sous-dispersion.\nLe dernier test permet de vérifier si des valeurs aberrantes sont présentes dans les résidus. Une valeur non significative indique une absence de valeurs aberrantes.\n\nLe second graphique permet de comparer les résidus et les valeurs prédites. L’idéal est donc d’observer une ligne droite horizontale au milieu du graphique qui indiquerait une absence de relation entre les valeurs prédites et les résidus (ce que nous observons bien ici).\n\nplot(sim_res)\n\n\n\n\n\nFigure 8.7: Diagnostic des résidus simulés par le package DHARMa\n\n\n\nL’analyse approfondie des résidus nous permet donc de conclure que le modèle respecte les conditions d’application et que nous pouvons passer à la vérification de la qualité d’ajustement du modèle.\nVérification de la qualité d’ajustement\nPour calculer les différents R2 d’un modèle GLM, nous proposons la fonction suivante :\n\nrsqs &lt;- function(loglike.full, loglike.null, full.deviance, null.deviance, nb.params, n){\n  # Calcul de la déviance expliquée\n  explained_dev &lt;- 1-(full.deviance / null.deviance)\n  K &lt;- nb.params\n  # R2 de McFadden ajusté\n  r2_faddenadj &lt;- 1- (loglike.full - K) / loglike.null\n  Lm &lt;- loglike.full\n  Ln &lt;- loglike.null\n  # R2 de Cox and Snell\n  Rcs &lt;- 1 - exp((-2/n) * (Lm-Ln))\n  # R2 de Nagelkerke\n  Rn &lt;- Rcs / (1-exp(2*Ln/n))\n  return(\n    list(\"deviance expliquee\" = explained_dev,\n         \"McFadden ajuste\" = r2_faddenadj,\n         \"Cox and Snell\" = Rcs,\n         \"Nagelkerke\" = Rn\n    )\n  )\n}\n\nNous l’utilisons pour l’ensemble des modèles GLM de ce chapitre. Dans le cas du modèle binomial, nous obtenons :\n\n# Ajuster un modele null avec seulement une constante\nmodel2.null &lt;- glm(y ~1,\n            family = binomial(link=\"logit\"),\n            data = dfenquete2)\n# Calculer les R2\nrsqs(loglike.full = as.numeric(logLik(model2)), # loglikelihood du modèle complet\n     loglike.null = as.numeric(logLik(model2.null)), # loglikelihood du modèle nul\n     full.deviance = deviance(model2), # déviance du modèle complet\n     null.deviance = deviance(model2.null), # déviance du modèle nul\n     nb.params = model2$rank, # nombre de paramètres dans le modèle\n     n = nrow(dfenquete2) # nombre d'observations\n     )\n\n$`deviance expliquee`\n[1] 0.0876057\n\n$`McFadden ajuste`\n[1] 0.08357379\n\n$`Cox and Snell`\n[1] 0.0689509\n\n$Nagelkerke\n[1] 0.1236597\n\n\nLa déviance expliquée par le modèle est de 8,8 %, les pseudos R2 de McFadden (ajusté), d’Efron et de Nagelkerke sont respectivement 0,084, 0,069 et 0,124. Toutes ces valeurs sont relativement faibles et indiquent qu’une large partie de la variabilité de Y reste inexpliquée.\nPour vérifier la qualité de prédiction du modèle, nous devons comparer les catégories prédites et les catégories réelles de notre variable dépendante et construire une matrice de confusion. Cependant, un modèle GLM binomial prédit la probabilité d’appartenance au groupe 1 (ici les personnes utilisant le vélo pour effectuer leur déplacement le plus fréquent). Pour convertir ces probabilités prédites en catégories prédites, il faut choisir un seuil de probabilité au-delà duquel nous considérons que la valeur attendue est 1 (cycliste) plutôt que 0 (autre). Un exemple naïf serait de prendre le seuil 0,5, ce qui signifierait que si le modèle prédit qu’une observation a au moins 50 % de chance d’être une personne à vélo, alors nous l’attribuons à cette catégorie. Cependant, cette méthode est rarement optimale; il est donc plus judicieux de fixer le seuil de probabilité en trouvant le point d’équilibre entre la sensibilité (proportion de 1 correctement identifiés) et la spécificité (proportion de 0 correctement identifiés). Ce point d’équilibre est identifiable graphiquement en calculant la spécificité et la sensibilité de la prédiction selon toutes les valeurs possibles du seuil.\n\nlibrary(ROCR)\n# Obtention des prédictions du modèle\nprob &lt;- predict(model2, type = \"response\")\n# Calcul de la sensibilité et de la spécificité (package ROCR)\npredictions &lt;- prediction(prob, dfenquete2$y)\nsens &lt;- data.frame(x = unlist(ROCR::performance(predictions, \"sens\")@x.values),\n                   y = unlist(ROCR::performance(predictions, \"sens\")@y.values))\nspec &lt;- data.frame(x = unlist(ROCR::performance(predictions, \"spec\")@x.values),\n                   y = unlist(ROCR::performance(predictions, \"spec\")@y.values))\n# Trouver numériquement la valeur seuil (minimiser la différence absolue\n# entre sensibilité et spécificité)\nreal &lt;- dfenquete2$y\nfind_cutoff &lt;- function(seuil){\n  pred &lt;- ifelse(prob&gt;seuil,1,0)\n  sensi &lt;- sum(real==1 & pred==1) / sum(real==1)\n  spec &lt;- sum(real==0 & pred==0) / sum(real==0)\n  return(abs(sensi-spec))\n}\nprob_seuil &lt;- optimize(find_cutoff, interval = c(0,1), maximum = FALSE)$minimum\ncat(\"Le seuil de probabilité à retenir équilibrant\",\n  \"la sensibilité et la spécificité est de\", prob_seuil)\n\nLe seuil de probabilité à retenir équilibrant la sensibilité et la spécificité est de 0.14785\n\n# Affichage du graphique\nggplot() +\n  geom_line(data = sens, mapping = aes(x = x, y = y)) +\n  geom_line(data = spec, mapping = aes(x = x, y = y, col=\"red\")) +\n  scale_y_continuous(sec.axis = sec_axis(~., name = \"Spécificité\")) +\n  labs(x = \"Seuil de probabilité\", y = \"Sensibilité\") +\n  geom_vline(xintercept = prob_seuil, color = \"black\", linetype = \"dashed\") + \n  annotate(geom = \"text\", x = prob_seuil, y = 0.01, label = round(prob_seuil,3))+\n  theme(axis.title.y.right = element_text(colour = \"red\"), legend.position = \"none\")\n\n\n\nFigure 8.8: Point d’équilibre entre sensibilité et spécificité\n\n\n\nNous constatons à la figure 8.8 que si la valeur du seuil est 0 %, alors la prédiction a une sensibilité parfaite (le modèle prédit toujours 1, donc tous les 1 sont détectés); à l’inverse, si le seuil choisi est 100 %, alors la prédiction à une spécificité parfaite (le modèle prédit toujours 0, donc tous les 0 sont détectés). Dans notre cas, la valeur d’équilibre est d’environ 0,148, donc si le modèle prédit une probabilité au moins égale à 14,8 % qu’un individu utilise le vélo pour son déplacement le plus fréquent, nous devons l’attribuer à la catégorie cycliste. Avec ce seuil, nous pouvons convertir les probabilités prédites en classes prédites et construire notre matrice de confusion.\n\nlibrary(caret) # pour la matrice de confusion\n# Calcul des catégories prédites\nypred &lt;- ifelse(predict(model2, type = \"response\")&gt;0.148,1,0)\ninfo &lt;- confusionMatrix(as.factor(dfenquete2$y), as.factor(ypred))\n# Affichage des valeurs brutes de la matrice de confusion\nprint(info)\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction     0     1\n         0 14355  7576\n         1  1251  2365\n                                          \n               Accuracy : 0.6545          \n                 95% CI : (0.6486, 0.6603)\n    No Information Rate : 0.6109          \n    P-Value [Acc &gt; NIR] : &lt; 2.2e-16       \n                                          \n                  Kappa : 0.1783          \n                                          \n Mcnemar's Test P-Value : &lt; 2.2e-16       \n                                          \n            Sensitivity : 0.9198          \n            Specificity : 0.2379          \n         Pos Pred Value : 0.6546          \n         Neg Pred Value : 0.6540          \n             Prevalence : 0.6109          \n         Detection Rate : 0.5619          \n   Detection Prevalence : 0.8585          \n      Balanced Accuracy : 0.5789          \n                                          \n       'Positive' Class : 0               \n                                          \n\n\nLes résultats proposés par le package caret sont exhaustifs; nous vous proposons ici une façon de les présenter dans deux tableaux : l’un présente la matrice de confusion (tableau 8.8) et l’autre, les indicateurs de qualité de prédiction (tableau 8.9).\n\n\n\n\nTableau 8.8: Matrice de confusion pour le modèle binomial\n\n\n\n0 (réel)\n1 (réel)\nTotal\n%\n\n\n\n0\n0 (prédit)\n14355\n7576\n21931\n85.8\n\n\n1\n1 (prédit)\n1251\n2365\n3616\n14.2\n\n\n\nTotal\n15606\n9941\n25547\n\n\n\n\n%\n61.1\n38.9\n\n\n\n\n\n\n\n\nD’après ces indicateurs, nous constatons que le modèle a une capacité de prédiction relativement faible, mais tout de même significativement supérieure au seuil de non-information. La valeur de rappel pour la catégorie 1 (cycliste) est faible, indiquant que le modèle a manqué un nombre important de cyclistes lors de sa prédiction.\n\n\n\n\nTableau 8.9: Matrice de confusion pour le modèle binomial\n\n\n\nPrécision\nRappel\nF1\n\n\n\n0\n0\n0.65\n0.92\n0.76\n\n\n1\n1\n0.65\n0.24\n0.35\n\n\n\n\n\n\n\n\n\nmacro_scores\nmacro\n0.65\n0.65\n0.6\n\n\n\nKappa\n0.18\n\n\n\n\n\nValeur de p (précision &gt; NIR)\n&lt; 0,0001\n\n\n\n\n\n\n\n\nInterprétation des résultats du modèle\nL’interprétation des résultats d’un modèle binomial passe par la lecture des rapports de cotes (exponentiel des coefficients) et de leurs intervalles de confiance. Nous commençons donc par calculer la version robuste des erreurs standards des coefficients.\n\nlibrary(dplyr)\nlibrary(sandwich) # pour calculer les erreurs standards robustes\ncovModel2 &lt;- vcovHC(model2, type = \"HC0\") # méthode HC0, basée sur les résidus\nstdErrRobuste &lt;- sqrt(diag(covModel2)) # extraire la diagonale\n# Extraction des coefficients\ncoeffs &lt;- model2$coefficients\n# Recalcul des scores Z\nzvalRobuste &lt;- coeffs / stdErrRobuste\n# Recalcul des valeurs de P\npvalRobuste &lt;- 2 * pnorm(abs(zvalRobuste), lower.tail = FALSE)\n# Calcul des rapports de cote\noddRatio &lt;- exp(coeffs)\n# Calcul des intervalles de confiance à 95 % des rapports de cote\nlowerBound &lt;- exp(coeffs - 1.96 * stdErrRobuste)\nupperBound &lt;- exp(coeffs + 1.96 * stdErrRobuste)\n# Étoiles pour les valeurs de p\nstarsp &lt;- case_when(pvalRobuste &lt;=  0.001  ~ \"***\",\n                    pvalRobuste &gt;  0.001 & pvalRobuste &lt;= 0.01 ~ \"**\",\n                    pvalRobuste &gt;  0.01 & pvalRobuste &lt;= 0.05 ~ \"*\",\n                    pvalRobuste &gt;  0.05 & pvalRobuste &lt;= 0.1 ~ \".\",\n                    TRUE ~ \"\"\n                    )\n# Compilation des résultats dans un tableau\ntableau_binom &lt;- data.frame(\n  coefficients = coeffs,\n  rap.cote = oddRatio,\n  err.std = stdErrRobuste,\n  score.z = zvalRobuste,\n  p.val = pvalRobuste,\n  rap.cote.2.5 = lowerBound,\n  rap.cote.97.5 = upperBound,\n  sign = starsp\n)\n\nConsidérant que la variable Pays a 24 modalités, il est plus judicieux de présenter ses 23 rapports de cotes sous forme d’un graphique. Nous avons choisi l’Allemagne comme catégorie de référence puisqu’elle fait partie des pays avec une importante part modale pour le vélo sans pour autant constituer un cas extrême comme le Danemark.\n\n# Isoler les ligne du tableau récapitualtif pour les pays\npaysdf &lt;- subset(tableau_binom, grepl(\"Pays\", row.names(tableau_binom), fixed = TRUE))\n#paysdf$Pays &lt;- gsub(\"Pays\" , \"\", row.names(paysdf), fixed = TRUE)\npaysdf$Pays &lt;- substr(row.names(paysdf), 5, nchar(row.names(paysdf)))\nggplot(data = paysdf) +\n  geom_vline(xintercept = 1, color = \"red\")+ #afficher la valeur de référence\n  geom_errorbarh(aes(xmin = rap.cote.2.5, xmax = rap.cote.97.5, \n                     y = reorder(Pays, rap.cote)), height = 0)+\n  geom_point(aes(x = rap.cote, y = reorder(Pays, rap.cote))) +\n  geom_text(aes(x = rap.cote.97.5, y = reorder(Pays, rap.cote), \n                label = paste(\"RC : \", round(rap.cote,2), sep = \"\")),\n                size = 3, nudge_x = 0.25)+\n  labs(x = \"Rapports de cote\", y = \"Pays (référence : Allemagne)\")\n\n\n\nFigure 8.9: Rapports de cote pour les différents pays de l’UE\n\n\n\nDans la figure 8.9, la barre horizontale pour chaque pays représente l’intervalle de confiance de son rapport de cotes (le point); plus cette ligne est longue, plus grande est l’incertitude autour de ce paramètre. Lorsque les lignes de deux pays se chevauchent, cela signifie qu’il n’y a pas de différence significative au seuil 0,05 entre les rapports de cotes des deux pays. La ligne rouge tracée à x = 1, représente le rapport de cotes du pays de référence (ici l’Allemagne). Nous constatons ainsi que comparativement à un individu vivant en Allemagne, ceux vivant au Danemark et aux Pays-Bas ont 2,4 fois plus de chances d’utiliser le vélo pour leur déplacement le plus fréquent. Les Pays de l’Ouest (France, Luxembourg, Royaume-Uni, Irlande) et du Sud (Grèce, Italie, Espagne, Portugal) ont en revanche des rapports de cotes plus faibles. En France, les chances qu’un individu utilise le vélo pour son trajet le plus fréquent sont 3,22 (1/0,31) fois plus faibles que si l’individu vivait en Allemagne.\nPour le reste des coefficients et des rapports de cotes, nous les rapportons dans le tableau 8.10.\n\n\n\n\nTableau 8.10: Résultats du modèle binomial\n\n\n\n\n\n\n\n\n\n\n\nVariable\nCoefficient\nRapport de cote\nErr.std\nVal.z\nP\nRC 2,5 %\nRC 97,5 %\n\n\n\nConstante\n-2,497\n0,082\n0,183\n-13,674\n0,000\n0,058\n0,118\n\n\nSexe\n\n\n\n\n\n\n\n\n\nref : femme\n–\n–\n–\n–\n–\n–\n–\n\n\nhomme\n0,372\n1,451\n0,038\n9,803\n0,000\n1,347\n1,562\n\n\nAge\n-0,009\n0,991\n0,002\n-5,361\n0,000\n0,988\n0,994\n\n\nEducation\n\n\n\n\n\n\n\n\n\nref : premier cycle\n–\n–\n–\n–\n–\n–\n–\n\n\nsecondaire\n0,193\n1,213\n0,105\n1,836\n0,066\n0,987\n1,490\n\n\nsecondaire inferieur\n0,301\n1,351\n0,114\n2,649\n0,008\n1,081\n1,687\n\n\nuniversite\n0,146\n1,157\n0,108\n1,349\n0,177\n0,936\n1,432\n\n\nStatutEmploi\n\n\n\n\n\n\n\n\n\nref : employe\n–\n–\n–\n–\n–\n–\n–\n\n\nsans emploi\n0,257\n1,293\n0,043\n6,045\n0,000\n1,190\n1,405\n\n\nRevenu\n\n\n\n\n\n\n\n\n\nref : eleve\n–\n–\n–\n–\n–\n–\n–\n\n\nfaible\n0,077\n1,080\n0,072\n1,067\n0,286\n0,938\n1,244\n\n\nmoyen\n0,042\n1,043\n0,065\n0,639\n0,523\n0,917\n1,185\n\n\nsans reponse\n0,217\n1,242\n0,102\n2,120\n0,034\n1,016\n1,517\n\n\ntres eleve\n-0,120\n0,887\n0,188\n-0,637\n0,524\n0,613\n1,283\n\n\ntres faible\n0,240\n1,271\n0,086\n2,776\n0,006\n1,073\n1,505\n\n\nResidence\n\n\n\n\n\n\n\n\n\nref : aire metropolitaine\n–\n–\n–\n–\n–\n–\n–\n\n\ngrande ville\n0,273\n1,314\n0,070\n3,911\n0,000\n1,146\n1,507\n\n\npetite-moyenne ville\n0,277\n1,319\n0,061\n4,503\n0,000\n1,169\n1,487\n\n\nzone rurale\n-0,119\n0,888\n0,069\n-1,713\n0,087\n0,775\n1,017\n\n\nDuree\n-0,001\n0,999\n0,001\n-0,981\n0,326\n0,998\n1,001\n\n\nConsEnv\n0,102\n1,108\n0,010\n10,502\n0,000\n1,087\n1,130\n\n\n\n\n\n\nLes chances pour un individu d’utiliser le vélo pour son trajet le plus fréquent sont augmentées de 45 % s’il s’agit d’un homme plutôt qu’une femme. Pour l’âge, nous constatons un effet relativement faible puisque chaque année supplémentaire réduit les chances qu’un individu utilise le vélo comme mode de transport pour son trajet le plus fréquent de 0,9 % \\(((\\mbox{0,991}-\\mbox{1})\\times\\mbox{100})\\). Le fait d’être sans emploi augmente les chances d’utiliser le vélo de 29 % comparativement au fait d’avoir un emploi. Concernant le niveau d’éducation, seul le coefficient pour le groupe des personnes de la catégorie « secondaire inférieure » est significatif, indiquant que les personnes de ce groupe ont 35 % de chances en plus d’utiliser le vélo comme mode de transport pour leur déplacement le plus fréquent comparativement aux personnes de la catégorie « premier cycle ». Pour le revenu, seul le groupe avec de très faibles revenus se distingue significativement du groupe avec un revenu élevé avec un rapport de cotes de 1,27, soit 27 % de chances en plus d’utiliser le vélo.\nComparativement à ceux vivant dans une aire métropolitaine, les personnes vivant dans de petites, moyennes et grandes villes ont des chances accrues d’utiliser le vélo comme mode de déplacement pour leur trajet le plus fréquent. En revanche, nous n’observons aucune différence entre la probabilité d’utiliser le vélo dans une métropole et en zone rurale. La figure 8.10 permet de clairement visualiser cette situation. Rappelons que la référence est la situation : vivre dans une région métropolitaine, représentée par la ligne verticale rouge. Plusieurs pistes d’interprétation peuvent être envisagées pour ce résultat :\n\nEn métropole et dans les zones rurales, les distances domicile-travail tendent à être plus grandes que dans les petites, moyennes et grandes villes.\nEn métropole, le système de transport en commun est davantage développé et entre donc en concurrence avec les modes de transport actifs.\n\n\n# Isoler les lignes du tableau récapitulatif pour les lieux de résidence\nresiddf &lt;- subset(tableau_binom, grepl(\"Residence\", row.names(tableau_binom), fixed = TRUE))\nresiddf$resid &lt;- gsub(\"Residence\" , \"\", row.names(residdf), fixed=T)\nggplot(data = residdf) +\n  geom_vline(xintercept = 1, color = \"red\")+ #afficher la valeur de référence\n  geom_errorbarh(aes(xmin = rap.cote.2.5, xmax = rap.cote.97.5, y = resid), height = 0)+\n  geom_point(aes(x = rap.cote, y = resid)) +\n  geom_text(aes(x = rap.cote.97.5, y = resid, \n                label = paste(\"RC : \", round(rap.cote,2), sep = \"\")),\n                size = 3, nudge_x = 0.1)+\n  labs(x = \"Rapports de cotes\",\n       y = \"Lieu de résidence (référence : aire métropolitaine)\")\n\n\n\nFigure 8.10: Rapports de cote pour les différents lieux de résidence\n\n\n\nIl est aussi intéressant de noter que la durée des trajets ne semble pas influencer la probabilité d’utiliser le vélo. Enfin, une conscience environnementale plus affirmée semble être associée avec une probabilité supérieure d’utiliser le vélo pour son déplacement le plus fréquent, avec une augmentation des chances de 11 % pour chaque point supplémentaire sur l’échelle de Likert.\nAfin de simplifier la présentation de certains résultats, il est possible de calculer exactement les prédictions réalisées par le modèle. Un bon exemple ici est le cas de la variable âge. À quelle différence pouvons-nous nous attendre entre deux individus identiques ayant seulement une différence d’âge de 15 ans?\nPrenons comme individu un homme de 30 ans, vivant dans une grande ville allemande, ayant un niveau d’éducation de niveau secondaire, employé, dans la tranche de revenu moyen, déclarant effectuer un trajet de 45 minutes et ayant rapporté un niveau de conscience environnementale de 5 (sur 10). Nous pouvons prédire la probabilité qu’il utilise le vélo pour son trajet le plus fréquent en utilisant la formule suivante :\n\\[logit(p) =  -\\mbox{2,497} + \\mbox{1} \\times \\mbox{0,372} + \\mbox{30} \\times -\\mbox{0,009} +  \\mbox{1} \\times \\mbox{0,193} + \\mbox{1} \\times \\mbox{0,042} + \\mbox{1} \\times \\mbox{0,273} + \\mbox{45} \\times -\\mbox{0,001} + \\mbox{5} \\times \\mbox{0,102}\\]\n\\[p = \\frac{exp(-\\mbox{2,497} + \\mbox{1} \\times \\mbox{0,372} + \\mbox{30} \\times -\\mbox{0,009} + \\mbox{1} \\times \\mbox{0,193} + \\mbox{1} \\times \\mbox{0,042} + 1 \\times \\mbox{0,273} + 45 \\times -\\mbox{0,001} + \\mbox{5} \\times \\mbox{0,102})}{(\\mbox{1}+exp(-\\mbox{2,497} + 1 \\times \\mbox{0,372} + \\mbox{30} \\times-\\mbox{0,009} + 1 \\times \\mbox{0,193} + 1 \\times \\mbox{0,042} + \\mbox{1} \\times \\mbox{0,273} + \\mbox{45} \\times -\\mbox{0,001} + 5 \\times \\mbox{0,102}))} = \\mbox{0,194}\\]\nIl y aurait 19,4 % de chances pour que cette personne soit cycliste. Comme cette probabilité dépasse le seuil que nous avons sélectionné, cette personne serait classée comme cycliste. Si nous augmentons son âge de 15 ans, nous obtenons :\n\\[p = \\frac{exp(-\\mbox{2,497} + \\mbox{1} \\times \\mbox{0,372} + \\mbox{45} \\times \\mbox{-0,009} + \\mbox{1} \\times \\mbox{0,193} + \\mbox{1} \\times \\mbox{0,042} + \\mbox{1} \\times \\mbox{0,273} + \\mbox{45} \\times -\\mbox{0,001} + \\mbox{5} \\times \\mbox{0,102})} {(\\mbox{1}+exp(-\\mbox{2,497} + \\mbox{1} \\times \\mbox{0,372} + \\mbox{45} \\times -\\mbox{0,009} + \\mbox{1} \\times \\mbox{0,193} + \\mbox{1} \\times \\mbox{0,042} + \\mbox{1} \\times \\mbox{0,273} + \\mbox{45} \\times -\\mbox{0,001} + \\mbox{5} \\times \\mbox{0,102}))} = \\mbox{0,174}\\]\nsoit une réduction de 2 points de pourcentages. Il est également possible de représenter cette évolution sur un graphique pour montrer l’effet sur l’étendue des valeurs possibles. Sur ces graphiques des effets marginaux, il est essentiel de représenter l’incertitude quant à la prédiction. En temps normal, la fonction predict calcule directement l’erreur standard de la prédiction et cette dernière peut être utilisée pour calculer l’intervalle de confiance de la prédiction. Cependant, nous voulons ici utiliser nos erreurs standards robustes. Nous devons donc procéder par simulation pour déterminer l’intervalle de confiance à 95 % de nos prédictions. Cette opération nécessite de réaliser plusieurs opérations manuellement dans R.\n\n# Créer un jeu de données fictif pour la prédiction\nmat &lt;- model.matrix(model2$terms, model2$model)\nage2seq &lt;- seq(20, 80)\nmat2 &lt;- matrix(mat[1,], nrow = length(age2seq), ncol = length(mat[1,]), byrow = TRUE)\ncolnames(mat2) &lt;- colnames(mat)\nmat2[,\"Age\"] &lt;- age2seq\nmat2[,\"PaysBelgique\"] &lt;- 0\nmat2[,\"Duree\"] &lt;- 45\nmat2[,\"ConsEnv\"] &lt;- 5\nmat2[,\"StatutEmploisans emploi\"] &lt;- 0\nmat2[,\"Residencegrande ville\"] &lt;- 1\nmat2[,\"Educationsecondaire\"] &lt;- 1\nmat2[,\"Sexehomme\"] &lt;- 1\nmat2[,\"Revenumoyen\"] &lt;- 1\nmat2[,\"Revenufaible\"] &lt;- 0\n# Calculer la prédiction comme un log de rapport de cote (avec les erreurs standards)\n# en multipliant les coefficient par les valeurs des données fictives\ncoeffs &lt;- model2$coefficients\npred &lt;- coeffs %*% t(mat2)\n# Simulation de prédictions (toujours en log de rapport de cote)\n# Étape 1 : simuler 1000 valeurs pour chaque coefficient\nsim_coeffs &lt;- lapply(1:length(coeffs), function(i){\n  coef &lt;- coeffs[[i]]\n  std.err &lt;- stdErrRobuste[[i]]\n  vals &lt;- rnorm(n = 1000, mean = coef, sd = std.err)\n  return(vals)\n})\nmat_sim_coeffs &lt;- do.call(rbind, sim_coeffs)\n# Étape 2 : effectuer les prédictions à partir des coefficients simulés\nsim_preds &lt;- lapply(1:ncol(mat_sim_coeffs), function(i){\n  temp_coefs &lt;- mat_sim_coeffs[,i]\n  temp_pred &lt;- as.vector(temp_coefs %*% t(mat2))\n  return(temp_pred)\n})\nmat_sim_preds &lt;- do.call(cbind, sim_preds)\n# Étape 3 : extraire les intervalles de confiance pour les simulations\nintervals &lt;- apply(mat_sim_preds, MARGIN = 1, FUN = function(vec){\n  return(quantile(vec, probs = c(0.025, 0.975)))\n})\n# Étape 4 : récupérer tous ces éléments dans un DataFrame\ndf &lt;- data.frame(\n  Age = seq(20,80),\n  pred = as.vector(pred),\n  lower = as.vector(intervals[1,]),\n  upper = as.vector(intervals[2,])\n)\n# Étape 5 : appliquer l'inverse de la fonction de lien pour\n# obtenir les prédictions en termes de probabilité\nilink &lt;- family(model2)$linkinv\ndf$prob_pred &lt;- ilink(df$pred)\ndf$prob_lower &lt;- ilink(df$lower)\ndf$prob_upper &lt;- ilink(df$upper)\n# Étape 6 : représenter le tout sur un graphique\nggplot(df) + \n  geom_ribbon(aes(x = Age, ymax = prob_upper, ymin = prob_lower), \n              fill = rgb(0.1,0.1,0.1,0.4)) + \n  geom_path(aes(x = Age, y = prob_pred), color = \"blue\", size = 1) +\n  geom_hline(yintercept = 0.15, linetype = \"dashed\", size = 0.7) + \n  labs(x = \"Âge\", y = \"Probabilité prédite (intervalle de confiance à 95 %)\")\n\n\n\nFigure 8.11: Effet de l’âge sur la probabilité d’utiliser le vélo comme moyen de déplacement pour son trajet le plus fréquent\n\n\n\nLa figure 8.11 permet de bien constater la diminution de la probabilité d’utiliser le vélo pour son trajet le plus fréquent avec l’âge, mais cette réduction est relativement ténue. Dans le cas utilisé en exemple, l’individu ne serait plus classé cycliste qu’après 67 ans.\n\n8.2.2 Modèle probit binomial\nLe modèle GLM probit binomial est pour ainsi dire le frère du modèle logistique binomial. La seule différence entre les deux réside dans l’utilisation d’une autre fonction de lien: probit plutôt que logistique. La fonction de lien probit (Φ) correspond à la fonction cumulative de la distribution normale et a également une forme de S. Cette version du modèle est plus souvent utilisée par les économistes. Le principal changement réside dans l’interprétation des coefficients \\(\\beta_0\\) et \\(\\beta\\). Du fait de la transformation probit, ces derniers indiquent le changement en termes de scores Z de la probabilité modélisée. Vous conviendrez qu’il ne s’agit pas d’une échelle très intuitive; la plupart du temps, seuls la significativité et le signe (positif ou négatif) des coefficients sont interprétés.\n\n\n\n\nTableau 8.11: Carte d’identité du modèle probit binomial\n\n\n\n\n\n\nType de variable dépendante\nVariable binaire (0 ou 1) ou comptage de réussite à une expérience (ex : 3 réussites sur 5 expériences)\n\n\nDistribution utilisée\nBinomiale\n\n\nFormulation\n\n\\(Y \\sim Binomial(p)\\) \\(g(p) = \\beta_0 + \\beta X\\) \\(g(x) = \\Phi^-1(x)\\)\n\n\n\nFonction de lien\nprobit\n\n\nParamètre modélisé\np\n\n\nParamètres à estimer\n\n\\(\\beta_0\\), \\(\\beta\\)\n\n\n\nConditions d’application\nNon-séparation complète, absence de sur-dispersion ou de sous-dispersion\n\n\n\n\n\n\n\n8.2.3 Modèle logistique des cotes proportionnelles\nLe modèle logistique des cotes proportionnelles (aussi appelé modèle logistique cumulatif) est utilisé pour modéliser une variable qualitative ordinale. Un exemple classique de ce type de variable est une échelle de satisfaction (très insatisfait, insatisfait, mitigé, satisfait, très satisfait) qui peut être recodée avec des valeurs numériques (0, 1, 2, 3, 4; ces échelons étant notés j). Il n’existe pas à proprement parler de distribution pour représenter ces données, mais avec une petite astuce, il est possible de simplement utiliser la distribution binomiale. Cette astuce consiste à poser l’hypothèse de la proportionnalité des cotes, soit que le passage de la catégorie 0 à la catégorie 1 est proportionnel au passage de la catégorie 1 à la catégorie 2 et ainsi de suite. Si cette hypothèse est respectée, alors les coefficients du modèle pourront autant décrire le passage de la catégorie satisfait à celle très satisfait que le passage de insatisfait à mitigé. Si cette hypothèse n’est pas respectée, il faudrait des coefficients différents pour représenter les passages d’une catégorie à l’autre (ce qui est le cas pour le modèle multinomial présenté dans la section 8.2.4).\n\n\n\n\nTableau 8.12: Carte d’identité du modèle logistique des cotes proportionnelles\n\n\n\n\n\n\nType de variable dépendante\nVariable qualitative ordinale avec j catégories\n\n\nDistribution utilisée\nBinomiale\n\n\nFormulation\n\n\\(Y \\sim Binomial(p)\\) \\(g(p \\leq j) = \\beta_{0j} + \\beta X\\) \\(g(x) = log(\\frac{x}{1-x})\\)\n\n\n\nFonction de lien\nlogistique\n\n\nParamètre modélisé\np\n\n\nParamètres à estimer\n\n\\(\\beta\\) et j-1 constantes \\(\\beta_{0j}\\)\n\n\n\nConditions d’application\nNon-séparation complète, absence de sur-dispersion ou de sous-dispersion, Proportionnalité des cotes\n\n\n\n\n\n\nAinsi, dans le modèle logistique binomial vu précédemment, nous modélisons la probabilité d’observer un évènement \\(P(Y = 1)\\). Dans un modèle logistique ordinal, nous modélisons la probabilité cumulative d’observer l’échelon j de notre variable ordinale \\(P(Y \\leq j)\\). L’intérêt de cette reformulation est que nous conservons la facilité d’interprétation du modèle logistique binomial classique avec les rapports de cotes, à ceci prêt qu’ils représentent maintenant la probabilité de passer à un échelon supérieur de Y. La différence pratique est que notre modèle se retrouve avec autant de constantes qu’il y a de catégories à prédire moins une, chacune de ces constantes contrôlant la probabilité de base de passer de la catégorie j à la catégorie j + 1.\n\n8.2.3.1 Conditions d’application\nLes conditions d’application sont les mêmes que pour un modèle binomial, avec bien sûr l’ajout de l’hypothèse sur la proportionnalité des cotes. Selon cette hypothèse, l’effet de chaque variable indépendante est identique sur la probabilité de passer d’un échelon de la variable Y au suivant. Afin de tester cette condition, deux approches sont envisageables :\n\nUtiliser l’approche de Brant (1990). Il s’agit d’un test statistique comparant les résultats du modèle ordinal avec ceux d’une série de modèles logistiques binomiaux (1 pour chaque catégorie possible de Y).\nAjuster un modèle ordinal sans l’hypothèse de proportionnalité des cotes et effectuer un test de ratio des likelihood pour vérifier si le premier est significativement mieux ajusté.\n\nSi certaines variables ne respectent pas cette condition d’application, trois options sont possibles pour y remédier :\n\nSupprimer la variable du modèle (à éviter si cette variable est importante dans votre cadre théorique).\nAutoriser la variable à avoir un effet différent entre chaque palier (possible avec le package VGAM).\nChanger de modèle et opter pour un modèle des catégories adjacentes. Il s’agit du cas particulier où toutes les variables sont autorisées à changer à chaque niveau. Ne pas confondre ce dernier modèle et le modèle multinomial (section 8.2.4), puisque le modèle des catégories adjacentes continue à prédire la probabilité de passer à une catégorie supérieure.\n\n8.2.3.2 Exemple appliqué dans R\nPour cet exemple, nous analysons un jeu de données proposé par Inside Airbnb, une organisation sans but lucratif collectant des données des annonces sur le site d’Airbnb pour alimenter le débat sur l’effet de cette société sur les quartiers. Plus spécifiquement, nous utilisons le jeu de données pour Montréal compilé le 30 juin 2020. Nous modélisons ici le prix par nuit des logements, ce type d’exercice est appelé modélisation hédonique. Il est particulièrement utilisé en économie urbaine pour évaluer les déterminants du marché immobilier et prédire son évolution. Le cas d’Airbnb a déjà été étudié dans plusieurs articles (Teubner, Hawlitschek et Dann 2017; Wang et Nicolau 2017; Zhang et al. 2017). Il en ressort notamment que le niveau de confiance inspiré par l’hôte, les caractéristiques intrinsèques du logement et sa localisation sont les principales variables indépendantes de son prix. Nous construisons donc notre modèle sur cette base. Notez que nous avons décidé de retirer les logements avec des prix supérieurs à 250 $ par nuit qui constituent des cas particuliers et qui devraient faire l’objet d’une analyse à part entière. Nous avons également retiré les observations pour lesquelles certaines données sont manquantes, et obtenons un nombre final de 9 051 observations.\nLa distribution originale du prix des logements dans notre jeu de données est présentée à la figure 8.12.\n\n# Charger le jeu de données\ndata_airbnb &lt;- read.csv(\"data/glm/airbnb_data.csv\")\n# Afficher la distribution du prix\nggplot(data = data_airbnb) + \n  geom_histogram(aes(x = price), bins = 30, \n                 color = \"white\", fill = \"#1d3557\", linewidth = 0.02)+\n  labs(x = \"Prix (en dollars)\", y = \"Fréquence\")\n\n\n\nFigure 8.12: Distribution des prix des logements Airbnb\n\n\n\nNous avons ensuite découpé le prix des logements en trois catégories : inférieur à 50 $, de 50 $ à 99 $ et de 100 $ à 249 $. Ces catégories forment une variable ordinale de trois échelons que nous modélisons à partir de trois catégories de variables :\n\nles caractéristiques propres au logement;\nles caractéristiques environnementales autour du logement;\nles notes obtenues par le logement sur le site d’Airbnb.\n\n\n# Afficher le nombre de logement par catégories\ntable(data_airbnb$fac_price_cat)\n\n\n   1    2    3 \n2212 3911 2928 \n\n\nLe tableau 8.13 présente l’ensemble des variables utilisées dans le modèle.\n\n\n\n\nTableau 8.13: Variables indépendantes utilisées pour prédire la catégorie de prix de logements Airbnb\n\n\n\n\n\n\n\nNom de la variable\nDescription\nType de variable\nMesure\n\n\n\nbeds\nNombre de lits dans le logement\nVariable de comptage\nNombre de lits dans le logement\n\n\nGarden_or_backyard\nPrésence d’un jardin ou d’une arrière-cour\nVariable binaire\nOui ou non\n\n\nprivate\nLe logement est entièrement à disposition du locataire ou seulement une pièce\nVariable binaire\nPrivé ou partagé\n\n\nFree_street_parking\nUne place de stationnement gratuite est disponible sur la rue\nVariable binaire\nOui ou non\n\n\nHost_greets_you\nL’hôte accueille personnellement les locataires\nVariable binaire\nOui ou non\n\n\nprt_veg_500m\nVégétation dans les environs du logement\nVariable continue\nPourcentage de surface végétale dans un rayon de 500 mètres autour du logement\n\n\nhas_metro_500m\nPrésence d’une station de métro à proximité du logement\nVariable binaire\nPrésence d’une station de métro dans un rayon de 500 mètres autour du logement\n\n\ncommercial_1km\nCommerce dans les environs du logement\nVariable continue\nPourcentage de surface dédiée au commerce (mode d’occupation du sol) dans un rayon d’un kilomètre autour du logement\n\n\ncat_review\nÉvaluation de la qualité du logement par les usagers\nVariable ordinale\nNote obtenue par le logement sur une échelle allant de 1 (très mauvais) à 5 (parfait)\n\n\nhost_total_listings_count\nNombre total de logements détenus par l’hôte sur Airbnb\nVariable de comptage\nNombre total de logements détenus par l’hôte sur Airbnb\n\n\n\n\n\n\nVérification des conditions d’application\nAvant d’ajuster le modèle, il convient de vérifier l’absence de multicolinéarité excessive entre les variables indépendantes.\n\n# Notez que la fonction vif ne s'intéresse qu'aux variables indépendantes.\n# Vous pouvez ainsi utiliser la fonction glm avec la fonction vif \n# pour n'importe quel modèle glm\nvif(glm(price ~ beds +\n    Garden_or_backyard + Host_greets_you + Free_street_parking + \n      prt_veg_500m + has_metro_500m + commercial_1km +host_total_listings_count +\n      private + cat_review, data = data_airbnb))\n\n                     beds        Garden_or_backyard           Host_greets_you \n                 1.123595                  1.079324                  1.046884 \n      Free_street_parking              prt_veg_500m            has_metro_500m \n                 1.142189                  1.532536                  1.239516 \n           commercial_1km host_total_listings_count                   private \n                 1.225301                  1.058232                  1.143932 \n               cat_review \n                 1.015778 \n\n\nToutes les valeurs de VIF sont inférieures à 2, indiquant une absence de multicolinéarité excessive. Nous pouvons alors ajuster le modèle et analyser les distances de Cook afin de vérifier la présence ou non d’observations très influentes. Pour ajuster le modèle, nous utilisons le package VGAM et la fonction vglm qui nous donnent accès à la famille cumulative pour ajuster des modèles logistiques ordinaux. Notez que le fonctionnement de base de cette famille est de modéliser \\(P(Y\\leq1),P(Y\\leq2),...,P(Y\\leq J)\\) avec J le nombre de catégories. Cependant, nous voulons ici modéliser la probabilité de passer à une catégorie supérieure de prix. Pour cela, il est nécessaire de spécifier le paramètre reverse = TRUE pour la famille cumulative (voir help(cumulative) pour plus de détails).\n\nlibrary(VGAM)\nmodele &lt;- vglm(fac_price_cat ~ beds +\n                Garden_or_backyard + Free_street_parking + \n                prt_veg_500m + has_metro_500m + commercial_1km +\n                private + cat_review + host_total_listings_count ,\n             family = cumulative(link=\"logitlink\", # fonction de lien \n                                 parallel = TRUE, # cote proportionnelle\n                                 reverse = TRUE),\n             data = data_airbnb, model = T)\n\nNotez que, puisque la variable Y a trois catégories différentes et que nous modélisons la probabilité de passer à une catégorie supérieure, chaque observation a alors deux (3-1) valeurs de résidus différentes. Par conséquent, nous calculons deux distances de Cook différentes que nous devons analyser conjointement. Malheureusement, la fonction cook.distance ne fonctionne pas avec les objets vglm, nous devons donc les calculer manuellement.\n\nlibrary(ggpubr)\n# Extraction des résidus\nres &lt;- residuals(modele, type = \"pearson\")\n# Extraction de la hat matrix (nécessaire pour calculer la distance de Cook)\nhat &lt;- hatvaluesvlm(modele)\n# Calcul des distances de Cook\ncooks &lt;- lapply(1:ncol(res), function(i){\n  r &lt;- res[,i]\n  h &lt;- hat[,i]\n  cook &lt;- (r/(1 - h))^2 * h/(1 * modele@rank)\n})\n# Structuration dans un DataFrame\nmatcook &lt;- data.frame(do.call(cbind, cooks))\nnames(matcook) &lt;- c(\"dist1\" , \"dist2\")\nmatcook$oid &lt;- 1:nrow(matcook)\n# Afficher les distances de Cook\nplot1 &lt;- ggplot(data = matcook) + \n  geom_point(aes(x = oid, y = dist1), size = 0.2, color = rgb(0.1,0.1,0.1,0.4)) + \n  labs(x = \"\", y = \"\", subtitle = \"distance de Cook P(Y&gt;=2)\")+\n  theme(axis.ticks.x = element_blank(),\n        axis.text.x = element_blank())\nplot2 &lt;- ggplot(data = matcook) + \n  geom_point(aes(x = oid, y = dist2), size = 0.2, color = rgb(0.1,0.1,0.1,0.4)) + \n  labs(x = \"\", y = \"\", subtitle = \"distance de Cook P(Y&gt;=3)\")+\n  theme(axis.ticks.x = element_blank(),\n        axis.text.x = element_blank())\n\nggarrange(plot1, plot2, ncol = 2, nrow = 1)\n\n\n\nFigure 8.13: Distances de Cook pour le modèle logistique des cotes proportionnelles\n\n\n\nLes distances de Cook (figure 8.13) nous permettent d’identifier quelques observations potentiellement trop influentes, mais elles semblent être différentes d’un graphique à l’autre. Nous décidons donc de ne pas retirer d’observations à ce stade et de passer à l’analyse des résidus simulés. Pour effectuer des simulations à partir de ce modèle, nous nous basons sur les probabilités d’appartenance prédites par le modèle.\n\n# Extraire les probabilités prédites\npredicted &lt;- predict(modele, type = \"response\")\nround(head(predicted, n = 4),3)\n\n      1     2     3\n1 0.706 0.267 0.028\n2 0.073 0.461 0.466\n3 0.687 0.283 0.030\n4 0.049 0.383 0.568\n\n\nNous constatons ainsi que, pour la première observation, la probabilité prédite d’appartenir au groupe 1 est de 69,4 %, de 27,7 % pour le groupe 2 et de 2,9 % pour le groupe 3. Si nous effectuons 1 000 simulations, nous pouvons nous attendre à ce qu’en moyenne, sur ces 1 000 simulations, 694 indiqueront 1 comme catégorie prédite, 277 indiqueront 2 et seulement 29 indiqueront 3.\n\n# Nous effectuerons 1000 simulations\nnsim &lt;- 1000\n# Lancement des simulations pour chaque observation (lignes dans predicted)\nsimulations &lt;- lapply(1:nrow(predicted), function(i){\n  probs &lt;- predicted[i,]\n  sims &lt;- sample(c(1,2,3), size = nsim, replace = TRUE, prob = probs)\n  return(sims)\n})\n# Combiner les prédictions dans un tableau\nmatsim &lt;- do.call(rbind, simulations)\n# Observons si nos simulations sont proches de ce que nous attendions\ntable(matsim[1,])\n\n\n  1   2   3 \n676 289  35 \n\n\nÀ partir de ces simulations de prédiction, nous pouvons réaliser un diagnostic des résidus simulés grâce au package DHARMa.\n\nlibrary(DHARMa)\n# Extraction de la prédiction moyenne du modèle\npred_cat &lt;- unique(data_airbnb$fac_price_cat)[max.col(predicted)]\n# Préparer les données avec le package DHARMa\nsim_res &lt;- createDHARMa(simulatedResponse = matsim, \n                            observedResponse = as.numeric(data_airbnb$fac_price_cat),\n                            fittedPredictedResponse = as.numeric(pred_cat),\n                            integerResponse = TRUE)\n# Afficher le graphique de diagnostic général\nplot(sim_res)\n\n\n\nFigure 8.14: Diagnostic général des résidus simulés du modèle des cotes proportionnelles\n\n\n\nLa figure 8.14 nous indique que les résidus simulés suivent bien une distribution uniforme et qu’aucune valeur aberrante n’est observable. Pour affiner notre diagnostic, nous vérifions également si aucune relation ne semble exister entre chaque variable indépendante et les résidus.\n\n# Préparons un plot multiple\npar(mfrow=c(3,4))\nvars &lt;- c(\"nombre de lits\" = \"beds\",\n          \"couvert végétal\" = \"prt_veg_500m\", \n          \"commercial\" = \"commercial_1km\",\n          \"nb logements hôte\" = \"host_total_listings_count\",\n          \"jardin\" = \"Garden_or_backyard\",\n          \"accueil\" = \"Host_greets_you\",\n          \"stationnement gratuit\" = \"Free_street_parking\", \n          \"métro\" = \"has_metro_500m\", \n          \"logement privé\" = \"private\",\n          \"évaluation\" = \"cat_review\")\n\nfor(name in  names(vars)){\n  v &lt;- vars[[name]]\n  plotResiduals(sim_res, data_airbnb[[v]], rank = FALSE, quantreg = FALSE, main = \"\",\n                xlab = name, ylab = \"résidus\")\n}\n\n\n\n\n\nFigure 8.15: Diagnostic des variables indépendantes et des résidus simulés du modèle des cotes proportionnelles\n\n\n\nLa fonction plotResiduals du package DHARMa produit des graphiques peu esthétiques, mais pratiques pour effectuer ce type de diagnostic.\nLa figure 8.15 indique qu’aucune relation marquée n’existe entre nos variables indépendantes et nos résidus simulés, sauf pour la variable nombre de lits. En effet, nous pouvons constater que les résidus ont tendance à être toujours plus faibles quand le nombre de lits augmente. Cet effet est sûrement lié au fait qu’au-delà de cinq lits, le logement en question est vraisemblablement un dortoir. Il pourrait être judicieux de retirer ces observations de l’analyse, considérant qu’elles sont peu nombreuses et constituent un type de logement particulier.\n\ndata_airbnb2 &lt;- subset(data_airbnb, data_airbnb$beds &lt;=5)\nmodele2 &lt;- vglm(fac_price_cat ~ beds  + \n                Garden_or_backyard + Free_street_parking + \n                prt_veg_500m + has_metro_500m + commercial_1km +\n                private + cat_review + host_total_listings_count ,\n             family = cumulative(link=\"logitlink\", # fonction de lien \n                                 parallel = TRUE, # cote proportionelle\n                                 reverse = TRUE),\n             data = data_airbnb2, model = T)\n\nNous pouvons ensuite recalculer les résidus simulés pour observer si cette tendance a été corrigée. La figure 8.16 montre qu’une bonne partie du problème a été corrigée; cependant, il semble tout de même que les résidus soient plus forts pour les logements avec un seul lit.\n\n# Nous effectuerons 1000 simulations\nnsim &lt;- 1000\npredicted &lt;- predict(modele2, type = \"response\")\n# Lancement des simulations pour chaque observation (lignes dans predicted)\nsimulations &lt;- lapply(1:nrow(predicted), function(i){\n  probs &lt;- predicted[i,]\n  sims &lt;- sample(c(1,2,3), size = nsim, replace = TRUE, prob = probs)\n  return(sims)\n})\n# Combiner les prédictions dans un tableau\nmatsim &lt;- do.call(rbind, simulations)\n# Extraction de la prédiction moyenne du modèle\npred_cat &lt;- unique(data_airbnb2$fac_price_cat)[max.col(predicted)]\n# Préparer les donnees avec le package DHARMa\nsim_res &lt;- createDHARMa(simulatedResponse = matsim, \n                            observedResponse = as.numeric(data_airbnb2$fac_price_cat),\n                            fittedPredictedResponse = as.numeric(pred_cat),\n                            integerResponse = TRUE)\n\n\npar(mfrow=c(3,4))\nvars &lt;- c(\"nombre de lits\" = \"beds\",\n          \"couvert végétal\" = \"prt_veg_500m\", \n          \"commercial\" = \"commercial_1km\",\n          \"nb logements hôte\" = \"host_total_listings_count\",\n          \"jardin\" = \"Garden_or_backyard\",\n          \"accueil\" = \"Host_greets_you\",\n          \"stationnement gratuit\" = \"Free_street_parking\", \n          \"métro\" = \"has_metro_500m\", \n          \"logement privé\" = \"private\",\n          \"évaluation\" = \"cat_review\")\n\nfor(name in  names(vars)){\n  v &lt;- vars[[name]]\n  plotResiduals(sim_res, data_airbnb2[[v]], rank = FALSE, quantreg = FALSE, main = \"\",\n                xlab = name, ylab = \"résidus\")\n}\n\n\n\n\n\nFigure 8.16: Diagnostic des variables indépendantes et des résidus simulés du modèle des cotes proportionnelles (après correction)\n\n\n\nLa prochaine étape du diagnostic est de vérifier l’absence de séparation parfaite provoquée par une de nos variables indépendantes. Le package VGAM propose pour cela la fonction hdeff.\n\ntests &lt;- hdeff(modele2)\nproblem &lt;- table(tests)\nproblem\n\ntests\nFALSE \n   11 \n\n\nLa fonction nous informe qu’aucune de nos variables indépendantes ne provoque de séparation parfaite : toutes les valeurs renvoyées par la fonction hdeff sont égales à FALSE.\nIl ne nous reste donc plus qu’à vérifier que l’hypothèse de proportionnalité des cotes est respectée, soit que l’effet de chacune des variables indépendantes est bien le même pour passer de la catégorie 1 à 2 que pour passer de la catégorie 2 à 3. Pour cela, deux approches sont possibles : le test de Brant ou la réalisation d’une séquence de tests de rapport de vraisemblance.\nLe package brant propose une implémentation du test de Brant, mais celle-ci ne peut être appliquée qu’à des modèles construits avec la fonction polr du package MASS. Nous avons donc récupéré le code source de la fonction brant du package brant et apporté quelques modifications pour qu’elle soit utilisable sur un objet vglm. Cette nouvelle fonction, appelée brant.vglm, est disponible dans le code source de ce livre.\n\ntableau_brant &lt;- round(brant.vglm(modele2), 3)\n\n------------------------------------------------------------ \nTest for            X2  df  probability \n------------------------------------------------------------ \nOmnibus             113.72  9   0\nbeds                0.63    1   0.43\nGarden_or_backyardYES       0.16    1   0.69\nFree_street_parkingYES  0.84    1   0.36\nprt_veg_500m            6.49    1   0.01\nhas_metro_500mYES       0.02    1   0.89\ncommercial_1km          0.01    1   0.92\nprivateEntier           93.56   1   0\ncat_review          0.63    1   0.43\nhost_total_listings_count   1.51    1   0.22\n------------------------------------------------------------ \n\nH0: Parallel Regression Assumption holds\n\n\nCe premier tableau nous indique que seule la variable indiquant si le logement est disponible en entier ou partagé contrevient à l’hypothèse de proportionnalité des cotes (la seule valeur p significative). Pour confirmer cette observation, nous pouvons réaliser un ensemble de tests de rapport de vraisemblance. Pour chaque variable du modèle, nous créons un second modèle dans lequel cette variable est autorisée à varier pour chaque catégorie et nous comparons les niveaux d’ajustement des modèles. Nous avons implémenté cette procédure dans la fonction parallel.likelihoodtest.vglm disponible dans le code source de ce livre.\n\ntableau_likelihood &lt;- parallel.likelihoodtest.vglm(modele2, verbose = FALSE)\nprint(tableau_likelihood)\n\n     variable non parallele   AIC loglikelihood p.val loglikelihood ratio test\n1                      beds 15304         -7640                          0.271\n2        Garden_or_backyard 15305         -7641                          0.417\n3       Free_street_parking 15301         -7639                          0.079\n4              prt_veg_500m 15296         -7636                          0.007\n5            has_metro_500m 15303         -7640                          0.191\n6            commercial_1km 15305         -7640                          0.271\n7                   private 15215         -7595                          0.000\n8                cat_review 15306         -7641                          0.430\n9 host_total_listings_count 15304         -7640                          0.257\n\n\nLes résultats de cette seconde série de tests confirment les précédents, la variable concernant le type de logement doit être autorisée à varier en fonction de la catégorie. Ce second tableau nous indique que la variable concernant la densité de végétation pourrait aussi être amenée à varier en fonction du groupe, mais ce changement a un effet très marginal (différence entre les valeurs d’AIC de seulement 8 points). Nous ajustons donc un nouveau modèle autorisant la variable private à changer en fonction de la catégorie prédite.\n\nmodele3 &lt;- vglm(fac_price_cat ~ beds + \n                  Garden_or_backyard + Host_greets_you + Free_street_parking + \n                  prt_veg_500m + has_metro_500m + commercial_1km +\n                  private + cat_review + host_total_listings_count,\n                family = cumulative(link=\"logitlink\",\n                                    parallel = FALSE ~ private ,\n                                    reverse = TRUE),\n                data = data_airbnb2, model = T)\n\nVérification l’ajustement du modèle\nMaintenant que toutes les conditions d’application ont été passées en revue, nous pouvons passer à la vérification de l’ajustement du modèle.\n\nmodelenull &lt;- vglm(fac_price_cat ~ 1,\n                family = cumulative(link=\"logitlink\",\n                                    parallel = TRUE,\n                                    reverse = TRUE),\n                data = data_airbnb2, model = T)\nrsqs(loglike.full = logLik(modele3),\n     loglike.null = logLik(modelenull),\n     full.deviance = deviance(modele3),\n     null.deviance = deviance(modelenull),\n     nb.params = modele3@rank,\n     n = nrow(data_airbnb2)\n)\n\n$`deviance expliquee`\n[1] 0.2087098\n\n$`McFadden ajuste`\n[1] 0.2073552\n\n$`Cox and Snell`\n[1] 0.3606848\n\n$Nagelkerke\n[1] 0.4085924\n\n\nLe modèle final parvient à expliquer 21 % de la déviance originale. Il obtient un R2 ajusté de McFadden de 0,21, et des R2 de Cox et Snell et de Nagelkerke de respectivement 0,36 et 0,41. Construisons à présent la matrice de confusion de la prédiction du modèle (nous utilisons ici la fonction nice_confusion_matrix également disponible dans le code source de ce livre).\n\npreds_probs &lt;- fitted(modele3)\npred_cat &lt;- c(1,2,3)[max.col(preds_probs)]\nlibrary(caret)\nmatrices &lt;- nice_confusion_matrix(data_airbnb2$fac_price_cat, pred_cat)\n# Afficher la matrice de confusion\nprint(matrices$confusion_matrix)\n\n          rowsnames    1          2          3          rs      rp    \ncolsnames \"\"           \"1 (reel)\" \"2 (reel)\" \"3 (reel)\" \"Total\" \"%\"   \n1         \"1 (predit)\" \"1576\"     \"736\"      \"168\"      \"2480\"  \"27.7\"\n2         \"2 (predit)\" \"579\"      \"2385\"     \"1331\"     \"4295\"  \"48\"  \n3         \"3 (predit)\" \"49\"       \"771\"      \"1360\"     \"2180\"  \"24.3\"\n          \"Total\"      \"2204\"     \"3892\"     \"2859\"     \"8955\"  NA    \n          \"%\"          \"24.6\"     \"43.5\"     \"31.9\"     NA      NA    \n\n# Afficher les indicateurs de qualité de prédiction\nprint(matrices$indicators)\n\n             rnames                           precision rappel F1    \n1            \"1\"                              \"0.64\"    \"0.72\" \"0.67\"\n2            \"2\"                              \"0.56\"    \"0.61\" \"0.58\"\n3            \"3\"                              \"0.62\"    \"0.48\" \"0.54\"\nmacro_scores \"macro\"                          \"0.6\"     \"0.59\" \"0.59\"\n             \"Kappa\"                          \"0.37\"    NA     NA    \n             \"Valeur de p  (precision &gt; NIR)\" \"0\"       NA     NA    \n\n\nLe modèle a une précision totale de 61 % (61 % des observations ont été correctement prédites). La catégorie 1 a de loin la meilleure précision (72 %) et la 3 a la pire (48 %), ce qui indique qu’il manque vraisemblablement des variables indépendantes contribuant à prédire les prix des logements les plus chers. Le coefficient de Kappa (0,37) indique un niveau d’accord entre modéré et faible, mais le modèle parvient à une prédiction significativement supérieure au seuil de non-information. Si l’ajustement du modèle est imparfait, il est suffisamment fiable pour nous donner des renseignements pertinents sur le phénomène étudié.\nInterprétation des résultats\nL’ensemble des coefficients du modèle sont accessibles via la fonction summary. À partir des coefficients et de leurs erreurs standards, il est possible de calculer les rapports de cotes ainsi que leurs intervalles de confiance.\n\ntableau &lt;- summary(modele3)@coef3\nrappCote &lt;- exp(tableau[,1])\nrappCote2.5 &lt;- exp(tableau[,1] - 1.96 * tableau[,2])\nrappCote97.5 &lt;- exp(tableau[,1] + 1.96 * tableau[,2])\ntableau &lt;- cbind(tableau, rappCote, rappCote2.5, rappCote97.5)\nprint(round(tableau,3))\n\n                          Estimate Std. Error z value Pr(&gt;|z|) rappCote\n(Intercept):1               -1.203      0.137  -8.768    0.000    0.300\n(Intercept):2               -3.240      0.151 -21.516    0.000    0.039\nbeds                         0.748      0.027  28.143    0.000    2.113\nGarden_or_backyardYES        0.120      0.067   1.795    0.073    1.128\nHost_greets_youYES           0.094      0.060   1.548    0.122    1.098\nFree_street_parkingYES      -0.015      0.046  -0.320    0.749    0.985\nprt_veg_500m                -0.026      0.003 -10.182    0.000    0.975\nhas_metro_500mYES            0.063      0.048   1.326    0.185    1.065\ncommercial_1km               0.008      0.008   0.955    0.340    1.008\nprivateEntier:1              2.445      0.062  39.241    0.000   11.533\nprivateEntier:2              1.576      0.081  19.573    0.000    4.834\ncat_review                   0.200      0.021   9.563    0.000    1.222\nhost_total_listings_count   -0.002      0.001  -2.094    0.036    0.998\n                          rappCote2.5 rappCote97.5\n(Intercept):1                   0.230        0.393\n(Intercept):2                   0.029        0.053\nbeds                            2.006        2.226\nGarden_or_backyardYES           0.989        1.287\nHost_greets_youYES              0.975        1.236\nFree_street_parkingYES          0.900        1.078\nprt_veg_500m                    0.970        0.980\nhas_metro_500mYES               0.970        1.170\ncommercial_1km                  0.992        1.024\nprivateEntier:1                10.207       13.031\nprivateEntier:2                 4.128        5.660\ncat_review                      1.173        1.273\nhost_total_listings_count       0.996        1.000\n\n\nPour faciliter la lecture des résultats, nous proposons le tableau 8.14.\n\n\n\n\nTableau 8.14: Coefficients du modèle logistique des cotes proportionnelles\n\n\n\n\n\n\n\n\n\n\nVariable\nCoefficient\nRC\nP\nRC 2,5 %\nRC 97,5 %\nsign.\n\n\n\n(Intercept):1\n-1,200\n0,300\n0,000\n0,230\n0,395\n***\n\n\n(Intercept):2\n-3,240\n0,039\n0,000\n0,029\n0,052\n***\n\n\nbeds\n0,750\n2,113\n0,000\n2,014\n2,226\n***\n\n\nGarden_or_backyard\n\n\n\n\n\n\n\n\nref : NO\n–\n–\n–\n–\n–\n–\n\n\nYES\n0,120\n1,128\n0,073\n0,990\n1,284\n.\n\n\nHost_greets_you\n\n\n\n\n\n\n\n\nref : NO\n–\n–\n–\n–\n–\n–\n\n\nYES\n0,090\n1,098\n0,122\n0,980\n1,234\n\n\n\nFree_street_parking\n\n\n\n\n\n\n\n\nref : NO\n–\n–\n–\n–\n–\n–\n\n\nYES\n-0,010\n0,985\n0,749\n0,896\n1,083\n\n\n\nprt_veg_500m\n-0,030\n0,975\n0,000\n0,970\n0,980\n***\n\n\nhas_metro_500m\n\n\n\n\n\n\n\n\nref : NO\n–\n–\n–\n–\n–\n–\n\n\nYES\n0,060\n1,065\n0,185\n0,970\n1,174\n\n\n\ncommercial_1km\n0,010\n1,008\n0,340\n0,990\n1,020\n\n\n\ncat_review\n0,200\n1,222\n0,000\n1,174\n1,271\n***\n\n\nhost_total_listings_count\n0,000\n0,998\n0,036\n1,000\n1,000\n*\n\n\n\n\n\n\n\n\n\n\n\nEffets par niveau\n\n\n\n\n\n\n\n\nprivate\n\n\n\n\n\n\n\n\nref : Chambre\n–\n–\n–\n–\n–\n–\n\n\nEntier:1\n2,450\n11,533\n0,000\n10,176\n13,066\n***\n\n\nEntier:2\n1,580\n4,834\n0,000\n4,137\n5,641\n***\n\n\n\n\n\n\nSans surprise, chaque lit supplémentaire contribue à augmenter les chances que le logement soit dans une catégorie de prix supérieure (multiplication par deux à chaque lit supplémentaire). En revanche, la présence d’un stationnement gratuit, d’un jardin et l’accueil en personne par l’hôte n’ont pas d’effets significatifs. Comme l’indiquent les articles mentionnés en début de section, les revues positives augmentent la probabilité d’appartenir à une catégorie supérieure de prix. Pour chaque point supplémentaire sur l’échelle de 1 à 5, la probabilité d’appartenir à une catégorie de prix supérieure augmente de 22,2 %. Il est intéressant de noter que le fait de disposer du logement entier plutôt que d’une simple chambre augmente davantage les chances de passer du groupe de prix 1 à 2 (multiplication par 2,45) que du groupe 2 à 3 (multiplication par 1,58). Il semble également que si l’hôte possède plusieurs logements, la probabilité d’avoir une classe de prix supérieure diminue légèrement. Cependant, l’effet est trop petit pour pouvoir se livrer à des interprétations.\nLes variables environnementales ont peu d’effet : le pourcentage de surface commerciale dans un rayon d’un kilomètre et la présence d’une station de métro ne sont pas significatifs. En revanche, une augmentation de la surface végétale dans un rayon de 500 mètres tend à réduire la probabilité d’appartenir à une classe supérieure. Notre hypothèse concernant ce résultat est que cette variable représente un effet associé à la localisation des Airbnb, les plus centraux ayant tendance à être plus dispendieux, mais avec un environnement moins vert et inversement. Pour l’illustrer, prédisons les probabilités d’appartenance aux différents niveaux de prix d’un logement avec les caractéristiques suivantes : entièrement privé, 2 lits, un jardin, une place de stationnement gratuite, l’hôte ne dispose que d’un logement sur Airbnb et accueille les arrivants en personne, 10 % de surface commerciale dans un rayon d’un kilomètre, noté 2 comme catégorie de revue, absence de métro dans un rayon de 500 mètres.\n\n# Créer un jeu de données pour effectuer des prédictions\ndf &lt;- data.frame(\n  prt_veg_500m = seq(5,90),\n  beds = 2, \n  Garden_or_backyard = \"YES\",\n  Host_greets_you = \"YES\",\n  Free_street_parking = \"YES\",\n  has_metro_500m = \"NO\",\n  commercial_1km = 10,\n  private = \"Entier\",\n  cat_review = 2,\n  host_total_listings_count = 1\n)\n# Effectuer les prédictions (dans l'échelle log)\npreds &lt;- predict(modele3, newdata = df, type = \"link\", se.fit=T)\n# Définir l'inverse de la fonction de lien\nilink &lt;- function(x){exp(x)/(1+exp(x))}\n# Calculer les probabilités et leurs intervalles de confiance\ndf[[\"P[Y&gt;=2]\"]] &lt;- ilink(preds$fitted.values[,1])\ndf[[\"P[Y&gt;=2] 2,5\"]] &lt;- ilink(preds$fitted.values[,1] - 1.96 * preds$se.fit[,1])\ndf[[\"P[Y&gt;=2] 97,5\"]] &lt;- ilink(preds$fitted.values[,1] + 1.96 * preds$se.fit[,1])\ndf[[\"P[Y&gt;=3]\"]] &lt;- ilink(preds$fitted.values[,2])\ndf[[\"P[Y&gt;=3] 2,5\"]] &lt;- ilink(preds$fitted.values[,2] - 1.96 * preds$se.fit[,2])\ndf[[\"P[Y&gt;=3] 97,5\"]] &lt;- ilink(preds$fitted.values[,2] + 1.96 * preds$se.fit[,2])\ndf[[\"P[Y=1]\"]] = 1-df[[\"P[Y&gt;=2]\"]]\ndf[[\"P[Y=1] 2,5\" ]] = 1-df[[\"P[Y&gt;=2] 2,5\"]]\ndf[[\"P[Y=1] 97,5\"]] = 1-df[[\"P[Y&gt;=2] 97,5\"]]\n# Afficher les résultats\nggplot(data = df) + \n  geom_ribbon(aes(x = prt_veg_500m, \n                         ymin = `P[Y&gt;=2] 2,5`,\n                         ymax = `P[Y&gt;=2] 97,5`), fill = \"#f94144\", alpha = 0.4)+\n  geom_path(aes(x = prt_veg_500m, y = `P[Y&gt;=2]`, color = \"Y2\")) + \n  geom_ribbon(aes(x = prt_veg_500m, \n                         ymin = `P[Y&gt;=3] 2,5`,\n                         ymax = `P[Y&gt;=3] 97,5`), fill = \"#90be6d\", alpha = 0.4)+\n  geom_path(aes(x = prt_veg_500m, y = `P[Y&gt;=3]`, color = \"Y3\" )) + \n  geom_ribbon(aes(x = prt_veg_500m, \n                         ymin = `P[Y=1] 2,5`,\n                         ymax = `P[Y=1] 97,5`), fill = \"#277da1\" , alpha = 0.4)+\n  geom_path(aes(x = prt_veg_500m, y = `P[Y=1]`, color = \"Y1\")) + \n  scale_color_manual(name = \"Probabilités prédites\",\n                     breaks = c(\"Y1\", \"Y2\", \"Y3\"),\n                     labels = c(\"P[Y=1]\", \"P[Y&gt;=2]\", \"P[Y&gt;=3]\"),\n                     values = c(\"Y2\" = \"#f94144\", \"Y3\" = \"#90be6d\",\n                                   \"Y1\" = \"#277da1\")) + \n  labs(x = \"Densité de végétation (%)\",\n       y = \"Probabilité\",\n       subtitle = \"Y1 : moins de 50 $; Y2 : 50 à 99 $; Y3 : 100 à 249 $\")\n\n\n\nFigure 8.17: Prédiction de la probabilité d’appartenance aux trois catégories de prix en fonction de la densité de végétation\n\n\n\nNous constatons, à la figure 8.17, que les probabilités d’appartenir aux niveaux 2 et 3 diminuent à mesure qu’augmente le pourcentage de végétation. La probabilité d’appartenir à la classe 2 et plus (en rouge) passe de plus de 95 % en cas d’absence de végétation et à environ 75 % avec 80 % de végétation dans un rayon de 500 mètres. Comme vous pouvez le constater, la probabilité \\(P[Y=1]\\) est la symétrie de \\(P[Y&gt;=2]\\) puisque \\(P[Y=1]+P[Y&gt;=2] = 1\\).\n\n8.2.4 Modèle logistique multinomial\nLa régression logistique multinomiale est utilisée pour modéliser une variable Y qualitative multinomiale, c’est-à-dire une variable dont les modalités ne peuvent pas être ordonnées. Dans le modèle précédent, nous avons vu qu’il était possible de modéliser une variable ordinale avec une distribution binomiale en formulant l’hypothèse de la proportionnalité des cotes. Avec une variable multinomiale, cette hypothèse ne tient plus, car les catégories ne sont plus ordonnées. Il faut donc formuler le modèle différemment.\nL’idée derrière un modèle multinomial est de choisir une catégorie de référence, puis de modéliser les probabilités d’appartenir à chaque autre catégorie plutôt qu’à cette catégorie de référence (tableau 8.15). Si nous avons K catégories possibles dans notre variable Y, nous obtenons K-1 comparaisons. Chaque comparaison est modélisée avec sa propre équation, ce qui génère de nombreux paramètres. Par exemple, admettons que notre variable Y a cinq catégories et que nous disposons de six variables X prédictives. Nous avons ainsi 4 (5-1) équations de régression avec 7 paramètres (6 coefficients et une constante), soit 28 coefficients à analyser.\nConsidérant cette tendance à la multiplication des coefficients, il est fréquent de recourir à une méthode appelée Analyse de type 3 pour limiter au maximum le nombre de variables indépendantes (VI) dans le modèle. L’idée de cette méthode est de recalculer plusieurs versions du modèle dans lesquelles une variable indépendante est retirée, puis de réaliser un test de rapport de vraisemblance en comparant ce nouveau modèle (complet moins une VI) au modèle complet (toutes les VI) pour vérifier si la variable en question améliore significativement le modèle. Il est alors possible de retirer toutes les variables dont l’apport est négligeable si elles sont également peu intéressantes du point de vue théorique.\n\n\n\n\nTableau 8.15: Carte d’identité du modèle logistique multinomial\n\n\n\n\n\n\nType de variable dépendante\nVariable qualitative multinomiale avec K catégories\n\n\nDistribution utilisée\nBinomiale\n\n\nFormulation\n\n\\(Y \\sim Binomial(p)\\) \\(g(p = k\\text{ avec }ref = a) = \\beta_{0k} + \\beta X_{k}\\) \\(g(x) = \\frac{log(x)}{1-x}\\)\n\n\n\nFonction de lien\nLogistique\n\n\nParamètre modélisé\np\n\n\nParamètres à estimer\n\n\\(\\beta_{0k}\\), \\(\\beta\\)k pour \\(k \\in [2,...,K]\\)\n\n\n\nConditions d’application\nNon-séparation complète, absence de sur-dispersion ou de sous-dispersion, Indépendance des alternatives non pertinentes\n\n\n\n\n\n\n\n8.2.4.1 Conditions d’application\nLes conditions d’application sont les mêmes que pour un modèle binomial, avec l’ajout de l’hypothèse sur l’indépendance des alternatives non pertinentes. Cette dernière suppose que le choix entre deux catégories est indépendant des catégories proposées. Voici un exemple simple pour illustrer cette hypothèse: admettons que nous disposons d’une trentaine de personnes et que nous leur demandons la couleur de leurs yeux. Cette variable ne serait pas affectée par la présence de nouvelles couleurs en dehors de notre échantillon. En revanche, si nous leur demandons de choisir un mode de transport parmi une liste pour se rendre à leur lieu de travail, leur réponse serait nécessairement affectée par la liste des modes de transport disponibles. Les tests développés pour vérifier cette hypothèse sont connus pour leur faible fiabilité. Il est plus pertinent de décider théoriquement si cette hypothèse est valide ou non. Dans le cas contraire, il est possible d’utiliser une classe de modèle logistique plus rare: le modèle logistique imbriqué.\nNotez également que le grand nombre de paramètres dans ce type de modèle implique de disposer d’un plus grand nombre d’observations afin d’avoir suffisamment d’information dans chaque catégorie pour ajuster tous les paramètres.\nPour vérifier la présence de sur-dispersion, il est possible, dans le cas du modèle multinomial, de calculer le rapport entre le khi-deux de Pearson et le nombre de degrés de liberté du modèle. Si ce rapport est supérieur à 1 (des valeurs jusqu’à 1,15 ne sont pas problématiques), alors le modèle souffre de sur-dispersion (SAS Institute Inc 2020a). Le khi-deux de Pearson est simplement la somme des résidus de Pearson au carré dans le cas d’un modèle GLM.\n\\[\n\\chi^2 = \\sum_{i=1}^N\\sum_{c=1}^K{\\frac{(y_{ic} - p_{ic})^2}{p_{ic}}}\n\\tag{8.18}\\]\nAvec \\(y_{ic}\\) 1 si l’observation i appartient à la catégorie c, 0 autrement, \\(p_{ic}\\) la probabilité prédite pour l’observation i d’appartenir à la catégorie c, N le nombre d’observations et K le nombre de catégories.\nLe ratio est ensuite calculé comme suit: \\(\\frac{\\chi^2}{(N - p)(K-1)}\\), avec N le nombre d’observations et K le nombre de modalités dans la variable Y. Si ce ratio est égal ou supérieur à 1, alors le modèle souffre de sur-dispersion, si le ratio est inférieur à 1, le modèle souffre de sous-dispersion. Un léger écart (&gt; 0,15) n’est pas considéré comme problématique.\n\n\n\n\n\nLe modèle logistique imbriqué\n\n\nDu fait de sa proximité avec les modèles à effets mixtes que nous abordons au chapitre 9, nous ne détaillons pas ici le modèle logistique imbriqué, mais présentons plutôt son principe général. Il s’agit d’une généralisation du modèle logistique multinomial basé sur l’idée que certaines catégories pourraient être regroupées dans des « nids » (nest en anglais). Dans ces groupes, les erreurs peuvent être corrélées, indiquant ainsi que si une catégorie est manquante, une autre catégorie du même groupe sera préférée. Un paramètre \\(\\lambda\\) contrôle spécifiquement cette corrélation et permet de mesurer sa force une fois le modèle ajusté. Il peut être pertinent de comparer un modèle imbriqué à un modèle multinomial pour déterminer lequel des deux est le mieux ajusté aux données.\n\n\n\n8.2.4.2 Exemple appliqué dans R\nPour cet exemple, nous reproduisons une partie de l’analyse effectuée dans l’étude de McFadden (2016). Cet article s’intéresse aux écarts entre les croyances des individus et les connaissances scientifiques sur les sujets des OGM et du réchauffement climatique. Les auteurs utilisent pour cela des données issues d’une enquête auprès de 961 individus formant un échantillon représentatif de la population des États-Unis. Les données issues de cette enquête sont téléchargeables sur le site de l’éditeur, ce qui nous permet ici de reproduire l’analyse effectuée par les auteurs. Deux questions sont centrales dans l’enquête :\n\nDans quelle mesure êtes-vous en accord ou en désaccord avec la phrase suivante : les plantations génétiquement modifiées sont sans danger pour la consommation ?\nDans quelle mesure êtes-vous en accord ou en désaccord avec la phrase suivante : la Terre se réchauffe du fait des activités humaines ?\n\nPour ces deux questions, les répondants devaient sélectionner leur degré d’accord sur une échelle de Likert allant de 1 (fortement en désaccord) à 5 (fortement en accord). Les réponses à ces deux questions ont été utilisées pour former une variable multinomiale à quatre modalités :\n\nA. Les individus sont en accord avec les deux propositions.\nB. Les individus sont en désaccord sur les OGM, mais en accord sur le réchauffement climatique.\nC. Les individus sont en accord sur les OGM, mais en désaccord sur le réchauffement climatique.\nD. Les individus sont en désaccord avec les deux propositions.\n\nUn modèle logistique multinomial a été utilisé pour déterminer quels facteurs contribuent à la probabilité d’appartenir à ces différentes catégories. Les variables indépendantes présentes dans le modèle sont détaillées dans le tableau 8.16. Les auteurs avaient notamment conclu que :\n\nLes effets des connaissances (réelles ou perçues) sur l’appartenance aux différentes catégories n’étaient pas uniformes et pouvaient varier en fonction du sujet.\nL’orientation politique avait une influence significative sur les croyances.\nLes répondants avec de plus hauts résultats au test de cognition CRT avaient plus souvent des opinions divergentes de la communauté scientifique.\n\n\n\n\n\nTableau 8.16: Variables indépendantes utilisées dans le modèle logistique multinomial\n\n\n\n\n\n\n\nNom de la variable\nsignification\nType de variable\nMesure\n\n\n\nPercepOGM\nLa recherche scientifique supporte ma vision sur la sécurité des plantes OGM\nVariable ordinale\nÉchelle de Likert de 1 (fortement en désaccord) à 5 (fortement en accord)\n\n\nPercepRechClim\nLa recherche scientifique supporte ma vision sur le réchauffement climatique\nVariable ordinale\nÉchelle de Likert de 1 (fortement en désaccord) à 5 (fortement en accord)\n\n\nConnaisOGM\nNiveau de connaissance sur les OGM\nVariable ordinale\nNombre de réponses sur trois questions portant sur les OGM\n\n\nConnaisRechClim\nNiveau de connaissance sur le réchauffement climatique\nVariable ordinale\nNombre de réponses sur trois questions portant sur le réchauffement climatique\n\n\nCRT\nScore obtenu au Cognitive Reflection Test, utilisé pour déterminer la propension à faire preuve d’esprit d’analyse plutôt que choisir des réponses intuitives\nVariable ordinale\nNombre de réponses sur trois questions pièges\n\n\nParti\nOrientation politique du répondant\nVariable multinomiale\nRépublicain, démocrate et autre\n\n\nSexe\nSexe du répondant\nVariable binaire\nFemme ou homme\n\n\nAge\nÂge du répondant\nVariable continue\nÂge du répondant\n\n\nRevenu\nNiveau de revenu du répondant\nVariable ordinale\nÉchelle de 1 (moins de 20 000 $) à (140 000 $ et plus)\n\n\n\n\n\n\nVérification des conditions d’application\nAvant d’ajuster le modèle, nous commençons par vérifier l’absence de multicolinéarité excessive entre les variables indépendantes. Toutes les valeurs de VIF sont inférieures à 2, indiquant bien une absence de multicolinéarité.\n\ndata_quest &lt;- read.csv(\"data/glm/enquete_PublicOpinion_vs_Science.csv\")\n# Choix des valeurs de références dans les facteurs\ndata_quest$Parti &lt;- relevel(as.factor(data_quest$Parti), ref = \"Democrate\")\ndata_quest$Sexe &lt;- relevel(as.factor(data_quest$Sexe), ref = \"homme\")\nvif(glm(SCIGM ~ PercepOGM + PercepRechClim + ConnaisOGM + ConnaisRechClim +\n          CRT + Parti + AGE + Sexe + Revenu, data = data_quest))\n\n                    GVIF Df GVIF^(1/(2*Df))\nPercepOGM       1.092693  1        1.045320\nPercepRechClim  1.177495  1        1.085125\nConnaisOGM      1.150662  1        1.072689\nConnaisRechClim 1.158438  1        1.076307\nCRT             1.155371  1        1.074882\nParti           1.130817  2        1.031212\nAGE             1.071655  1        1.035208\nSexe            1.064918  1        1.031949\nRevenu          1.049499  1        1.024451\n\n\nLa seconde étape est d’ajuster le modèle et de vérifier l’absence de sur ou sous-dispersion. Pour ajuster le modèle, nous utilisons à nouveau la fonction vglm du package VGAM, avec le paramètre family = multinomial(). Le ratio entre la statistique de Pearson et le nombre de degrés de liberté du modèle indique une absence de sur ou sous-dispersion (1,04).\n\n# Ajustement du modèle\nmodele &lt;- vglm(Y ~ PercepOGM + PercepRechClim + ConnaisOGM + ConnaisRechClim + \n                 CRT + Parti + AGE + Sexe + Revenu,\n               data = data_quest, \n               family = multinomial(refLevel = \"A\"), model = T)\n# Calcul du Khi2 de Pearson\npred &lt;- predict(modele, type= \"response\")\ncat_predict &lt;- colnames(pred)[max.col(pred)]\nfreq_real &lt;- table(data_quest$Y)\nfreq_pred &lt;- table(cat_predict)\n\nkhi2 &lt;- sum(residuals(modele, type = \"pearson\")^2)\n\nN &lt;- nrow(data_quest)\np &lt;- modele@rank\nr &lt;- length(freq_real)\nratio &lt;- khi2 / ((N-p)*(r-1))\nprint(ratio)\n\n[1] 1.045889\n\n\nLa troisième étape de la vérification des conditions d’application est l’analyse des distances de Cook. À nouveau, puisque le modèle évalue la probabilité d’appartenir à \\(K-1\\) catégorie, nous pouvons calculer \\(K-1\\) résidus par observation et par extension \\(K-1\\) distances de Cook. Aucune observation ne semble se détacher nettement dans la figure 8.18. Nous décidons donc pour le moment de conserver toutes les observations.\n\n# Extraction des résidus\nres &lt;- residuals(modele, type = \"pearson\")\n# Extraction de la hat matrix (nécessaire pour calculer la distance de Cook)\nhat &lt;- hatvaluesvlm(modele)\n# Calcul des distances de Cook\nvals &lt;- c(\"A\" , \"B\" , \"C\" , \"D\")\ncooks &lt;- lapply(1:ncol(res), function(i){\n  r &lt;- res[,i]\n  h &lt;- hat[,i]\n  cook &lt;- (r/(1 - h))^2 * h/(1 * modele@rank)\n  df &lt;- data.frame(\n    oid = 1:length(cook),\n    cook = cook\n  )\n  plot &lt;- ggplot(data = df)+\n    geom_point(aes(x = oid, y = cook), size = 0.2, color = rgb(0.1,0.1,0.1,0.4)) + \n    labs(x = \"\", y = \"\", subtitle = paste(\"distance de Cook P(\",vals[[1]],\" VS \",vals[[i+1]],\")\", sep = \"\"))+\n    theme(axis.ticks.x = element_blank(),\n          axis.text.x = element_blank())\n  return(plot)\n})\nggarrange(plotlist = cooks, ncol = 2, nrow = 2)\n\n\n\nFigure 8.18: Distances de Cook pour le modèle logistique multinomial\n\n\n\nAvant de passer à l’analyse de résidus simulés, il est pertinent de réaliser une analyse de type 3 afin de retirer les variables indépendantes dont l’apport au modèle est négligeable. La fonction AnalyseType3 (disponible dans le code source de ce livre) permet d’effectuer cette opération automatiquement pour un objet de type vglm.\n\ntableau &lt;- AnalyseType3(modele, data_quest, verbose = FALSE)\n\n************************************* \nType 3 Analysis of Effects \n************************************* \nAIC model complet :  1855 \nloglikelihood model complet :  1789 \n  variable retiree  AIC loglikelihood  p.val\n1        PercepOGM 1879          1819      0\n2   PercepRechClim 1941          1881      0\n3       ConnaisOGM 1910          1850      0\n4  ConnaisRechClim 1862          1802 0.0059\n5              CRT 1860          1800 0.0125\n6            Parti 1879          1825      0\n7              AGE 1852          1792 0.4469\n8             Sexe 1875          1815      0\n9           Revenu 1850          1790 0.7718\n\n\nL’analyse de type 3 nous permet de déterminer que l’âge et le revenu sont deux variables dont la contribution au modèle est marginale. À titre de rappel, l’analyse de type 3 permet de comparer si le modèle complet (avec l’ensemble des variables indépendantes) est statistiquement mieux ajusté que le modèle avec l’ensemble des variables, sauf une. Or, dans notre cas, le modèle complet n’est pas statistiquement mieux ajusté que le modèle complet sans la variable Age (p = 0,44) et que le modèle complet sans la variable Revenu (p = 0,77). Cela signifie donc que ces deux variables n’ont pas un apport significatif au modèle et peuvent par conséquent être ôtées par parcimonie. Nous décidons donc de les retirer afin d’alléger les tableaux de coefficients que nous présentons plus loin. Nous pouvons également en conclure que ces deux variables ne jouent aucun rôle dans la propension à être en désaccord avec la recherche scientifique. Nous réajustons le modèle en conséquence.\n\nmodele2 &lt;- vglm(Y ~ PercepOGM + PercepRechClim + ConnaisOGM + ConnaisRechClim + \n                 CRT + Parti + Sexe,\n               data = data_quest, \n               family = multinomial(refLevel = \"A\"), model = T)\n\nNous pouvons à présent passer à l’analyse des résidus simulés. Le problème avec ce modèle est que sa variable Y est qualitative alors que la méthode d’analyse des résidus du package DHARMa ne peut traiter que des variables quantitatives, binaires ou ordinales. Pour rappel, il est possible d’envisager la prédiction d’un modèle logistique multinomial comme la prédiction d’une série de modèles logistiques binomiaux. En représentant nos prédictions de cette façon, nous pouvons à nouveau utiliser le package DHARMa pour analyser nos résidus. Veuillez noter que cette approche n’est pas optimale et que cette section du livre peut être amenée à changer.\nLa figure 8.19 indique que les résidus suivent bien une distribution uniforme et qu’aucune valeur aberrante n’est observable.\n\n# Extraire les prédictions du modèle\ncategories &lt;- c(\"B\" , \"C\" , \"D\")\npredicted &lt;- predict(modele2, type = \"link\")\nnsim &lt;- 1000\nilink &lt;- function(x){exp(x)/(1+exp(x))}\n# Boucler sur chacune des catégories en dehors de la référence\ndata_sims &lt;- lapply(1:ncol(predicted), function(i){\n  categorie &lt;- categories[[i]]\n  # Extraire les observation de la catégorie i et de la référence\n  test &lt;- data_quest$Y %in% c(\"A\", categorie)\n  # Calculer les probabilité d'appartenance à i\n  values &lt;- predicted[test,i]\n  probs &lt;- ilink(values)\n  # Extraire les valeurs réelles et les convertir en 0 / 1\n  real &lt;- data_quest[test,]$Y\n  real &lt;- ifelse(real==\"A\",0,1)\n  # Enregistrer ces différents éléments\n  all_probs &lt;- cbind(1-probs, probs)\n  sub_data &lt;- subset(data_quest, test)\n  return(list(\"real\" = real, \"probs\" = all_probs, \"data\" = sub_data))\n})\n# Extraire les probabilités prédites\nall_probs &lt;- do.call(rbind, lapply(data_sims, function(i){i$probs}))\n# Extraire les vrais catégories\nall_real &lt;- unlist(lapply(data_sims, function(i){i$real}))\n# Effectuer les simulations\nsimulations &lt;- lapply(1:nrow(all_probs), function(i){\n  probs &lt;- all_probs[i,]\n  sims &lt;- sample(c(0,1), size = nsim, replace = TRUE, prob = probs)\n  return(sims)\n})\nmatsim &lt;- do.call(rbind, simulations)\n# Calculer les résidus simulés\nsim_res &lt;- createDHARMa(simulatedResponse = matsim, \n                            observedResponse = all_real,\n                            fittedPredictedResponse = all_probs[,2],\n                            integerResponse = TRUE)\n# Afficher les résultats\nplot(sim_res)\n\n\n\nFigure 8.19: Diagnostic général des résidus simulés pour le modèle multinomial\n\n\n\nLa figure 8.20 permet d’affiner le diagnostic en s’assurant de l’absence de relation entre les variables indépendantes et les résidus. Il est possible de remarquer des irrégularités pour les variables de perception (premier et second panneaux). Dans les deux cas, la catégorie 1 (fort désaccord) se démarque nettement des autres catégories. Nous proposons donc de les recoder comme des variables binaires : en désaccord / pas en désaccord pour minimiser cet effet.\n\n# Recomposer les données pour coller au format\n# étendu de la prediction\netend_data &lt;- do.call(rbind, lapply(data_sims, function(i){i$data}))\npar(mfrow=c(3,3))\nvars &lt;- c(\"PercepOGM\", \"PercepRechClim\", \"ConnaisOGM\", \n          \"ConnaisRechClim\", \"CRT\", \"Parti\", \"Sexe\")\nfor(v in  vars){\n  plotResiduals(sim_res, etend_data[[v]], xlab= v, ylab = \"résidus\")\n}\n\n\n\n\n\nFigure 8.20: Diagnostic des variables indépendantes et des résidus simulés pour le modèle multinomial\n\n\n\nNous réajustons donc le modèle et recalculons nos résidus ajustés (masqué ici pour alléger le document). La figure 8.21 nous confirme que le problème a été corrigé.\n\n# Convertir les variables ordinales et variables binaires\ndata_quest$PercepOGMDes &lt;- ifelse(data_quest$PercepOGM %in% c(1,2), 1,0)\ndata_quest$PercepRechClimDes &lt;- ifelse(data_quest$PercepRechClim %in% c(1,2), 1,0)\n# Réajuster le modèle\nmodele3 &lt;- vglm(Y ~ PercepOGMDes + PercepRechClimDes + \n                  ConnaisOGM + ConnaisRechClim + \n                  CRT + Parti + Sexe,\n               data = data_quest, \n               family = multinomial(refLevel = \"A\"), model = T)\n\n\n\n\n\nFigure 8.21: Diagnostic général des résidus simulés pour le modèle multinomial (version 3)\n\n\n\nProfitons du fait que nous utilisons le package VGAM pour vérifier l’absence d’effet de Hauck-Donner qui indiquerait que des variables indépendantes provoquent des séparations parfaites.\n\ntest &lt;- hdeff(modele3)\ntest[test == TRUE]\n\n(Intercept):2 (Intercept):3 \n         TRUE          TRUE \n\n\nLa fonction nous informe que les constantes permettant de comparer le groupe C au groupe A, et le groupe D au groupe A provoquent des séparations parfaites. Cela s’explique notamment par le faible nombre d’observations tombant dans ces catégories. Considérant que comparativement à la catégorie A, être dans les catégories B, C, ou D signifie remettre en cause au moins un consensus scientifique, il peut être raisonnable de fixer la constante pour qu’elle soit la même pour les trois comparaisons. Ainsi, les chances de passer de A à un autre groupe ne dépenderaient pas du groupe en question, mais uniquement des variables indépendantes. Pour cela, nous pouvons forcer le modèle à n’ajuster qu’une seule constante avec la syntaxe suivante :\n\nmodele4 &lt;- vglm(Y ~ PercepOGMDes + PercepRechClimDes + \n                  ConnaisOGM + ConnaisRechClim + \n                  CRT + Parti + Sexe,\n               data = data_quest, \n               family = multinomial(refLevel = \"A\",\n                                    parallel = TRUE ~1), model = T)\ntest &lt;- hdeff(modele4)\nprint(table(test))\n\ntest\nFALSE \n   25 \n\n# Calcul du khi2 de Pearson\npred &lt;- predict(modele4, type= \"response\")\ncat_predict &lt;- colnames(pred)[max.col(pred)]\nfreq_real &lt;- table(data_quest$Y)\nfreq_pred &lt;- table(cat_predict)\nkhi2 &lt;- sum(residuals(modele4, type = \"pearson\")^2)\nN &lt;- nrow(data_quest)\np &lt;- modele4@rank\nr &lt;- length(freq_real)\nratio &lt;- khi2 / ((N)*(r-1)-p)\nprint(ratio)\n\n[1] 1.010319\n\n\nNous n’avons donc plus de séparation complète ni de sur ou sous-dispersion et les résidus simulés de la quatrième version du modèle sont toujours acceptables (figure 8.22).\n\n# Extraire les prédictions du modèle\ncategories &lt;- c(\"B\" , \"C\" , \"D\")\npredicted &lt;- predict(modele4, type = \"link\")\nnsim &lt;- 1000\nilink &lt;- function(x){exp(x)/(1+exp(x))}\n\n# Boucler sur chacune des catégories en dehors de la référence\ndata_sims &lt;- lapply(1:ncol(predicted), function(i){\n  categorie &lt;- categories[[i]]\n  # Extraire les observation de la catégorie i et de la référence\n  test &lt;- data_quest$Y %in% c(\"A\", categorie)\n  # Calculer les probabilité d'appartenance à i\n  values &lt;- predicted[test,i]\n  probs &lt;- ilink(values)\n  # Extraire les valeurs réelles et les convertir en 0 / 1\n  real &lt;- data_quest[test,]$Y\n  real &lt;- ifelse(real==\"A\",0,1)\n  # Enregistrer ces différents éléments\n  all_probs &lt;- cbind(1-probs, probs)\n  sub_data &lt;- subset(data_quest, test)\n  return(list(\"real\" = real, \"probs\" = all_probs, \"data\" = sub_data))\n})\n\n# Extraire les probabilités prédites\nall_probs &lt;- do.call(rbind, lapply(data_sims, function(i){i$probs}))\n\n# Extraire les vrais catégories\nall_real &lt;- do.call(c, lapply(data_sims, function(i){i$real}))\n\n# Effectuer les simulations\nsimulations &lt;- lapply(1:nrow(all_probs), function(i){\n  probs &lt;- all_probs[i,]\n  sims &lt;- sample(c(0,1), size = nsim, replace = TRUE, prob = probs)\n  return(sims)\n})\nmatsim &lt;- do.call(rbind, simulations)\n\n# Calculer les résidus simulés\nsim_res &lt;- createDHARMa(simulatedResponse = matsim, \n                            observedResponse = all_real,\n                            fittedPredictedResponse = all_probs[,2],\n                            integerResponse = TRUE)\nplot(sim_res)\n\n\n\nFigure 8.22: Diagnostic général des résidus simulés pour le modèle multinomial (version 4)\n\n\n\nVérification l’ajustement du modèle\nPuisque les conditions d’application du modèle sont respectées, nous pouvons à présent vérifier sa qualité d’ajustement.\n\nmodelenull &lt;- vglm(Y ~ 1 ,\n                   data = data_quest, \n                   family = multinomial(refLevel = \"A\",\n                                        parallel = TRUE ~ 1 + CRT)\n                   , model = T)\nrsqs(loglike.full = logLik(modele4),\n     loglike.null = logLik(modelenull),\n     full.deviance = deviance(modele4),\n     null.deviance = deviance(modelenull),\n     nb.params = modele4@rank,\n     n = nrow(data_quest)\n)\n\n$`deviance expliquee`\n[1] 0.1750071\n\n$`McFadden ajuste`\n[1] 0.1530715\n\n$`Cox and Snell`\n[1] 0.3397248\n\n$Nagelkerke\n[1] 0.3746843\n\n\nLe modèle parvient à expliquer 17,5 % de la déviance totale. Il obtient un R2 ajusté de McFadden de 0,15, et des R2 de Cox et Snell et de Nagelkerke de respectivement 0,34 et 0,37. Passons à la construction de la matrice de confusion pour analyser la capacité de prédiction du modèle.\n\npreds &lt;- predict(modele4, type = \"response\")\npred_cats &lt;- colnames(preds)[max.col(preds)]\nreal &lt;- data_quest$Y\nmatrices &lt;- nice_confusion_matrix(real, pred_cats)\n\n# Afficher la matrice de confusion\nprint(matrices$confusion_matrix)\n\n          rowsnames    A          B          C          D          rs     \ncolsnames \"\"           \"A (reel)\" \"B (reel)\" \"C (reel)\" \"D (reel)\" \"Total\"\nA         \"A (predit)\" \"482\"      \"168\"      \"75\"       \"29\"       \"754\"  \nB         \"B (predit)\" \"31\"       \"88\"       \"9\"        \"20\"       \"148\"  \nC         \"C (predit)\" \"10\"       \"6\"        \"18\"       \"6\"        \"40\"   \nD         \"D (predit)\" \"3\"        \"4\"        \"3\"        \"9\"        \"19\"   \n          \"Total\"      \"526\"      \"266\"      \"105\"      \"64\"       \"961\"  \n          \"%\"          \"54.7\"     \"27.7\"     \"10.9\"     \"6.7\"      NA     \n          rp    \ncolsnames \"%\"   \nA         \"78.5\"\nB         \"15.4\"\nC         \"4.2\" \nD         \"2\"   \n          NA    \n          NA    \n\n# Afficher les indicateurs de qualité de prédiction\nprint(matrices$indicators)\n\n             rnames                           precision rappel F1    \nA            \"A\"                              \"0.64\"    \"0.92\" \"0.75\"\nB            \"B\"                              \"0.59\"    \"0.33\" \"0.43\"\nC            \"C\"                              \"0.45\"    \"0.17\" \"0.25\"\nD            \"D\"                              \"0.47\"    \"0.14\" \"0.22\"\nmacro_scores \"macro\"                          \"0.6\"     \"0.62\" \"0.57\"\n             \"Kappa\"                          \"0.27\"    NA     NA    \n             \"Valeur de p  (precision &gt; NIR)\" \"0\"       NA     NA    \n\n\nLa précision globale (macro) du modèle est de 60 % et dépasse significativement le seuil de non-information. L’indicateur de Kappa indique un accord modéré entre la prédiction et les valeurs réelles. Les catégories C et D sont les catégories avec la plus faible précision, indiquant ainsi que le modèle a tendance à manquer les prédictions pour les individus en désaccord avec le consensus scientifique sur le réchauffement climatique. Les indices de rappel sont également très faibles pour les catégories B, C et D, indiquant que très peu d’observations appartenant originalement à ces groupes ont bien été classées dans ces groupes. La capacité de prédiction du modèle est donc relativement faible.\nInterprétation des résultats\nPuisque nous disposons de quatre catégories dans notre variable Y, nous obtenons au final trois tableaux de coefficients. Il est possible de visualiser l’ensemble des coefficients du modèle avec la fonction summary, nous proposons les tableaux 8.17, 8.18 et 8.19 pour présenter l’ensemble des résultats.\n\n\n\n\nTableau 8.17: Coefficients du modèle multinomial A versus B\n\n\n\n\n\n\n\n\n\n\nVariable\nCoefficient\nRC\nval.p\nRC 2,5 %\nRC 97,5 %\nsign.\n\n\n\nPercepOGMDes\n1,940\n6,989\n0,000\n4,221\n11,588\n***\n\n\nPercepRechClimDes\n0,430\n1,532\n0,305\n0,677\n3,456\n\n\n\nConnaisOGM\n-0,330\n0,718\n0,000\n0,607\n0,852\n***\n\n\nConnaisRechClim\n0,180\n1,197\n0,084\n0,980\n1,462\n.\n\n\nCRT\n0,350\n1,417\n0,016\n1,073\n1,878\n*\n\n\nParti\n\n\n\n\n\n\n\n\nref : Democrate\n–\n–\n–\n–\n–\n–\n\n\nautre\n0,660\n1,934\n0,001\n1,310\n2,858\n***\n\n\nRepublicain\n0,650\n1,910\n0,003\n1,259\n2,915\n**\n\n\nSexe\n\n\n\n\n\n\n\n\nref : homme\n–\n–\n–\n–\n–\n–\n\n\nfemme\n1,280\n3,581\n0,000\n2,535\n5,053\n***\n\n\n\n\n\n\nLe tableau 8.17 compare donc le groupe A (en accord avec la recherche scientifique sur les deux sujets) et le groupe B (en désaccord sur la question des OGM). Les résultats indiquent que le fait de se percevoir en désaccord avec le consensus scientifique sur la question des OGM multiplie par sept les chances d’appartenir au groupe B comparativement au groupe A. Cependant, pour chaque bonne réponse supplémentaire sur les questions testant les connaissances sur les OGM, les chances d’appartenir au groupe B comparativement au groupe A diminuent de 28 %. Ainsi, un individu ayant répondu correctement aux trois questions verrait ses chances réduites de 63 % d’appartenir au groupe B (\\(exp(-\\text{0,33}\\times\\text{3})\\)). Il est intéressant de noter que les variables concernant le réchauffement climatique n’ont pas d’effet significatif ici. La variable CRT indique qu’à chaque bonne réponse supplémentaire au test de cognition, les chances d’appartenir au groupe B augmentent de 42 %. Un individu qui aurait répondu aux trois questions du test aurait donc 2,9 fois plus de chances d’appartenir au groupe B qu’au groupe A. Concernant le parti politique, comparativement à une personne se déclarant plus proche du parti démocrate, les personnes proches du parti républicain ou d’un autre parti ont près de deux fois plus de chances d’appartenir au groupe B. Enfin, une femme, comparativement à un homme, a 3,6 fois plus de chance d’appartenir au groupe B.\n\n\n\n\nTableau 8.18: Coefficients du modèle multinomial A versus C\n\n\n\n\n\n\n\n\n\n\nvariable\nCoefficient\nRC\nval.p\nRC 2,5 %\nRC 97,5 %\nsign.\n\n\n\nPercepOGMDes\n-0,180\n0,834\n0,705\n0,326\n2,138\n\n\n\nPercepRechClimDes\n2,060\n7,821\n0,000\n3,819\n16,119\n***\n\n\nConnaisOGM\n-0,110\n0,896\n0,287\n0,733\n1,094\n\n\n\nConnaisRechClim\n0,280\n1,323\n0,024\n1,041\n1,682\n*\n\n\nCRT\n0,240\n1,275\n0,149\n0,914\n1,768\n\n\n\nParti\n\n\n\n\n\n\n\n\nref : Democrate\n–\n–\n–\n–\n–\n–\n\n\nautre\n-0,190\n0,828\n0,496\n0,482\n1,433\n\n\n\nRepublicain\n0,920\n2,512\n0,000\n1,584\n4,015\n***\n\n\nSexe\n\n\n\n\n\n\n\n\nref : homme\n–\n–\n–\n–\n–\n–\n\n\nfemme:1\n-0,450\n0,640\n0,040\n0,419\n0,980\n*\n\n\n\n\n\n\nLe tableau 8.18 compare les groupes A et C (en désaccord sur le réchauffement climatique). Il est intéressant de noter ici que se percevoir en désaccord avec la recherche scientifique est associé avec une forte augmentation des chances d’appartenir au groupe C. Cependant, un plus grand nombre de bonnes réponses aux questions sur le réchauffement climatique est également associé avec une augmentation des chances (30 % à chaque bonne réponse supplémentaire) d’appartenir au groupe C. Le CRT n’a cette fois-ci pas d’effet. Se déclarer proche du parti républicain, comparativement au parti démocrate, multiplie les chances par 2,5 d’appartenir au groupe C. Comparativement au tableau précédent, le fait d’être une femme diminue les chances de 36 % d’appartenir au groupe C.\n\n\n\n\nTableau 8.19: Coefficients du modèle multinomial A versus D\n\n\n\n\n\n\n\n\n\n\nvariable\nCoefficient\nRC\nval.p\nRC 2,5 %\nRC 97,5 %\nsign.\n\n\n\nPercepOGMDes\n1,500\n4,488\n0,000\n2,270\n8,935\n***\n\n\nPercepRechClimDes\n2,440\n11,501\n0,000\n5,312\n25,028\n***\n\n\nConnaisOGM\n-0,480\n0,621\n0,000\n0,492\n0,787\n***\n\n\nConnaisRechClim\n0,130\n1,140\n0,399\n0,844\n1,553\n\n\n\nCRT\n0,340\n1,409\n0,119\n0,914\n2,160\n\n\n\nParti\n\n\n\n\n\n\n\n\nref : Democrate\n–\n–\n–\n–\n–\n–\n\n\nautre\n0,190\n1,211\n0,531\n0,664\n2,203\n\n\n\nRepublicain\n0,630\n1,872\n0,038\n1,041\n3,387\n*\n\n\nSexe\n\n\n\n\n\n\n\n\nref : homme\n–\n–\n–\n–\n–\n–\n\n\nfemme:1\n-0,110\n0,896\n0,664\n0,543\n1,477\n\n\n\n\n\n\n\nLe dernier tableau (8.19) compare le groupe A au groupe D (en désaccord sur les deux sujets). Les variables les plus importantes sont une fois encore le fait de se sentir en désaccord avec la recherche scientifique et le degré de connaissance sur les OGM. La variable concernant le parti politique est significative au seuil 0,05 et exprime toujours une tendance accrue pour les individus du parti républicain à appartenir au groupe D.\nNos propres conclusions corroborent celles de l’article original. Une des conclusions intéressantes est que le rejet du consensus scientifique ne semble pas nécessairement être associé à un déficit d’information ni à une plus faible capacité analytique, mais relèverait davantage d’une polarisation politique. Notez que cette littérature sur les croyances et la confiance dans la recherche est complexe, si le sujet vous intéresse, la discussion de l’article de McFadden (2016) est un bon point de départ.\n\n8.2.5 Conclusion sur les modèles pour des variables qualitatives\nNous avons vu dans cette section, les trois principales formes de modèles GLM pour modéliser une variable binaire (modèle binomial), une variable ordinale (modèle de cotes proportionnel) et une variable multinomiale (modèle multinomial). Pour ces trois modèles, nous avons vu que la distribution utilisée est toujours la distribution binomiale et la fonction de lien logistique. Les coefficients obtenus s’interprètent comme des rapports de cotes, une fois qu’ils sont transformés avec la fonction exponentielle."
  },
  {
    "objectID": "08-GLM.html#sec-083",
    "href": "08-GLM.html#sec-083",
    "title": "8  Régressions linéaires généralisées (GLM)",
    "section": "\n8.3 Modèles GLM pour des variables de comptage",
    "text": "8.3 Modèles GLM pour des variables de comptage\nDans cette section, nous présentons les principaux modèles utilisés pour modéliser des variables de comptage. Il peut s’agir de variables comme le nombre d’accidents à une intersection, le nombre de cafés par quartier, le nombre de cas d’une maladie donnée par entité géographique, etc.\n\n8.3.1 Modèle de Poisson\nLe modèle GLM de base pour modéliser une variable de comptage est le modèle de Poisson. Pour rappel, la distribution de Poisson a un seul paramètre: \\(\\lambda\\). Il représente le nombre moyen d’évènements observés sur l’intervalle de temps d’une observation, ainsi que la dispersion de la distribution. En conséquence, \\(\\lambda\\) doit être un nombre strictement positif; autrement dit, nous ne pouvons pas observer un nombre négatif d’évènements. Il est donc nécessaire d’utiliser une fonction de lien pour contraindre l’équation de régression sur l’intervalle \\([0 ,+\\infty]\\). La fonction la plus utilisée est le logarithme naturel (log) dont la réciproque est la fonction exponentielle (exp).\n\n\n\n\nTableau 8.20: Carte d’identité du modèle de Poisson\n\n\n\n\n\n\nType de variable dépendante\nVariable de comptage\n\n\nDistribution utilisée\nPoisson\n\n\nFormulation\n\n\\(Y \\sim Poisson(\\lambda)\\) \\(g(\\lambda) = \\beta_0 + \\beta X\\) \\(g(x) =log(x)\\)\n\n\n\nFonction de lien\nlog\n\n\nParamètre modélisé\n\\(\\lambda\\)\n\n\nParamètres à estimer\n\n\\(\\beta_0\\), \\(\\beta\\)\n\n\n\nConditions d’application\nAbsence d’excès de zéros, absence de sur-dispersion ou de sous-dispersion\n\n\n\n\n\n\n\n8.3.1.1 Interprétation des paramètres\nLes coefficients du modèle expriment l’effet du changement d’une unité des variables X sur \\(\\lambda\\) (le nombre de cas) dans l’échelle logarithmique (log-scale). Pour rappel, l’échelle logarithmique est multiplicative : si nous convertissons les coefficients dans leur échelle originale avec la fonction exponentielle, leur effet n’est plus additif, mais multiplicatif. Prenons un exemple concret, admettons que nous avons ajusté un modèle de Poisson à une variable de comptage Y avec deux variables \\(X_1\\) et \\(X_2\\) et que nous avons obtenus les coefficients suivants :\n\\(\\beta_0 = 1,8 \\text{; } \\beta_1 = 0,5 \\text{; } \\beta_2 = -1,5\\)\nL’interprétation basique (sur l’échelle logarithmique) est la suivante : une augmentation d’une unité de la variable \\(X_1\\) est associée avec une augmentation de 0,5 du logarithme du nombre de cas attendus. Une augmentation d’une unité de la variable \\(X_2\\) est associée avec une réduction de 1,5 unité du logarithme du nombre de cas attendus. Avec la conversion avec la fonction exponentielle, nous obtenons alors :\n\n\\(exp\\mbox{(0,5) = 1,649}\\), soit une multiplication par 1,649 du nombre de cas attendu (aussi appelé taux d’incident) à chaque augmentation d’une unité de \\(X_1\\);\n\\(exp\\mbox{(-1,5) = 0,223}\\), soit une division par 4,54 (1/0,223) du nombre de cas attendu (aussi appelé taux d’incident) à chaque augmentation d’une unité de \\(X_2\\).\n\nUtilisons maintenant notre équation pour effectuer une prédiction si \\(X_1 = 1\\) et \\(X_2 = 1\\).\n\\(\\lambda = exp(\\mbox{1,8} + (\\mbox{0,5}\\times 1) + (\\mbox{-1,5}\\times1)) = \\mbox{2,225}\\)\nSi nous augmentons \\(X_1\\) d’une unité, nous obtenons alors :\n\\(\\lambda = exp(1,8 + (\\mbox{0,5}\\times 2) + (\\mbox{-1,5}\\times1)) = \\mbox{3,670}\\)\nEn ayant augmenté d’une unité \\(X_1\\), nous avons multiplié notre résultat par 1,649 (\\(\\mbox{2,225} \\times \\mbox{1,649 = 3,670}\\)).\nNotez que ces effets se multiplient entre eux. Si nous augmentons à la fois \\(X_1\\) et \\(X_2\\) d’une unité chacune, nous obtenons : \\(\\lambda = exp(1,8 + (\\mbox{0,5} \\times 2) + (\\mbox{-1,5} \\times 2)) = \\mbox{0,818}\\), ce qui correspond bien à \\(\\mbox{2,225} \\times \\mbox{1,649} \\text{ (effet de  }X_1\\text{)} \\times \\mbox{0,223} \\text{ (effet de }X_2\\text{)} = \\mbox{0,818}\\).\nIl existe des fonctions dans R qui calculent ces prédictions à partir des équations des modèles. Il est cependant essentiel de bien saisir ce comportement multiplicatif induit par la fonction de lien log.\n\n8.3.1.2 Conditions d’application\nPuisque la distribution de Poisson n’a qu’un seul paramètre, le modèle GLM de Poisson est exposé au même problème potentiel de sur-dispersion que les modèles binomiaux de la section précédente. Référez-vous à la section 8.2.1.2 pour davantage de détails sur le problème posé par la sur-dispersion. Pour détecter une potentielle sur-dispersion dans un modèle de Poisson, il est possible, dans un premier temps, de calculer le ratio entre la déviance du modèle et son nombre de degrés de liberté (SAS Institute Inc 2020b). Ce ratio doit être proche de 1, s’il est plus grand, le modèle souffre de sur-dispersion.\n\\[\n\\hat{\\phi} = \\frac{D(modele)}{N-p}\n\\tag{8.19}\\]\navec \\(N\\) et \\(p\\) étant respectivement les nombres d’observations et de paramètres. Il est également possible de tester formellement si la sur-dispersion est significative avec un test de dispersion.\nLa question de l’excès de zéros a été abordée dans la section 2.4.3.7 du chapitre 2. Il s’agit d’une situation où un plus grand nombre de zéros sont présents dans les données que ce que suppose la distribution de Poisson. Dans ce cas, il convient d’utiliser la distribution de Poisson avec excès de zéros.\n\n8.3.1.3 Exemple appliqué dans R\nPour cet exemple, nous reproduisons l’analyse effectuée dans l’article de Cloutier et al. (2014). L’enjeu de cette étude était de modéliser le nombre de piétons blessés autour de plus de 500 carrefours dans les quartiers centraux de Montréal. Pour cela, trois types de variables étaient utilisées : des variables décrivant l’intersection, des variables décrivant les activités humaines dans un rayon d’un kilomètre autour de l’intersection et des variables représentant le trafic routier autour de l’intersection. Un effet direct de ce type d’étude est bien évidemment l’établissement de meilleures pratiques d’aménagement réduisant les risques encourus par les piétons lors de leurs déplacements en ville. Le tableau 8.21 présente l’ensemble des variables utilisées dans l’analyse.\n\n\n\n\nTableau 8.21: Variables indépendantes utilisées dans le modèle de Poisson\n\n\n\n\n\n\n\nNom de la variable\nSignification\nType de variable\nMesure\n\n\n\nFeux_auto\nPrésence de feux de circulation\nVariable binaire\n0 = absence; 1 = présence\n\n\nFeux_piet\nPrésence de feux de traversée pour les piétons\nVariable binaire\n0 = absence; 1 = présence\n\n\nPass_piet\nPrésence d’un passage piéton\nVariable binaire\n0 = absence; 1 = présence\n\n\nTerreplein\nPrésence d’un terre-plein central\nVariable binaire\n0 = absence; 1 = présence\n\n\nApaisement\nPrésence de mesure d’apaisement de la circulation\nVariable binaire\n0 = absence; 1 = présence\n\n\nLogEmploi\nLogarithme du nombre d’emplois dans un rayon d’un kilomètre\nVariable continue\nLogarithme du nombre d’emplois. Utilisation du logarithme, car la variable est fortement asymétrique\n\n\nDensite_pop\nDensité de population dans un rayon d’un kilomètre\nVariable continue\nHabitants par hectare\n\n\nEntropie\nDiversité des occupations du sol dans un rayon d’un kilomètre (indice d’entropie)\nVariable continue\nMesure de 0 à 1; 0 = spécialisation parfaite; 1 = diversité parfaite\n\n\nDensiteInter\nDensité d’intersections dans un rayon d’un kilomètre (connexité)\nVariable continue\nNombre d’intersection par km2\n\n\nArtere\nPrésence d’une artère à l’intersection\nVariable binaire\n0 = absence; 1 = présence\n\n\nLong_arterePS\nLongueur d’artère dans un rayon d’un kilomètre\nVariable continue\nExprimée en mètres\n\n\nNB_voies5\nPrésence d’une cinq voies à l’intersection\nVariable binaire\n0 = absence; 1 = présence\n\n\n\n\n\n\nLa distribution originale de la variable est décrite à la figure 8.23. Les barres grises représentent la distribution du nombre d’accidents et les barres rouges une distribution de Poisson ajustée sans variable indépendante (modèle nul). Ce premier graphique peut laisser penser qu’un modèle de Poisson n’est pas nécessairement le plus adapté considérant le grand nombre d’intersections pour lesquelles nous n’avons aucun accident. Cependant, rappelons que la variable Y n’a pas besoin de suivre une distribution de Poisson. Dans un modèle GLM, l’hypothèse que nous formulons est que la variable dépendante (Y) conditionnée par les variables indépendantes (X) suit une certaine distribution (ici Poisson).\n\n# Chargement des données\ndata_accidents &lt;- read.csv(\"data/glm/accident_pietons.csv\", sep = \";\")\n# Ajustement d'une distribution de Poisson sans variable indépendante\nlibrary(fitdistrplus)\nmodel_poisson &lt;- fitdist(data_accidents$Nbr_acci, distr = \"pois\")\n# Création d'un graphique pour comparer les deux distributions\ndfpoisson &lt;- data.frame(x=c(0:19),\n                        y = dpois(0:19, model_poisson$estimate)\n)\ncounts &lt;- data.frame(table(data_accidents$Nbr_acci))\nnames(counts) &lt;- c(\"nb_accident\",'frequence')\ncounts$nb_accident &lt;- as.numeric(as.character(counts$nb_accident))\ncounts$prop &lt;- counts$frequence / sum(counts$frequence)\nggplot() + \n  geom_bar(aes(x = nb_accident, weight = prop, fill = \"real\"), width = 0.6, data = counts)+\n  geom_bar(aes(x = x, weight = y, fill = \"adj\"), width = 0.15, data = dfpoisson)+\n  scale_x_continuous(limits = c(-0.5,7), breaks = c(0:7))+\n  scale_fill_manual(name = \"\",\n          breaks = c(\"real\" , \"adj\"),\n          labels = c(\"distribution originale\", \"distribution de Poisson\"),\n          values = c(\"real\" = rgb(0.4,0.4,0.4), \"adj\" = \"red\"))+\n  labs(subtitle = \"\",\n       x = \"nombre d'accidents\",\n       y = \"\")\n\n\n\nFigure 8.23: Distribution originale du nombre d’accidents par intersection\n\n\n\nVérification des conditions d’application\nComme précédemment, notre première étape est de vérifier l’absence de multicolinéarité excessive avec la fonction vif du package car.\n\nvif(glm(Nbr_acci ~ Feux_auto + Feux_piet + Pass_piet + Terreplein + Apaisement +\n          LogEmploi + Densite_pop + Entropie + DensiteInter +\n          Long_arterePS + Artere + NB_voies5,\n        family = poisson(link=\"log\"),\n        data = data_accidents))\n\n    Feux_auto     Feux_piet     Pass_piet    Terreplein    Apaisement \n     2.861708      1.518668      2.321213      1.221683      1.059722 \n    LogEmploi   Densite_pop      Entropie  DensiteInter Long_arterePS \n     4.763692      1.153096      1.770904      2.040457      4.467841 \n       Artere     NB_voies5 \n     1.887728      1.520514 \n\n\nToutes les valeurs de VIF sont inférieures à 5. Notons tout de même que le logarithme de l’emploi et la longueur d’artère dans un rayon d’un kilomètre ont des valeurs de VIF proches de 5. La seconde étape du diagnostic consiste à calculer et à visualiser les distances de Cook.\n\n# Ajustement d'une première version du modèle\nmodele &lt;- glm(Nbr_acci ~ Feux_auto + Feux_piet + Pass_piet + Terreplein + Apaisement +\n                LogEmploi + Densite_pop + Entropie + DensiteInter +\n                Long_arterePS + Artere + NB_voies5,\n              family = poisson(link=\"log\"),\n              data = data_accidents)\n\n# Calcul des distances de Cook\ncooksd &lt;- cooks.distance(modele)\ndf &lt;- data.frame(\n  cook = cooksd,\n  oid = 1:length(cooksd)\n)\nggplot(data = df)+\n  geom_point(aes(x = oid, y = cook), size = 0.5, alpha = 0.5)+\n  labs(x = \"\",\n       y = \"Distance de Cook\")\n\n\n\nFigure 8.24: Distances de Cook pour le modèle de Poisson\n\n\n\nLa figure 8.24 signale la présence de trois observations avec des valeurs extrêmement fortes de distance de Cook. Nous les isolons dans un premier temps pour les analyser.\n\ncas_etrange &lt;- subset(data_accidents, cooksd&gt;0.1)\nprint(cas_etrange)\n\n    Nbr_acci Feux_auto Feux_piet Pass_piet Terreplein Apaisement EmpTotBuffer\n1         19         1         1         1          1          0     7208.538\n26         7         0         0         1          0          0     1342.625\n428        0         1         1         1          0          1    13122.560\n    Densite_pop  Entropie DensiteInter Long_arterePS Artere NB_voies5 log_acci\n1      5980.923 0.8073926     42.41597       6955.00      1         1 2.995732\n26     2751.012 0.0000000     73.35344       2849.66      0         0 2.079442\n428   14148.827 0.6643891    109.25066       4634.20      0         0 0.000000\n    catego_acci catego_acci2 Arret VAG sum_app LogEmploi AccOrdinal     PopHa\n1             1            1     0   1       4  8.883021          2  5.980923\n26            1            1     1   1       3  7.202382          2  2.751012\n428           0            0     0   0       3  9.482088          0 14.148827\n\n\nLes deux premiers cas sont des intersections avec de nombreux accidents (respectivement 19 et 7) qui risquent de perturber les estimations du modèle. Le troisième cas ne comprend en revanche aucun accident. Puisqu’il ne s’agit que de trois observations et que leurs distances de Cook sont très nettement supérieures aux autres, nous les retirons du modèle.\n\ndata2 &lt;- subset(data_accidents, cooksd&lt;0.1)\n# Ajustement d'une première version du modèle\nmodele &lt;- glm(Nbr_acci ~ Feux_auto + Feux_piet + Pass_piet + Terreplein + Apaisement +\n                LogEmploi + Densite_pop + Entropie + DensiteInter +\n                Long_arterePS + Artere + NB_voies5,\n              family = poisson(link=\"log\"),\n              data = data2)\n\n# Calcul des distances de Cook\ncooksd &lt;- cooks.distance(modele)\ndf &lt;- data.frame(\n  cook = cooksd,\n  oid = 1:length(cooksd)\n)\nggplot(data = df)+\n  geom_point(aes(x = oid, y = cook), size = 0.5, alpha = 0.5)+\n  labs(x = \"\",\n       y = \"distance de Cook\")\n\n\n\nFigure 8.25: Distances de Cook pour le modèle de Poisson après avoir retiré les valeurs aberrantes\n\n\n\nLa figure 8.25 montre que nous n’avons plus d’observations fortement influentes dans le modèle après avoir retiré les trois observations identifiées précédemment. Nous devons à présent vérifier l’absence de sur-dispersion.\n\n# Calcul du rapport entre déviance et nombre de degrés de liberté du modèle\ndeviance(modele)/(nrow(data2) - modele$rank)\n\n[1] 1.674691\n\n\nLe rapport entre la déviance et le nombre de degrés de liberté du modèle est nettement supérieur à 1, indiquant une sur-dispersion excessive. Nous pouvons confirmer ce résultat avec la fonction dispersiontest du package AER.\n\nlibrary(AER)\n# Test de sur-dispersion\ndispersiontest(modele)\n\n\n    Overdispersion test\n\ndata:  modele\nz = 5.2737, p-value = 6.686e-08\nalternative hypothesis: true dispersion is greater than 1\nsample estimates:\ndispersion \n  1.891565 \n\n\nContrairement à la forme classique d’un modèle de Poisson pour laquelle la dispersion attendue est de 1, le test nous indique qu’une dispersion de 1,89 serait mieux ajustée aux données.\nIl est également possible d’illuster cet écart à l’aide d’un graphique représentant les valeurs réelles, les valeurs prédites, ainsi que la variance (sous forme de barres d’erreurs) attendue par le modèle (figure 8.26). Nous constatons ainsi que les valeurs réelles (en rouge) ont largement tendance à dépasser la variance attendue par le modèle, surtout pour les valeurs les plus faibles de la distribution.\n\n# Extraction des prédictions du modèle\nlambdas &lt;- predict(modele, type = \"response\")\n# Création d'un DataFrame pour contenir la prédiction et les vraies valeurs\ndf1 &lt;- data.frame(\n  lambdas = lambdas,\n  reals = data2$Nbr_acci\n)\n# Calcul de l'intervalle de confiance à 95 % selon la distribution de Poisson\n# et stockage dans un second DataFrame\nseqa &lt;- seq(0, round(max(lambdas)),1)\ndf2 &lt;- data.frame(\n  lambdas = seqa,\n  lower = qpois(p = 0.025, lambda = seqa),\n  upper = qpois(p = 0.975, lambda = seqa)\n)\n# Affichage des valeurs réelles et prédites (en rouge)\n# et de leur variance selon le modèle (en noir)\nggplot() + \n  geom_errorbar(data = df2,\n                mapping = aes(x = lambdas, ymin = lower, ymax = upper),\n                width = 0.2, color = rgb(0.4,0.4,0.4)) + \n  geom_point(data = df1, \n             mapping = aes(x = lambdas, y = reals),\n             color =\"red\", size = 0.5) + \n  labs(x = \"valeurs prédites\",\n       y = \"valeurs réelles\")\n\n\n\nFigure 8.26: Représentation de la sur-dispersion des données dans le modèle de Poisson\n\n\n\nPour tenir compte de cette particularité des données, nous modifions légèrement le modèle pour utiliser une distribution de quasi-Poisson, intégrant spécifiquement un paramètre de dispersion. Cet ajustement ne modifie pas l’estimation des coefficients du modèle, mais modifie le calcul des erreurs standards et par extension les valeurs de p pour les rendre moins sensibles au problème de sur-dispersion. Une autre approche aurait été de calculer une version robuste des erreurs standards avec le package sandwich comme nous l’avons fait dans la section 8.2.1 sur le modèle binomial. Après réajustement du modèle, le nouveau paramètre de dispersion estimé est de 1,92.\n\n\n\n\n\nLes quasi-distributions\n\n\nLes distributions binomiale et de Poisson ne disposent chacune que d’un paramètre décrivant à la fois leur dispersion et leur espérance. Elles manquent donc de flexibilité et échouent parfois à représenter fidèlement des données avec une forte variance. Il existe donc d’autres distributions, respectivement les distributions quasi-binomiale et quasi-Poisson comprenant chacune un paramètre supplémentaire pour contrôler la dispersion. Bien que cette solution soit attrayante, il ne faut pas perdre de vue que la sur ou la sous dispersion peuvent être causées par l’absence de certaines variables explicatives, la sur-représentation de zéros, ou encore une séparation parfaite de la variable dépendante causée par une variable indépendante.\n\n\n\nmodele2 &lt;- glm(Nbr_acci ~ Feux_auto + Feux_piet + Pass_piet + Terreplein + Apaisement +\n                LogEmploi + Densite_pop + Entropie + DensiteInter +\n                Long_arterePS + Artere + NB_voies5,\n              family = quasipoisson(link=\"log\"),\n              data = data2)\n\nNous pouvons à présent comparer la distribution originale des données et les simulations issues du modèle. Notez que contrairement à la distribution de Poisson simple, il n’existe pas dans R de fonction pour simuler des valeurs issues d’une distribution de quasi-Poisson. Il est cependant possible d’exploiter sa proximité théorique avec la distribution binomiale négative pour définir notre propre fonction de simulation. La figure 8.27 permet de comparer la distribution originale (en gris) et l’intervalle de confiance à 95 % des simulations (en rouge). Nous remarquons que le modèle semble capturer efficacement la forme générale de la distribution originale. À titre de comparaison, nous pouvons effectuer le même exercice avec la distribution de Poisson classique (le code n’est pas montré pour éviter les répétitions). La figure 8.28 montre qu’un simple modèle de Poisson est très éloigné de la distribution originale de Y.\n\n# Définition d'une fonction pour simuler des données quasi-Poisson\nrqpois &lt;- function(n, lambda, disp) {\n  rnbinom(n = n, mu = lambda, size = lambda/(disp-1))\n}\n# Extraction des valeurs prédites par le modèle\npreds &lt;- predict(modele2, type = \"response\")\n# Génération de 1000 simulations pour chaque prédiction\ndisp &lt;- summary(modele2)$dispersion\nnsim &lt;- 1000\ncols &lt;- lapply(1:length(preds), function(i){\n  lambda &lt;- preds[[i]]\n  sims &lt;- round(rqpois(n = nsim, lambda = lambda, disp = disp))\n  return(sims)\n})\nmat_sims &lt;- do.call(rbind, cols)\n# Préparation des données pour le graphique (valeurs réelles)\ncounts &lt;- data.frame(table(data2$Nbr_acci))\nnames(counts) &lt;- c(\"nb_accident\",'frequence')\ncounts$nb_accident &lt;- as.numeric(as.character(counts$nb_accident))\ncounts$prop &lt;- counts$frequence / sum(counts$frequence)\n# Préparation des données pour le graphique (valeurs simulées)\ndf1 &lt;- data.frame(count = 0:25)\ncount_sims &lt;- lapply(1:nsim, function(i){\n  sim &lt;- mat_sims[,i]\n  cnt &lt;- data.frame(table(sim))\n  df2 &lt;- merge(df1, cnt, by.x = \"count\", by.y = \"sim\", all.x = TRUE, all.y = FALSE)\n  df2$Freq &lt;- ifelse(is.na(df2$Freq),0, df2$Freq)\n  return(df2$Freq)\n})\ncount_sims &lt;- do.call(cbind, count_sims)\ndf_sims &lt;- data.frame(\n  val = 0:25,\n  med = apply(count_sims, MARGIN = 1, median),\n  lower = apply(count_sims, MARGIN = 1, quantile, probs = 0.025),\n  upper = apply(count_sims, MARGIN = 1, quantile, probs = 0.975)\n)\n\nggplot() + \n  geom_bar(aes(x = nb_accident, weight = frequence), width = 0.6, data = counts)+\n  geom_errorbar(aes(x = val, ymin = lower, ymax = upper),\n                data = df_sims, color = \"red\", width = 0.6)+\n  geom_point(aes(x = val, y = med), color = \"red\", size = 1.3, data = df_sims)+\n  scale_x_continuous(limits = c(-0.5,7), breaks = c(0:7))+\n  xlim(-1,12)+\n  labs(subtitle = \"\",\n       x = \"nombre d'accidents\",\n       y = \"nombre d'occurrences\")\n\n\n\nFigure 8.27: Comparaison de la distribution originale et des simulations pour le modèle de quasi-Poisson\n\n\n\n\n\n\n\nFigure 8.28: Comparaison de la distribution originale et des simulations pour le modèle de Poisson\n\n\n\nLa prochaine étape du diagnostic est l’analyse des résidus simulés. La figure 8.29 indique que les résidus du modèle suivent bien une distribution uniforme et qu’aucune valeur aberrante n’est observable.\n\n# Génération de 1000 simulations pour chaque prédiction\ndisp &lt;- 1.918757 # trouvable dans le summary(modele2)\nnsim &lt;- 1000\ncols &lt;- lapply(1:length(preds), function(i){\n  lambda &lt;- preds[[i]]\n  sims &lt;- rqpois(n = nsim, lambda = lambda, disp = disp)\n  return(sims)\n})\nmat_sims &lt;- do.call(rbind, cols)\nsim_res &lt;- createDHARMa(simulatedResponse = mat_sims, \n                            observedResponse = data2$Nbr_acci,\n                            fittedPredictedResponse = modele2$fitted.values,\n                            integerResponse = TRUE)\nplot(sim_res)\n\n\n\nFigure 8.29: Analyse globale des résidus simulés pour le modèle de quasi-Poisson\n\n\n\nPour affiner notre diagnostic, nous pouvons également comparer les résidus simulés et chaque variable indépendante. La figure 8.30 n’indique aucune relation problématique entre nos variables indépendantes et les résidus.\n\npar(mfrow=c(3,4))\nvars &lt;- c(\"Feux_auto\", \"Feux_piet\", \"Pass_piet\", \"Terreplein\", \"Apaisement\",\n                \"LogEmploi\", \"Densite_pop\", \"Entropie\", \"DensiteInter\",\n                \"Long_arterePS\", \"Artere\", \"NB_voies5\")\nfor(v in  vars){\n  plotResiduals(sim_res, data2[[v]], xlab = v, main = \"\", ylab = \"résidus\")\n}\n\n\n\n\n\nFigure 8.30: Comparaison des résidus simulés et de chaque variable indépendante\n\n\n\nMaintenant que l’ensemble des diagnostics a été effectué, nous pouvons passer à la vérification de la qualité d’ajustement.\nVérification de la qualité d’ajustement\nPour le calcul des pseudo-R2, notez qu’il n’existe pas à proprement parler de loglikelihood pour les quasi-distributions. Pour contourner ce problème, il est possible d’utiliser le loglikelihood d’un simple modèle de Poisson (puisque les coefficients ne changent pas), mais il est important de garder à l’esprit que ces pseudo-R2 seront d’autant plus faibles que la sur-dispersion originale était forte.\n\nmodelnull &lt;- glm(Nbr_acci ~ 1,\n              family = poisson(link=\"log\"),\n              data = data2)\nrsqs(loglike.full = logLik(modele),\n     loglike.null = logLik(modelnull),\n     full.deviance = deviance(modele),\n     null.deviance = deviance(modelnull),\n     nb.params = modele$rank,\n     n = nrow(data2))\n\n$`deviance expliquee`\n[1] 0.4805998\n\n$`McFadden ajuste`\n'log Lik.' 0.3258375 (df=13)\n\n$`Cox and Snell`\n'log Lik.' 0.7789704 (df=13)\n\n$Nagelkerke\n'log Lik.' 0.787958 (df=13)\n\n\nLe modèle parvient ainsi à expliquer 48 % de la déviance totale. Il obtient un R2 ajusté de McFadden de 0,33 et un R2 de Cox et Snell de 0,78.\n\n# Calcul du RMSE\nsqrt(mean((predict(modele2, type = \"response\") - data2$Nbr_acci)**2))\n\n[1] 1.838026\n\n# Nombre moyen d'accidents\nmean(data2$Nbr_acci)\n\n[1] 1.503984\n\n\nL’erreur quadratique moyenne du modèle est de 1,84, ce que signifie qu’en moyenne le modèle se trompe d’environ deux accidents pour chaque intersection. Cette valeur est relativement élevée si nous la comparons avec le nombre moyen d’accidents, soit 1,5. Cela s’explique certainement par le grand nombre de zéros dans la variable Y qui tendent à tirer les prédictions vers le bas.\nInterprétation des résultats\nL’ensemble des coefficients du modèle sont accessibles via la fonction summary. Puisque la fonction de lien du modèle est la fonction log, il est pertinent de convertir les coefficients avec la fonction exp afin de pouvoir les interpréter sur l’échelle originale (nombre d'accidents) plutôt que l’échelle logarithmique (log(nombre d'accidents)). N’oubliez pas que ces effets sont multiplicatifs une fois transformés avec la fonction exp. Nous pouvons également utiliser les erreurs standards pour calculer des intervalles de confiance à 95 % des exponentiels des coefficients. Le tableau 8.22 présente l’ensemble des informations pertinentes pour l’interprétation des résultats.\n\n# Calcul des coefficients en exponentiel et des intervalles de confiance\ntableau &lt;- summary(modele2)$coefficients\ncoeffs &lt;- tableau[,1]\nerr.std &lt;- tableau[,2]\nexpcoeff &lt;- exp(coeffs)\nexp2.5 &lt;- exp(coeffs - 1.96*err.std)\nexp975 &lt;- exp(coeffs - 1.96*err.std)\npvals &lt;- tableau[,4]\ntableauComplet &lt;- cbind(coeffs, err.std, expcoeff, exp2.5, exp975, pvals)\n# print(tableauComplet)\n\n\n\n\n\nTableau 8.22: Résultats du modèle de quasi-Poisson\n\n\n\n\n\n\n\n\n\n\nVariable\nCoeff.\nexp(Coeff.)\nVal.p\nIC 2,5 % exp(Coeff.)\nIC 97,5 % exp(Coeff.)\nSign.\n\n\n\nConstante\n-3,680\n0,030\n0,000\n0,010\n0,090\n***\n\n\nFeux_auto\n1,100\n3,000\n0,000\n1,970\n4,660\n***\n\n\nFeux_piet\n0,330\n1,390\n0,009\n1,090\n1,790\n**\n\n\nPass_piet\n0,340\n1,400\n0,149\n0,880\n2,200\n\n\n\nTerreplein\n-0,360\n0,700\n0,099\n0,440\n1,050\n.\n\n\nApaisement\n0,290\n1,330\n0,157\n0,880\n1,950\n\n\n\nLogEmploi\n0,230\n1,260\n0,017\n1,040\n1,520\n*\n\n\nDensite_pop\n0,000\n1,000\n0,000\n1,000\n1,000\n***\n\n\nEntropie\n-0,420\n0,660\n0,271\n0,320\n1,390\n\n\n\nDensiteInter\n0,000\n1,000\n0,410\n1,000\n1,010\n\n\n\nLong_arterePS\n0,000\n1,000\n0,684\n1,000\n1,000\n\n\n\nArtere\n0,030\n1,030\n0,842\n0,780\n1,360\n\n\n\nNB_voies5\n0,640\n1,890\n0,000\n1,460\n2,440\n***\n\n\n\n\n\n\nParmi les variables décrivant les aménagements de l’intersection, nous constatons que les présences d’un feu de circulation et d’un feu de traversée pour les piétons multiplient le nombre attendu d’accidents à une intersection par 3,0 et 1,39. Par contre, les présences d’un passage piéton, d’un terre-plein ou de mesures d’apaisement n’ont pas d’effets significatifs (valeurs de p &gt; 0,05). Concernant les variables décrivant l’environnement à proximité des intersections, nous observons que la concentration d’emplois et la densité de population contribuent toutes les deux à augmenter le nombre d’accidents à une intersection, bien que leurs effets soient limités. Enfin, la présence d’une rue à cinq voies à l’intersection augmente le nombre d’accidents attendu à l’intersection de 89 %. Nous ne détaillons pas plus les résultats, car nous utilisons le même jeu de données dans les prochaines sections.\n\n8.3.2 Modèle binomial négatif\nDans le cas où une variable de comptage est marquée par une sur ou sous-dispersion, la distribution de Poisson n’est pas en mesure de capturer efficacement sa variance. Pour contourner ce problème, il est possible d’utiliser la distribution binomiale négative plutôt que la distribution de Poisson (ou quasi-Poisson). Cette distribution peut être décrite comme une généralisation de la distribution de Poisson : elle inclut un second paramètre \\(\\theta\\) contrôlant la dispersion. L’intérêt premier de ce changement de distribution est que l’interprétation des paramètres est la même pour les deux modèles, tout en contrôlant directement l’effet d’une potentielle sur ou sous-dispersion.\n\n\n\n\nTableau 8.23: Carte d’identité du modèle binomial négatif\n\n\n\n\n\n\nType de variable dépendante\nVariable de comptage\n\n\nDistribution utilisée\nNégative binomiale\n\n\nFormulation\n\n\\(Y \\sim NB(\\mu,\\theta)\\) \\(g(\\mu) = \\beta_0 + \\beta X\\) \\(g(x) =log(x)\\)\n\n\n\nFonction de lien\nlog\n\n\nParamètre modélisé\n\\(\\mu\\)\n\n\nParamètres à estimer\n\n\\(\\beta_0\\), \\(\\beta\\) et \\(\\theta\\)\n\n\n\nConditions d’application\nAbsence d’excès de zéros, respect du lien variance-moyenne\n\n\n\n\n\n\n\n8.3.2.1 Conditions d’application\nLes conditions d’application d’un modèle binomial négatif sont presque les mêmes que celles d’un modèle de Poisson. La seule différence est que la condition d’absence de sur ou sous-dispersion est remplacée par une condition de respect du lien espérance-variance. En effet, dans un modèle binomial négatif, le paramètre de dispersion \\(\\theta\\) est combiné avec \\(\\mu\\) (l’espérance) pour exprimer la dispersion de la distribution. Dans le package mgcv que nous utilisons dans l’exemple, le lien entre \\(\\mu\\), \\(\\theta\\) et la variance est le suivant :\n\\[\nvariance = \\mu + \\mu^{\\frac{2}{\\theta}}\n\\tag{8.20}\\]\nIl s’agit donc d’un modèle hétéroscédastique : sa variance n’est pas fixe, mais varie en fonction de sa propre espérance. Si celle-ci augmente, la variance augmente (comme pour un modèle de Poisson), et l’intensité de cette augmentation est contrôlée par le paramètre \\(\\theta\\). Si cette condition n’est pas respectée, l’analyse des résidus simulés révélera un problème de dispersion.\n\n8.3.2.2 Exemple appliqué dans R\nDans l’exemple précédent avec le modèle de Poisson, nous avons observé une certaine sur-dispersion que nous avons contournée en utilisant un modèle de quasi-Poisson. Dans l’article original, les auteurs ont opté pour un modèle binomial négatif, ce que nous reproduisons ici. Les variables utilisées sont les mêmes que pour le modèle de Poisson. Nous utilisons le package mgcv et sa fonction gam pour ajuster le modèle.\nVérification des conditions d’application\nNous avons vu précédemment que nos variables indépendantes ne sont pas marquées par une multicolinéarité forte. Il n’est pas nécessaire de recalculer les valeurs de VIF puisque nous utilisons les mêmes données. La première étape du diagnostic est donc de calculer les distances de Cook.\n\nlibrary(mgcv)\n# Chargement des données\ndata_accidents &lt;- read.csv(\"data/glm/accident_pietons.csv\", sep = \";\")\n# Ajustement d'une première version du modèle\nmodelnb &lt;- gam(Nbr_acci ~ Feux_auto + Feux_piet + Pass_piet + \n                 Terreplein + Apaisement +\n                LogEmploi + Densite_pop + Entropie + DensiteInter +\n                Long_arterePS + Artere + NB_voies5,\n              family = nb(link=\"log\"),\n              data = data_accidents)\n# Calcul et affichage des distances de Cook\ncooksd &lt;- cooks.distance(modelnb)\ndf &lt;- data.frame(\n  cook = cooksd,\n  oid = 1:length(cooksd)\n)\nggplot(data = df)+\n  geom_point(aes(x = oid, y = cook), size = 0.5, color = rgb(0.4,0.4,0.4)) +\n  labs(x = \"\", y = \"distance de Cook\")+\n  theme(axis.ticks.x = element_blank(),\n        axis.text.x = element_blank())\n\n\n\nFigure 8.31: Distances de Cook pour le modèle binomial négatif\n\n\n\nNous observons, dans la figure 8.31, que quatre observations se distinguent très nettement des autres.\n\ncas_etrange &lt;- subset(data_accidents, cooksd &gt; 0.03)\nprint(cas_etrange)\n\n   Nbr_acci Feux_auto Feux_piet Pass_piet Terreplein Apaisement EmpTotBuffer\n1        19         1         1         1          1          0     7208.538\n5        12         1         0         1          0          0     8585.350\n26        7         0         0         1          0          0     1342.625\n34        6         0         0         1          0          0    12516.410\n   Densite_pop  Entropie DensiteInter Long_arterePS Artere NB_voies5 log_acci\n1     5980.923 0.8073926     42.41597       6955.00      1         1 2.995732\n5     8655.430 0.7607852     89.11495       6412.27      0         0 2.564949\n26    2751.012 0.0000000     73.35344       2849.66      0         0 2.079442\n34    8950.942 0.4300549     74.91879       8443.01      1         0 1.945910\n   catego_acci catego_acci2 Arret VAG sum_app LogEmploi AccOrdinal    PopHa\n1            1            1     0   1       4  8.883021          2 5.980923\n5            1            1     0   1       4  9.057813          2 8.655430\n26           1            1     1   1       3  7.202382          2 2.751012\n34           1            1     1   0       3  9.434796          2 8.950942\n\n\nIl s’agit à nouveau de quatre observations avec un grand nombre d’accidents. Nous décidons de les retirer du jeu de données pour ne pas fausser les résultats concernant l’ensemble des autres intersections. Dans une analyse plus détaillée, il serait judicieux de chercher à comprendre pourquoi ces quatre observations sont particulièrement accidentogènes.\n\ndata2 &lt;- subset(data_accidents, cooksd &lt; 0.03)\n# Ajustement d'une première version du modèle\nmodelnb &lt;- gam(Nbr_acci ~ Feux_auto + Feux_piet + Pass_piet + \n                 Terreplein + Apaisement +\n                LogEmploi + Densite_pop + Entropie + DensiteInter +\n                Long_arterePS + Artere + NB_voies5,\n              family = nb(link=\"log\"),\n              data = data2)\n# Calcul et affichage des distances de Cook\ncooksd &lt;- cooks.distance(modelnb)\ndf &lt;- data.frame(\n  cook = cooksd,\n  oid = 1:length(cooksd)\n)\nggplot(data = df)+\n  geom_point(aes(x = oid, y = cook), size = 0.5, color = rgb(0.4,0.4,0.4)) +\n  labs(x = \"\", y = \"distance de Cook\")+\n  theme(axis.ticks.x = element_blank(),\n        axis.text.x = element_blank())\n\n\n\nFigure 8.32: Distances de Cook pour le modèle binomial négatif (après avoir retiré quatre observations fortement influentes\n\n\n\nAprès avoir retiré ces quatre observations, les distances de Cook ne révèlent plus d’observations fortement influentes dans le modèle (figure 8.32). La prochaine étape du diagnostic est donc d’analyser les résidus simulés.\n\n# Extraction de la valeur de theta\ntheta &lt;- modelnb$family$getTheta(T)\nnsim &lt;- 1000\n# Extraction des valeurs prédites par le modèle\nmus &lt;- predict(modelnb, type = \"response\")\n# Calcul des simulations\ncols &lt;- lapply(1:length(mus), function(i){\n  mu &lt;- mus[[i]]\n  sims &lt;- rnbinom(n = nsim, mu = mu, size = theta)\n  return(sims)\n})\nmat_sims &lt;- do.call(rbind, cols)\n# Calcul des résidus simulés\nsim_res &lt;- createDHARMa(simulatedResponse = mat_sims, \n                            observedResponse = data2$Nbr_acci,\n                            fittedPredictedResponse = mus,\n                            integerResponse = TRUE)\n# Affichage du diagnostic\nplot(sim_res)\n\n\n\nFigure 8.33: Diagnostic général des résidus simulés pour le modèle binomial négatif\n\n\n\nLa figure 8.33 présentant le diagnostic des résidus simulés, montre que ces derniers suivent bien une distribution uniforme et aucun problème de dispersion ni de valeurs aberrantes. La figure 8.34 permet de comparer la distribution originale de la variable Y et les simulations issues du modèle (intervalles de confiance représentés en bleu). Nous constatons que le modèle parvient bien à reproduire la distribution originale, et ce, même pour les valeurs les plus extrèmes de la distribution.\n\n# Extraction des valeurs prédites par le modèle\nmus &lt;- predict(modelnb, type = \"response\")\n# Génération de 1000 simulations pour chaque prédiction\ntheta &lt;- modelnb$family$getTheta(T)\nnsim &lt;- 1000\ncols &lt;- lapply(1:length(mus), function(i){\n  mu &lt;- mus[[i]]\n  sims &lt;- round(rnbinom(n = nsim, mu = mu, size = theta))\n  return(sims)\n})\nmat_sims &lt;- do.call(rbind, cols)\n# Préparation des données pour le graphique (valeurs réelles)\ncounts &lt;- data.frame(table(data2$Nbr_acci))\nnames(counts) &lt;- c(\"nb_accident\",'frequence')\ncounts$nb_accident &lt;- as.numeric(as.character(counts$nb_accident))\ncounts$prop &lt;- counts$frequence / sum(counts$frequence)\n# Préparation des données pour le graphique (valeurs simulées)\ndf1 &lt;- data.frame(count = 0:25)\ncount_sims &lt;- lapply(1:nsim, function(i){\n  sim &lt;- mat_sims[,i]\n  cnt &lt;- data.frame(table(sim))\n  df2 &lt;- merge(df1, cnt, by.x = \"count\", by.y = \"sim\", all.x = TRUE, all.y = FALSE)\n  df2$Freq &lt;- ifelse(is.na(df2$Freq),0, df2$Freq)\n  return(df2$Freq)\n})\ncount_sims &lt;- do.call(cbind, count_sims)\ndf_sims &lt;- data.frame(\n  val = 0:25,\n  med = apply(count_sims, MARGIN = 1, median),\n  lower = apply(count_sims, MARGIN = 1, quantile, probs = 0.025),\n  upper = apply(count_sims, MARGIN = 1, quantile, probs = 0.975)\n)\n# Affichage du graphique\nggplot() + \n  geom_bar(aes(x = nb_accident, weight = frequence), width = 0.6, data = counts)+\n  geom_errorbar(aes(x = val, ymin = lower, ymax = upper),\n                data = df_sims, color = \"blue\", width = 0.6)+\n  geom_point(aes(x = val, y = med), color = \"blue\", size = 1.3, data = df_sims)+\n  scale_x_continuous(limits = c(-0.5,7), breaks = c(0:7))+\n  xlim(-1,12)+\n  labs(subtitle = \"\",\n       x = \"nombre d'accidents\",\n       y = \"nombre d'occurrences\")\n\n\n\nFigure 8.34: Comparaison de la distribution originale et des simulations pour le modèle binomial négatif\n\n\n\nÀ titre de comparaison, nous pouvons à nouveau réaliser le graphique permettant de visualiser si la variance attendue par le modèle est proche de celle effectivement observée dans les données. Nous avons constaté avec ce graphique, lorsque nous ajustions un modèle de Poisson, que la variance des données était trop grande comparativement à celle attendue par le modèle (figure 8.26).\n\n# Extraction des prédictions du modèle\nmus &lt;- predict(modelnb, type = \"response\")\n# Création d'un DataFrame pour contenir la prédiction et les vraies valeurs\ndf1 &lt;- data.frame(\n  mus = mus,\n  reals = data2$Nbr_acci\n)\n# Calcul de l'intervalle de confiance à 95 % selon la distribution de Poisson\n# et stockage dans un second DataFrame\nseqa &lt;- seq(0, round(max(mus)),1)\ndf2 &lt;- data.frame(\n  mus = seqa,\n  lower = qnbinom(p = 0.025, mu = seqa, size = theta),\n  upper = qnbinom(p = 0.975, mu = seqa, size = theta)\n)\n# Affichage des valeurs réelles et prédites (en rouge)\n# et de leur variance selon le modèle (en noir)\nggplot() + \n  geom_errorbar(data = df2,\n                mapping = aes(x = mus, ymin = lower, ymax = upper),\n                width = 0.2, color = rgb(0.4,0.4,0.4)) + \n  geom_point(data = df1, \n             mapping = aes(x = mus, y = reals),\n             color =\"red\", size = 0.5) + \n  labs(x = \"valeurs prédites\",\n       y = \"valeurs réelles\")\n\n\n\nFigure 8.35: Représentation de la sur-dispersion des données dans le modèle de Poisson\n\n\n\nNous pouvons ainsi constater à la figure 8.35 que le modèle binomial négatif autorise une variance bien plus large que le modèle de Poisson et est ainsi mieux ajusté aux données.\nVérification de la qualité d’ajustement\n\n# Calcul des pseudo R2\nrsqs(loglike.full = logLik(modelnb),\n     loglike.null = logLik(modelnull),\n     full.deviance = deviance(modelnb),\n     null.deviance = modelnb$null.deviance,\n     nb.params = modelnb$rank,\n     n = nrow(data2))\n\n$`deviance expliquee`\n[1] 0.458052\n\n$`McFadden ajuste`\n'log Lik.' 0.384353 (df=14)\n\n$`Cox and Snell`\n'log Lik.' 0.8304773 (df=14)\n\n$Nagelkerke\n'log Lik.' 0.8399731 (df=14)\n\n# Calcul du RMSE\nsqrt(mean((predict(modelnb, type = \"response\") - data2$Nbr_acci)**2))\n\n[1] 1.825278\n\n\nLe modèle parvient à expliquer 45 % de la déviance. Il obtient un R2 ajusté de McFadden de 0,14 et un R2 de Nagelkerke de 0,42. L’erreur moyenne quadratique de la prédiction est de 1,82, ce qui est identique au modèle de Poisson ajusté précédemment.\nInterprétation des résultats\nIl est possible d’accéder à l’ensemble des coefficients du modèle via la fonction summary. À nouveau, les coefficients doivent être convertis avec la fonction exponentielle (du fait de la fonction de lien log) et interprétés comme des effets multiplicatifs. Le tableau 8.24 présente les coefficients estimés par le modèle. Les résultats sont très similaires à ceux du modèle de quasi-Poisson original. Nous notons cependant que la variable représentant la présence d’un feu pour piéton n’est plus significative au seuil de 0,05.\n\n\n\n\nTableau 8.24: Résultats du modèle binomial négatif\n\n\n\n\n\n\n\n\n\n\nVariable\nCoeff.\nexp(Coeff.)\nVal.p\nIC 2,5 % exp(Coeff.)\nIC 97,5 % exp(Coeff.)\nSign.\n\n\n\nConstante\n-3,880\n0,020\n0,000\n0,010\n0,080\n***\n\n\nFeux_auto\n1,130\n3,100\n0,000\n2,030\n4,710\n***\n\n\nFeux_piet\n0,350\n1,420\n0,016\n1,060\n1,900\n*\n\n\nPass_piet\n0,220\n1,240\n0,300\n0,830\n1,880\n\n\n\nTerreplein\n-0,340\n0,710\n0,155\n0,440\n1,140\n\n\n\nApaisement\n0,240\n1,270\n0,315\n0,790\n2,030\n\n\n\nLogEmploi\n0,230\n1,260\n0,025\n1,030\n1,550\n*\n\n\nDensite_pop\n0,000\n1,000\n0,000\n1,000\n1,000\n***\n\n\nEntropie\n-0,170\n0,840\n0,669\n0,380\n1,860\n\n\n\nDensiteInter\n0,000\n1,000\n0,925\n0,990\n1,010\n\n\n\nLong_arterePS\n0,000\n1,000\n0,587\n1,000\n1,000\n\n\n\nArtere\n0,110\n1,110\n0,497\n0,820\n1,510\n\n\n\nNB_voies5\n0,700\n2,010\n0,000\n1,480\n2,750\n***\n\n\n\n\n\n\n\n8.3.3 Modèle de Poisson avec excès fixe de zéros\nDans le cas où la variable Y comprendrait significativement plus de zéros que ce que suppose une distribution de Poisson, il est possible d’utiliser la distribution de Poisson avec excès de zéros. Pour rappel, cette distribution ajoute un paramètre p contrôlant pour la proportion de zéros dans la distribution. Du point de vue conceptuel, cela revient à formuler l’hypothèse suivante : dans les données que nous avons observées, deux processus distincts sont à l’œuvre. Le premier est issu d’une distribution de Poisson et l’autre produit des zéros qui s’ajoutent aux données. Les zéros produits par la distribution de Poisson sont appelés les vrais zéros, alors que ceux produits par le second phénomène sont appelés les faux zéros.\n\n\n\n\nTableau 8.25: Carte d’identité du modèle de Poisson avec excès fixe de zéros\n\n\n\n\n\n\nType de variable dépendante\nVariable de comptage\n\n\nDistribution utilisée\nPoisson avec excès de zéros\n\n\nFormulation\n\n\\(Y \\sim ZIP(\\mu,\\theta)\\) \\(g(\\lambda) = \\beta_0 + \\beta X\\) \\(g(x) =log(x)\\)\n\n\n\nFonction de lien\nlog\n\n\nParamètre modélisé\n\\(\\lambda\\)\n\n\nParamètres à estimer\n\n\\(\\beta_0\\), \\(\\beta\\) et p\n\n\n\nConditions d’application\nAbsence de sur-dispersion\n\n\n\n\n\n\nDans cette formulation, p est fixé. Nous n’avons donc aucune information sur ce qui produit les zéros supplémentaires, mais seulement leur proportion totale dans le jeu de données.\n\n8.3.3.1 Interprétation des paramètres\nL’interprétation des paramètres est identique à celle d’un modèle de Poisson. Le paramètre p représente la proportion de faux zéros dans la variable Y une fois que les variables indépendantes sont contrôlées.\n\n8.3.3.2 Exemple appliqué dans R\nLa variable de comptage des accidents des piétons que nous avons utilisée dans les deux exemples précédents semble être une bonne candidate pour une distribution de Poisson avec excès de zéros. En effet, nous avons pu constater une sur-dispersion dans le modèle de Poisson original, ainsi qu’un nombre important d’intersections sans accident. Tentons donc d’améliorer notre modèle en ajustant un excès fixe de zéros. Nous utilisons la fonction gamlss du package gamlss.\n\nlibrary(gamlss)\nmodelzi &lt;- gamlss(formula = Nbr_acci ~ Feux_auto + Feux_piet + Pass_piet +\n                    Terreplein + Apaisement + LogEmploi + Densite_pop + \n                    Entropie + DensiteInter + Long_arterePS + Artere + NB_voies5,\n                  sigma.formula = ~1,\n               family = ZIP(mu.link = \"log\", sigma.link=\"logit\"),\n               data = data_accidents)\n\nGAMLSS-RS iteration 1: Global Deviance = 1516.53 \nGAMLSS-RS iteration 2: Global Deviance = 1514.656 \nGAMLSS-RS iteration 3: Global Deviance = 1514.52 \nGAMLSS-RS iteration 4: Global Deviance = 1514.508 \nGAMLSS-RS iteration 5: Global Deviance = 1514.506 \nGAMLSS-RS iteration 6: Global Deviance = 1514.506 \n\nmodelnull &lt;- glm(formula = Nbr_acci ~ 1,\n               family = poisson(link=\"log\"),\n               data = data_accidents)\n\n# Constante pour p\ncoeff_p &lt;- modelzi$sigma.coefficients\ncat(\"Coefficient pour p =\", round(coeff_p,4))\n\nCoefficient pour p = -1.4376\n\n# Calcul de la déviance expliquée\n1 - deviance(modelzi) / deviance(modelnull)\n\n[1] 0.08267513\n\n# Calcul de la probabilité de base p d'être un faux 0\n# en appliquant l'inverse de la fonction logistique\nexp(-coeff_p) / (1+exp(-coeff_p))\n\n(Intercept) \n    0.80809 \n\n\nNous constatons immédiatement que le modèle avec excès fixe de zéros est peu ajusté aux données. Cette version du modèle ne parvient à capter que 8 % de la déviance, ce qui s’explique facilement, car nous n’avons donné aucune variable au modèle pour distinguer les vrais et les faux zéros. Pour cela, nous devons passer au prochain modèle : Poisson avec excès ajusté de zéros. Notons tout de même que d’après ce modèle, 81 % des observations seraient des faux zéros.\n\n8.3.4 Modèle de Poisson avec excès ajusté de zéros\nNous avons vu dans le modèle précédent que l’excès de zéro était conceptualisé comme la combinaison de deux phénomènes, l’un issu d’une distribution de Poisson que nous souhaitons modéliser, et l’autre générant des zéros supplémentaires. Il est possible d’aller plus loin que de simplement contrôler la proportion de zéros supplémentaires en modélisant explicitement ce second processus en ajoutant une deuxième équation au modèle. Cette deuxième équation a pour enjeu de modéliser p (la proportion de 0) à l’aide de variables indépendantes, ces dernières pouvant se retrouver dans les deux parties du modèle. L’idée étant que, pour chaque observation, le modèle évalue sa probabilité d’être un faux zéro (partie binomiale), et le nombre attendu d’accidents.\n\n\n\n\nTableau 8.26: Carte d’identité du modèle de Poisson avec excès ajusté de zéros\n\n\n\n\n\n\nType de variable dépendante\nVariable de comptage\n\n\nDistribution utilisée\nPoisson avec excès de zéros\n\n\nFormulation\n\n\\(Y \\sim ZIP(\\mu,\\theta)\\) \\(g(\\mu) = \\beta_0 + \\beta X\\) \\(s(p) = \\alpha_0 + \\alpha_X\\) \\(g(x) =log(x)\\) \\(s(x) = log(\\frac{x}{1-x})\\)\n\n\n\nFonction de lien\nlog et logistique\n\n\nParamètre modélisé\n\n\\(\\mu\\) et p\n\n\n\nParamètres à estimer\n\n\\(\\beta_0\\), \\(\\beta\\), \\(\\alpha_0\\) et \\(\\alpha\\)\n\n\n\nConditions d’application\nAbsence de sur-dispersion\n\n\n\n\n\n\n\n8.3.4.1 Interprétation des paramètres\nL’interprétation des paramètres \\(\\beta_0\\) et \\(\\beta\\) est identique à celle d’un modèle de Poisson. Les paramètres \\(\\alpha_0\\) et \\(\\alpha\\) sont identiques à ceux d’un modèle binomial. Plus spécifiquement, ces derniers paramètres modélisent la probabilité d’observer des valeurs supérieures à zéro.\n\n8.3.4.2 Exemple appliqué\nNous avons vu, dans l’exemple précédent, que l’utilisation du modèle avec excès fixe de zéros pour les données d’accident des piétons aux intersections ne donnait pas de résultats satisfaisants. Nous tentons ici d’améliorer le modèle en ajoutant les variables indépendantes significatives du modèle Poisson dans la seconde équation de régression destinée à détecter les faux zéros.\nVérification des conditions d’application\nPour un modèle de Poisson avec excès de zéros, il n’est pas possible de calculer les distances de Cook. Nous devons donc directement passer à l’analyse des résidus simulés.\n\n# Ajuster une première version du modèle\nmodelza &lt;- gamlss(formula = Nbr_acci ~ Feux_auto + Feux_piet + Pass_piet +\n                    Terreplein + Apaisement + LogEmploi + Densite_pop + \n                    Entropie + DensiteInter + Long_arterePS + Artere + NB_voies5,\n                  sigma.formula = ~1 + Feux_auto + Feux_piet + Densite_pop + NB_voies5,\n               family = ZIP(mu.link = \"log\", sigma.link=\"logit\"),\n               data = data_accidents)\n\nGAMLSS-RS iteration 1: Global Deviance = 1505.155 \nGAMLSS-RS iteration 2: Global Deviance = 1488.658 \nGAMLSS-RS iteration 3: Global Deviance = 1483.304 \nGAMLSS-RS iteration 4: Global Deviance = 1482.085 \nGAMLSS-RS iteration 5: Global Deviance = 1481.868 \nGAMLSS-RS iteration 6: Global Deviance = 1481.832 \nGAMLSS-RS iteration 7: Global Deviance = 1481.827 \nGAMLSS-RS iteration 8: Global Deviance = 1481.825 \nGAMLSS-RS iteration 9: Global Deviance = 1481.825 \n\n# Extraire la prédiction des valeurs lambda\nlambdas &lt;- predict(modelza, type = \"response\", what = \"mu\")\n# Extraire la prédiction des valeurs p\nps &lt;- predict(modelza, type = \"response\", what = \"sigma\")\n# Calculer la combinaison de ces deux éléments\npreds &lt;- lambdas * ps\n# Effectuer les 1000 simulations\nnsim &lt;- 1000\ncols &lt;- lapply(1:length(lambdas), function(i){\n  lambda &lt;- lambdas[[i]]\n  p &lt;- ps[[i]]\n  sims &lt;- rZIP(n = nsim, mu = lambda, sigma = p)\n  return(sims)\n})\nmat_sims &lt;- do.call(rbind, cols)\n# Calculer les résidus simulés\nsim_res &lt;- createDHARMa(simulatedResponse = mat_sims, \n                            observedResponse = data_accidents$Nbr_acci,\n                            fittedPredictedResponse = preds,\n                            integerResponse = TRUE)\n\n\nplot(sim_res)\n\n\n\n\n\nFigure 8.36: Diagnostic général des résidus simulés du modèle de Poisson avec excès de zéros ajusté”,\n\n\n\nLa figure 8.36 indique deux problèmes importants dans le modèle : la présence de valeurs aberrantes ainsi qu’un potentiel problème de dispersion. Nous commençons donc par identifier ces valeurs aberrantes.\n\n# Identification des outliers\nisOutlier &lt;- outliers(sim_res, return = \"logical\", lowerQuantile = 0.001,\n                      upperQuantile = 0.999)\ncas_etrange &lt;- subset(data_accidents, isOutlier)\nprint(cas_etrange)\n\n    Nbr_acci Feux_auto Feux_piet Pass_piet Terreplein Apaisement EmpTotBuffer\n1         19         1         1         1          1          0     7208.538\n5         12         1         0         1          0          0     8585.350\n26         7         0         0         1          0          0     1342.625\n34         6         0         0         1          0          0    12516.410\n44         5         0         0         0          0          0     4998.519\n482        0         0         0         0          0          0     1813.911\n    Densite_pop  Entropie DensiteInter Long_arterePS Artere NB_voies5 log_acci\n1      5980.923 0.8073926     42.41597       6955.00      1         1 2.995732\n5      8655.430 0.7607852     89.11495       6412.27      0         0 2.564949\n26     2751.012 0.0000000     73.35344       2849.66      0         0 2.079442\n34     8950.942 0.4300549     74.91879       8443.01      1         0 1.945910\n44     8090.478 0.7879618     66.86856       4517.65      0         0 1.791759\n482    8988.260 0.4486079     60.93742       3821.78      1         0 0.000000\n    catego_acci catego_acci2 Arret VAG sum_app LogEmploi AccOrdinal    PopHa\n1             1            1     0   1       4  8.883021          2 5.980923\n5             1            1     0   1       4  9.057813          2 8.655430\n26            1            1     1   1       3  7.202382          2 2.751012\n34            1            1     1   0       3  9.434796          2 8.950942\n44            1            1     1   1       4  8.516897          2 8.090478\n482           0            0     0   0       3  7.503240          0 8.988260\n\n\nNous retirons des données les quelques observations pouvant avoir une trop forte influence sur le modèle. Après réajustement, la figure 8.37 nous informe que nous n’avons plus de valeurs aberrantes restantes ni de fort problème de dispersion. En revanche, le premier quantile des résidus tant à être plus faible que ce que nous aurions pu nous attendre d’une distribution uniforme. Ce constat laisse penser que le modèle a du mal à bien identifier les faux zéros. Ce résultat n’est pas étonnant, car aucune variable n’avait été identifiée à cette fin dans l’article original (Cloutier et al. 2014) qui utilisait un modèle binomial négatif.\n\ndata2 &lt;- subset(data_accidents, isOutlier == FALSE)\n# Ajuster une première version du modèle\nmodelza &lt;- gamlss(formula = Nbr_acci ~ Feux_auto + Feux_piet + Pass_piet +\n                    Terreplein + Apaisement + LogEmploi + Densite_pop + \n                    Entropie + DensiteInter + Long_arterePS + Artere + NB_voies5,\n                  sigma.formula = ~1 + Feux_auto + Feux_piet + Densite_pop + NB_voies5,\n               family = ZIP(mu.link = \"log\", sigma.link=\"logit\"),\n               data = data2)\n\nGAMLSS-RS iteration 1: Global Deviance = 1376.558 \nGAMLSS-RS iteration 2: Global Deviance = 1368.237 \nGAMLSS-RS iteration 3: Global Deviance = 1365.622 \nGAMLSS-RS iteration 4: Global Deviance = 1364.753 \nGAMLSS-RS iteration 5: Global Deviance = 1364.436 \nGAMLSS-RS iteration 6: Global Deviance = 1364.317 \nGAMLSS-RS iteration 7: Global Deviance = 1364.274 \nGAMLSS-RS iteration 8: Global Deviance = 1364.258 \nGAMLSS-RS iteration 9: Global Deviance = 1364.252 \nGAMLSS-RS iteration 10: Global Deviance = 1364.25 \nGAMLSS-RS iteration 11: Global Deviance = 1364.249 \n\n# Extraire la prédiction des valeurs lambda\nlambdas &lt;- predict(modelza, type = \"response\", what = \"mu\")\n# Extraire la prédiction des valeurs p\nps &lt;- predict(modelza, type = \"response\", what = \"sigma\")\n# Calculer la combinaison de ces deux éléments\npreds &lt;- lambdas * ps\n# Effectuer les 1000 simulations\nnsim &lt;- 1000\ncols &lt;- lapply(1:length(lambdas), function(i){\n  lambda &lt;- lambdas[[i]]\n  p &lt;- ps[[i]]\n  sims &lt;- rZIP(n = nsim, mu = lambda, sigma = p)\n  return(sims)\n})\nmat_sims &lt;- do.call(rbind, cols)\n# Calculer les résidus simulés\nsim_res &lt;- createDHARMa(simulatedResponse = mat_sims, \n                            observedResponse = data2$Nbr_acci,\n                            fittedPredictedResponse = preds,\n                            integerResponse = TRUE)\nplot(sim_res)\n\n\n\nFigure 8.37: Diagnostic général des résidus simulés du modèle de Poisson avec excès de zéros ajusté (sans valeurs aberrantes)\n\n\n\nNous pouvons une fois encore comparer des simulations issues du modèle et de la distribution originale de la variable Y. La figure 8.38 montre clairement que les simulations du modèle (en bleu) sont très éloignées dans la distribution originale (en gris), ce qui remet directement en question la pertinence de ce modèle.\n\n#| # Extraire la prédiction des valeurs lambda\nlambdas &lt;- predict(modelza, type = \"response\", what = \"mu\")\n# Extraire la prédiction des valeurs p\nps &lt;- predict(modelza, type = \"response\", what = \"sigma\")\n# Génération de 1000 simulations pour chaque prédiction\nnsim &lt;- 1000\ncols &lt;- lapply(1:length(lambdas), function(i){\n  lambda &lt;- lambdas[[i]]\n  p &lt;- ps[[1]]\n  sims &lt;- round(rZIP(nsim, mu=lambda, sigma = p))\n  return(sims)\n})\nmat_sims &lt;- do.call(rbind, cols)\n# Préparation des données pour le graphique (valeurs réelles)\ncounts &lt;- data.frame(table(data2$Nbr_acci))\nnames(counts) &lt;- c(\"nb_accident\",'frequence')\ncounts$nb_accident &lt;- as.numeric(as.character(counts$nb_accident))\ncounts$prop &lt;- counts$frequence / sum(counts$frequence)\n# Préparation des données pour le graphique (valeurs simulées)\ndf1 &lt;- data.frame(count = 0:25)\ncount_sims &lt;- lapply(1:nsim, function(i){\n  sim &lt;- mat_sims[,i]\n  cnt &lt;- data.frame(table(sim))\n  df2 &lt;- merge(df1, cnt, by.x = \"count\", by.y = \"sim\", all.x = TRUE, all.y = FALSE)\n  df2$Freq &lt;- ifelse(is.na(df2$Freq),0, df2$Freq)\n  return(df2$Freq)\n})\ncount_sims &lt;- do.call(cbind, count_sims)\ndf_sims &lt;- data.frame(\n  val = 0:25,\n  med = apply(count_sims, MARGIN = 1, median),\n  lower = apply(count_sims, MARGIN = 1, quantile, probs = 0.025),\n  upper = apply(count_sims, MARGIN = 1, quantile, probs = 0.975)\n)\n# Affichage du graphique\nggplot() + \n  geom_bar(aes(x = nb_accident, weight = frequence), width = 0.6, data = counts)+\n  geom_errorbar(aes(x = val, ymin = lower, ymax = upper),\n                data = df_sims, color = \"blue\", width = 0.6)+\n  geom_point(aes(x = val, y = med), color = \"blue\", size = 1.3, data = df_sims)+\n  scale_x_continuous(limits = c(-0.5,7), breaks = c(0:7))+\n  xlim(-1,12)+\n  labs(subtitle = \"\",\n       x = \"nombre d'accidents\",\n       y = \"nombre d'occurrences\")\n\n\n\nFigure 8.38: Comparaison de la distribution originale et des simulations pour le modèle de Poisson avec excès de zéros ajusté\n\n\n\nVérification la qualité d’ajustement\n\nmodelenull &lt;- glm(Nbr_acci ~ 1,\n               family = poisson(link=\"log\"),\n               data = data2)\n# Calcul des R2\nrsqs(loglike.full = logLik(modelza),\n     loglike.null = logLik(modelenull),\n     full.deviance = deviance(modelza),\n     null.deviance = deviance(modelenull),\n     nb.params = modelza$sigma.df + modelza$mu.df,\n     n = nrow(data2)\n     )\n\n$`deviance expliquee`\n[1] 0.1110817\n\n$`McFadden ajuste`\n'log Lik.' 0.361296 (df=18)\n\n$`Cox and Snell`\n'log Lik.' 0.8097617 (df=18)\n\n$Nagelkerke\n'log Lik.' 0.819894 (df=18)\n\n# Calcul du RMSE\nsqrt(mean((preds - data2$Nbr_acci)**2))\n\n[1] 2.626853\n\n\nLe modèle avec excès de zéro ajusté ne parvient à expliquer que 11 % de la déviance totale. Il obtient toutefois des valeurs de R2 assez hautes (McFadden ajusté : 0,36, Nagerlkerke : 0,82). Son RMSE est très élevé (2,6), comparativement à celui que nous avons obtenu avec le modèle binomial négatif (1,9). Considérant ces éléments, ce modèle est nettement moins informatif que le modèle binomial négatif et ne devrait pas être retenu. Nous montrons tout de même ici comment interpréter ces résultats.\nInterprétation des résultats\nL’ensemble des coefficients du modèle sont accessibles avec la fonction summary. Les coefficients dédiés à la partie Poisson (appelée Mu dans le résumé) doivent être analysés et interprétés de la même manière que s’ils provenaient d’un modèle de Poisson. Les coefficients appartenant à la partie logistique (appelé Sigma dans le résumé) doivent être analysés et interprétés de la même manière que s’ils provenaient d’un modèle logistique.\n\n# Extraction des résultats\nbase_table &lt;- summary(modelza)\n\n******************************************************************\nFamily:  c(\"ZIP\", \"Poisson Zero Inflated\") \n\nCall:  gamlss(formula = Nbr_acci ~ Feux_auto + Feux_piet +  \n    Pass_piet + Terreplein + Apaisement + LogEmploi +  \n    Densite_pop + Entropie + DensiteInter + Long_arterePS +  \n    Artere + NB_voies5, sigma.formula = ~1 + Feux_auto +  \n    Feux_piet + Densite_pop + NB_voies5, family = ZIP(mu.link = \"log\",  \n    sigma.link = \"logit\"), data = data2) \n\nFitting method: RS() \n\n------------------------------------------------------------------\nMu link function:  log\nMu Coefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   -2.589e+00  5.457e-01  -4.745 2.76e-06 ***\nFeux_auto      7.126e-01  2.008e-01   3.549 0.000425 ***\nFeux_piet      4.244e-01  1.068e-01   3.973 8.19e-05 ***\nPass_piet      2.894e-01  1.993e-01   1.452 0.147184    \nTerreplein    -3.347e-01  1.663e-01  -2.013 0.044692 *  \nApaisement     2.284e-01  1.534e-01   1.489 0.137202    \nLogEmploi      1.542e-01  7.544e-02   2.043 0.041559 *  \nDensite_pop    8.619e-05  1.524e-05   5.657 2.65e-08 ***\nEntropie      -1.700e-01  3.018e-01  -0.564 0.573341    \nDensiteInter   3.950e-03  2.058e-03   1.919 0.055580 .  \nLong_arterePS  1.140e-05  2.018e-05   0.565 0.572435    \nArtere         5.150e-02  1.140e-01   0.452 0.651684    \nNB_voies5      4.518e-01  1.037e-01   4.356 1.62e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n------------------------------------------------------------------\nSigma link function:  logit\nSigma Coefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)  9.625e-01  5.697e-01   1.690  0.09176 . \nFeux_auto   -1.641e+00  6.177e-01  -2.656  0.00816 **\nFeux_piet    2.260e-01  7.529e-01   0.300  0.76421   \nDensite_pop -1.167e-04  5.581e-05  -2.092  0.03700 * \nNB_voies5   -1.807e+00  1.272e+00  -1.421  0.15596   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n------------------------------------------------------------------\nNo. of observations in the fit:  499 \nDegrees of Freedom for the fit:  18\n      Residual Deg. of Freedom:  481 \n                      at cycle:  11 \n \nGlobal Deviance:     1364.249 \n            AIC:     1400.249 \n            SBC:     1476.076 \n******************************************************************\n\n# Multiplication par 1000 des coefficients de population\n# (effet pour 1000 habitants)\nbase_table[8,1] &lt;- 1000 * base_table[8,1]\nbase_table[8,2] &lt;- 1000 * base_table[8,2]\nbase_table[17,1] &lt;- 1000 * base_table[17,1]\nbase_table[17,2] &lt;- 1000 * base_table[17,2]\n# Multiplication par 1000 des coefficients de longueur artère\n# (effet pour 1 km)\nbase_table[11,1] &lt;- 1000 * base_table[11,1]\nbase_table[11,2] &lt;- 1000 * base_table[11,2]\n# Calcul des exponentiels des variables indépendantes\n# et des intervalles de confiance\nexpcoeff &lt;- exp(base_table[,1])\nexpcoeff2.5 &lt;- exp(base_table[,1] - 1.96 * base_table[,2])\nexpcoeff97.5 &lt;- exp(base_table[,1] + 1.96 * base_table[,2])\nbase_table &lt;- cbind(base_table, expcoeff, expcoeff2.5, expcoeff97.5)\n# Calculer une colonne indiquant le niveau de significativité\nsign &lt;- case_when(\n  base_table[,4] &lt; 0.001 ~ \"***\",\n  base_table[,4]  &gt;= 0.001 &  base_table[,4]&lt;0.01 ~ \"**\",\n  base_table[,4]  &gt;= 0.01 &  base_table[,4]&lt;0.05 ~ \"*\",\n  base_table[,4]  &gt;= 0.05 &  base_table[,4]&lt;0.1 ~ \".\",\n  TRUE ~ \"\"\n)\n# Arrondir à trois décimales\nbase_table &lt;- round(base_table,3)\n# Enlever les colonnes de valeurs de t et d'erreur standard\nbase_table &lt;- base_table[, c(1,4,5,6,7)]\nbase_table &lt;- cbind(base_table, sign)\n# Remplacer les 0 dans la colonne pval\nbase_table[,2] &lt;- ifelse(base_table[,2]==\"0\" , \"&lt;0.001\",base_table[,2])\n# Séparer le tout en deux tableaux\npart_poiss &lt;- base_table[1:13,]\npart_logit &lt;- base_table[14:18,]\n# Mettre les bons noms de colonnes\ncolnames(part_poiss) &lt;- c(\"Coeff.\" , \"Val.p\" , \"Exp(Coeff.)\",\n                          \"IC 2,5 % exp(Coeff.)\" , \"IC 97,5 % exp(Coeff.)\", \"Sign.\")\ncolnames(part_logit) &lt;- c(\"Coeff.\" , \"Val.p\" , \"RC\" , \"IC 2,5 % RC\" , \"IC 97,5 % RC\", \"Sign.\")\n\nNous rapportons les résultats de ce modèle de Poisson avec excès de zéro ajusté dans les tableaux 8.27 et 8.28.\n\n\n\n\nTableau 8.27: Résultats de la partie Poisson du modèle de Poisson avec excès de zéros ajusté\n\n\n\n\n\n\n\n\n\n\nVariable\nCoeff.\nVal.p\nExp(Coeff.)\nIC 2,5 % exp(Coeff.)\nIC 97,5 % exp(Coeff.)\nSign.\n\n\n\n(Intercept)\n-2.589\n&lt;0.001\n0.075\n0.026\n0.219\n***\n\n\nFeux_auto\n0.713\n&lt;0.001\n2.039\n1.376\n3.022\n***\n\n\nFeux_piet\n0.424\n&lt;0.001\n1.529\n1.24\n1.885\n***\n\n\nPass_piet\n0.289\n0.147\n1.336\n0.904\n1.974\n\n\n\nTerreplein\n-0.335\n0.045\n0.716\n0.517\n0.991\n*\n\n\nApaisement\n0.228\n0.137\n1.257\n0.93\n1.697\n\n\n\nLogEmploi\n0.154\n0.042\n1.167\n1.006\n1.353\n*\n\n\nDensite_pop\n0.086\n&lt;0.001\n1.09\n1.058\n1.123\n***\n\n\nEntropie\n-0.17\n0.573\n0.844\n0.467\n1.524\n\n\n\nDensiteInter\n0.004\n0.056\n1.004\n1\n1.008\n.\n\n\nLong_arterePS\n0.011\n0.572\n1.011\n0.972\n1.052\n\n\n\nArtere\n0.051\n0.652\n1.053\n0.842\n1.316\n\n\n\nNB_voies5\n0.452\n&lt;0.001\n1.571\n1.282\n1.925\n***\n\n\n\n\n\n\n\n\n\n\nTableau 8.28: Résultats de la partie logistique du modèle de Poisson avec excès de zéros ajusté\n\nVariable\nCoeff.\nVal.p\nRC\nIC 2,5 % RC\nIC 97,5 % RC\nSign.\n\n\n\n(Intercept)\n0.963\n0.092\n2.618\n0.857\n7.997\n.\n\n\nFeux_auto\n-1.641\n0.008\n0.194\n0.058\n0.65\n**\n\n\nFeux_piet\n0.226\n0.764\n1.254\n0.287\n5.483\n\n\n\nDensite_pop\n-0.117\n0.037\n0.89\n0.798\n0.993\n*\n\n\nNB_voies5\n-1.807\n0.156\n0.164\n0.014\n1.985\n\n\n\n\n\n\n\nNous observons ainsi que la présence d’un feu de circulation divise par 5 les chances de rentrer dans la catégorie d’intersection où des accidents peuvent se produire. De même, la densité de population réduit les chances de passer dans cette catégorie de 11 %.\nConcernant les coefficients pour la partie Poisson du modèle, nous observons que les présences d’un feu de circulation et d’un feu pour piéton contribuent à multiplier respectivement par 2 et 1,5 le nombre attendu d’accidents à une intersection. De même, la présence d’un axe de circulation à cinq voies augmente de 57 % le nombre d’accidents. Enfin, la densité de population est aussi associée à une augmentation du nombre d’accidents : pour 1 000 habitants supplémentaires autour de l’intersection, nous augmentons le nombre d’accidents attendu de 9 %.\n\n8.3.5 Conclusion sur les modèles destinés à des variables de comptage\nDans cette section, nous avons vu que modéliser une variable de comptage ne doit pas toujours être réalisé avec une simple distribution de Poisson. Il est nécessaire de tenir compte de la sur ou sous-dispersion potentielle ainsi que de l’excès de zéros. Nous n’avons cependant pas couvert tous les cas. Il est en effet possible d’ajuster des modèles avec une distribution binomiale négative avec excès de zéros (avec le package gamlss), ainsi que des modèles de Hurdle. Ces derniers ont une approche différente de celle proposée par les distributions ajustées pour tenir compte de l’excès de zéro que nous détaillons dans l’encadré « pour aller plus loin » ci-dessous. Le processus de sélection du modèle peut être résumé avec la figure 8.39. Notez que même en suivant cette procédure, rien ne garantit que votre modèle final reflète bien les données que vous étudiez. L’analyse approfondie des résidus et des prédictions du modèle est la seule façon de déterminer si oui ou non le modèle est fiable.\n\n\nFigure 8.39: Processus de sélection d’un modèle pour une variable de comptage\n\n\n\n\n\n\nModèle de Hurdle versus modèle avec excès de zéro\n\n\nLes modèles de Hurdle sont une autre catégorie de modèles GLM. Ils peuvent être décrits avec la formulation suivante :\n\\[\n\\left\\{\\begin{array}{c}\nY \\sim \\text {Binomial}(p) \\text { si } y = 0 \\\\\n\\text { logit }(p)=\\beta_{a} X_{a} \\\\\nY \\sim \\text { TrPoisson}(\\lambda) \\text { si } y&gt;0 \\\\\n\\log (\\lambda)=\\beta_{b} X_{b}\n\\end{array}\\right.\n\\tag{8.21}\\]\nNous constatons qu’un modèle de Hurdle utilise deux distributions, la première est une distribution binomiale dont l’objectif est de prédire si les observations sont à 0 ou au-dessus de 0. La seconde est une distribution strictement positive (supérieure à 0), il peut s’agir d’une distribution tronquée de Poisson, tronquée binomiale négative, Gamma, log-normale ou autre, dépendamment du phénomène modélisé. Puisque le modèle fait appel à deux distributions, deux équations de régression sont utilisées, l’une pour prédire p (la probabilité d’observer une valeur au-dessus de 0) et l’autre l’espérance (moyenne) de la seconde distribution.\nEn d’autres termes, un modèle de Hurdle modélise les données à zéro et les données au-delà de 0 comme deux processus différents (chacun avec sa propre distribution). Cette approche se distingue des modèles avec excès de zéros qui utilisent une seule distribution pour décrire l’ensemble des données. D’après un modèle avec excès de zéro, il existe de vrais et de faux zéros que l’on tente de distinguer. Dans un modèle de Hurdle, l’idée est que les zéros constituent une limite. Nous modélisons la probabilité de dépasser cette limite et ensuite la magnitude du dépassement de cette limite.\nPrenons un exemple pour rendre la distinction plus concrète. Admettons que nous utilisons un capteur capable de mesurer la concentration de particules fines dans l’air. D’après les spécifications du fabricant, le capteur est capable de mesurer des taux de concentration à partir de 0,001 µg/m3. Dans une ville avec des niveaux de concentration très faibles, il est très fréquent que le capteur enregistre des valeurs à zéro. Considérant ce phénomène, il serait judicieux de modéliser le processus avec un modèle de Hurdle Gamma puisque les 0 représentent une limite qui n’a pas été franchie : le seuil de détection du capteur. Nous traitons donc différemment les secteurs au-dessous et au-dessus de ce seuil. Si nous reprenons notre exemple sur les accidents des piétons à des intersections, il est plus judicieux, dans ce cas, de modéliser le phénomène avec un modèle avec excès de zéro puisque nous pouvons observer zéro accident à une intersection dangereuse (vrai zéro) et zéro accident à une intersection sur laquelle aucun piéton ne traverse jamais (faux zéro)."
  },
  {
    "objectID": "08-GLM.html#sec-084",
    "href": "08-GLM.html#sec-084",
    "title": "8  Régressions linéaires généralisées (GLM)",
    "section": "\n8.4 Modèles GLM pour des variables continues",
    "text": "8.4 Modèles GLM pour des variables continues\nComme nous l’avons vu dans la section 2.4, il existe un grand nombre de distributions permettant de décrire une grande diversité de variables continues. Il serait fastidieux de toutes les présenter, nous revenons donc seulement sur les plus fréquentes.\n\n8.4.1 Modèle GLM gaussien\nComme nous l’avons vu en introduction, le modèle GLM gaussien est le plus simple puisqu’il correspond à la transposition de la régression linéaire classique (des moindres carrés) dans la forme des modèles généralisés.\n\n\n\n\nTableau 8.29: Carte d’identité du modèle gaussien\n\n\n\n\n\n\nType de variable dépendante\nVariable continue dans l’intervalle \\(]-\\infty ; + \\infty[\\)\n\n\n\nDistribution utilisée\nNormale\n\n\nFormulation\n\n\\(Y \\sim Normal(\\mu,\\sigma)\\) \\(g(\\mu) = \\beta_0 + \\beta X\\) \\(g(x) = x\\)\n\n\n\nFonction de lien\nIdentitaire\n\n\nParamètre modélisé\n\\(\\mu\\)\n\n\nParamètres à estimer\n\n\\(\\beta_0\\), \\(\\beta\\) et \\(\\sigma\\)\n\n\n\nConditions d’application\nHomoscédasticité\n\n\n\n\n\n\n\n8.4.1.1 Conditions d’application\nLes conditions d’application sont les mêmes que celles d’une régression linéaire classique. La condition de l’homoscédasticité (homogénéité de la variance) est due au fait que la variance du modèle est contrôlée par un seul paramètre fixe \\(var(y) = \\sigma\\) (l’écart-type de la distribution normale). À titre de comparaison, rappelons que dans un modèle de Poisson, la variance est égale à la moyenne (\\(var(y) = E(y)\\)) alors que dans un modèle binomial négatif, la variance est fonction de la moyenne et d’un paramètre \\(\\theta\\) (\\(var(y) = E(y) + E(y)^{\\frac{2}{\\theta}}\\)). Pour ces deux exemples, la variance augmente au fur et à mesure que la moyenne augmente.\n\n8.4.1.2 Interprétation des paramètres\nL’interprétation des paramètres est la même que pour une régression linéaire classique :\n\n\\(\\beta_0\\) : la constante, soit la moyenne attendue de la variable Y lorsque les valeurs de toutes les variables X sont 0.\n\\(\\beta\\) : les coefficients de régression qui quantifient l’effet d’une augmentation d’une unité des variables X sur la moyenne de la variable Y.\n\\(\\sigma\\) : l’écart-type de Y après avoir contrôlé les variables X. Il peut s’interpréter comme l’incertitude restante après modélisation de la moyenne de Y. Concrètement, si vous utilisez votre équation de régression pour prédire une nouvelle valeur de Y : \\(\\hat{Y}\\), l’intervalle de confiance à 95 % de cette prédiction est (\\(\\hat{Y} - 3\\sigma\\text{ ; }\\hat{Y} + 3\\sigma\\)). Vous noterez donc que plus \\(\\sigma\\) est grand, plus grande est l’incertitude de la prédiction.\n\n8.4.1.3 Exemple appliqué dans R\nPour cet exemple, nous reprenons le modèle LM que nous avons présenté dans la section 7.7. À titre de rappel, l’objectif est de modéliser la densité végétale dans les secteurs de recensement de Montréal. Pour cela, nous utilisons des variables relatives aux populations vulnérables physiologiquement ou socioéconomiquement, tout en contrôlant l’effet de la forme urbaine. Parmi ces dernières, l’âge médian des bâtiments est ajouté au modèle avec une polynomiale d’ordre deux, et la densité d’habitants est transformée avec la fonction logarithmique.\nVérification des conditions d’application\nLa première étape de la vérification des conditions d’application est bien sûr de s’assurer de l’absence de multicolinéarité excessive.\n\n# Chargement des données\nload(\"data/lm/DataVegetation.RData\")\n# Calcul du VIF\nlibrary(car)\nvif(glm(VegPct ~ log(HABHA)+poly(AgeMedian,2)+\n                       Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal))\n\n                       GVIF Df GVIF^(1/(2*Df))\nlog(HABHA)         1.289495  1        1.135559\npoly(AgeMedian, 2) 1.387429  2        1.085307\nPct_014            1.517957  1        1.232054\nPct_65P            1.304094  1        1.141969\nPct_MV             1.480275  1        1.216666\nPct_FR             1.729646  1        1.315160\n\n\nPuisque l’ensemble des valeurs de VIF sont inférieures à deux, nos données ne sont pas marquées par une multicolinéarité problématique. La seconde étape du diagnostic consiste à calculer et à afficher les distances de Cook.\n\n\n\n\nFigure 8.40: Distances de Cook pour le modèle gaussien\n\n\n\nLa figure 8.40 indique clairement que quatre observations sont très influentes dans le modèle.\n\n# Sélection des cas étranges\ncas_etranges &lt;- subset(DataFinal, cooksd &gt; 0.03)\nprint(cas_etranges)\n\n     VegPct ArbPct V250Pct V500Pct A250Pct A500Pct      HABHA AgeMedian Pct_014\n3374 10.481  5.478  18.987  13.744   2.908   2.704  74.835867       226    4.76\n3378  0.000  0.000  12.709  12.505   2.116   2.324  88.006946       206    6.25\n4446 23.162  5.209  31.437  31.535   8.672   9.108 313.142733       206   14.40\n9088 85.767 27.583  78.195  83.492  42.999  51.074   2.070472       207   12.00\n     Pct_65P Pct_MV Pct_FR DistCBDkm   SDRNOM\n3374   14.29  23.81  14.29     0.748 Montréal\n3378   12.50  25.00  12.50     0.706 Montréal\n4446   16.87  53.50  42.39     8.678 Montréal\n9088   24.00  12.00  16.00    28.440 Montréal\n\n\nIl s’agit de quatre îlots dans Montréal avec des logements très anciens : plus de 200 ans, alors que la moyenne est de 52 ans pour le reste de la zone d’étude. Le fait que nous ayons dans le modèle une polynomiale d’ordre 2 pour cette variable intensifie l’influence de ces valeurs extrêmes. Par conséquent, nous décidons de simplement les supprimer. Nous verrons plus tard qu’une alternative envisageable est de changer la distribution du modèle pour une distribution de Student (plus robuste aux valeurs extrêmes).\n\n\n\n\nFigure 8.41: Distances de Cook pour le modèle gaussien après suppression des observations influentes\n\n\n\nUne fois ces observations retirées, les nouvelles distances de Cook ne révèlent plus d’observations fortement influentes (figure 8.41). Nous pouvons passer à l’analyse des résidus simulés. La figure 8.42 démontre que la distribution des résidus est significativement différente d’une distribution uniforme, que des valeurs aberrantes sont encore présentes et qu’il existe un lien entre résidus et prédiction dans le modèle.\n\n# Extraction des prédictions du modèle\nmus &lt;- predict(modele, type = 'response')\nmodsigma &lt;- sigma(modele)\n# Extraction de l'écart type du modèle\n# Génération de 1000 simulations pour chaque prédiction\nnsim &lt;- 1000\ncols &lt;- lapply(1:length(mus), function(i){\n  mu &lt;- mus[[i]]\n  sims &lt;- rnorm(nsim, mean=mu, sd = modsigma)\n  return(sims)\n})\nmat_sims &lt;- do.call(rbind, cols)\n# Calculer les résidus simulés\nsim_res &lt;- createDHARMa(simulatedResponse = mat_sims, \n                            observedResponse = DataFinal2$VegPct,\n                            fittedPredictedResponse = mus,\n                            integerResponse = FALSE)\nplot(sim_res)\n\n\n\nFigure 8.42: Diagnostic général des résidus simulés pour le modèle gaussien\n\n\n\nPour mieux cerner ce problème, nous pouvons, dans un premier temps, comparer la distribution originale des données et les simulations issues du modèle. La figure 8.43 montre clairement que la distribution normale est mal ajustée aux données. Ces dernières sont légèrement asymétriques et ne peuvent pas être inférieures à zéro, ce que la distribution normale ne parvient pas à reproduire.\n\ndf &lt;- reshape2::melt(mat_sims[,1:30])\nggplot() + \n  geom_histogram(data = DataFinal2, mapping = aes(x = VegPct, y = ..density..),\n                 color = \"black\", fill = \"white\", bins = 50)+\n  geom_density(data = df, aes(x = value, group = Var2), \n               color = rgb(0.4,0.4,0.4,0.4), fill = rgb(0,0,0,0))+\n  labs(x = \"Pourcentage de végétation dans l'îlot (%)\",\n  y = \"Densité\")\n\n\n\nFigure 8.43: Comparaison de la distribution originale de la variable et des simulations issues du modèle\n\n\n\nIl est également possible de vérifier si la condition d’homogénéité de la variance s’applique bien aux données.\n\n# Extraction des prédictions du modèle\nmus &lt;- predict(modele, type = \"response\")\nsigma_model &lt;- sigma(modele)\n# Création d'un DataFrame pour contenir les prédictions et les vraies valeurs\ndf1 &lt;- data.frame(\n  mus = mus,\n  reals = DataFinal2$VegPct\n)\n# Calcul de l'intervalle de confiance à 95 % selon la distribution normale\n# et stockage dans un second DataFrame\nseqa &lt;- seq(0,100,10)\ndf2 &lt;- data.frame(\n  mus = seqa,\n  lower = qnorm(p = 0.025, mean = seqa, sd = sigma_model),\n  upper = qnorm(p = 0.975, mean = seqa, sd = sigma_model)\n)\n\n# Affichage des valeurs réelles et prédites (en rouge)\n# et de leur variance selon le modèle (en noir)\nggplot() + \n  geom_point(data = df1, \n             mapping = aes(x = mus, y = reals),\n             color =\"red\", size = 0.5) + \n  geom_errorbar(data = df2,\n                mapping = aes(x = mus, ymin = lower, ymax = upper),\n                width = 0.2, color = rgb(0.4,0.4,0.4)) + \n  labs(x = \"valeurs prédites\",\n       y = \"valeurs réelles\")\n\n\n\nFigure 8.44: Comparaison de la distribution originale de la variable et des simulations issues du modèle\n\n\n\nÀ nouveau, nous constatons à la figure 8.44 que le modèle s’attend à trouver des valeurs négatives pour la concentration de végétation, ce qui n’est pas possible dans notre cas. En revanche, il semble que la variance soit bien homogène puisque la dispersion des observations semble suivre à peu près la dispersion attendue par le modèle (en noir).\nMalgré ces différents constats indiquant clairement qu’un modèle gaussien est un choix sous-optimal pour ces données, nous poursuivons l’analyse de ce modèle.\nVérification de la qualité d’ajustement\n\n# Ajustement d'un modèle nul\nmodelenull &lt;- glm(VegPct ~ 1,\n                  data = DataFinal2, \n                  family = gaussian())\n# Calcul des pseudo R2\nrsqs(loglike.full = logLik(modele),\n     loglike.null = logLik(modelenull),\n     full.deviance = deviance(modele),\n     null.deviance = deviance(modelenull), \n     nb.params = modele$rank,\n     n = nrow(DataFinal2)\n     )\n\n$`deviance expliquee`\n[1] 0.4706321\n\n$`McFadden ajuste`\n'log Lik.' 0.07310662 (df=9)\n\n$`Cox and Snell`\n'log Lik.' 0.4706321 (df=9)\n\n$Nagelkerke\n'log Lik.' 0.4707122 (df=9)\n\n\nLe modèle parvient à expliquer 47 % de la déviance totale, mais obtient un R2 ajusté de McFadden de seulement 0,07.\n\n# Calcul du RMSE\nsqrt(mean((predict(modele, type = \"response\") - DataFinal2$VegPct)**2))\n\n[1] 13.49885\n\n\nL’erreur quadratique moyenne et de 13,5 points de pourcentage, ce qui indique que le modèle a une assez faible capacité prédictive.\nInterprétation des résultats\nL’ensemble des coefficients du modèle sont accessibles via la fonction summary; le tableau 8.30 présente les résultats pour les coefficients du modèle.\n\n\n\n\nTableau 8.30: Résultats du modèle gaussien\n\n\n\n\n\n\n\n\n\n\n\nVariable\nCoeff.\nErr.std\nVal.z\nval.p\nIC coeff 2,5 %\nIC coeff 97,5 %\nSign.\n\n\n\nConstante\n53,606\n1,000\n53,640\n0,000\n51,647\n55,565\n***\n\n\nAgeMedian ordre 1\n2,732\n15,560\n0,180\n0,861\n-27,772\n33,237\n\n\n\nAgeMedian ordre 2\n-320,869\n14,000\n-22,910\n0,000\n-348,318\n-293,420\n***\n\n\nPct_014\n0,915\n0,030\n29,310\n0,000\n0,853\n0,976\n***\n\n\nPct_65P\n0,280\n0,020\n15,050\n0,000\n0,243\n0,316\n***\n\n\nPct_MV\n-0,042\n0,010\n-4,190\n0,000\n-0,061\n-0,022\n***\n\n\nPct_FR\n-0,340\n0,010\n-30,940\n0,000\n-0,362\n-0,318\n***\n\n\n\n\n\n\nLes résultats de la régression linéaire multiple ont déjà été interprétés dans la section 7.7.1, nous ne commenterons pas ici les résultats du modèle GLM gaussien qui sont identiques.\n\n8.4.2 Modèle GLM avec une distribution de Student\nPour rappel, la distribution de Student ressemble à une distribution normale (section 2.4.3.11). Elle est symétrique autour de sa moyenne et a également une forme de cloche. Cependant, elle dispose de queues lourdes, ce qui signifie qu’elle permet de représenter des phénomènes présentant davantage de valeurs extrêmes qu’une distribution normale. Pour contrôler le poids des queues, la distribution de Student intègre un troisième paramètre : \\(\\nu\\) (nu). Lorsque \\(\\nu\\) tends vers l’infini, la distribution de Student tend vers une distribution normale (figure 8.45).\n\n\n\n\nFigure 8.45: Effet du paramètre nu sur une distribution de Student\n\n\n\nComme vous pouvez le constater dans la carte d’identité au tableau 8.31, le modèle GLM de Student est très proche du modèle GLM gaussien. Nous modélisons explicitement la moyenne de la distribution et son paramètre de dispersion (variance) est laissé fixe. Ce GLM est même souvent utilisé comme une version « robuste » du modèle gaussien du fait de sa capacité à intégrer explicitement l’effet des observations extrêmes. En effet, dans un modèle gaussien, les observations extrêmes (aussi appelées observations aberrantes) vont davantage influencer les paramètres du modèle que pour un modèle utilisant une distribution de Student.\n\n\n\n\nTableau 8.31: Carte d’identité du modèle de Student\n\n\n\n\n\n\nType de variable dépendante\nVariable continue dans l’intervalle \\(]-\\infty ; + \\infty[\\)\n\n\n\nDistribution utilisée\nStudent\n\n\nFormulation\n\n\\(Y \\sim Student(\\mu,\\sigma,\\nu)\\) \\(g(\\mu) = \\beta_0 + \\beta X\\) \\(g(x) = x\\)\n\n\n\nFonction de lien\nIdentitaire\n\n\nParamètre modélisé\n\\(\\mu\\)\n\n\nParamètres à estimer\n\n\\(\\beta_0\\), \\(\\beta\\), \\(\\sigma\\) et \\(\\nu\\)\n\n\n\nConditions d’application\nHomoscédasticité\n\n\n\n\n\n\n\n8.4.2.1 Conditions d’application\nLes conditions d’application sont les mêmes que pour un modèle GLM gaussien, à ceci prêt que le modèle utilisant la distribution de Student est moins sensible aux observations extrêmes.\n\n8.4.2.2 Interprétation des paramètres\nL’interprétation des paramètres est la même que pour un modèle gaussien puisque nous modélisons la moyenne de la distribution et que la fonction de lien est la fonction identitaire. Le seul paramètre supplémentaire est \\(\\nu\\), qui n’a en soit aucune interprétation pratique. Notez simplement que si \\(\\nu\\) est supérieur à 30, un simple modèle GLM gaussien serait sûrement suffisant.\n\n8.4.2.3 Exemple appliqué dans R\nNous proposons ici de simplement réajuster le modèle gaussien présenté dans la section précédente en utilisant une distribution de Student. Nous utilisons pour cela la fonction gam du package mgcv avec le paramètre family = scat pour utiliser une distribution de Student. Les valeurs de VIF ont déjà été calculées dans l’exemple précédent, nous pouvons donc passer directement au calcul des distances de Cook.\n\n# Chargement des données\nload(\"data/lm/DataVegetation.RData\")\n# Ajustement du modèle\nmodele &lt;- gam(VegPct ~ log(HABHA)+poly(AgeMedian,2)+\n                       Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal,\n              family = scat)\n\n# Calcul des distances de Cook\ncooksd &lt;- cooks.distance(modele)\n# Affichage des valeurs\ndf &lt;- data.frame(\n  cook = cooksd,\n  oid = 1:length(cooksd)\n)\nggplot(data = df) + \n  geom_point(aes(x = oid, y = cook), color = rgb(0.4,0.4,0.4,0.7), size = 1) + \n  labs(x = \"\", y = \"distance de Cook\")\n\n\n\nFigure 8.46: Distances de Cook pour un modèle GLM avec une distribution de Student\n\n\n\nNous retrouvons les quatre observations avec des distances de Cook très fortes que nous avons identifiées dans le modèle gaussien. Nous décidons donc de les enlever pour les mêmes raisons que précédemment.\n\n# Chargement des données\nDataFinal2 &lt;- subset(DataFinal, cooksd&lt;0.1)\n# Ajustement du modèle\nmodele &lt;- gam(VegPct ~ log(HABHA)+poly(AgeMedian,2)+\n                       Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal2,\n              family = scat)\n\n# Calcul des distances de Cook\ncooksd &lt;- cooks.distance(modele)\n# Affichage des valeurs\ndf &lt;- data.frame(\n  cook = cooksd,\n  oid = 1:length(cooksd)\n)\nggplot(data = df) + \n  geom_point(aes(x = oid, y = cook), color = rgb(0.4,0.4,0.4,0.7), size = 1) + \n  labs(x = \"\", y = \"distance de Cook\")\n\n\n\nFigure 8.47: Distances de Cook pour un modèle GLM avec une distribution de Student après suppression des valeurs fortement influentes\n\n\n\nNous pouvons à présent vérifier si les résidus simulés se comportent tel qu’attendu.\n\n# Extraction des prédictions du modèle\nmus &lt;- predict(modele, type = 'response')\n# Affichage des paramètres nu et sigma\nmodele$family$family\n\n[1] \"Scaled t(6.333,11.281)\"\n\nsigma_model &lt;- 11.281\nnu_model &lt;- 6.333\nlibrary(LaplacesDemon) # pour simuler des données d'une distribution de Student\n# Génération de 1000 simulations pour chaque prédiction\nnsim &lt;- 1000\ncols &lt;- lapply(1:length(mus), function(i){\n  mu &lt;- mus[[i]]\n  sims &lt;- rst(nsim, mu=mu, sigma = sigma_model, nu = nu_model)\n  return(sims)\n})\nmat_sims &lt;- do.call(rbind, cols)\n# Calculer les résidus simulés\nsim_res &lt;- createDHARMa(simulatedResponse = mat_sims, \n                            observedResponse = DataFinal2$VegPct,\n                            fittedPredictedResponse = mus,\n                            integerResponse = FALSE)\nplot(sim_res)\n\n\n\nFigure 8.48: Diagnostic général des résidus simulés pour le GLM avec distribution de Student\n\n\n\nIl semble que nous obtenons des résultats similaires à ceux du modèle gaussien: les résidus divergent significativement d’une distribution uniforme (figure 8.48). Le graphique quantile-quantile n’est parfois pas très adapté pour discerner une déviation de la distribution uniforme, nous pouvons dans ce cas afficher un histogramme des résidus pour en avoir le coeur net (figure 8.49).\n\nggplot()+\n  geom_histogram(aes(x = residuals(sim_res)), bins = 50, color = \"white\") + \n  labs(x = \"effectifs\", y = \"résidus simulés\")\n\n\n\nFigure 8.49: Distribution des résidus simulés du modèle GLM avec distribution de Student\n\n\n\nPour cet exercice, il est intéressant de comparer les formes des simulations issues du modèle gaussien et du modèle de Student pour bien distinguer la différence entre les deux.\n\n\n\n\nFigure 8.50: Simulations issues des modèles gaussien et de Student, comparées aux données originales\n\n\n\nNous constatons ainsi que la différence entre les deux modèles est ici très mince, voire inexistante. Le seul élément que nous pouvons noter est que le modèle de Student à une courbe (une queue de distribution) moins aplatie vers la droite. Cela lui permettrait de mieux tenir compte de cas extrêmes avec de fortes densités de végétation (ce qui concerne donc très peu d’observations puisque cette variable a un maximum de 100).\nPour déterminer si le modèle de Student est plus pertinent à retenir que le modèle gaussien, nous pouvons ajuster un second modèle de Student pour lequel nous forçons artificiellement \\(\\nu\\) à être très élevé. Pour rappel, quand \\(\\nu\\) tend vers l’infini, la distribution de Student tend vers une distribution normale. Nous forçons ici \\(\\nu\\) à être supérieur à 100 pour créer un second modèle de Student se comportant quasiment comme un modèle gaussien et calculons les AIC des deux modèles.\n\n# Calcul d'un modèle de Student identique à un modèle gaussien\nmodele2 &lt;- gam(VegPct ~ log(HABHA)+poly(AgeMedian,2)+\n                   Pct_014+Pct_65P+Pct_MV+Pct_FR, data = DataFinal2,\n               family = scat(min.df = 100))\n# Calcul des deux AIC\nAIC(modele)\n\n[1] 81771.92\n\nAIC(modele2)\n\n[1] 82057.79\n\n\nLe second AIC (modèle gaussien) est plus élevé, indiquant que le modèle est moins bien ajusté aux données. Dans le cas présent, il est plus pertinent de retenir le modèle de Student même si les écarts entre ces deux modèles sont minimes. Ce résultat n’est pas surprenant puisque la variable Y (pourcentage de végétation dans les îlots de l’île de Montréal) est relativement compacte et comporte peu / pas de valeurs pouvant être qualifiées de valeurs extrêmes.\nNous ne détaillons pas ici l’interprétation des coefficients du modèle (présentés au tableau 8.32) puisqu’ils s’interprètent de la même façon qu’un modèle GLM et qu’un modèle de régression linéaire multiple.\n\n\n\n\nTableau 8.32: Résultats du modèle Student\n\n\n\n\n\n\n\n\n\n\n\nVariable\nCoeff.\nErr.std\nVal.z\nval.p\nIC coeff 2,5 %\nIC coeff 97,5 %\nSign.\n\n\n\nConstante\n65,096\n0,940\n69,110\n0,000\n63,250\n66,943\n***\n\n\nlog(HABHA)\n-9,502\n0,160\n-60,160\n0,000\n-9,811\n-9,192\n***\n\n\nPct_014\n0,866\n0,030\n29,450\n0,000\n0,808\n0,924\n***\n\n\nPct_65P\n0,237\n0,020\n13,540\n0,000\n0,203\n0,272\n***\n\n\nPct_MV\n-0,015\n0,010\n-1,650\n0,099\n-0,034\n0,003\n.\n\n\nPct_FR\n-0,301\n0,010\n-29,040\n0,000\n-0,321\n-0,280\n***\n\n\n\n\n\n\n\n8.4.3 Modèle GLM avec distribution Gamma\nPour rappel, la distribution Gamma est strictement positive (\\([0;+\\infty[\\)), asymétrique, et a une variance proportionnelle à sa moyenne (hétéroscedastique). Dans la section sur les distributions, nous avons vu que la distribution Gamma (section 2.4.3.15) est formulée avec deux paramètres : sa forme (\\(\\alpha\\) ou shape) et son échelle (\\(b\\) ou scale). Ces deux paramètres n’ont pas une interprétation intuitive, mais il est possible avec un peu de jonglage mathématique d’arriver à une reparamétrisation intéressante. Cela est détaillé dans l’encadré ci-dessous; notez toutefois qu’il n’est pas nécessaire de maîtriser le contenu de cet encadré pour lire la suite de cette section sur les modèles GLM avec une distribution Gamma.\n\n\n\n\n\nReparamétrisation d’une distribution Gamma pour un GLM\n\n\nSi nous disposons d’une variable Y, suivant une distribution Gamma telle que \\(Y \\sim Gamma(\\alpha,b)\\) avec \\(\\alpha\\) le paramètre de forme et \\(b\\) le paramètre d’échelle, alors, l’espérance et la variance de Y peuvent être définies comme suit :\n\\[\n\\begin{aligned}\n&E(Y) = \\alpha \\times b \\\\\n&Var(Y) = \\alpha \\times b^2\\\\\n\\end{aligned}\n\\tag{8.22}\\]\nEn d’autres termes, l’espérance (l’équivalent de la moyenne pour une distribution normale) de notre variable Y est égale au produit des paramètres de forme et d’échelle.\nAvec ces propriétés, il est possible de redéfinir la fonction de densité de la distribution Gamma et d’arriver à une nouvelle formulation : \\(Y \\sim Gamma(\\mu,\\alpha)\\). \\(\\mu\\) est donc l’espérance de Y (interprétable comme sa moyenne, soit sa valeur attendue) et \\(\\alpha\\) permet de capturer la dispersion de la distribution Gamma. Par extension des relations présentées ci-dessus, il est possible de reformuler la variance en fonction de \\(\\mu\\) et de \\(\\alpha\\).\n\\[\n\\begin{aligned}\n&Var(Y) = \\alpha \\times b^2\\\\\n&\\mu = \\alpha \\times b \\text{ soit }b = \\frac{\\mu}{a}\\\\\n&Var(Y) = \\alpha \\times (\\frac{\\mu}{\\alpha})^2 \\text{ soit } Var(Y) = \\frac{\\mu^2}{\\alpha}\\\\\n\\end{aligned}\n\\tag{8.23}\\]\nNous observons donc que la variance dans un modèle Gamma augmente de façon quadratique avec la moyenne, mais est tempérée par le paramètre de forme. Nous en concluons qu’un paramètre de forme plus grand produit une distribution moins étalée.\nDans ce contexte, \\(\\mu\\) doit être strictement positif : la valeur attendue moyenne d’une distribution Gamma doit être positive par définition puisqu’une distribution Gamma ne peut pas produire de valeurs négatives. Il est donc logique d’utiliser la fonction logarithmique comme fonction de lien, puisque sa contrepartie (la fonction exponentielle) ne produit que des résultats positifs.\n\n\nPour résumer, nous nous retrouvons donc avec un modèle qui prédit, sur une échelle logarithmique, l’espérance (~moyenne) d’une distribution Gamma. Notez qu’il existe d’autres façons de spécifier un modèle GLM avec une distribution Gamma, mais celle-ci est la plus intuitive.\n\n\n\n\nTableau 8.33: Carte d’identité du modèle Gamma\n\n\n\n\n\n\nType de variable dépendante\nVariable continue dans l’intervalle \\(]0 ; + \\infty[\\)\n\n\n\nDistribution utilisée\nGamma\n\n\nFormulation\n\n\\(Y \\sim Gamma(\\mu,\\alpha)\\) \\(g(\\mu) = \\beta_0 + \\beta X\\) \\(g(x) = log(x)\\)\n\n\n\nFonction de lien\nlog\n\n\nParamètre modélisé\n\\(\\mu\\)\n\n\nParamètres à estimer\n\n\\(\\beta_0\\), \\(\\beta\\), et \\(\\alpha\\)\n\n\n\nConditions d’application\n\\(Variance = \\frac{\\mu^2}{\\alpha}\\)\n\n\n\n\n\n\n\n8.4.3.1 Interprétation des paramètres\nPuisque le modèle utilise la fonction de lien log, alors les coefficients \\(\\beta\\) expriment l’augmentation de l’espérance (la valeur attendue de Y, ce qui est proche de l’idée de moyenne) de la variable Y sur une échelle logarithmique (comme dans un modèle de Poisson). Il est possible de convertir les coefficients dans l’échelle originale de la variable Y en utilisant la fonction exponentielle (l’inverse de la fonction log), mais ces coefficients représentent alors des effets multiplicatifs et non des effets additifs. Prenons un exemple, admettons que le coefficient \\(\\beta_1\\), associé à la variable \\(X_1\\) soit de 1,5. Cela signifie qu’une augmentation d’une unité de \\(X_1\\), augmente le log de l’espérance de Y de 1,5 unité. L’exponentielle du coefficient est 4,48, ce qui signifie qu’une augmentation d’une unité entraîne une multiplication par 4,48 de la valeur attendue de Y (l’espérance de Y). Le paramètre de forme (\\(\\alpha\\)) n’a pas d’interprétation pratique, bien qu’il soit utilisé dans les différents tests des conditions d’application du modèle et dans le calcul de sa déviance.\n\n8.4.3.2 Conditions d’application\nDans un modèle GLM gaussien, la variance est capturée par un paramètre \\(\\sigma\\) et est constante, produisant la condition d’homoscédasticité des résidus. Dans un modèle Gamma, la variance varie en fonction de l’espérance et du paramètre de forme selon la relation : \\(Var(Y) = \\frac{E(Y)^2}{\\alpha}\\). Les résidus sont donc par nature hétéroscédastiques dans un modèle Gamma et doivent suivre cette relation.\n\n8.4.3.3 Exemple appliqué dans R\nPour cet exemple, nous nous intéressons à la durée de déplacement en milieu urbain. Ce type d’analyse permet notamment de mieux comprendre les habitudes de déplacement de la population et d’orienter les politiques de transport. Plusieurs travaux concluent que les durées de déplacement en milieu urbain varient en fonction du motif du déplacement, du mode de transport utilisé, des caractéristiques socio-économiques de l’individu et des caractéristiques du trajet lui-même (Anastasopoulos et al. 2012; Frank et al. 2008). Nous modélisons ici la durée en minute d’un ensemble de déplacements effectués par des Montréalais en 2017 et enregistrés avec l’application MTL Trajet proposée par la Ville de Montréal. Ces données sont disponibles sur le site web des données ouvertes de Montréal et sont anonymisées. Nous ne disposons donc d’aucune information individuelle. Compte tenu du très grand nombre d’observations (plus de 185 000), nous avons dû effectuer quelques opérations de tri et nous avons ainsi supprimé:\n\nles trajets utilisant de multiples modes de transport (sauf en combinaison avec la marche, par exemple, un trajet effectué à pied et en transport en commun a été recatégorisé comme un trajet en transport en commun uniquement). Les déplacements multimodaux se distinguent largement des déplacements unimodaux dans la littérature scientifique;\nles trajets de nuit (seuls les trajets démarrant dans l’intervalle de 7 h à 21 h ont été conservés);\nles trajets dont le point de départ est un arrondissement / municipalité pour lequel moins de 150 trajets ont été enregistrés (trop peu d’observations);\nles trajets de plus de deux heures (cas rares, considérés comme des données aberrantes);\nles trajets dont le point de départ est à moins de 100 mètres du point d’arrivée (formant des boucles plutôt que des déplacements).\n\nNous arrivons ainsi à un total de 24 969 observations. Pour modéliser ces durées de déplacement, nous utilisons les variables indépendantes présentées dans le tableau 8.34.\n\n\n\n\nTableau 8.34: Variables indépendantes utilisées dans le modèle Gamma\n\n\n\n\n\n\n\nNom de la variable\nSignification\nType de variable\nMesure\n\n\n\nMode\nMode de déplacement\nVariable catégorielle\nTransport collectif; piéton; vélo et véhicule individuel\n\n\nMotif\nMotif du déplacement\nVariable catégorielle\nTravail; loisir; magasinage et éducation\n\n\nHeureDep\nHeure de départ\nVariable catégorielle\nDe 7 h à 21 h\n\n\nArrondDep\nArrondissement de départ\nVariable catégorielle\nNom de l’arrondissement dont part le trajet\n\n\nLogDist\nLogarithme de la distance à vol d’oiseau en km\nVariable continue\nLogarithme de la distance à vol d’oiseau en km entre le point de départ et d’arrivée\n\n\nMemeArrond\nL’arrivée du trajet se situe-t-elle dans le même arrondissement que celui du départ?\nVariable binaire\nOui ou non\n\n\nSemaine\nLe trajet a-t-il été effectué en semaine ou en fin de semaine?\nVariable binaire\nSemaine ou fin de semaine\n\n\n\n\n\n\nLes temps de trajet forment une variable strictement positive et très vraisemblablement asymétrique. En effet, nous nous attendons à observer une certaine concentration de valeurs autour d’une moyenne, et davantage de trajets avec de courtes durées que de trajets avec de longues durées. Pour nous en assurer, réalisons un histogramme de la distribution de notre variable Y et comparons-la avec des distributions normale et Gamma.\n\n# Chargement des données\ndataset &lt;- read.csv(\"data/glm/DureeTrajets.csv\", stringsAsFactors = FALSE)\narrondMTL &lt;- c(\"Mercier-Hochelaga-Maisonneuve\", \"Villeray-Saint-Michel-Parc-Extension\", \n               \"Ville-Marie\", \"Verdun\", \"Saint-Leonard\", \"Saint-Laurent\", \n               \"Rosemont-La Petite-Patrie\", \"Riviere-des-Prairies-Pointe-aux-Trembles\", \n               \"Pierrefonds-Roxboro\", \"Outremont\", \"Montreal-Nord\", \"Le Sud-Ouest\", \n               \"Le Plateau-Mont-Royal\", \"Lachine\" , \"Ahuntsic-Cartierville\",\n               \"Anjou\" ,\"Cote-des-Neiges-Notre-Dame-de-Grace\", \"LaSalle\"  \n)\ndataset &lt;- subset(dataset, dataset$ArrondDep %in% arrondMTL)\n# Définissons 7 h du matin comme la référence pour la variable Heure de départ\ndataset$HeureDep &lt;- relevel(\n  factor(dataset$HeureDep, levels = as.character(7:21)),\n  ref = \"7\")\n# Comparaison de la distribution originale avec une distribution \n# normale et une distribution Gamma\nlibrary(fitdistrplus)\nmodel_gamma &lt;- fitdist(dataset$Duree, distr = \"gamma\")\nggplot(data = dataset) + \n  geom_histogram(aes(x = Duree, y = ..density..), bins = 40, color = \"white\")+\n  stat_function(fun = dgamma, color = \"red\", linewidth = 0.8, \n                args = as.list(model_gamma$estimate))+\n  stat_function(fun = dnorm, color = \"blue\", linewidth = 0.8, \n                args = list(mean = mean(dataset$Duree), \n                            sd = sd(dataset$Duree)))+\n  labs(x = \"Temps de déplacement (minutes)\",\n       y = \"\",\n       subtitle = \"modèles Gamma et gaussien\")\n\n\n\nFigure 8.51: Distribution des temps de trajet diurne à Montréal\n\n\n\nLa figure 8.51 permet de constater l’asymétrie de la distribution des temps de trajet et qu’un modèle Gamma (ligne rouge) a plus de chance d’être adapté aux données qu’un modèle gaussien (ligne bleue).\nVérification des conditions d’application\nComme pour les modèles précédents, nous commençons par la vérification de l’absence de multicolinéarité.\n\n## Calcul du VIF\nvif(glm(Duree ~ Mode + Motif + HeureDep + LogDist +\n          ArrondDep + MemeArrond + Jour,\n        data = dataset,\n        family = Gamma(link=\"log\")))\n\n               GVIF Df GVIF^(1/(2*Df))\nMode       2.103392  3        1.131931\nMotif      1.934997  3        1.116298\nHeureDep   1.791009 14        1.021032\nLogDist    2.665998  1        1.632789\nArrondDep  1.439499 17        1.010772\nMemeArrond 2.151113  1        1.466667\nJour       1.330091  6        1.024055\n\n\nL’ensemble des valeurs de VIF sont inférieures à trois, indiquant donc l’absence de multicolinéarité excessive. Nous pouvons donc ajuster une première version du modèle (ici avec le package VGAM et la fonction vglm) et calculer les distances de Cook.\n\n# Calcul du modèle avec VGAM\nmodele &lt;- vglm(Duree ~ Mode + Motif + HeureDep + LogDist +\n                 ArrondDep+ MemeArrond + Semaine,\n               data = dataset,\n               family = gamma2(lmu = \"loglink\"))\n# Calcul des distances de Cook\nhats &lt;- hatvaluesvlm(modele)[,1]\nres &lt;- residuals(modele, type = \"pearson\")[,1]\ndisp &lt;- modele@coefficients[[2]]**-1\nnbparams &lt;- modele@rank\ncooksd &lt;- (res/(1 - hats))^2 * hats/(disp * nbparams)\ndf &lt;- data.frame(\n  cook = cooksd,\n  oid = 1:length(cooksd)\n)\n# Représentation des distances de Cook\nggplot(data = df)+\n  geom_point(aes(x = oid, y = cook), size = 0.5, color = rgb(0.4,0.4,0.4,0.4)) + \n  geom_hline(yintercept = 0.003, color = \"red\") +\n  labs(x = \"\", y = \"distance de Cook\")\n\n\n\nFigure 8.52: Distances de Cook pour le modèle Gamma\n\n\n\nPuisque nous disposons d’un (très) grand nombre d’observations, nous pouvons nous permettre de retirer les quelques observations fortement influentes (distance de Cook &gt; 0,003 dans notre cas) qui apparaissent dans la figure 8.52. Nous retirons ainsi 28 observations et réajustons le modèle.\n\n# Retirer les valeurs influentes\ndataset2 &lt;- subset(dataset, cooksd&lt;0.003)\n# Calcul du modèle avec VGAM\nmodele &lt;- vglm(Duree ~ Mode + Motif + HeureDep + LogDist +\n                 ArrondDep+ MemeArrond + Semaine,\n               data = dataset2,\n               family = gamma2(lmu = \"loglink\"))\n\nNous constatons ainsi que dans la nouvelle version du modèle (figure 8.53), aucune valeur particulièrement influente ne semble être présente.\n\n# Calcul des distances de Cook\nhats &lt;- hatvaluesvlm(modele)[,1]\nres &lt;- residuals(modele, type = \"pearson\")[,1]\ndisp &lt;- modele@coefficients[[2]]**-1\nnbparams &lt;- modele@rank\ncooksd &lt;- (res/(1 - hats))^2 * hats/(disp * nbparams)\ndf &lt;- data.frame(\n  cook = cooksd,\n  oid = 1:length(cooksd)\n)\n# Représentation des distances de Cook\nggplot(data = df)+\n  geom_point(aes(x = oid, y = cook), size = 0.5, color = rgb(0.4,0.4,0.4,0.4)) +\n  labs(x = \"\", y = \"distance de Cook\")\n\n\n\nFigure 8.53: Distances de Cook pour le modèle Gamma (sans les observations fortement influentes)\n\n\n\n\n# Extraction des prédictions du modèle (mu)\nmus &lt;- modele@fitted.values\n# Extraction du paramètre de forme\nshape &lt;- exp(modele@coefficients[[2]])\n# Calcul des simulations\nnsim &lt;- 1000\ncols &lt;- lapply(1:length(mus), function(i){\n  mu &lt;- mus[[i]]\n  sims &lt;- rgamma(n = nsim, shape = shape, scale = mu/shape)\n  return(sims)\n})\nmat_sims &lt;- do.call(rbind, cols)\n# Représentation graphique de 20 simulations\ndf2 &lt;- reshape2::melt(mat_sims[,0:20])\nggplot() + \n  geom_histogram(aes(x = Duree, y = ..density..),\n                 data = dataset, bins = 100, color = \"black\", fill = \"white\") + \n  geom_density(aes(x = value, y = ..density.., group = Var2), data = df2, \n               fill = rgb(0,0,0,0), color = rgb(0.9,0.22,0.27,0.4), size = 1)+\n  xlim(0,200)+\n  labs(x = \"durée (minutes)\", y = \"densité\")\n\n\n\nFigure 8.54: Comparaison de la distribution originale et de simulations issues du modèle Gamma\n\n\n\nAvant de calculer les résidus simulés, nous comparons la distribution originale des données et des simulations issues du modèle. La figure 8.54 permet de constater que le modèle semble bien capturer l’essentiel de la forme de la variable Y originale. Nous notons un léger décalage entre la pointe des deux distributions, laissant penser que les valeurs prédites par le modèle tendent à être légèrement plus grandes que les valeurs réelles. Pour mieux appréhender ce constat, nous passons à l’analyse des résidus simulés.\n\n# DHarma tests\nsim_res &lt;- createDHARMa(simulatedResponse = mat_sims, \n                            observedResponse = dataset2$Duree,\n                            fittedPredictedResponse = modele@fitted.values[,1],\n                            integerResponse = FALSE)\nggplot() + \n  geom_histogram(aes(x = residuals(sim_res)), bins = 100, color = \"white\") + \n  labs(x = \"résidus simulés\",\n        y = \"effectifs\")\n\n\n\nFigure 8.55: Distribution des résidus simulés du modèle Gamma\n\n\n\nNul besoin d’un test statistique pour constater que ces résidus (figure 8.55) ne suivent pas une distribution uniforme. Nous observons une nette surreprésentation de résidus à 1 et une nette sous-représentation de résidus à 0. Il y a donc de nombreuses observations dans notre modèle pour lesquelles les simulations sont systématiquement trop fortes et il n’y en a pas assez pour lesquelles les simulations seraient systématiquement trop faibles.\n\nplot(sim_res)\n\n\n\nFigure 8.56: Diagnostic général des résidus simulés du modèle Gamma\n\n\n\nLa figure 8.56 indique que le modèle souffre à la fois d’un problème de dispersion (la relation espérance-variance n’est donc pas respectée) et est affecté par des valeurs aberrantes. Considérant que nous avons encore un très grand nombre d’observations, nous faisons le choix de retirer celles pour lesquelles la méthode des résidus simulés estime qu’elles sont des valeurs aberrantes dans au moins 1 % des simulations, soit environ 620 observations.\n\n# Sélection des valeurs aberrantes au seuil 0.01\nsim_outliers &lt;- outliers(sim_res, \n                         lowerQuantile = 0.01,\n                         upperQuantile = 0.99, \n                         return = \"logical\")\ntable(sim_outliers)\n\nsim_outliers\nFALSE  TRUE \n22934   612 \n\n# Retirer ces observations des données\ndataset3 &lt;- subset(dataset2, sim_outliers == FALSE)\n# Réajuster le modèle\nmodele &lt;- vglm(Duree ~ Mode + Motif + HeureDep + \n                 LogDist + ArrondDep + MemeArrond + Semaine,\n               data = dataset3,\n               model = TRUE,\n               family = gamma2)\nmodele2 &lt;- vglm(Duree ~ Mode + Motif + HeureDep + ArrondDep + MemeArrond + Semaine,\n               data = dataset3,\n               model = TRUE,\n               family = gamma2)\n# Extraction des prédictions du modèle (mu)\nmus &lt;- modele@fitted.values\n# Extration du paramètre de forme\nshape &lt;- exp(modele@coefficients[[2]])\n# Calcul des simulations\nnsim &lt;- 1000\ncols &lt;- lapply(1:length(mus), function(i){\n  mu &lt;- mus[[i]]\n  sims &lt;- rgamma(n = nsim, shape = shape, scale = mu/shape)\n  return(sims)\n})\nmat_sims &lt;- do.call(rbind, cols)\n# Calcul des résidus simulés\nsim_res &lt;- createDHARMa(simulatedResponse = mat_sims, \n                            observedResponse = dataset3$Duree,\n                            fittedPredictedResponse = modele@fitted.values[,1],\n                            integerResponse = FALSE)\nplot(sim_res)\n\n\n\nFigure 8.57: Diagnostic général des résidus simulés du modèle Gamma (après suppression d’environ 620 valeurs aberrantes)\n\n\n\nLa figure 8.57 indique que les résidus simulés ne suivent toujours pas une distribution uniforme et qu’il existe une relation prononcée (panneau de droite) entre les résidus et les valeurs prédites. Cette dernière laisse penser que des variables indépendantes importantes ont été omises dans le modèle, ce qui n’est pas surprenant compte tenu du fait que nous ne disposons d’aucune donnée socioéconomique sur les individus ayant réalisé les trajets. Nos données sont également potentiellement affectées par la présence de dépendance spatiale.\nNous pouvons comparer graphiquement la variance observée dans les données et la variance attendue par le modèle. La figure 8.58 montre clairement que la variance des données tend à être plus grande qu’attendu quand les temps de trajet sont courts, mais diminue trop vite quand les temps de trajet augmentent. D’autres distributions pourraient être envisagées pour ajuster notre modèle : Lognormal, Weibull, etc.\n\n# Extraction des prédictions du modèle\nmus &lt;- predict(modele, type = \"response\")[,1]\n# Création d'un DataFrame pour contenir la prédiction et les vraies valeurs\ndf1 &lt;- data.frame(\n  mus = mus,\n  reals = dataset3$Duree\n)\n# Calcul de l'intervalle de confiance à 95 % selon la distribution Gamma\n# et stockage dans un second DataFrame\nseqa &lt;- seq(10,120,10)\nshape &lt;- exp(modele@coefficients[[2]])\ndf2 &lt;- data.frame(\n  mus = seqa,\n  lower = qgamma(p = 0.025, shape = shape, scale = seqa/shape),\n  upper = qgamma(p = 0.975, shape = shape, scale = seqa/shape)\n)\n# Affichage des valeurs réelles et prédites (en rouge)\n# et de leur variance selon le modèle (en noir)\nggplot() + \n  geom_point(data = df1, \n             mapping = aes(x = mus, y = reals),\n             color =rgb(0.9,0.22,0.27,0.4), size = 0.5) + \n  geom_errorbar(data = df2,\n                mapping = aes(x = mus, ymin = lower, ymax = upper),\n                width = 0.2, color = rgb(0.4,0.4,0.4)) + \n  labs(x = \"valeurs prédites\",\n       y = \"valeurs réelles\")\n\n\n\nFigure 8.58: Comparaison de la variance attendue par le modèle et la variance observée dans les données pour le modèle Gamma\n\n\n\nÀ ce stade, nous disposons de suffisamment d’éléments pour douter des résultats du modèle. Nous poursuivons tout de même notre analyse afin d’illustrer l’estimation de la qualité d’ajustement d’un tel modèle et son interprétation.\nAnalyse de la qualité d’ajustement\n\n# Ajustement d'un modèle nul\nmodele.null &lt;- vglm(Duree ~1,\n               data = dataset3,\n               model = TRUE,\n               family = gamma2)\n# Calcul des pseudos R2\nrsqs(loglike.full = logLik(modele),\n     loglike.null = logLik(modele.null),\n     full.deviance = logLik(modele) * -2,\n     null.deviance = logLik(modele.null) * -2,\n     nb.params = modele2@rank,\n     n = nrow(dataset3)\n     )\n\n$`deviance expliquee`\n[1] 0.05054679\n\n$`McFadden ajuste`\n[1] 0.05009929\n\n$`Cox and Snell`\n[1] 0.3322684\n\n$Nagelkerke\n[1] 0.332381\n\n# Calcul du RMSE\npreds &lt;- predict(modele, type = \"response\")[,1]\nsqrt(mean((preds - dataset3$Duree)**2))\n\n[1] 13.37362\n\n\nLe modèle n’explique que 5 % de la déviance et obtient des valeurs de R2 ajusté de McFadden, de Cox et Snell et de Nagelkerke de respectivement 0,05, 0,33 et 0,33. La moyenne de l’erreur quadratique est de seulement 13,4 indiquant que le modèle se trompe en moyenne de seulement 13,4 minutes. La capacité de prédiction du modèle est donc limitée sans être catastrophique.\nInterprétation des résultats\nPour rappel, la fonction de lien dans notre modèle est la fonction log. Chaque coefficient représente donc l’effet de l’augmentation d’une unité des variables indépendantes sur le logarithme de l’espérance de notre variable dépendante. Si nous transformons nos coefficients avec la fonction exponentielle (exp), nous obtenons, pour chaque augmentation d’une unité des variables indépendantes, la multiplication de l’espérance de notre variable dépendante.\nPuisque nos trajets peuvent provenir de nombreux arrondissements, nous proposons de représenter l’exponentiel de leurs coefficients avec un graphique. Nous pouvons d’ailleurs comparer les exponentiels des coefficients et les effets marginaux pour simplifier l’interprétation.\n\n# Extraction des coefficient du modèle\ncoeffs &lt;- modele@coefficients\n# Calcul des interval de confiance des coefficients\nconf &lt;- confint(modele)\n# Passage en exponentiel\ndf &lt;- exp(cbind(coeffs, conf))\n# Extraction des coefficients pour les arrondissements\ndfArrond &lt;- data.frame(df[grepl(\"ArrondDep\", row.names(df), fixed = TRUE),])\nnames(dfArrond) &lt;- c(\"coeff\", \"lower\" , \"upper\")\ndfArrond$Arrondissement &lt;- gsub(\"ArrondDep\" , \"\", rownames(dfArrond), fixed = TRUE)\n# Graphique des exponentiels des coefficients\nP1 &lt;- ggplot(data = dfArrond) + \n  geom_vline(xintercept = 1, color = \"red\")+\n  geom_errorbarh(aes(y = reorder(Arrondissement, coeff), xmin = upper, xmax = lower),\n                 height = 0)+\n  geom_point(aes(y = reorder(Arrondissement, coeff), x = coeff)) + \n  geom_text(aes(x = upper, y = reorder(Arrondissement, coeff),\n                label = paste(\"coeff. : \", round(coeff,2), sep = \"\")),\n                size = 3, nudge_x = 0.07)+\n  labs(x = \"Coefficient multiplicateur (ref : Ahuntsic-Cartierville)\",\n       y = \"\",\n       subtitle = \"Exponentiels des coefficients du modèle\")+\n  xlim(c(0.75,1.46))\n# Création d'un DataFrame fictif pour les effets marginaux\ndfpred &lt;- expand.grid(\n  LogDist = mean(dataset3$LogDist),\n  Motif = 'education',\n  HeureDep = '7',\n  MemeArrond = 'Different',\n  ArrondDep = unique(dataset3$ArrondDep),\n  Mode = 'pieton','velo','transport collectif',\n  Semaine = 'lundi au vendredi'\n)\n# Utiliser le modèle pour effectuer des prédictions (échelle log)\nlin_pred &lt;- predict(modele, dfpred, se = TRUE)\nmu_lin_pred &lt;- lin_pred$fitted.values[,1]\nse_lin_pred &lt;- lin_pred$se.fit[,1]\ndfpred2 &lt;- data.frame(\n  pred = exp(mu_lin_pred),\n  lower = exp(mu_lin_pred- 1.96*se_lin_pred),\n  upper = exp(mu_lin_pred+ 1.96*se_lin_pred)\n)\ndfpred2 &lt;- cbind(dfpred2, dfpred)\n# Réaliser le graphique des effets marginaux\nP2 &lt;- ggplot(data = dfpred2) + \n  geom_col(aes(x = pred, y = ArrondDep)) + \n  geom_errorbarh(aes(xmin = lower, xmax = upper, y = ArrondDep)) + \n  labs(x = \"Temps de déplacement prédit\", y = \"\",\n       subtitle = \"Prédiction du modèle\")\nggarrange(P1, P2, ncol = 1, nrow = 2)\n\n\n\nFigure 8.59: Effet de l’arrondissement de départ sur les temps de trajet à Montréal”,\n\n\n\nLa figure 8.59 permet de constater que les arrondissements Ville-Marie et Plateau-Mont-Royal se distinguent avec des trajets plus courts (environ 20 % plus courts en moyenne que les trajets partant d’Ahuntsic-Cartierville). À l’inverse, Lachine est de loin l’arrondissement avec les trajets les plus longs (25 % plus longs en moyenne que les trajets partant d’Ahuntsic-Cartierville).\nNous appliquons la même méthode de visualisation à la variable Heure de départ des trajets.\n\n# Extraction des valeurs pour les heures de départ\ndfHeures &lt;- data.frame(df[grepl(\"HeureDep\", row.names(df), fixed = TRUE),])\nnames(dfHeures) &lt;- c(\"coeff\", \"lower\" , \"upper\")\ndfHeures$Heure &lt;- gsub(\"HeureDep\" , \"\", rownames(dfHeures), fixed = TRUE)\n# Rajouter des 0 et des h pour de jolies légendes\ndfHeures$Heure &lt;- paste(dfHeures$Heure,\"h\", sep=\" \")\n\n# Afficher le graphique\nggplot(data = dfHeures) + \n  geom_hline(yintercept = 1, color = \"red\")+\n  geom_errorbar(aes(x = Heure, ymin = upper, ymax = lower), width = 0)+\n  geom_point(aes(x = Heure, y = coeff)) + \n  geom_text(aes(y = upper, x = Heure, label = round(coeff,2)), size = 3, nudge_y = 0.07)+\n  labs(x = \"Coefficient multiplicateur (ref : 7 h)\",\n       y = \"\")\n\n\n\nFigure 8.60: Effet de l’heure de départ sur les temps de trajet à Montréal”\n\n\n\nNous pouvons ainsi observer, à la figure 8.60, que les trajets effectués à 10 h, 11 h et 12 h sont les plus longs de la journée, entre 30 et 40 % plus longs que ceux effectués à 7 h et 8 h qui constituent les trajets les plus courts.\nLe reste des coefficients (ainsi que le paramètre de forme) sont affichés dans le tableau 8.35. Comparativement à un trajet effectué à pied, un trajet en transport en commun dure en moyenne 52 % plus longtemps (1,53 fois plus long), alors que les déplacements en véhicule individuel et en vélo sont respectivement 28 % et 23 % moins longs. Aucune différence n’est observable entre les déplacements effectués en semaine ou pendant la fin de semaine.\n\n\n\n\nTableau 8.35: Résultats pour le modèle GLM Gamma\n\n\n\n\n\n\n\n\n\n\nVariable\nCoeff.\nExp(Coeff.)\nVal.p\nIC 2,5 % exp(Coeff.)\nIC 97,5 % exp(Coeff.)\nSign.\n\n\n\nConstante\n2,925\n18,626\n0,000\n14,910\n23,266\n***\n\n\nMode\n\n\n\n\n\n\n\n\nref : pieton\n–\n–\n–\n–\n–\n–\n\n\ntransport collectif\n0,426\n1,531\n0,000\n1,493\n1,570\n***\n\n\nvehicule individuel\n-0,316\n0,729\n0,000\n0,711\n0,748\n***\n\n\nvelo\n-0,260\n0,771\n0,000\n0,752\n0,791\n***\n\n\nMotif\n\n\n\n\n\n\n\n\nref : education\n–\n–\n–\n–\n–\n–\n\n\nloisir\n-0,011\n0,989\n0,509\n0,956\n1,022\n\n\n\nmagasinage\n-0,111\n0,895\n0,000\n0,865\n0,927\n***\n\n\ntravail\n-0,063\n0,939\n0,000\n0,911\n0,968\n***\n\n\nLogDist\n0,332\n1,393\n0,000\n1,379\n1,408\n***\n\n\nMemeArrond\n\n\n\n\n\n\n\n\nref : Different\n–\n–\n–\n–\n–\n–\n\n\nMeme\n-0,041\n0,960\n0,000\n0,939\n0,980\n***\n\n\nSemaine\n\n\n\n\n\n\n\n\nref : lundi au vendredi\n–\n–\n–\n–\n–\n–\n\n\nsamedi et dimanche\n0,001\n1,001\n0,931\n0,980\n1,022\n\n\n\n\n\n\n\n\n\n\n\n\nshape\n1,145\n3,141\n0,000\n3,086\n3,196\n***\n\n\n\n\n\n\nLes déplacements ayant comme motif le magasinage et le travail ont tendance à être en moyenne plus courts de 11 % et 6 % respectivement, comparativement aux déplacements effectués pour l’éducation ou le loisir (différence non significative entre loisir et éducation). Sans surprise, la distance entre le point de départ et d’arrivée du trajet (LogDist) affecte sa durée de façon positive. Considérant qu’il est difficile d’interpréter des log de kilomètre (dû à une transformation de la variable originale), nous représentons l’effet de cette variable avec la prédiction du modèle à la figure. Nous utilisons pour cela le cas suivant: déplacement à pied à 7 h en semaine, ayant pour motif éducation, dont le point de départ se situe dans l’arrondissement Ahuntsic et donc le point d’arrivée est dans un autre arrondissement. Seule la distance du trajet varie de 1 à 40 km. À titre de comparaison, nous représentons aussi, pour les mêmes conditions, le cas d’une personne à vélo (en vert) et d’une personne utilisant le transport en commun (en bleu). Les lignes en pointillés représentent les intervalles de confiance à 95 % des prédictions (figure 8.61).\n\n# Création d'un DataFrame fictif pour la prédiction\ndfpred &lt;- expand.grid(\n  Dist = seq(1,40, 0.5),\n  Motif = 'education',\n  HeureDep = '7',\n  MemeArrond = 'Different',\n  ArrondDep = 'Ahuntsic-Cartierville',\n  Mode = c('pieton','velo','transport collectif'),\n  Semaine = 'lundi au vendredi'\n)\n# Mise en log de la variable de distance\ndfpred$LogDist &lt;- log(dfpred$Dist)\n# Calcul des prédictions et de leur erreur standard (échelle log)\nlin_pred &lt;- predict(modele, dfpred, se = TRUE)\n# Calcul des intervalles de confiance et mise en exponentielle des prédictions\ndfpred$pred &lt;- exp(lin_pred$fitted.values[,1])\ndfpred$lower &lt;- exp(lin_pred$fitted.values[,1] -1.96*lin_pred$se.fit[,1])\ndfpred$upper &lt;- exp(lin_pred$fitted.values[,1] +1.96*lin_pred$se.fit[,1])\n# Ajoutons les accents pour le graphiques\ndfpred$Mode &lt;- as.character(dfpred$Mode)\ndfpred$Mode2 &lt;- case_when(dfpred$Mode == \"pieton\" ~ \"piéton\",\n                         dfpred$Mode == \"velo\" ~ \"vélo\",\n                         TRUE ~ dfpred$Mode)\n# Affichage des résultats\nggplot(data = dfpred) + \n  geom_path(aes(x = Dist, y = lower, color = Mode2), linetype = \"dashed\")+\n  geom_path(aes(x = Dist, y = upper, color = Mode2), linetype = \"dashed\")+\n  geom_path(aes(x = Dist, y = pred, color = Mode2), size = 1) + \n  labs(y = \"temps de trajet prédit (minutes)\",\n       x = \"distance à vol d'oiseau (km)\")\n\n\n\nFigure 8.61: Effet de la distance à vol d’oiseau sur les temps de trajet à Montréal\n\n\n\n\n8.4.4 Modèle GLM avec une distribution bêta\nPour rappel, la distribution bêta est une distribution définie sur l’intervalle \\([0,1]\\), elle est donc particulièrement utile pour décrire des proportions, des pourcentages ou des probabilités. Dans la section 2.4.3.16 sur les distributions, nous avons présenté la paramétrisation classique de la distribution avec les paramètres \\(a\\) et \\(b\\) étant tous les deux des paramètres de forme. Ces deux paramètres n’ont pas d’interprétation pratique, mais il est possible (comme pour la distribution Gamma) de reparamétrer la distribution bêta avec un paramètre de centralité (espérance) et de dispersion.\nNotez également que si la distribution bêta autorise la présence de 0 et de 1, le modèle GLM utilisant cette distribution doit les exclure des valeurs possibles s’il utilise la fonction de lien logistique. En effet, cette fonction à la forme suivante :\n\\[\nlogit(x) = log(\\frac{x}{1-x})\\\\\n\\tag{8.24}\\]\nNous pouvons constater que si \\(x = 1\\), alors le dénominateur de la fraction est 0, or il est impossible de diviser par 0. Si \\(x = 0\\), alors nous obtenons \\(log(0)\\) ce qui est également impossible au plan mathématique.\nDans le cas de figure où des 0 et/ou des 1 sont présents dans les données, quatre options sont possibles pour contourner le problème :\n\nSi les observations à 0 ou 1 sont très peu nombreuses, il est envisageable de les retirer des données.\nSi la variable mesurée le permet, il est possible de remplacer les 0 et les 1 par des valeurs très proches (0,0001 et 0,9999 par exemple) sans dénaturer excessivement les données initiales.\nPlutôt que d’utiliser une valeur arbitraire, Smithson et Verkuilen (2006) recommandent de recalculer la variable \\(Y \\in [0;1]\\) avec la formule équation 8.25;\nEmployer un modèle Hurdle à trois équations, la première prédisant la probabilité d’observer \\(Y &gt; 0\\), la seconde, la probabilité d’observer \\(Y = 1\\) et la dernière prédisant les valeurs de Y pour \\(0&gt;Y&gt;1\\).\n\n\\[\nY' = \\frac{Y(N-1)+s}{N}\n\\tag{8.25}\\]\nAvec N le nombre d’observations, Y’ la variable Y transformée et s une constante. Plus cette dernière est élevée, plus la variable Y’ a des valeurs éloignées de 0 et 1. la valeur de 0,5 est recommandée par les auteurs.\n\n\n\n\n\nReparamétrisation de la distribution bêta\n\n\nPour une distribution bêta telle que définie par \\(Y \\sim Beta(a,b)\\), l’espérance de cette distribution et sa variance sont données par :\n\\[\n\\begin{aligned}\n&E(Y) = \\frac{a}{a+b} \\\\\n&Var(Y) = \\frac{a \\times b}{(a+b)^2(a+b+1)}\\\\\n\\end{aligned}\n\\tag{8.26}\\]\nPour reparamétrer cette distribution, nous définissons un nouveau paramètre \\(\\phi\\) (phi) tel que:\n\\[\n\\begin{aligned}\n&a = \\phi * E(Y) \\\\\n&b = \\phi - a \\\\\n&Var(Y) = \\frac{E(Y) \\times (1-E(Y))}{1+\\phi}\n\\end{aligned}\n\\tag{8.27}\\]\nDe cette manière, il est possible d’exprimer la distribution bêta en fonction de son espérance (sa valeur attendue, ce qui s’interprète approximativement comme une moyenne) et d’un paramètre \\(\\phi\\) intervenant dans le calcul de sa variance. Vous noterez d’ailleurs que la variance de cette distribution dépend de sa moyenne, impliquant à nouveau une hétéroscédasticité intrinsèque.\n\n\nPour résumer, nous nous retrouvons donc avec un modèle qui prédit l’espérance d’une distribution bêta avec une fonction de lien logistique. La variance de cette distribution est fonction de cette moyenne et d’un second paramètre \\(\\phi\\). Ces informations sont résumées dans la fiche d’identité du modèle (tableau 8.36).\n\n\n\n\nTableau 8.36: Carte d’identité du modèle bêta\n\n\n\n\n\n\nType de variable dépendante\nVariable continue dans l’intervalle \\(]0,1[\\)\n\n\n\nDistribution utilisée\nStudent\n\n\nFormulation\n\n\\(Y \\sim Beta(\\mu,\\phi)\\) \\(g(\\mu) = \\beta_0 + \\beta X\\) \\(g(x) = log(\\frac{x}{1-x})\\)\n\n\n\nFonction de lien\nlog\n\n\nParamètre modélisé\n\\(\\mu\\)\n\n\nParamètres à estimer\n\n\\(\\beta_0\\), \\(\\beta\\), et \\(\\phi\\)\n\n\n\nConditions d’application\n\\(Variance = \\frac{\\mu \\times (1-\\mu)}{1+\\phi}\\)\n\n\n\n\n\n\n\n8.4.4.1 Conditions d’application\nComme pour un modèle Gamma, la seule condition d’application spécifique à un modèle avec distribution bêta est que la variance des résidus suit la forme attendue par la distribution bêta.\n\n8.4.4.2 Interprétation des coefficients\nPuisque le modèle utilise la fonction de lien logistique, les exponentiels des coefficients \\(\\beta\\) du modèle peuvent être interprétés comme des rapports de cotes (voir la section 8.2.1 sur le modèle GLM binomial). Admettons ainsi que nous avons obtenu pour une variable indépendante \\(X_1\\) le coefficient \\(\\beta_1\\) de 0,12. Puisque le coefficient est positif, cela signifie qu’une augmentation de \\(X_1\\) conduit à une augmentation de l’espérance de Y. L’exponentiel de 0,12 est 1,13, ce qui signifie qu’une augmentation d’une unité de \\(X_1\\) multiplie par 1,13 (augmente de 13 %) les chances d’une augmentation de Y. Pour ce type de modèle, il est particulièrement important de calculer ses prédictions afin d’en faciliter l’interprétation.\n\n8.4.4.3 Exemple appliqué dans R\nAfin de présenter le modèle GLM avec une distribution bêta, nous utilisons un jeu de données que nous avons construit pour l’île de Montréal. Nous nous intéressons à la question des îlots de chaleur urbains au niveau des aires de diffusion (AD – entités spatiales du recensement canadien comprenant entre 400 et 700 habitants). Pour cela, nous avons calculé dans chaque AD le pourcentage de sa surface classifiée comme îlot de chaleur dans la carte des îlots de chaleur/fraicheur réalisée par l’INSPQ et le CERFO.\nLa question que nous nous posons est la suivante : les populations vulnérables socioéconomiquement et/ou physiologiquement sont-elles systématiquement plus exposées à la nuisance que représentent les îlots de chaleur? Cette question se rattache donc au champ de la recherche sur l’équité environnementale. Plusieurs études se sont d’ailleurs déjà penchées sur la question des îlots de chaleur abordée sous l’angle de l’équité environnementale (Harlan et al. 2007; Sanchez et Reames 2019; Huang, Zhou et Cadenasso 2011). Nous modélisons donc pour chaque AD (n = 3 158) de l’île de Montréal la proportion de sa surface couverte par des îlots de chaleur. Nos variables indépendantes sont divisées en deux catégories : variables environnementales et variables socio-économiques. Les premières sont des variables de contrôle, il s’agit de la densité de végétation dans l’AD (ajoutée avec une polynomiale d’ordre deux) et de l’arrondissement dans lequel elle se situe. Ces deux paramètres affectent directement les chances d’observer des îlots de chaleur, mais nous souhaitons isoler leurs effets (toutes choses étant égales par ailleurs) de ceux des variables socio-économiques. Ces dernières ont pour objectif de cibler les populations vulnérables sur le plan physiologique (personnes âgées et enfants de moins de 14 ans) ou socio-économique (minorités visibles et faible revenu). L’ensemble de ces variables sont présentées dans le tableau 8.37. Notez que, puisque le modèle avec distribution bêta ne peut pas prendre en compte des valeurs exactes de 1 ou 0, nous les avons remplacées respectivement par 0,99 et 0,01. Cette légère modification n’altère que marginalement les données, surtout si nous considérons qu’elles sont agrégées au niveau des AD et proviennent originalement d’imagerie satellitaire.\n\n\n\n\nTableau 8.37: Variables indépendantes utilisées dans le modèle bêta\n\n\n\n\n\n\n\nNom de la variable\nSignification\nType de variable\nMesure\n\n\n\nA65PlusPct\nPopulation de 65 ans et plus\nVariable continue\nPourcentage de la population ayant 65 ans et plus\n\n\nA014Pct\nPopulation de 14 ans et moins\nVariable continue\nPourcentage de la population ayant 14 ans et moins\n\n\nPopFRPct\nPopulation à faible revenu\nVariable continue\nPourcentage de la population à faible revenu\n\n\nPopMVPct\nMinorités visibles\nVariable continue\nPourcentage de la population faisant partie des minorités visibles\n\n\nVegPct\nVégétation\nVariable continue\nPourcentage de la surface de l’AD couverte par de la végétation\n\n\nArrond\nArrondissements\nVariable continue\nArrondissement de l’Île de Montréal\n\n\n\n\n\n\nVérification des conditions d’application\nSans surprise, nous commençons par charger nos données et nous nous assurons de l’absence de multicolinéarité excessive entre nos variables indépendantes.\n\n## Chargement des données\ndataset &lt;- read.csv(\"data/glm/data_chaleur.csv\", fileEncoding = \"utf8\")\n## Calcul des valeurs de vif\nvif(glm(hot ~\n          A65Pct + A014Pct + PopFRPct + PopMVPct +\n          poly(prt_veg, degree = 2)  + Arrond,\n        data = dataset))\n\n                              GVIF Df GVIF^(1/(2*Df))\nA65Pct                    1.609917  1        1.268825\nA014Pct                   2.206072  1        1.485285\nPopFRPct                  2.162036  1        1.470386\nPopMVPct                  2.370269  1        1.539568\npoly(prt_veg, degree = 2) 2.619552  2        1.272204\nArrond                    7.899208 32        1.032820\n\n\nLa seule variable semblant poser un problème de multicolinéarité est la variable Arrond. Cependant, du fait de sa nature multinomiale, elle regroupe en réalité 32 coefficients (voir la colonne Df). Il faut donc utiliser la règle habituelle de 5 sur le carré de la troisième colonne (GVIF^(1/(2*Df))) du tableau (Fox et Monette 1992), soit 1,032820^2 = 1,066717, ce qui est bien inférieur à la limite de 5. Nous n’avons donc pas de problème de multicolinéarité excessive. Nous pouvons passer au calcul des distances de Cook. Pour ajuster notre modèle, nous utilisons le package mgcv et la fonction gam avec le paramètre family = betar(link = \"logit\").\n\n# Ajustement d'une première version du modèle\nmodele &lt;- gam(hot ~\n                A65Pct + A014Pct + PopFRPct + PopMVPct +\n                poly(prt_veg, degree=2) + Arrond,\n              data = dataset, family = betar(link = \"logit\"))\n# Calcul des distances de Cook\ndf &lt;- data.frame(\n  cooksd = cooks.distance(modele),\n  oid = 1:nrow(dataset)\n)\n# Affichage des distances de Cook\nggplot(data = df)+\n  geom_point(aes(x = oid, y = cooksd),\n             color = rgb(0.4,0.4,0.4,0.4), size = 0.5)+\n  labs(x = \"\", y = \"Distance de Cook\")\n\n\n\nFigure 8.62: Distances de Cook pour le modèle GLM bêta\n\n\n\nNous pouvons observer à la figure 8.62 que seulement deux observations se distinguent très nettement des autres. Nous les isolons donc dans un premier temps.\n\ncas_etranges &lt;- subset(dataset, df$cooksd &gt;= 0.01)\nprint(cas_etranges[,23:ncol(cas_etranges)])\n\n     A014Pct A65Pct PopFRPct PopMVPct      Km2    HabKm2 Shape_Leng Shape_Area\n1666   11.78  26.77     6.38    11.65 6.458460   72.3083  21153.055  6458456.6\n2803   15.54  31.07    24.17    52.17 0.134013 5283.0879   1651.471   134012.5\n       prt_hot  prt_veg dist_cntr     Arrond  hot\n1666  1.824483 90.11691 29.181345 Senneville 0.02\n2803 40.117994 60.15745  4.178823  Westmount 0.40\n\n\nCes deux observations n’ont pas de points communs marqués, et ne semblent pas avoir de valeurs particulièrement fortes sur les différentes variables indépendantes ou la variable dépendante. Nous décidons donc de les supprimer et de recalculer les distances de Cook.\n\n# Suppression des deux observations très influentes\ndataset2 &lt;- subset(dataset, df$cooksd &lt; 0.01)\nmodele2 &lt;- gam(hot ~\n                A65Pct + A014Pct + PopFRPct + PopMVPct +\n                I(prt_veg**2) + prt_veg + Arrond,\n              data = dataset2, family = betar(link = \"logit\"), methode = \"REML\")\n# Calcul des distances de Cook\ndf2 &lt;- data.frame(\n  cooksd = cooks.distance(modele2),\n  oid = 1:nrow(dataset2)\n)\n# Affichage des distances de Cook\nggplot(data = df2)+\n  geom_point(aes(x = oid, y = cooksd),\n             color = rgb(0.4,0.4,0.4,0.4), size = 0.5)+\n  labs(x = \"\", y = \"Distance de Cook\")\n\n\n\nFigure 8.63: Distances de Cook pour le modèle GLM bêta (suppression de deux observations influentes)\n\n\n\nAprès réajustement, nous constatons à nouveau qu’une observation est extrêmement éloignée des autres (figure 8.63). Nous la retirons également, car cette différence est si forte qu’elle risque de polluer le modèle.\n\n# Suppression de l'observation très étonnante\ndataset3 &lt;- subset(dataset2, df2$cooksd&lt;max(df2$cooksd))\n# Réajustement du modèle\nmodele3 &lt;- gam(hot ~\n                A65Pct + A014Pct + PopFRPct + PopMVPct +\n                I(prt_veg**2) + prt_veg + Arrond,\n              data = dataset3, family = betar(link = \"logit\"), methode = \"REML\")\n# Calcul des distances de Cook\ndf3 &lt;- data.frame(\n  cooksd = cooks.distance(modele3),\n  oid = 1:nrow(dataset3)\n)\n# Affichage des distances de Cook\nggplot(data = df3)+\n  geom_point(aes(x = oid, y = cooksd),\n             color = rgb(0.4,0.4,0.4,0.4), size = 0.5)+\n  labs(x = \"\", y = \"Distance de Cook\")\n\n\n\nFigure 8.64: Distances de Cook pour le modèle GLM bêta (suppression de trois observations influentes)\n\n\n\nTout semble aller pour le mieux après ce second passage (figure 8.64). Si nous avions continué à observer des valeurs aussi influentes, nous aurions dû commencer à sérieusement questionner nos données ou notre modèle. La prochaine étape du diagnostic est donc l’analyse des résidus simulés.\n\n# Extraction de phi\nmodele3$family$family\n\n[1] \"Beta regression(14.612)\"\n\nphi &lt;- 14.612\n# Réalisation des simulations\nnsim &lt;- 1000\nmus &lt;- modele3$fitted.values\ncols &lt;- lapply(1:length(mus), function(i){\n  mu &lt;- mus[[i]]\n  p &lt;- mu * phi\n  q &lt;- (1-mu)*phi\n  sims &lt;- rbeta(n = nsim, shape1 = p, shape2 = q)\n  return(sims)\n})\nmat_sims &lt;- do.call(rbind, cols)\n# Calcul des résidus simulés\nsim_res &lt;- createDHARMa(simulatedResponse = mat_sims,\n                           observedResponse = dataset3$hot,\n                           fittedPredictedResponse = modele3$fitted.values,\n                           integerResponse = FALSE)\nplot(sim_res)\n\n\n\nFigure 8.65: Diagnostic général des résidus simulés du modèle bêta\n\n\n\nLa figure 8.65 indique que les résidus suivent bien une distribution uniforme. Le test des valeurs aberrantes n’est pas significatif au seuil de 0,01 (nous retenons ce seuil considérant le grand nombre de simulations et d’observations de notre jeu de données), nous décidons donc de ne pas supprimer davantage d’observations. Le panneau de droite indique une relation non linéaire instable, mais essentiellement centrée sur la ligne droite attendue. Pour plus de détails, nous calculons ces résidus simulés avec chacune des variables indépendantes.\n\n# Préparons un plot multiple\npar(mfrow=c(2,3))\nvars &lt;- c(\"A65Pct\", \"A014Pct\", \"PopFRPct\", \"PopMVPct\", \"prt_veg\")\nfor(v in vars){\n  plotResiduals(sim_res, dataset3[[v]], main = \"\", xlab = v)\n}\nplotResiduals(sim_res, dataset3[[\"prt_veg\"]]**2, xlab = \"prt_veg^2\", main = \"\")\n\n\n\n\n\nFigure 8.66: Relation entre chaque variable indépendante et les résidus simulés du modèle bêta\n\n\n\nLa figure 8.66 indique des relations marginales et négligeables entre nos variables indépendantes et nos résidus simulés. Concernant la variable Arrond (figure 8.67), nous observons une situation plus particulière. Pour quelques arrondissements, les résidus simulés sont nettement plus forts ou plus faibles. Notre hypothèse est que cet effet est provoqué par l’introduction de cette variable dans notre modèle comme un effet fixe alors que sa nature devrait nous inciter à l’introduire comme un effet aléatoire. Nous n’avons pas encore présenté ces concepts ici, mais nous le ferons dans le chapitre 9. En attendant, nous conservons le modèle tel quel et passons à l’analyse de sa qualité d’ajustement.\n\ndf &lt;- data.frame(\n  resid = residuals(sim_res),\n  Arrond = dataset3$Arrond\n)\nggplot(data = df) + \n  geom_boxplot(aes(x = Arrond, y = resid))+\n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank()\n        )+\n  labs(x = \"Arrondissements\", y = \"Résidus simulés\")\n\n\n\nFigure 8.67: Relation entre la variable Arrondissement et les résidus simulés du modèle bêta\n\n\n\nAnalyse de la qualité d’ajustement\nDans un premier temps, nous comparons la distribution originale des données à des simulations issues du modèle.\n\n# Extraction de 20 simulations\ndf2 &lt;- data.frame(mat_sims[,1:20])\ndf3 &lt;- reshape2::melt(df2)\nggplot() +\n  geom_histogram(aes(x = hot, y = ..density..),\n                 data = dataset3, bins = 100, color = \"black\", fill = \"white\") +\n  geom_density(aes(x = value, y = ..density.., group = variable), data = df3,\n               fill = rgb(0,0,0,0), color = rgb(0.2,0.2,0.2,0.3), size = 1) + \n  labs(x = \"résidus simulés\", y = \"densité\")\n\n\n\nFigure 8.68: Comparaison entre la distribution originale et les simulations issues du modèle\n\n\n\nNous constatons à la figure 8.68 que le modèle est parvenu à reproduire la forme générale de la distribution originale : un plus grand nombre de valeurs proches de zéro, suivies d’une répartition presque homogène dans les valeurs comprises entre 0,15 et 0,8, suivies par un plus faible nombre de valeurs quand Y est supérieur à 0,8. Il semble en revanche manquer un certain nombre de valeurs extrêmes proches de 0 (absence d’îlot de chaleur) et proches de 1 (couverture à 100 % par des îlots de chaleur).\n\n# Calcul des pseudo R2\nrsqs(loglike.full = modele3$deviance/-2,\n     loglike.null = modele3$null.deviance/-2,\n     full.deviance = modele3$deviance,\n     null.deviance = modele3$null.deviance,\n     nb.params = modele3$rank,\n     n = nrow(dataset3))\n\n$`deviance expliquee`\n[1] 0.9017396\n\n$`McFadden ajuste`\n[1] 0.8992329\n\n$`Cox and Snell`\n[1] 0.999828\n\n$Nagelkerke\n[1] 0.9998949\n\n# Calcul du RMSE\nsqrt(mean((modele3$fitted.values - modele3$y)**2))\n\n[1] 0.1025719\n\n\nLe modèle parvient à expliquer 90 % de la déviance totale et obtient des pseudo-R2 très élevés. Il obtient cependant un RMSE de 0,10 soit une erreur quadratique moyenne de 10 % dans la prédiction, ce qui est tout de même important. Le modèle ne semble pas souffrir particulièrement de sur-ajustement comme les pseudo-R2 auraient pu nous le laisser penser.\nL’ensemble des coefficients du modèle sont accessibles via la fonction summary. Pour rappel, il est nécessaire de les convertir avec la fonction exponentielle pour pouvoir les interpréter en termes de rapport de cotes. À nouveau, nous proposons de construire dans un premier temps une figure pour observer l’effet des arrondissements.\n\n# Identifier les coefficients pour les arrondissements\ntest &lt;- grepl(\"Arrond\", names(modele3$coefficients), fixed = TRUE)\n# Extraire les coefficients et les erreurs standards\ncoeffs &lt;- modele3$coefficients[test]\nerr.std &lt;- summary(modele3)$se[test]\n# Créer un DataFrame avec les rapports de cote et les intervalles de confiance\ndf &lt;- data.frame(\n  Arrond = gsub(\"Arrond\" , \"\", names(coeffs), fixed = TRUE),\n  coeffs = coeffs,\n  err.std = err.std,\n  RC = exp(coeffs),\n  lowerRC = exp(coeffs-1.96*err.std),\n  upperRC = exp(coeffs+1.96*err.std)\n)\n# Retrouver l'arrondissement de référence\nallArrond &lt;- unique(dataset3$Arrond)\nrefArrond &lt;- setdiff(allArrond, df$Arrond)\n# Créer le graphique\nggplot(data = df) + \n  geom_errorbarh(aes(xmin = lowerRC, xmax = upperRC, y = reorder(Arrond,RC)))+\n  geom_point(aes(x = RC, y = reorder(Arrond,RC)))+\n  geom_vline(xintercept = 1, color = \"red\")+\n  geom_text(aes(x = upperRC, y = reorder(Arrond, RC), \n                label = paste(\"RC : \", round(RC,2), sep = \"\")), size = 3, nudge_x = 0.3)+\n  labs(x = paste(\"Rapport de cote (rouge : \", refArrond,')', sep=''),\n       y = \"Arrondissement\")\n\n\n\nFigure 8.69: Rapports de cote pour les arrondissements dans le modèle bêta\n\n\n\nNous constatons ainsi que seuls quelques arrondissements ont une différence d’exposition aux îlots de chaleur significative au seuil de 0,05 comparativement à Ahuntsic-Cartierville (figure 8.69). Pour l’essentiel, il s’agit d’arrondissements pour lesquels nous observons des rapports de cotes supérieurs à 1. Verdun, Lasalle et le Plateau-Mont-Royal sont les arrondissements les plus touchés avec des chances d’observer des niveaux supérieurs de densité d’îlots de chaleur multipliés par 3,19, 2,89 et 2,74. Le reste des coefficients sont affichés dans le tableau 8.38.\nNous notons ainsi que le seul groupe associé avec une augmentation significative des chances d’observer une augmentation de la densité d’îlot de chaleur est le groupe des personnes à faible revenu (1,4 % de chance supplémentaire à chaque augmentation d’un point de pourcentage de la variable indépendante). Pour mieux cerner la taille de cet effet, nous représentons l’effet marginal de ce coefficient en maintenant toutes les autres variables à leur moyenne. Nous calculons également ces effets marginaux pour trois arrondissements différents : Verdun (RC le plus fort), Ahuntsic-Cartierville (la référence) et Dollard-des-Ormeaux (RC le plus faible). Nous réalisons également un second graphique pour visualiser l’effet non linéaire de la variable pourcentage de végétation. La figure 8.70 nous indique ainsi que le rôle de l’arrondissement est plus important que celui du pourcentage de personnes à faible revenu. Cependant, nous constatons que passer de 0 % de personnes à faible revenu dans une AD à 75 % est associé avec une multiplication de la surface couverte par des îlots de chaleur par environ 1,5 (toutes choses égales par ailleurs). Le rôle de la végétation dans la réduction de la surface des îlots de chaleur est très net et non linéaire. L’essentiel de la réduction est observé entre 0 et 50 % de végétation dans une AD, au-delà de ce seuil, la réduction des îlots de chaleur par la végétation est moins flagrante. Il semblerait donc exister à Montréal une forme d’iniquité systématique pour les populations à faible revenu, qui seraient davantage exposées aux îlots de chaleur. Cependant, compte tenu de la dépendance spatiale et de l’hétéroscésadicité observées plus haut, des ajustements devraient être apportés au modèle pour confirmer ou infirmer ce résultat.\n\n\n\n\nTableau 8.38: Résultats pour le modèle GLM bêta\n\nVariable\nCoeff.\nRC\nVal.p\nIC 2,5 % RC\nIC 97,5 % RC\nSign.\n\n\n\nConstante\n3,468\n32,059\n0,000\n25,636\n40,085\n***\n\n\nA65Pct\n-0,002\n0,998\n0,243\n0,996\n1,001\n\n\n\nA014Pct\n-0,006\n0,994\n0,035\n0,988\n1,000\n*\n\n\nPopFRPct\n0,013\n1,014\n0,000\n1,011\n1,016\n***\n\n\nPopMVPct\n-0,003\n0,997\n0,000\n0,995\n0,998\n***\n\n\nprt_veg\n-0,137\n0,872\n0,000\n0,865\n0,879\n***\n\n\n\n\n\n\n\n# Créer un DataFrame pour la prédiction\ndf &lt;- expand.grid(\n  A65Pct = mean(dataset3$A65Pct),\n  A014Pct = mean(dataset3$A014Pct),\n  PopFRPct = seq(0,75, 1),\n  PopMVPct = mean(dataset3$PopMVPct),\n  prt_veg = mean(dataset3$prt_veg),\n  Arrond = c(\"Verdun\",'Ahuntsic-Cartierville','Dollard-des-Ormeaux')\n)\n# Effectuer les prédictions sur l'échelle log\npred &lt;- predict(modele3, df, se=T, type = \"link\")\n# Calculer les prédictions et leurs intervalles de confiance\nilink &lt;- modele3$family$linkinv\ndf$pred &lt;- ilink(pred$fit)\ndf$lower &lt;- ilink(pred$fit - 1.96* pred$se.fit)\ndf$upper &lt;- ilink(pred$fit + 1.96* pred$se.fit)\n# Afficher le résultat\nP1 &lt;- ggplot(data = df)+\n  geom_path(aes(x = PopFRPct, y = pred, color = Arrond), size =1) + \n  geom_path(aes(x = PopFRPct, y = lower, color = Arrond), linetype = \"dashed\") +\n  geom_path(aes(x = PopFRPct, y = upper, color = Arrond), linetype = \"dashed\")+\n  labs(x = \"Personnes à faible revenu (%)\", \n       y = \"Surface de l'AD couverte par des îlots de chaleur (%)\",\n       color = 'Arrondissement')+\n  ylim(0,1)\n# Pour la végétation\ndf2 &lt;- expand.grid(\n  A65Pct = mean(dataset3$A65Pct),\n  A014Pct = mean(dataset3$A014Pct),\n  PopFRPct = mean(dataset3$PopFRPct),\n  PopMVPct = mean(dataset3$PopMVPct),\n  prt_veg = seq(0,95,1),\n  Arrond = c(\"Verdun\",'Ahuntsic-Cartierville','Dollard-des-Ormeaux')\n)\n# Effectuer les prédiction sur l'échelle log\npred2 &lt;- predict(modele3, df2, se=T, type = \"link\")\n# Calculer les prédictions et leurs intervalles de confiance\ndf2$pred &lt;- ilink(pred2$fit)\ndf2$lower &lt;- ilink(pred2$fit - 1.96* pred2$se.fit)\ndf2$upper &lt;- ilink(pred2$fit + 1.96* pred2$se.fit)\n# Afficher le résultat\nP2 &lt;- ggplot(data = df2)+\n  geom_path(aes(x = prt_veg, y = pred, color = Arrond), size =1) + \n  geom_path(aes(x = prt_veg, y = lower, color = Arrond), linetype = \"dashed\") +\n  geom_path(aes(x = prt_veg, y = upper, color = Arrond), linetype = \"dashed\")+\n  labs(x = \"Couverture végétale (%)\", y = \"\", color = \"Arrondissement\")+\n  ylim(0,1)\nggarrange(P1, P2, common.legend = T)\n\n\n\nFigure 8.70: Effets marginaux des variables pourcentage de personnes à faible revenu et densité de végétation"
  },
  {
    "objectID": "08-GLM.html#sec-085",
    "href": "08-GLM.html#sec-085",
    "title": "8  Régressions linéaires généralisées (GLM)",
    "section": "\n8.5 Conclusion sur les modèles linéaires généralisés",
    "text": "8.5 Conclusion sur les modèles linéaires généralisés\nComme vous avez dû le remarquer, les modèles linéaires généralisés constituent un monde à part entière et tout un livre pourrait être rédigé à leur sujet. Leur grande flexibilité les rend extrêmement utiles dans de nombreux contextes, mais complique leur mise en œuvre, chaque modèle ayant ses propres spécificités théoriques. Ils partagent cependant tous une base commune : le choix d’une distribution et d’une fonction de lien. L’ensemble de leurs spécificités découle directement de ces deux choix.\nLa figure 8.71 résume les choix de modèles présentés au cours de ce chapitre pour des variables qualitatives, de comptage et continues. Notez bien qu’il ne s’agit que de la partie émergée de l’iceberg, car il existe de nombreuses autres distributions plus ou moins complexes (skew-normale, log-normal, beta-binomiale, Box-Cox, Gumbel etc.). D’autres pistes pourraient aussi être explorées pour aller plus loin avec les GLM, notamment les modèles Hurdle (combinant un modèle binomial et un modèle avec une distribution continue), les modèles tronqués ou censurés (tenant compte d’une limite nette dans la variable dépendante) ou encore les modèles distributionnels ajustant une équation de régression pour chaque paramètre de la distribution utilisée.\n\n\nFigure 8.71: Résumé graphique des principaux GLM abordés"
  },
  {
    "objectID": "08-GLM.html#sec-086",
    "href": "08-GLM.html#sec-086",
    "title": "8  Régressions linéaires généralisées (GLM)",
    "section": "\n8.6 Quiz de révision du chapitre",
    "text": "8.6 Quiz de révision du chapitre\n\n\n\n\n\nContrairement à un modèle LM, un GLM permet de choisir :\n\n\nRelisez au besoin la section 8.1.\n\n\n\n\n\n\nla distribution conditionnelle de la variable Y\n\n\n\n\n\n\n\nune fonction de lien appliquée aux coefficients du modèle\n\n\n\n\n\n\n\nune fonction de lien appliquée à l’équation de régression du modèle\n\n\n\n\n\n\n\nla distribution à priori de la variable Y\n\n\n\n\n\n\n\nla distribution des résidus du modèle\n\n\n\n\n\n\n\n\n\n\nLa fonction de lien est utilisée pour transformer :\n\n\nRelisez au besoin la section 8.1.2\n\n\n\n\n\n\nles paramètres d’un modèle et les rendre plus interprétables\n\n\n\n\n\n\n\nle résultat de l’équation d’un modèle pour le contraindre à un intervalle de valeurs cohérent avec le paramètre de la distribution modélisée\n\n\n\n\n\n\n\nle résultat de l’équation d’un modèle pour obtenir un effet multiplicatif plutôt qu’additif des coefficients\n\n\n\n\n\n\n\nla variable Y pour qu’elle suive une distribution normale\n\n\n\n\n\n\n\n\n\n\nUn modèle GLM est ajusté par la méthode des moindres carrés.\n\n\nRelisez au besoin la section 8.1.1.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\n\nDans un modèle GLM la vraisemblance (likelihood) est :\n\n\nRelisez au besoin la section 11.3.\n\n\n\n\n\n\nle produit des probabilités d’observer chacune des observations selon le modèle\n\n\n\n\n\n\n\nla somme des résidus du modèle\n\n\n\n\n\n\n\nun test de significativité du modèle\n\n\n\n\n\n\n\nimpossible à calculer en pratique, nous lui préférons le log-likelihood\n\n\n\n\n\n\n\n\n\n\nIdéalement, les résidus simulés d’un modèle GLM devraient :\n\n\nRelisez au besoin la section 8.1.4.\n\n\n\n\n\n\nsuivre une distribution normale\n\n\n\n\n\n\n\nne suivre aucune distribution particulière\n\n\n\n\n\n\n\nsuivre une distribution uniforme\n\n\n\n\n\n\n\nêtre corrélés avec la variable Y\n\n\n\n\n\n\n\n\n\n\nL’AIC\n\n\nRelisez au besoin la section 8.1.5.\n\n\n\n\n\n\nmesure la qualité d’ajustement d’un modèle\n\n\n\n\n\n\n\ntient compte du nombre de paramètres dans un modèle\n\n\n\n\n\n\n\nmesure le niveau de significativité des coefficients d’un modèle\n\n\n\n\n\n\n\npénalise les modèles avec un plus petit nombre de paramètres\n\n\n\n\n\n\n\ntient compte du nombre d’observations dans le modèle\n\n\n\n\n\n\n\n\n\n\nPour un modèle utilisant une distribution binomiale, le paramètre modélisé par l’équation de régression est :\n\n\nRelisez au besoin la section 8.2.1.\n\n\n\n\n\n\nmu, la moyenne de y\n\n\n\n\n\n\n\nlambda, le nombre d’occurrences attendu pour y\n\n\n\n\n\n\n\nsigma, la variance de y\n\n\n\n\n\n\n\np, la probabilité d’observer y = 1\n\n\n\n\n\n\n\n\n\n\nSi la fonction de lien logistique est utilisée dans un modèle binomial, comment peuvent être interprétés les coefficients?\n\n\nRelisez au besoin la section 8.2.1.\n\n\n\n\n\n\nEn appliquant la fonction log aux coefficients, nous obtenons l’effet linéaire de ceux-ci sur la probabilité p\n\n\n\n\n\n\n\nEn appliquant la fonction exp aux coefficients, nous obtenons l’effet linéaire de ceux-ci sur la probabilité p\n\n\n\n\n\n\n\nEn appliquant la fonction exp aux coefficients, nous obtenons leur effet sous forme de rapport de cote sur la probabilité p\n\n\n\n\n\n\n\nEn appliquant la fonction 1/exp aux coefficients, nous obtenons leur effet sous forme de rapport de cote sur la probabilité p\n\n\n\n\n\n\n\n\n\n\nPour choisir la distribution la mieux adaptée pour un modèle GLM, il est possible de :\n\n\nRelisez au besoin la section 8.6.\n\n\n\n\n\n\nconsulter la littérature et retenir les distributions utilisées habituellement\n\n\n\n\n\n\n\ncomparer plusieurs distributions et conserver le modèle le mieux ajusté selon les AIC\n\n\n\n\n\n\n\nutiliser systématiquement la distribution normale\n\n\n\n\n\n\n\ndemander à un service de voyance\n\n\n\n\n\n\n\n\n\nVérifier votre résultat\n\n\n\n\n\n\n\n\n\nAnastasopoulos, Panagiotis C, John E Haddock, Matthew G Karlaftis et Fred L Mannering. 2012. « Analysis of urban travel times: Hazard-based approach to random parameters. » Transportation research record 2302 (1): 121‑129. https://doi.org/10.3141%2F2302-13.\n\n\nBrant, Rollin. 1990. « Assessing proportionality in the proportional odds model for ordinal logistic regression. » Biometrics: 1171‑1178. https://www.jstor.org/stable/2532457.\n\n\nCloutier, Marie-soleil, Mathieu Tremblay, Patrick Morency et Philippe Apparicio. 2014. « Carrefours en milieu urbain: quels risques pour les piétons? Exemple empirique des quartiers centraux de Montréal, Canada. » Recherche Transports Sécurité 30: 3‑20.\n\n\nDunn, Peter K. et Gordon K. Smyth. 1996. « Randomized Quantile Residuals. » Journal of Computational and Graphical Statistics 5 (3): 236‑244. https://doi.org/10.2307/1390802.\n\n\nFox, John et Georges Monette. 1992. « Generalized collinearity diagnostics. » Journal of the American Statistical Association 87 (417): 178‑183. https://doi.org/10.2307/2290467.\n\n\nFrank, Lawrence, Mark Bradley, Sarah Kavage, James Chapman et T Keith Lawton. 2008. « Urban form, travel time, and cost relationships with tour complexity and mode choice. » Transportation 35 (1): 37‑54. https://doi.org/10.1007/s11116-007-9136-6.\n\n\nGelman, Andrew et Jennifer Hill. 2006. Data analysis using regression and multilevel/hierarchical models. Cambridge university press.\n\n\nHarlan, Sharon L, Anthony J Brazel, G Darrel Jenerette, Nancy S Jones, Larissa Larsen, Lela Prashad et William L Stefanov. 2007. « In the shade of affluence: the inequitable distribution of the urban heat island. » Research in Social Problems and Public Policy 15: 173‑202. http://dx.doi.org/10.1016/S0196-1152(07)15005-5.\n\n\nHilbe, Joseph M. 2009. Logistic regression models. CRC press.\n\n\nHuang, Ganlin, Weiqi Zhou et ML Cadenasso. 2011. « Is everyone hot in the city? Spatial pattern of land surface temperatures, land cover and neighborhood socioeconomic characteristics in Baltimore, MD. » Journal of environmental management 92 (7): 1753‑1759. https://doi.org/10.1016/j.jenvman.2011.02.006.\n\n\nMcFadden, Brandon R. 2016. « Examining the gap between science and public opinion about genetically modified food and global warming. » PloS one 11 (11): e0166140. https://doi.org/10.1371/journal.pone.0166140.\n\n\nNelder, John A. et Robert W. M. Wedderburn. 1972. « Generalized Linear Models. » Journal of the Royal Statistical Society. Series A (General) 135 (3): 370‑384. http://www.jstor.org/stable/2344614.\n\n\nNeyman, Jerzy, Egon Sharpe Pearson et Karl Pearson. 1933. « IX. On the problem of the most efficient tests of statistical hypotheses. » Philosophical Transactions of the Royal Society of London. Series A, Containing Papers of a Mathematical or Physical Character 231 (694-706): 289‑337. https://royalsocietypublishing.org/doi/abs/10.1098/rsta.1933.0009.\n\n\nSanchez, Lino et Tony G Reames. 2019. « Cooling Detroit: A socio-spatial analysis of equity in green roofs as an urban heat island mitigation strategy. » Urban Forestry & Urban Greening 44: 126331. https://doi.org/10.1016/j.ufug.2019.04.014.\n\n\nSAS Institute Inc. 2020a. « SAS/STAT 15.2 User’s Guide Modeling Multinomial Overdispersion. » https://documentation.sas.com/?docsetId=statug&docsetTarget=statug_fmm_examples04.htm&docsetVersion=15.2&locale=en.\n\n\n———. 2020b. « SAS/STAT 15.2 User’s Guide Poisson Regression | SAS Annotated Output. » https://stats.idre.ucla.edu/sas/output/poisson-regression/.\n\n\nSmithson, Michael et Jay Verkuilen. 2006. « A better lemon squeezer? Maximum-likelihood regression with beta-distributed dependent variables. » Psychological methods 11 (1): 54. https://doi.org/10.1037/1082-989x.11.1.54.\n\n\nTeubner, Timm, Florian Hawlitschek et David Dann. 2017. « Price determinants on AirBnB: How reputation pays off in the sharing economy. » Journal of Self-Governance & Management Economics 5 (4). http://dx.doi.org/10.22381/JSME5420173.\n\n\nWang, Dan et Juan L Nicolau. 2017. « Price determinants of sharing economy based accommodation rental: A study of listings from 33 cities on Airbnb.com. » International Journal of Hospitality Management 62: 120‑131. https://doi.org/10.1016/j.ijhm.2016.12.007.\n\n\nZeileis, Achim. 2004. Econometric computing with HC and HAC covariance matrix estimators. Institut für Statistik und Mathematik.\n\n\nZhang, Zhihua, Rachel JC Chen, Lee D Han et Lu Yang. 2017. « Key factors affecting the price of Airbnb listings: A geographically weighted approach. » Sustainability 9 (9): 1635. http://dx.doi.org/10.3390/su9091635."
  },
  {
    "objectID": "09-GLMM.html#sec-091",
    "href": "09-GLMM.html#sec-091",
    "title": "9  Régressions à effets mixtes (GLMM)",
    "section": "\n9.1 Introduction",
    "text": "9.1 Introduction\n\n9.1.1 Indépendance des observations et effets de groupes\nNous avons vu dans les précédents chapitres que l’indépendance des observations est une condition d’application commune à l’ensemble des modèles de régression. Cette condition implique ainsi que chaque unité d’observation de notre jeu de données est indépendante des autres; en d’autres termes, qu’elle ne soit associée à aucune autre observation par un lien de dépendance. Prenons un exemple concret pour illustrer cette notion. Admettons que nous nous intéressons à la performance scolaire d’élèves du secondaire à Montréal. Pour cela, nous collectons la moyenne des résultats aux examens du ministère de tous les élèves des différentes commissions scolaires de l’île de Montréal. Chaque élève appartient à une classe spécifique, et chaque classe se situe dans une école spécifique. Les classes constituent des environnements particuliers, la performance des élèves y est influencée par un ensemble de facteurs comme la personne qui enseigne et les relations entre les élèves d’une même classe. Deux élèves provenant d’une même classe sont donc lié(e)s par une forme de structure propre à leur classe et ne peuvent pas être considéré(e)s comme indépendant(e)s. De même, l’école constitue un environnement particulier pouvant influencer la performance des élèves du fait de moyens financiers plus importants, de la mise en place de programmes spéciaux, de la qualité des infrastructures (bâtiment, gymnase, cour d’école) ou d’une localisation minimisant certaines nuisances à l’apprentissage comme le bruit. À nouveau, deux élèves provenant d’une même école partagent une forme de structure qui, cette fois-ci, est propre à leur école. Si nous collectons des données pour l’ensemble du Canada, nous pourrions étendre ce raisonnement aux villes dans lesquelles les écoles se situent et aux provinces.\nDans cet exemple, la dépendance entre les données est provoquée par un effet de groupe : il est possible de rassembler les observations dans des ensembles (classes et écoles) influençant vraisemblablement la variable étudiée (performance scolaire). Les effets des classes et des écoles ne sont cependant pas intrinsèques aux élèves. En effet, il est possible de changer un ou une élève de classe ou d’école, mais pas de changer son âge ou sa situation familiale. Il est ainsi possible de distinguer la population des élèves, la population des classes, et la population des écoles (figure 9.1). Ces effets de groupes sont plus la règle que l’exception dans l’analyse de données en sciences sociales, ce qui met à mal l’hypothèse d’indépendance des observations. Notez que les effets de groupes ne sont pas les seules formes de structures remettant en cause l’indépendance des observations. Il existe également des structures temporelles (deux observations proches dans le temps ont plus de chances de se ressembler) et spatiales (deux observations proches dans l’espace ont plus de chances de se ressembler); cependant, les cas de la dépendance temporelle et spatiale ne sont pas couverts dans ce livre, car ils sont complexes et méritent un ouvrage dédié.\n\n\nFigure 9.1: Structure hiérarchique entre élèves, classes et écoles\n\n\n\n\n\n\nLa notion de pseudo-réplication\n\n\nLes effets de dépendance causés par des structures de groupe, temporelles ou spatiales, sont regroupés sous le terme de pseudo-réplication. Il est intéressant de se pencher sur la signification de ce mot pour comprendre le problème intrinsèque causé par la dépendance entre les observations et son influence sur l’inférence.\nReprenons l’exemple des élèves et de la performance scolaire et admettons que nous souhaitons estimer la moyenne générale de l’ensemble des élèves sur l’île de Montréal, mais que nous ne disposons pas du jeu de données complet. Nous devons donc collecter un échantillon suffisamment grand pour estimer la moyenne pour l’ensemble de cette population. Raisonnons en termes de quantité d’informations. Si nous ne disposons d’aucune observation (nous n’avons pas encore interrogé d’élèves), cette quantité est de 0. Si nous interrogeons un premier ou une première élève, nous obtenons une donnée supplémentaire, et donc un point d’information supplémentaire (+1). Admettons maintenant que nous collectons 30 observations dans une école, 10 dans une seconde et 5 dans une troisième. A priori, nous pourrions dire que nous avons ajouté 45 points d’information à notre total de connaissance. Ce serait le cas si les observations étaient indépendantes les unes des autres. Dans un tel contexte, chaque observation ajoute la même quantité d’information. Cependant, puisque les personnes étudiant dans la même école ont plus de chance de se ressembler, interroger les élèves d’une même école apporte moins d’information. Notez que plus la ressemblance entre les élèves d’une même école est forte, plus la quantité d’information est réduite. Nous sommes donc loin de disposer d’une quantité d’information égale à 45. Chaque réplication de l’expérience (demander à un ou une élève sa moyenne annuelle) n’apporte pas autant d’information qu’attendu si les observations étaient indépendantes, c’est pourquoi on parle de pseudo-réplication.\nLa pseudo-réplication influence directement l’inférence statistique puisque le calcul des différents tests statistiques assume que chaque observation apporte autant d’information que les autres. En cas de présence de pseudo-réplication, la quantité d’information présente dans l’échantillon est plus petite qu’attendu. Il est possible de voir cela comme une forme de surestimation de la taille de l’échantillon. En cas de pseudo-réplication, nous disposons en réalité de moins de données que ce que l’on attendrait d’un échantillon de cette taille, si les observations étaient indépendantes. La conséquence est la sous-estimation de la variabilité réelle des données et l’augmentation des risques de trouver des effets significatifs dans l’échantillon alors qu’ils ne le sont pas pour l’ensemble de la population.\n\n\n\n9.1.2 Terminologie : effets fixes et effets aléatoires\nPuisque les effets des classes et des écoles ne sont pas propres aux élèves, il convient de les introduire différemment dans les modèles de régression. Nous appelons un effet fixe, un effet qui est propre aux observations que nous étudions et un effet aléatoire, un effet provoqué par une structure externe (effet de groupe, effet temporel et/ou effet spatial). Un modèle combinant à la fois des effets fixes et des effets aléatoires est appelé un modèle à effets mixtes, ou GLMM pour Generalized Linear Mixed Model. Tous les modèles que nous avons ajustés dans les sections précédentes ne comprenaient que des effets fixes alors qu’à plusieurs reprises, des effets aléatoires induits par l’existence de structure de groupe auraient pu (dû) être utilisés. Prenons pour exemple le modèle logistique binomial visant à prédire la probabilité d’utiliser le vélo comme mode de transport pour son trajet le plus fréquent. La variable multinomiale Pays, représentant le pays dans lequel les personnes interrogées résident, a été introduite comme un effet fixe. Cependant, l’effet du pays ne constitue pas une caractéristique propre aux individus; il s’agit plutôt d’un agrégat complexe mêlant culture, météorologie, politiques publiques et formes urbaines. À l’inverse, le sexe ou l’âge sont bien des caractéristiques intrinsèques des individus et peuvent être considérés comme des effets fixes.\nNotez que l’utilisation du terme effet aléatoire peut porter à confusion, car il est utilisé différemment en fonction du champ d’études. Parmi les différentes définitions relevées par Gelman (2005) d’un effet aléatoire, citons les suivantes :\n\nLes effets fixes sont identiques pour tous les individus, alors que les effets aléatoires varient (définition 1).\nLes effets sont fixes s’ils sont intéressants en eux-mêmes, et les effets sont aléatoires si nous nous intéressons à la population dont ils sont issus (définition 2).\nLorsqu’un échantillon couvre une grande part de la population, la variable correspondante est un effet fixe. Si l’échantillon couvre une faible part de la population, l’effet est aléatoire (définition 3).\nSi l’effet est censé provenir d’une variable aléatoire, alors il s’agit d’un effet aléatoire (définition 4).\nLes effets fixes sont estimés par la méthode des moindres carrés ou par le maximum de vraisemblance, alors que les effets aléatoires sont estimés avec régularisation (shrinkage) (définition 5).\n\nIl est ainsi possible de se retrouver dans des cas où un effet serait classé comme fixe selon une définition et aléatoire selon une autre. La deuxième définition suppose même qu’un effet peut être aléatoire ou fixe selon l’objectif de l’étude. La dernière définition a l’avantage d’être mathématique, mais ne permet pas de décider si un effet doit être traité comme aléatoire ou fixe. Nous ne proposons pas ici de clore le débat, mais plutôt de donner quelques pistes de réflexion pour décider si un effet doit être modélisé comme fixe ou aléatoire:\n\nEst-ce que l’effet en question est propre aux individus étudiés ou est externe aux individus? S’il est propre aux individus, il s’agit plus certainement d’un effet fixe. À titre d’exemple, il n’est pas possible de changer l’âge d’une personne, mais il est certainement possible de changer de ville de résidence.\nExiste-t-il un nombre bien arrêté de catégories possibles pour l’effet en question? Si oui, il s’agit plus certainement d’un effet fixe. Il y a un nombre bien arrêté de catégories pour la variable sexe, mais pour la variable pays, de nombreuses autres valeurs peuvent être ajoutées. Il est également possible de se demander s’il semble cohérent d’effectuer un échantillonnage sur les catégories en question. Dans le cas des pays, nous pourrions mener une étude à l’échelle des pays et collecter des données sur un échantillon de l’ensemble des pays. Il existe donc une population de pays, ce que nous ne pouvons pas affirmer pour la variable sexe.\nL’effet en question est direct ou indirect? Dans le second cas, l’effet en question est un agglomérat complexe découlant de plusieurs processus n’ayant pas été mesurés directement, ce qui correspond davantage à un effet aléatoire. Ainsi, l’effet du pays de résidence des individus sur leur probabilité d’utiliser le vélo est bien une agglomération complexe d’effets (culture, météorologie, orientation des politiques publiques, formes urbaines, etc.) n’ayant pas tous été mesurés. À l’inverse, l’âge d’un individu a bien un effet direct sur sa probabilité d’utiliser le vélo.\nL’effet est-il le même pour tous les individus, ou doit-il varier selon le groupe dans lequel l’individu se situe? Si un effet doit varier en fonction d’un groupe, il s’apparente davantage à un effet aléatoire. Pour reprendre l’exemple de l’âge, nous pourrions décider que cette caractéristique des individus n’a peut-être pas le même effet en fonction du pays dans lequel vit l’individu et l’ajouter au modèle comme un effet aléatoire.\n\nVous comprendrez donc qu’une partie non négligeable du choix entre effet fixe ou effet aléatoire réside dans le cadre théorique à l’origine du modèle. Maintenant que cette distinction conceptuelle a été détaillée, nous pouvons passer à la présentation statistique des modèles GLMM."
  },
  {
    "objectID": "09-GLMM.html#sec-092",
    "href": "09-GLMM.html#sec-092",
    "title": "9  Régressions à effets mixtes (GLMM)",
    "section": "\n9.2 Principes de base des GLMM",
    "text": "9.2 Principes de base des GLMM\nUn GLMM est donc un modèle GLM introduisant à la fois des effets fixes et des effets aléatoires. Si nous ne considérons que les effets de groupes, un GLMM peut avoir trois formes : constantes aléatoires, pentes aléatoires et constantes et pentes aléatoires. Nous présentons ici ces trois formes en reprenant l’exemple ci-dessus avec des élèves intégré(e)s dans des classes et pour lesquel(le)s le niveau de performance à l’examen ministériel de mathématique nous intéresse.\n\n9.2.1 GLMM avec constantes aléatoires\nIl s’agit de la forme la plus simple d’un GLMM. Plus spécifiquement, elle autorise le modèle à avoir une constante différente pour chaque catégorie d’une variable multinomiale. En d’autres termes, si nous reprenons l’exemple des élèves dans leurs classes, nous tentons d’ajouter dans le modèle l’idée que chaque classe a une moyenne différente en termes de performance à l’examen de mathématique. Il est assez facile de visualiser ce que cela signifie à l’aide d’un graphique. Admettons que nous modélisons la note obtenue par des élèves du secondaire à l’examen ministériel de mathématique à partir d’une autre variable continue représentant le temps de travail moyen par semaine en dehors des heures de classe et d’une variable catégorielle représentant dans quelle classe se trouve chaque élève. Notez qu’il ne s’agit pas ici de vraies données, mais de simples simulations utilisées à titre d’illustration. Si nous ne tenons pas compte des classes, nous pouvons ajuster une régression linéaire simple entre nos deux variables continues comme le propose la figure 9.2.\n\n\n\n\nFigure 9.2: Influence du temps de travail sur la performance scolaire d’élèves\n\n\n\nNous constatons que notre modèle semble bien identifier la relation positive entre le temps de travail et le niveau de performance, mais la droite de régression est très éloignée de chaque point; nous avons ainsi énormément d’erreurs de prédiction, et donc des résidus importants. Jusqu’ici, nous avons vu que nous pouvons ajouter un prédicteur et intégrer l’effet des classes comme un effet fixe (figure 9.3).\n\n\n\n\nFigure 9.3: Influence du temps de travail sur la performance scolaire d’élèves en tenant compte de l’effet de leur classe (effet fixe)\n\n\n\nCet ajustement constitue une nette amélioration du modèle. Prenons un instant pour reformuler clairement notre modèle à effets fixes :\n\\[\n\\begin{aligned}\n&Y \\sim Normal(\\mu,\\sigma)\\\\\n&g(\\mu) = \\beta_0 + \\beta_1 x_1 + \\sum^k_{j=1}{\\beta_j x_{2j}}\\\\\n&g(x) = x\n\\end{aligned}\n\\tag{9.1}\\]\navec \\(x_1\\) le temps de travail et \\(x_2\\) la classe ayant k-1 modalités (puisqu’une modalité est la référence). Nous ajustons ainsi un coefficient pour chaque classe, ce qui a pour effet de tirer vers le haut ou vers le bas la prédiction du modèle en fonction de la classe. Cet effet est pour l’instant fixe, mais nous avons déterminé dans les sections précédentes qu’il serait conceptuellement plus approprié de le traiter comme un effet aléatoire.\nPassons à présent à la reformulation de ce modèle en transformant l’effet fixe de la classe en effet aléatoire.\n\\[\n\\begin{aligned}\n&Y \\sim Normal(\\mu,\\sigma_e)\\\\\n&g(\\mu) = \\beta_0 + \\beta_1 x_1 + \\upsilon \\\\\n&\\upsilon \\sim Normal(0, \\sigma_{\\upsilon}) \\\\\n&g(x) = x\n\\end{aligned}\n\\tag{9.2}\\]\nRemarquez que l’effet fixe de la classe \\(\\sum^k_{j=1}{\\beta_j x_{2j}}\\) a été remplacé par \\(\\upsilon\\) qui est un terme aléatoire propre aux classes et qui suit une distribution normale centrée sur 0 (\\(\\upsilon \\sim Normal(0, \\sigma_{\\upsilon})\\)). En d’autres termes, cela signifie que l’effet des classes sur la performance des élèves suit une distribution normale et que si nous moyennons l’effet de toutes les classes, cet effet serait de 0. Nous ne modélisons donc plus l’effet moyen de chaque classe comme dans le modèle à effets fixes, mais la variabilité de l’effet des classes, soit \\(\\sigma_{\\upsilon}\\). Notre modèle a donc deux variances, une au niveau des élèves (\\(\\sigma_e\\)) et une au niveau des classes (\\(\\sigma_{\\upsilon}\\)). Cette particularité explique souvent pourquoi ce type de modèle est appelé un modèle hiérarchique ou un modèle de partition de la variance. Cette information est particulièrement intéressante, car elle permet de calculer la part de la variance présente au niveau des élèves et celle au niveau des classes.\nSelon cette formulation, les constantes propres à chaque classe sont issues d’une distribution normale (nous reviendrons d’ailleurs sur ce choix plus tard), mais elles n’apparaissent pas directement dans le modèle. Ces paramètres ne sont plus estimés directement dans le modèle, mais a posteriori à partir des prédictions du modèle, et sont appelés Best Linear Unbiased Predictor (BLUP). Ces dernières précisions devraient d’ailleurs mieux vous aider à comprendre l’origine des définitions 1, 2 et 4 que nous avons mentionnées précédemment.\n\n\n\n\nFigure 9.4: Influence du temps de travail sur la performance scolaire d’élèves en tenant compte de l’effet de leur classe (effet aléatoire)\n\n\n\nEn comparant les figures 9.3 et 9.4, la différence ne saute pas aux yeux; vous pourriez alors légitimement vous demander pourquoi tous ces efforts et cette complexité théorique pour une différence d’ajustement minime? Trois arguments permettent de justifier l’utilisation de constantes aléatoires plutôt que d’effets fixes dans notre cas.\n\n9.2.1.1 Resserrement (shrinkage) et mutualisation (partial pooling)\nLe premier intérêt d’utiliser un effet aléatoire réside dans sa méthode d’estimation qui diffère largement d’un effet fixe. Il est assez facile de se représenter intuitivement la différence entre les deux. Dans le cas de nos élèves et de nos classes, lorsque l’effet des classes est estimé avec un effet fixe, l’effet de chaque classe est déterminé de façon totalement indépendante des autres classes. En d’autres termes, il n’est possible d’en apprendre plus sur une classe qu’en collectant des données dans cette classe (separate pooling). Si l’effet des classes est estimé comme un effet aléatoire, alors l’information entre les classes est mutualisée (partial pooling). L’idée étant que l’information que nous apprenons sur des élèves dans une classe est au moins en partie valide dans les autres classes. Cette méthode d’estimation est particulièrement intéressante si nous ne disposons que de peu d’observations dans certaines classes, puisque nous pouvons apprendre au moins une partie de l’effet de cette classe à partir des données des autres classes. Cela n’est pas possible dans le cas d’un effet fixe où l’on traite chaque classe en silo. McElreath (2020) écrit à ce sujet qu’un effet fixe « n’a pas de mémoire » et qu’il oublie tout ce qu’il a appris sur les classes lorsqu’il passe à une nouvelle classe. La conséquence de cette mutualisation de l’information est un resserrement (shrinkage) des effets des classes autour de leur moyenne. Cela signifie que les tailles des effets de chaque classe sont plus petites dans le cas d’un effet aléatoire que d’un effet fixe. Utiliser des effets aléatoires conduit donc à une estimation plus conservatrice de l’effet des classes. Nous pouvons le visualiser en comparant les effets de classes dans le modèle à effets mixtes et le modèle à effets fixes. La figure 9.5 montre clairement que les effets aléatoires tendent à se rapprocher (resserrement) de leur moyenne (ligne noire), et donc à identifier des effets moins extrêmes pour chaque classe. Cette explication est directement en lien avec la définition 5 d’un effet aléatoire vu précédemment.\n\n\n\n\nFigure 9.5: Comparaison des effets des classes pour le modèle à effets fixes versus le modèle à effets aléatoires\n\n\n\n\n9.2.1.2 Prédiction pour de nouveaux groupes\nUne autre retombée directe de la mutualisation de l’information est la capacité du modèle à envisager les effets plausibles pour de nouvelles classes. En effet, puisque nous avons approximé l’effet des classes sous forme d’une distribution normale dont nous connaissons la moyenne (0) et l’écart-type (\\(\\sigma_{\\upsilon}\\)), nous pouvons simuler des données pour de nouvelles classes, ce que ne permet pas un effet fixe. Ce constat est d’ailleurs directement lié à la définition 3 des effets aléatoires vue précédemment. Dans notre cas, \\(\\sigma_{\\upsilon}\\) = 3,542, ce qui nous permet d’affirmer que dans 95 % des classes, l’effet de la classe sur la performance scolaire doit se trouver entre -1,96 \\(\\times\\) 3,542 et +1,96 \\(\\times\\) 3,542, soit l’intervalle [-6,942, 6,942].\n\n9.2.1.3 Partition de la variance\nUn autre avantage net de l’effet aléatoire est l’estimation du paramètre \\(\\sigma_{\\upsilon}\\), soit la variance au niveau des écoles. Ce dernier permet de calculer un indicateur très intéressant, soit le coefficient de corrélation intraclasse (ICC) :\n\\[\nICC = \\frac{\\sigma_{\\upsilon}}{\\sigma_{\\upsilon} + \\sigma_{e}}\n\\tag{9.3}\\]\nIl s’agit donc du pourcentage de la variance présente au niveau des classes, qui peut être interprétée comme le niveau de corrélation (de ressemblance) entre les élèves d’une même classe.\nDans notre cas, l’écart-type est de 3,542 au niveau des classes et de 7,734 au niveau des élèves. Nous pouvons donc calculer l’ICC au niveau des classes avec la formule précédente : 3,542 / (3,542 + 7,734) = 0,314. Cela signifie que le niveau de corrélation entre deux élèves d’une même classe est de 0,314 ou encore que 31,4 % de la variance de Y se situe au niveau des classes, ce qui est conséquent. Une telle information ne peut être extraite d’un modèle avec uniquement des effets fixes. Notez ici que l’ICC peut être calculé pour chaque niveau d’un modèle à effet mixte. Dans notre exemple, nous n’avons qu’un seul niveau au-dessus des élèves, soit les classes, mais nous pourrions étendre cette logique à des écoles, par exemple. Notez également que cette formule de l’ICC n’est valide que pour un modèle pour lequel la distribution de la variable Y est normale. Des développements apparaissent pour proposer d’autres formulations adaptées à d’autres distributions, mais il est également possible d’estimer l’ICC à partir des simulations issues du modèle (Nakagawa, Johnson et Schielzeth 2017; Aly et al. 2014; Stryhn et al. 2006; Wu, Crespi et Wong 2012). L’idée générale reste d’expliquer la partition de la variance dans le modèle.\nEn plus de l’ICC, il est également possible de calculer les R2 marginal et conditionnel du modèle. Le premier représente la variance expliquée par le modèle si seulement les effets fixes sont pris en compte, et le second si les effets fixes et aléatoires sont pris en compte. Distinguer les deux sources d’information permet de mieux cerner l’importance du rôle des écoles dans la performance des élèves. Dans notre cas, nous obtenons un R2 marginal de 0,115 et un R2 conditionnel de 0,269, ce qui nous confirme à nouveau que le rôle joué par la classe dans le niveau de performance est loin d’être négligeable.\n\n9.2.2 GLMM avec pentes aléatoires\nDans cette seconde version du GLMM, nous n’envisageons plus de faire varier une constante en fonction des classes, mais un coefficient en fonction des classes. Admettons que nous voulons tester ici si l’effet du temps de travail (\\(x_1\\)) sur la performance scolaire (Y) n’est pas constant partout. En d’autres termes, nous supposons que, dans certaines classes, le temps de travail hebdomadaire en dehors de l’école est plus ou moins efficace que d’autres classes. L’idée sous-jacente est que nous n’observons pas de différence en termes de moyenne entre deux classes, mais en termes d’effet pour notre variable \\(x_1\\). À nouveau, nous pouvons nous contenter d’un effet fixe pour intégrer cette idée dans notre modèle. Pour cela, nous avons simplement à ajouter une interaction entre notre variable quantitative temps de travail et notre variable qualitative classe. Nous obtenons le résultat décrit par la figure 9.6. Notez ici que la constante est bien la même pour chaque classe (les lignes s’intersectent à 0 sur l’axe des x), et que seule la pente change.\n\n\n\n\nFigure 9.6: Influence du temps de travail sur la performance scolaire d’élèves en interaction avec la classe (effet fixe)\n\n\n\nLa formulation de ce modèle à effets fixes seulement est la suivante :\n\\[\n\\begin{aligned}\n&Y \\sim Normal(\\mu,\\sigma)\\\\\n&g(\\mu) = \\beta_0 + \\beta_1 x_1 + \\sum^k_{j=1}{\\beta_j x_{2j} x_1}\\\\\n&g(x) = x\n\\end{aligned}\n\\tag{9.4}\\]\nNous constatons donc que nous avons un effet principal \\(\\beta_1\\) décrivant le lien entre le temps de travail et la note obtenue à l’examen pour l’ensemble des élèves, ainsi qu’un bonus ou un malus sur cet effet \\(\\beta_j\\) s’appliquant en fonction de la classe. Nous pouvons reformuler ce modèle pour inclure cet effet spécifique par classe comme un effet aléatoire :\n\\[\n\\begin{aligned}\n&Y \\sim Normal(\\mu,\\sigma_e)\\\\\n&g(\\mu) = \\beta_0 + \\beta_1 x_1 + \\upsilon x_1 \\\\\n&\\upsilon \\sim Normal(0,\\sigma_{\\upsilon})\\\\\n&g(x) = x\n\\end{aligned}\n\\tag{9.5}\\]\nNous formulons ici un modèle dans lequel la classe modifie l’effet de la variable temps d’étude sur la variable note à l’examen. L’effet moyen de \\(x_1\\) (propre aux individus) est capté par le coefficient \\(\\beta_1\\), les bonus ou malus ajoutés à cet effet par la classe sont issus d’une distribution normale centrée sur 0 avec un écart-type, soit \\(\\sigma_{\\upsilon}\\). À nouveau, l’idée est que si nous moyennons l’effet de toutes les classes, nous obtenons 0. Aussi, le fait de modéliser cet effet comme un effet aléatoire nous permet de partitionner la variance, de mutualiser l’information entre les classes et de resserrer l’estimation des effets des classes.\nLes résultats pour ce second modèle sont présentés à la figure 9.7, et une comparaison entre les estimations des effets fixes et des effets aléatoires est présentée à la figure 9.8. Nous pouvons ainsi constater à nouveau l’effet de resserrement provoqué par l’effet aléatoire.\n\n\n\n\nFigure 9.7: Influence du temps de travail sur la réussite scolaire d’élèves en interaction avec la classe (effet aléatoire)\n\n\n\n\n\n\n\nFigure 9.8: Influence du temps de travail sur la réussite scolaire d’élèves en interaction avec la classe (effet aléatoire)\n\n\n\nLorsque nous intégrons des pentes aléatoires dans un modèle, nous faisons face au problème suivant : la variance associée aux pentes aléatoires n’est pas fixe, mais proportionnelle à la variable X autorisée à varier. Si nous comparons la figure 9.4 (constantes aléatoires) et la figure 9.7 (pentes aléatoires), nous constatons bien que la dispersion des prédictions du modèle (représentées par les lignes) augmente dans le cas de pentes aléatoires et reste identique dans le cas des constantes aléatoires. La conséquence pratique est qu’il existe un nombre infini de valeurs possibles pour l’ICC. Dans ce contexte, il est préférable de laisser de côté cet indicateur et de ne reporter que les R2 marginal et conditionnel. Dans notre cas, nous obtenons les valeurs 0,109 et 0,258, ce qui confirme une fois encore que le rôle joué par la classe est loin d’être négligeable.\n\n9.2.3 GLMM avec constantes et pentes aléatoires\nVous l’aurez certainement deviné en lisant le titre de cette section : il est tout à fait possible de combiner à la fois des constantes et des pentes aléatoires dans un modèle. Cela augmente bien sûr la complexité du modèle et introduit quelques subtilités comme la notion de distribution normale multivariée, mais chaque chose en son temps.\nSi nous reprenons notre exemple avec nos élèves et nos classes, combiner à la fois des constantes et des pentes aléatoires revient à formuler l’hypothèse que chaque classe a un effet sur la moyenne de la performance de ses élèves, mais également un effet sur l’efficacité du temps de travail. Il est possible de créer un modèle avec uniquement des effets fixes tenant compte de ces deux aspects en ajoutant dans le modèle la variable multinomiale classe ainsi que son interaction avec la variable temps de travail. La formulation de ce modèle à effets fixes est la suivante :\n\\[\n\\begin{aligned}\n&Y \\sim Normal(\\mu,\\sigma)\\\\\n&g(\\mu) = \\beta_0 + \\beta_1 x_1 + \\sum^k_{j=1}{\\beta_{2j}  x_{2j} + \\beta_{3j} x_{2j}  x_1}\\\\\n&g(x) = x\n\\end{aligned}\n\\tag{9.6}\\]\nNous pouvons représenter les résultats de ce modèle avec la figure 9.9.\n\n\n\n\nFigure 9.9: Influence du temps de travail sur la performance scolaire d’élèves en tenant compte de l’effet de leur classe et de l’effet de la classe sur l’efficacité du temps de travail (effet fixe)\n\n\n\nNous reformulons à présent ce modèle pour intégrer l’effet moyen de chaque classe (constante) et l’effet des classes sur l’efficacité du temps de travail (pente) comme deux effets aléatoires :\n\\[\n\\begin{aligned}\n&Y \\sim Normal(\\mu,\\sigma)\\\\\n&g(\\mu) = \\beta_0 + \\upsilon_1 + (\\beta_1 + \\upsilon_2) x_1\\\\\n&\\left(\\begin{array}{l}\n\\upsilon_{1} \\\\\n\\upsilon_{2}\n\\end{array}\\right) \\sim \\mathcal{N}\\left(\\left(\\begin{array}{l}\n0 \\\\\n0\n\\end{array}\\right),\\left(\\begin{array}{cc}\n\\sigma_{\\upsilon_1} & \\sigma_{\\upsilon_1\\upsilon_2} \\\\\n\\sigma_{\\upsilon_1\\upsilon_2} & \\sigma_{\\upsilon_1}\n\\end{array}\\right)\\right) \\\\\n&g(x) = x\n\\end{aligned}\n\\tag{9.7}\\]\nPas de panique! Cette écriture peut être interprétée de la façon suivante :\nLe modèle a deux effets aléatoires, l’un faisant varier la constante en fonction de la classe (\\(\\upsilon_1\\)) et l’autre l’effet de la classe sur l’efficacité du temps de travail (\\(\\upsilon_2\\)). Ces deux effets sont issus d’une distribution normale bivariée (une dimension par effet aléatoire). Cette distribution normale bivariée a donc deux moyennes et ces deux moyennes sont à 0 (les effets s’annulent si nous considérons toutes les classes ensemble). Elle dispose également d’une variance par effet aléatoire (\\(\\sigma_{\\upsilon_1}\\) et \\(\\sigma_{\\upsilon_2}\\)) et d’une covariance entre les deux effets aléatoires (\\(\\sigma_{\\upsilon_1\\upsilon_2}\\)). Cette covariance permet de tenir compte du fait que, potentiellement, les classes avec une constante plus élevée pourraient systématiquement avoir une efficacité du temps de travail plus faible ou plus élevée. Cette formulation implique donc d’ajuster trois paramètres de variance : \\(\\sigma_{\\upsilon_1}\\), \\(\\sigma_{\\upsilon_2}\\) et \\(\\sigma_{\\upsilon_1\\upsilon_2}\\). Il peut arriver que nous n’ayons pas assez de données pour estimer ces trois paramètres, ou que nous décidions, pour des raisons théoriques, qu’aucune corrélation ne soit attendue entre \\(\\sigma_{\\upsilon_1}\\) et \\(\\sigma_{\\upsilon_2}\\). Dans ce cas, il est possible de fixer \\(\\sigma_{\\upsilon_1\\upsilon_2}\\) à 0, ce qui revient à indiquer au modèle que \\(\\upsilon_1\\) et \\(\\upsilon_2\\) proviennent de deux distributions normales distinctes, nous pouvons donc écrire :\n\\[\n\\begin{aligned}\n&Y \\sim Normal(\\mu,\\sigma)\\\\\n&g(\\mu) = \\beta_0 + \\upsilon_1 + (\\beta_1 + \\upsilon_2) x_1\\\\\n&\\left(\\begin{array}{l}\n\\upsilon_{1} \\\\\n\\upsilon_{2}\n\\end{array}\\right) \\sim \\mathcal{N}\\left(\\left(\\begin{array}{l}\n0 \\\\\n0\n\\end{array}\\right),\\left(\\begin{array}{cc}\n\\sigma_{\\upsilon_1} & 0 \\\\\n0 & \\sigma_{\\upsilon_1}\n\\end{array}\\right)\\right) \\\\\n&g(x) = x\n\\end{aligned}\n\\tag{9.8}\\]\nCe qui est identique à :\n\\[\n\\begin{aligned}\n&Y \\sim Normal(\\mu,\\sigma)\\\\\n&g(\\mu) = \\beta_0 + \\upsilon_1 + (\\beta_1 + \\upsilon_2) x_1\\\\\n&\\upsilon_{1} \\sim Normal(0,\\sigma_{\\upsilon_1}) \\\\\n&\\upsilon_{2} \\sim Normal(0,\\sigma_{\\upsilon_2}) \\\\\n&g(x) = x\n\\end{aligned}\n\\tag{9.9}\\]\nNous avons déjà abordé la notion de covariance dans la section 4.2. Pour rappel, la covariance dépend de l’unité de base des deux variables sur laquelle elle est calculée. Ici, il s’agit d’un coefficient et d’une constante. Il est donc préférable de la standardiser pour obtenir la corrélation entre les deux effets :\n\\[\ncorr(\\upsilon_1;\\upsilon_2) = \\frac{\\sigma_{\\upsilon_1\\upsilon_2}}{\\sqrt{\\sigma_{\\upsilon_1}}\\sqrt{\\sigma_{\\upsilon_2}}}\n\\tag{9.10}\\]\nSi cette corrélation est positive, cela signifie que les classes ayant tendance à avoir un effet positif sur la performance scolaire ont également tendance à influencer positivement l’efficacité du temps de travail. À l’inverse, une corrélation négative signifie que l’efficacité du temps de travail a tendance à être plus faible dans les classes où la performance scolaire moyenne est élevée. Si la corrélation n’est pas significative, c’est que les deux effets sont indépendants l’un de l’autre.\nPour cet exemple, nous conservons la première formulation afin de montrer comment interpréter \\(\\sigma_{\\upsilon_1\\upsilon_2}\\), mais nous ne disposons probablement pas de suffisamment de classes différentes pour estimer correctement ces trois paramètres. Les résultats de ce modèle sont représentés à la figure 9.10.\n\n\n\n\nFigure 9.10: Influence du temps de travail sur la performance scolaire d’élèves en tenant compte de l’effet de leur classe et de l’effet de la classe sur l’efficacité du temps de travail (effet aléatoire)\n\n\n\nNous pouvons ainsi constater que pour ce troisième modèle, l’effet de resserrement est bien plus prononcé que pour les modèles précédents (figure 9.11). Si nous nous fions au modèle à effets fixes (figure 9.9)), alors l’effet de l’école sur l’efficacité du temps de travail est très important. En revanche, le modèle à effet aléatoire identifie que la différence de moyenne entre les écoles est importante, mais la différence en termes d’efficacité du temps de travail est beaucoup plus anecdotique.\n\n\n\n\nFigure 9.11: Comparaison des effets fixes et aléatoires pour le modèle intégrant l’effet des classes et l’interaction entre les classes et le temps de travail\n\n\n\nNotre modèle estime les valeurs de \\(\\sigma_{\\upsilon_1}\\) à 8,563, de \\(\\sigma_{\\upsilon_2}\\) à 0,042 et de \\(\\sigma_{\\upsilon_1\\upsilon_2}\\) à 0,073. La corrélation entre les deux effets est donc de 0,122, ce qui est relativement faible (pour l’anecdote, notez que la valeur originale de corrélation entre ces deux effets était de 0,1 lorsque nous avons simulé ces données, notre modèle a donc bien été capable de retrouver le paramètre original). À nouveau, puisque nous avons des pentes aléatoires dans ce modèle, nous ne pouvons pas calculer l’ICC; nous pouvons cependant rapporter les R2 marginal et conditionnel. Leurs valeurs respectives sont 0,115 et 0,269, ce qui nous confirme une nouvelle fois que l’ajout d’effets aléatoires contribue à expliquer une partie importante de la variance de la performance scolaire.\nPour terminer cette section, comparons brièvement les trois modèles (constantes aléatoires, pentes aléatoires, constantes et pentes aléatoires) pour déterminer lequel est le mieux ajusté à nos données. Nous ajoutons également un quatrième modèle dans lequel les deux effets aléatoires sont présents, mais non corrélés (\\(\\sigma_{\\upsilon_1\\upsilon_2}=0\\)). Le tableau 9.1 nous permet de constater que l’ajout des constantes aléatoires joue un rôle essentiel dans le premier modèle : le R2 conditionnel est plus que deux fois supérieur au R2 marginal. Cependant, l’ajout des pentes aléatoires dans les trois autres modèles apporte finalement très peu d’information, nous laissant penser que l’effet de la classe sur le temps de travail est faible, voire inexistant.\n\n\n\n\nTableau 9.1: Comparaison des trois modèles à effets aléatoires\n\n\n\n\n\n\n\nmodèle\nAIC\nR2 marginal\nR2 conditionnel\n\n\n\nConstantes aléatoires\n2 100,9\n0,12\n0,27\n\n\nPentes aléatoires\n2 101,6\n0,11\n0,26\n\n\nPentes et constantes aléatoires corrélées\n2 104,7\n0,11\n0,27\n\n\nPentes et constantes aléatoires non corrélées\n2 102,7\n0,11\n0,27\n\n\n\n\n\n\n\n\n\n\n\nModèles à effets mixtes avec des structures croisées\n\n\nJusqu’à présent, nous avons abordé des modèles GLMM comprenant des structures imbriquées (nested en anglais), c’est-à-dire qu’une observation d’un niveau 1 est incluse dans un et un seul groupe du niveau 2. Comme structure imbriquée à trois niveaux, nous avons vu comme exemple des élèves intégrés dans des classes elles-mêmes intégrées dans des écoles (figure 9.1) : un ou une élève appartient à une et une seule classe qui est elle-même localisée dans une et une seule école (élève / classe / école).\nNotez qu’il est aussi possible d’avoir des structures des données croisées (crossed).\nAdmettons à présent que nous ne nous intéressons pas à la classe dans laquelle se situe l’élève, mais plutôt à la personne qui enseigne. Admettons également que ces personnes peuvent donner des cours dans plusieurs écoles. Nous nous retrouvons dans un cas de figure où une personne qui enseigne peut se situer dans plusieurs écoles, ce qui diffère du cas précédent où chaque classe appartient à une seule école. Dans ce second cas, on parle d’une structure croisée plutôt qu’imbriquée.\nSi les personnes enseignent dans toutes les écoles, il est possible de dire que le design d’étude est croisé complet ou croisé partiel si elles n’enseignent que dans certaines écoles. La figure 9.12 résume ces trois situations.\n\n\nFigure 9.12: Différentes structures de données hiérarchiques (imbriquée versus croisée)\n\nIl est important de bien saisir la structure de son jeu de données, car l’estimation d’un modèle avec effets imbriqués ou croisés peut donner des résultats parfois significativement différents. De plus, un modèle imbriqué est généralement moins difficile à ajuster qu’un modèle croisé. En effet, dans un modèle imbriqué, deux personnes étudiant dans deux écoles différentes sont jugées indépendantes. Dans un modèle croisé, deux élèves provenant de deux écoles différentes peuvent tout de même partager une dépendance du fait qu’ils ou elles ont pu avoir le même professeur ou la même professeure. La structure de dépendance (et donc de la matrice de covariance des effets aléatoires) est ainsi plus complexe pour un modèle croisé."
  },
  {
    "objectID": "09-GLMM.html#sec-093",
    "href": "09-GLMM.html#sec-093",
    "title": "9  Régressions à effets mixtes (GLMM)",
    "section": "\n9.3 Conditions d’application des GLMM",
    "text": "9.3 Conditions d’application des GLMM\nPuisque les GLMM sont une extension des GLM, ils partagent l’essentiel des conditions d’application de ces derniers. Pour simplifier, si vous ajustez un modèle GLMM avec une distribution Gamma, vous devez réaliser les mêmes tests que ceux pour un simple GLM avec une distribution Gamma.\nUne question importante se pose souvent lorsque nous ajustons des modèles GLMM : combien de groupes faut-il au minimum aux différents niveaux? En effet, pour estimer les différentes variances, nous devons disposer de suffisamment de groupes différents. Dans le cas d’un modèle avec uniquement une constante aléatoire, il est fréquent de lire que nous devons disposer au minimum de cinq groupes différents (Gelman et Hill 2006), en dessous de ce minimum, traiter l’effet comme aléatoire plutôt que fixe apporte très peu d’information. De plus, l’estimation des variances pour chaque niveau est très imprécise, donnant potentiellement des valeurs inexactes pour l’ICC et polluant l’interprétation. Avec cinq groupes ou moins, il est certainement plus judicieux d’ajuster seulement un effet fixe. Dans un modèle avec plusieurs effets aléatoires et plusieurs variances / covariances à estimer, ce nombre doit être augmenté proportionnellement, à moins que les effets aléatoires ne soient estimés indépendamment les uns des autres. Notez ici que, si l’enjeu du modèle était d’estimer avec une grande précision les paramètres de variances, il faudrait compter au minimum une centaine de groupes. Il n’est pas nécessaire d’avoir le même nombre d’observations par groupe, car les modèles GLMM partagent l’information entre les groupes. Cependant, dans les groupes avec peu d’observations (inférieur à 15), l’estimation de leur effet propre (BLUP) est très incertaine.\nPuisque les GLMM font intervenir la distribution normale aux niveaux supérieurs du modèle, il est nécessaire de vérifier si les hypothèses qu’elle implique sont respectées. Il s’agit essentiellement de deux hypothèses : les effets aléatoires suivent bien une distribution normale (univariée ou multivariée), et la variance au sein des groupes est bien homogène.\n\n9.3.1 Vérification de la distribution des effets aléatoires\nReprenons la formulation d’un modèle simple avec seulement deux niveaux et seulement une constante aléatoire:\n\\[\n\\begin{aligned}\n&Y \\sim Normal(\\mu,\\sigma_e)\\\\\n&g(\\mu) = \\beta_0 + \\beta_1 x_1 + \\upsilon \\\\\n&\\upsilon \\sim Normal(0, \\sigma_{\\upsilon}) \\\\\n&g(x) = x\n\\end{aligned}\n\\]\nCe modèle formule l’hypothèse que les constantes aléatoires \\(\\upsilon\\) proviennent d’une distribution normale avec une moyenne de 0 et un écart-type \\(\\sigma_{\\upsilon}\\). La première étape du diagnostic est donc de vérifier si les constantes aléatoires suivent bien une distribution normale, ce que nous pouvons faire habituellement avec un diagramme quantile-quantile. Si nous reprenons notre exemple avec nos données de performance scolaire des sections précédentes, nous obtenons la figure 9.13. Puisque les points tombent bien approximativement sur la ligne rouge, nous pouvons conclure que cette condition d’application est bien respectée. Notez qu’il est également possible d’utiliser ici un des tests vus dans le chapitre 2 pour tester formellement la distribution des constantes aléatoires, mais nous disposons rarement de suffisamment de valeurs différentes pour qu’un tel test soit pertinent.\n\n\n\n\nFigure 9.13: Distribution normale univariée des constantes aléatoires\n\n\n\nCette vérification est bien sûr à appliquer à chacun des niveaux (en dehors du niveau de base) du modèle étudié.\nSi nous nous intéressons maintenant au modèle avec constantes et pentes aléatoires, nous avons deux cas de figure:\n\nNotre modèle inclut une covariance entre les constantes et les pentes; elles proviennent donc d’une distribution normale bivariée.\nNotre modèle considère les pentes et les constantes comme indépendantes; elles proviennent donc de deux distributions normales distinctes.\n\nLe second cas est de loin le plus simple puisqu’il nous suffit de réaliser un graphique de type quantile-quantile pour les deux effets aléatoires séparément. Dans le premier cas, il nous faut adapter notre stratégie pour vérifier si les deux effets aléatoires suivent conjointement une distribution normale multivariée. Pour cela, nous devons, dans un premier temps, observer séparément la distribution des pentes et des constantes, puisque chaque variable provenant d’une distribution normale multivariée suit elle-même une distribution normale univariée (Burdenski 2000). Nous pouvons, dans un second temps, construire un graphique nous permettant de juger si nos pentes et nos constantes suivent bien la distribution normale bivariée attendue par le modèle. Pour l’illustrer, nous reprenons le modèle sur la performance scolaire intégrant des pentes et des constantes aléatoires avec une covariance estimée entre les deux.\nLa figure 9.14 représente donc les deux graphiques quantile-quantile univariés. Les deux semblent indiquer que nos effets aléatoires suivent bien chacun une distribution normale. La figure 9.15 montre la distribution normale bivariée attendue par le modèle avec des ellipses représentant différents percentiles de cette distribution. Les valeurs des effets aléatoires sont représentées par des points noirs. Seulement 5 % des points noirs devraient se trouver dans la première ellipse et 95 % des points devraient se trouver dans la quatrième ellipse. En revanche, seulement 20 % des points devraient se trouver dans le dernier anneau et seulement 5 % des points en dehors de cet anneau. Il faut donc évaluer si les points sont plus ou moins centrés que ce que nous attendons. Pour simplifier la lecture, il est possible de rajouter des points grisés en arrière-plan représentant des réalisations possibles de cette distribution normale bivariée. Les vrais points noirs devraient avoir une dispersion similaire à celle des points grisés. Dans notre cas, ils semblent suivre un patron cohérent avec notre distribution normale bivariée. Dans le cas contraire, cela signifierait que le modèle doit être révisé.\n\n\n\n\nFigure 9.14: Multiples distributions normales univariées des constantes et pentes aléatoires\n\n\n\n\n\n\n\nFigure 9.15: Distribution normale bivariée des constantes et des pentes aléatoires\n\n\n\n\n9.3.2 Homogénéité des variances au sein des groupes\nDans le chapitre 8 sur les GLM, nous avons vu que chaque distribution a sa propre définition de la variance. Pour rappel, un modèle gaussien assume une variance constante, un modèle de Poisson assume une variance égale à son espérance, alors qu’un modèle Gamma assume une variance proportionnelle au carré de son espérance divisée par un paramètre de forme, etc. Nous devions donc, pour chaque GLM, vérifier graphiquement si la variance présente dans les données originales était proche de la variance attendue par le modèle. Dans un modèle GLMM, le même exercice doit être fait pour chaque groupe aux différents niveaux du modèle.\nDans notre exemple sur la performance scolaire, notre variable Y a été modélisée avec une distribution normale. Le modèle assume donc une uniformité de sa variance (homoscédasticité). La figure 9.16 nous montre ainsi que, quelle que soit la classe, la dispersion des points (notes des élèves) semble bien respecter la variance attendue par le modèle (représentée par les lignes noires).\n\n\n\n\nFigure 9.16: Homogénéité de la variance pour les différents groupes d’un modèle GLMM gaussien"
  },
  {
    "objectID": "09-GLMM.html#sec-094",
    "href": "09-GLMM.html#sec-094",
    "title": "9  Régressions à effets mixtes (GLMM)",
    "section": "\n9.4 Inférence dans les modèles GLMM",
    "text": "9.4 Inférence dans les modèles GLMM\nUne des questions importantes à se poser lorsque nous construisons un modèle est toujours : est-ce que les différents effets présents dans le modèle ont un effet significativement différent de zéro sur la variable dépendante? Cette étape d’inférence est plus compliquée pour les modèles GLMM que dans les modèles GLM à cause de la présence d’effets aléatoires. Ces derniers brouillent le comptage du nombre de paramètres et, par extension, du nombre de degrés de liberté des modèles. Pour un effet aléatoire, il est possible de déterminer que le nombre de degrés de liberté est de 1 puisque nous ajustons un seul paramètre supplémentaire (la variance de cet effet aléatoire). Selon un autre point de vue, il serait possible d’affirmer que le nombre de degrés de liberté est de \\(k - 1\\) (avec k le nombre de groupes dans cet effet aléatoire), ce que nous utilisons habituellement pour un effet fixe. La vraie valeur du nombre de degrés de liberté se situe quelque part entre ces deux extrêmes. L’enjeu du nombre de degrés de liberté est crucial, car il influence directement l’estimation des valeurs de p pour l’ensemble des coefficients du modèle. Avec un nombre de degrés de liberté plus petit, les valeurs de p sont plus faibles et les effets plus significatifs. Le sujet est d’ailleurs l’objet d’une telle controverse que les auteurs de certains packages comme lme4 (un des packages les plus utilisés pour ajuster des GLMM) ont fait le choix de ne renvoyer aucune valeur de p dans les résultats des modèles. L’article de Bolker et al. (2009) propose une explication détaillée et relativement accessible du problème (en plus d’une excellente introduction aux GLMM) : en se basant sur leurs recommandations, il est possible de séparer le problème de l’inférence dans les GLMM en trois sous problèmes :\n\nQuel est le degré de significativité des effets fixes?\nQuel est le degré de significativité de l’effet aléatoire dans le modèle?\nQuels sont les degrés de significativité de chaque constante / pente aléatoire?\n\n\n9.4.1 Inférence pour les effets fixes\nTrois approches peuvent être envisagées pour déterminer si un effet fixe est significatif ou non. Elles font appel à trois approches théoriques différentes (test classique, comparaison de modèles et bootstrapping) et peuvent donc donner des résultats différents. À titre exploratoire, il peut être intéressant de toutes les tester, mais certaines peuvent être préférées en fonction de votre champ de recherche.\n\n9.4.1.1 Test classique\nNous avons vu, pour les modèles LM et GLM, que les valeurs de p sont calculées à partir de scores obtenus en divisant les coefficients par leurs erreurs standards. Une approche similaire peut être utilisée pour les modèles GLMM. Cependant, la question du nombre de degrés de liberté à utiliser reste un problème. L’approche la plus flexible est certainement l’approximation par la méthode Satterthwaite proposant une estimation de ce nombre de degrés de liberté et, par extension, des valeurs de p.\n\n9.4.1.2 Rapports de vraisemblance\nSi le modèle comprend suffisamment d’observations (par suffisamment, comprenez au moins une centaine d’observations par paramètre), il est également possible d’utiliser une série de tests de rapports de vraisemblance pour vérifier si l’apport de chaque variable indépendante contribue à améliorer significativement le modèle. Cette approche correspond à une analyse de type 3, comme nous l’avons mentionné dans la section 8.2.4 pour le modèle logistique multinomial.\n\n9.4.1.3 Bootstrapping\nL’approche par bootstrapping (parametric-bootstrap ou semi-parametric-bootstrap) permet de calculer, pour les différents paramètres d’un modèle, un intervalle de confiance. L’idée étant de réajuster un grand nombre de fois le modèle sur des sous-échantillons de données pour saisir la variabilité des différents paramètres du modèle. Si les intervalles de confiance ainsi construits ne comprennent pas de zéro, il est possible de dire que cet effet est significatif. À nouveau, cette méthode n’est valide que si le jeu de données comporte suffisamment d’observations. L’intérêt de cette approche est qu’elle ne postule pas d’hypothèse sur la distribution des paramètres qui ont la fâcheuse tendance à ne pas suivre une distribution normale dans le cas des GLMM. Elle est d’ailleurs considérée comme la plus robuste, bien que coûteuse en termes de temps de calcul.\n\n9.4.2 Inférence pour les effets aléatoires, effet global\nPour déterminer si un effet aléatoire est significatif dans un modèle, il est recommandé d’utiliser un test de rapport de vraisemblance entre un modèle sans l’effet aléatoire et un modèle avec l’effet aléatoire. L’analyse des différences entre les valeurs de déviance, l’AIC et le BIC peut également aider à déterminer si l’ajout de l’effet aléatoire est justifié. Il est également possible de considérer les valeurs de l’ICC et du R2 conditionnel. Notez ici que si vous avez une très bonne raison théorique d’ajouter l’effet aléatoire dans votre modèle et suffisamment d’observations / groupes pour l’ajuster, il peut être pertinent de laisser l’effet aléatoire dans le modèle même si tous les indicateurs mentionnés précédemment indiquent qu’il contribue faiblement au modèle. Le retirer risquerait en effet de donner l’impression que les autres paramètres du modèle sont plus significatifs qu’ils ne le sont en réalité.\nNotez que l’approche par bootstrapping décrite pour les effets fixes peut aussi être utilisée ici pour obtenir un intervalle de confiance pour l’ICC, le R2 conditionnel et les différents paramètres de variance et covariance.\n\n9.4.3 Inférence pour les effets aléatoires, des constantes et des pentes\nPour rappel, dans l’approche fréquentiste présentée ici, les valeurs des constantes et des pentes aléatoires ne sont pas à proprement parler des paramètres du modèle : elles sont estimées a posteriori (BLUP). Pour déterminer si ces constantes et des pentes sont significativement différentes de zéro et significativement différentes les unes des autres, il est possible de calculer les intervalles de confiance de chacune d’entre elles par bootstrap, par profilage ou par simulation à partir du modèle. Si la constante du groupe j a zéro dans son intervalle de confiance, nous pouvons alors déclarer que le groupe j en question ne semble pas varier du reste de la population en termes de moyenne. Si la pente l du groupe j a zéro dans son intervalle de confiance, nous pouvons alors déclarer que le groupe j en question ne semble pas varier du reste de la population pour l’effet l. Notez que la méthode par simulation est bien plus rapide que les deux autres, mais que l’approche par bootstrapping reste la plus fiable."
  },
  {
    "objectID": "09-GLMM.html#sec-095",
    "href": "09-GLMM.html#sec-095",
    "title": "9  Régressions à effets mixtes (GLMM)",
    "section": "\n9.5 Conclusion sur les GLMM",
    "text": "9.5 Conclusion sur les GLMM\nLes GLMM sont donc une extension des GLM offrant une grande flexibilité de modélisation (variabilité des pentes et des constantes en fonction de groupes) et nous permettant d’analyser la partition de la variance entre plusieurs niveaux de nos données. Cependant, cette flexibilité implique des modèles plus complexes avec un travail de diagnostic et d’interprétation plus long et potentiellement plus ardu."
  },
  {
    "objectID": "09-GLMM.html#sec-096",
    "href": "09-GLMM.html#sec-096",
    "title": "9  Régressions à effets mixtes (GLMM)",
    "section": "\n9.6 Mise en œuvre des GLMM dans R",
    "text": "9.6 Mise en œuvre des GLMM dans R\nPour cet exemple de GLMM, nous proposons d’analyser à nouveau les données présentées dans la section 6.2.1.1 sur le modèle logistique binomial. Pour rappel, nous modélisions la probabilité qu’un individu utilise le vélo comme mode de transport pour son trajet le plus fréquent en utilisant une enquête réalisée auprès d’environ 26 000 Européens. Initialement, nous avons intégré les pays comme un effet fixe. Or, nous savons à présent qu’il serait plus judicieux de les traiter comme un effet aléatoire. Nous comparons deux modèles, un pour lequel seulement la constante varie par pays et un second dans lequel la pente pour l’âge varie également par pays. L’hypothèse étant que l’effet de l’âge sur l’utilisation du vélo pourrait être réduit dans certains pays où la culture du vélo est plus présente. Cette hypothèse implique également la présence potentielle d’une corrélation inverse entre la constante et la pente de chaque pays : dans un pays où la probabilité de base d’utiliser le vélo est plus élevée, l’effet de l’âge est probablement réduit.\nPour ajuster ces modèles, nous utilisons le package lme4, permettant d’ajuster des modèles GLMM avec des distributions gaussienne, Gamma, de Poisson et binomial. Lorsque d’autres distributions sont nécessaires, il est possible de se tourner vers le package gamlss. Notez cependant que les effets aléatoires de gamlss sont estimés avec une méthode appelée PQL très flexible, mais qui peut produire des résultats erronés dans certains cas (Bolker et al. 2009).\nAfin de limiter les répétitions, nous ne recalculons pas ici le VIF et nous excluons d’emblée les observations aberrantes (provenant de Malte ou de Chypre ou avec des temps de trajets supérieurs à 400 minutes).\n\n9.6.1 Ajustement du modèle avec uniquement une constante aléatoire\nNous commençons donc par ajuster un premier modèle avec une constante aléatoire en fonction du pays. Dans la plupart des packages intégrant des effets aléatoires, la syntaxe suivante est utilisée pour stipuler une constante aléatoire : + (1|Pays). Concrètement, nous tentons d’ajuster le modèle décrit par l’équation 9.11.\n\\[\n\\begin{aligned}\n&Y \\sim Binomial(p)\\\\\n&g(p) = \\beta_0 + \\beta_1 x_1 + \\upsilon \\\\\n&\\upsilon \\sim Normal(0, \\sigma_{\\upsilon}) \\\\\n&g(x) = log(\\frac{x}{1-x})\n\\end{aligned}\n\\tag{9.11}\\]\nIl s’agit simplement d’un modèle logistique binomial dans lequel nous avons ajouté une constante aléatoire : \\(\\upsilon\\). Dans notre cas, elle varie avec la variable Pays. La syntaxe dans R pour produire ce modèle est la suivante.\n\n# Chargement des données\ndfenquete &lt;- read.csv(\"data/glm/enquete_transport_UE.csv\", encoding = \"UTF-8\")\ndfenquete$Pays &lt;- relevel(as.factor(dfenquete$Pays), ref = \"Allemagne\")\n# Retirer les observations aberrantes\ndfenquete2 &lt;- subset(dfenquete, (dfenquete$Pays %in% c(\"Malte\", \"Chypre\")) == F & \n                  dfenquete$Duree &lt; 400)\n# Ajustement du modèle\nlibrary(lme4)\n# Nécessité ici de centrer et réduire ces variables pour permettre au modèle de converger\ndfenquete2$Age2 &lt;- scale(dfenquete2$Age, center = TRUE, scale = TRUE)\ndfenquete2$Duree2 &lt;- scale(dfenquete2$Duree, center = TRUE, scale = TRUE)\nmodele1 &lt;- glmer(y ~Sexe + Age2 + Education + StatutEmploi + Revenu +\n              Residence + Duree2 + ConsEnv + (1|Pays),\n            family = binomial(link=\"logit\"),\n            control = glmerControl(optimizer = \"bobyqa\"),\n            data = dfenquete2)\n\nNous nous concentrons ici sur l’interprétation des résultats du modèle et nous réalisons l’ensemble des diagnostics dans une section dédiée en fin de chapitre. Notez cependant que le diagnostic devrait précéder l’interprétation comme nous l’avons vu dans le chapitre sur les modèles GLM.\nVous constaterez que nous avons centré-réduit les variables Age et Duree. Il est souvent nécessaire de réaliser cette étape en amont pour s’assurer que le modèle converge sans trop de difficulté. Dans notre cas, si ces deux variables sont laissées dans leur échelle d’origine, la fonction glmer ne parvient pas à ajuster le modèle. Notez que cette transformation nous permet d’obtenir les coefficients standardisés, s’exprimant alors en écarts-types. La fonction summary nous donne accès à un premier ensemble d’informations.\n\nsummary(modele1)\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: y ~ Sexe + Age2 + Education + StatutEmploi + Revenu + Residence +  \n    Duree2 + ConsEnv + (1 | Pays)\n   Data: dfenquete2\nControl: glmerControl(optimizer = \"bobyqa\")\n\n     AIC      BIC   logLik deviance df.resid \n 19176.1  19322.8  -9570.1  19140.1    25529 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-1.1989 -0.4418 -0.3212 -0.2134  7.2461 \n\nRandom effects:\n Groups Name        Variance Std.Dev.\n Pays   (Intercept) 0.5949   0.7713  \nNumber of obs: 25547, groups:  Pays, 26\n\nFixed effects:\n                               Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                   -3.368957   0.212504 -15.854  &lt; 2e-16 ***\nSexehomme                      0.370864   0.037921   9.780  &lt; 2e-16 ***\nAge2                          -0.102387   0.018776  -5.453 4.95e-08 ***\nEducationsecondaire            0.188098   0.103158   1.823  0.06824 .  \nEducationsecondaire inferieur  0.297593   0.111304   2.674  0.00750 ** \nEducationuniversite            0.138671   0.106469   1.302  0.19276    \nStatutEmploisans emploi        0.256477   0.042282   6.066 1.31e-09 ***\nRevenufaible                   0.073837   0.071642   1.031  0.30271    \nRevenumoyen                    0.039405   0.065232   0.604  0.54579    \nRevenusans reponse             0.215705   0.102286   2.109  0.03496 *  \nRevenutres eleve              -0.121254   0.185272  -0.654  0.51281    \nRevenutres faible              0.237388   0.085700   2.770  0.00561 ** \nResidencegrande ville          0.272280   0.069276   3.930 8.48e-05 ***\nResidencepetite-moyenne ville  0.276285   0.061492   4.493 7.02e-06 ***\nResidencezone rurale          -0.118965   0.069091  -1.722  0.08510 .  \nDuree2                        -0.018718   0.019241  -0.973  0.33065    \nConsEnv                        0.101757   0.009277  10.969  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nLa première partie de ce résumé nous rappelle la formule utilisée pour le modèle et nous indique différents indicateurs de qualité d’ajustement comme l’AIC, le BIC et la déviance. Nous avons ensuite une partie dédiée aux effets aléatoires (Random Effects) et une partie dédiée aux effets fixes (Fixed effects). Cette dernière s’interprète de la même manière que pour un modèle à effets fixes, n’oubliez cependant pas d’utiliser la fonction exponentielle pour obtenir les rapports de cotes (fonction de lien logistique).\n\n9.6.1.1 Rôle joué par l’effet aléatoire\nComme vous pouvez le constater, la section Random Effects ne comprend qu’un seul paramètre : la variance de l’effet pays. Nous pouvons ainsi écrire que l’effet du pays suit une distribution normale avec une moyenne de 0 et une variance \\(\\sigma^2\\) de 0,595. Pour aller plus loin dans cette analyse, nous pouvons calculer le coefficient de corrélation intraclasse (ICC). Cependant, puisque notre modèle est binomial et non gaussien, nous ne disposons pas d’un paramètre de variance au niveau des individus, il est donc possible, à la place, d’utiliser la variance théorique du modèle : \\(\\frac{\\pi^2}{3}\\). Nous calculons ainsi notre ICC :\n\n# Extraction de la variance des Pays\nvar_pays &lt;- VarCorr(modele1)[[1]][[1]]\n# Calcul de l'ICC\nvar_pays / (((pi**2)/3) + var_pays)\n\n[1] 0.1531364\n\n\nNous pouvons parvenir au même résultat en utilisant la fonction icc du package performance.\n\nlibrary(performance)\n# Calcul de l'ICC\nicc(modele1)\n\n# Intraclass Correlation Coefficient\n\n    Adjusted ICC: 0.153\n  Unadjusted ICC: 0.148\n\n\nNotez que cette fonction distingue un ICC ajusté et un ICC conditionnel. Le premier correspond à l’ICC que nous avons présenté jusqu’ici et que nous avons calculé à la main. L’ICC conditionnel inclut dans son estimation la variance présente dans les effets fixes. Un fort écart entre ces deux ICC indique que les effets fixes sont capables de capturer une très forte variance dans les données, ce qui pourrait remettre en cause la pertinence de l’effet aléatoire. Dans notre cas, la différence entre les deux est très faible.\nEn plus du ICC, nous pouvons calculer les R2 marginal et conditionnel. Pour cela, nous utilisons la fonction r.squaredGLMM du package MuMIn.\n\nlibrary(MuMIn)\nr.squaredGLMM(modele1)\n\n                   R2m        R2c\ntheoretical 0.03492162 0.18271030\ndelta       0.01554525 0.08133291\n\n\nCette fonction nous renvoie à la fois les R2 obtenus en utilisant la variance théorique du modèle (\\(\\frac{\\pi^2}{3}\\) dans notre cas) et la variance estimée par la méthode delta. La seconde est plus conservative, mais les deux résultats indiquent que les effets aléatoires expliquent une part importante de la variance comparativement aux effets fixes. Notez également que la fonction r2 du package performance peut calculer ces deux R2, mais seulement en utilisant la variance théorique.\n\n9.6.1.2 Significativité de l’effet aléatoire\nNous souhaitons déterminer ici si notre effet aléatoire contribue à significativement améliorer le modèle. Pour cela, nous effectuons un test de rapport de vraisemblance entre le modèle sans l’effet aléatoire (un simple GLM ici) et le modèle complet. Nous utilisons pour cela la fonction anova :\n\n# Ajustement d'un modèle sans l'effet aléatoire\nmodel_simple &lt;- glm(y ~Sexe + Age2 + Education + StatutEmploi + Revenu +\n              Residence + Duree2 + ConsEnv,\n            family = binomial(link=\"logit\"),\n            data = dfenquete2)\n# Comparaison des deux modèles\nanova(modele1, model_simple)\n\nData: dfenquete2\nModels:\nmodel_simple: y ~ Sexe + Age2 + Education + StatutEmploi + Revenu + Residence + Duree2 + ConsEnv\nmodele1: y ~ Sexe + Age2 + Education + StatutEmploi + Revenu + Residence + Duree2 + ConsEnv + (1 | Pays)\n             npar   AIC   BIC   logLik deviance Chisq Df Pr(&gt;Chisq)    \nmodel_simple   17 20521 20660 -10243.6    20487                        \nmodele1        18 19176 19323  -9570.1    19140  1347  1  &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nLe test indique clairement que le modèle complet est mieux ajusté : les valeurs de l’AIC, du BIC et de la déviance sont toutes grandement réduites et le test est largement significatif.\nPour aller plus loin, nous pouvons utiliser une approche par bootstrap pour calculer un intervalle de confiance pour la variance de l’effet aléatoire, l’ICC et le R2 conditionnel. Nous utilisons pour cela la fonction bootMer. Si vous essayez de lancer cette syntaxe, vous constaterez qu’elle prend énormément de temps, ce qui s’explique par le grand nombre de fois où le modèle doit être réajusté. Nous vous recommandons donc de bien enregistrer vos résultats après l’exécution de la fonction avec la fonction save. Notez que pour réduire significativement le temps de calcul, il est possible d’utiliser simultanément plusieurs cœurs de votre processeur, ce que nous faisons ici avec le package snow.\n\n# Définition d'une fonction pour extraire les valeurs qui nous intéressent\nextractor &lt;- function(mod){\n  vari &lt;- VarCorr(mod)[[1]][[1]]\n  ICC &lt;- vari / (vari + (pi**2/3))\n  r2cond &lt;- performance::r2(mod)[[1]]\n  return(c(\"vari\"=vari,\"icc\"=ICC,\"r2cond\"=r2cond))\n}\n# Préparation d'un environnement multitraitement pour accélérer le calcul\nlibrary(snow)\n# Préparation de huit coeurs (attention si votre machine en a moins!)\ncl &lt;- makeCluster(8)\nclusterEvalQ(cl, library(\"lme4\"))\nvaleurs &lt;- bootMer(modele1, FUN = extractor, nsim = 1000,\n                   use.u = FALSE, type = \"parametric\", ncpus = 8,\n                   parallel=\"snow\",\n                   cl = cl)\n# Sauvegarde des résultats\nsave(valeurs, file = 'data/glmm/boot_binom.rda')\n\nNous pouvons à présent analyser l’incertitude de ces différents paramètres. Pour cela, nous devons commencer par observer graphiquement leurs distributions obtenues par bootstrap avec la figure 9.17.\n\n# Chargement de nos valeurs préalablement enregistrées\nload('data/glmm/boot_binom.rda')\n# Construction de trois graphiques de distribution\ndf &lt;- data.frame(valeurs$t)\nnames(df) &lt;- c(\"variance\" , \"icc\" , \"R2cond\")\nbreaks1 &lt;- as.vector(quantile(df$variance, probs = c(0.001,0.15,0.5,0.85, 0.999)))\nlabs1 &lt;- round(breaks1,2)\np1 &lt;- ggplot(df) + \n  geom_histogram(aes(x = variance), bins = 50, fill = \"#e63946\", color = \"black\")+\n  geom_vline(xintercept = median(df$variance),\n             color = \"black\", linetype = \"dashed\", size = 1)+\n  scale_x_continuous(breaks = breaks1, labels = labs1)+\n  theme(axis.ticks.y = element_blank(),\n        axis.text.y = element_blank(), axis.title.y = element_blank())\nbreaks2 &lt;- as.vector(quantile(df$icc, probs = c(0.001,0.15,0.5,0.85, 0.999)))\nlabs2 &lt;- round(breaks2,2)\np2 &lt;- ggplot(df) + \n  geom_histogram(aes(x = icc), bins = 50, fill = \"#a8dadc\", color = \"black\")+\n  geom_vline(xintercept = median(df$icc),\n             color = \"black\", linetype = \"dashed\", size = 1)+\n  scale_x_continuous(breaks = breaks2, labels = labs2)+\n  theme(axis.ticks.y = element_blank(),\n        axis.text.y = element_blank(), axis.title.y = element_blank())\nbreaks3 &lt;- as.vector(quantile(df$R2cond, probs = c(0.001,0.15,0.5,0.85, 0.999)))\nlabs3 &lt;- round(breaks3,3)\np3 &lt;- ggplot(df) + \n  geom_histogram(aes(x = R2cond), bins = 50, fill = \"#1d3557\", color = \"black\")+\n  geom_vline(xintercept = median(df$R2cond),\n             color = \"black\", linetype = \"dashed\", size = 1)+\n  scale_x_continuous(breaks = breaks3, labels = labs3)+\n  theme(axis.ticks.y = element_blank(),\n        axis.text.y = element_blank(), axis.title.y = element_blank())\nggarrange(p1, p2, p3, nrow = 2, ncol = 2)\n\n\n\nFigure 9.17: Distributions obtenues par bootstrap de la variance de l’effet aléatoire, de l’ICC et du R carré conditionnel\n\n\n\nLes trois distributions sont toutes suffisamment éloignées de zéro pour que nous puissions en conclure que ces différentes valeurs sont toutes différentes de zéro. Notez également que les distributions sont relativement symétriques, indiquant que nous disposons de probablement suffisamment d’information dans nos données pour inclure notre effet aléatoire. Des distributions fortement asymétriques indiqueraient, au contraire, une forte difficulté du modèle à estimer le paramètre de variance à partir des données. Dans un article, il n’est pas nécessaire de reporter ces graphiques, mais plus simplement les intervalles de confiance à 95 % et les médianes.\n\n# Intervalle de confiance pour la variance\nquantile(df$variance, probs = c(0.0275,0.5,0.975))\n\n    2.75%       50%     97.5% \n0.3059400 0.5578986 0.9200472 \n\n# Intervalle de confiance pour l'ICC\nquantile(df$icc, probs = c(0.0275,0.5,0.975))\n\n    2.75%       50%     97.5% \n0.0850824 0.1449928 0.2185428 \n\n# Intervalle de confiance pour le R2 conditionnel\nquantile(df$R2cond, probs = c(0.0275,0.5,0.975))\n\n    2.75%       50%     97.5% \n0.1208577 0.1772778 0.2462622 \n\n\n\n9.6.1.3 Significativité des différentes constantes\nPuisque nous avons conclu que l’effet aléatoire contribue significativement au modèle, nous pouvons à présent vérifier si les constantes ajustées pour chaque pays varient significativement les unes des autres. Pour rappel, les pentes et les constantes aléatoires ne sont pas directement estimées par le modèle, mais a posteriori. Il en résulte qu’il n’y a pas de moyen direct de mesurer l’incertitude de ces paramètres, et donc de construire des intervalles de confiance. Une première option pour contourner ce problème est d’effectuer des simulations à partir de la distribution postérieure du modèle. Notez que cette approche s’inspire largement de l’approche statistique bayésienne. Nous utilisons ici le package merTools pour effectuer 1000 simulations et obtenir une erreur standard pour chaque constante aléatoire de chaque pays.\n\n# Simulations et extraction des effets aléatoires\nlibrary(merTools)\nlibrary(dplyr)\nsimsRE &lt;- REsim(modele1, n.sims = 1000, oddsRatio = FALSE)\n# Calcul des intervalles de confiance\nsimsRE$lower &lt;- simsRE$mean - 1.96 * simsRE$sd\nsimsRE$upper &lt;- simsRE$mean + 1.96 * simsRE$sd\n# Variable binaire pour la significativité\nsimsRE$sign &lt;- case_when(\n  simsRE$lower&lt;0 & simsRE$upper&lt;0 ~ \"inf\",\n  simsRE$lower&gt;0 & simsRE$upper&gt;0 ~ \"sup\",\n  TRUE ~ \"not\"\n)\n# Représentation des intervalles de confiance\nggplot(simsRE) + \n  geom_errorbarh(aes(xmin = lower, xmax = upper,\n                     y = reorder(groupID, mean)), size = 0.5, height = 0.5) + \n  geom_point(aes(x = mean, y = reorder(groupID, mean),\n                 color = sign)) + \n  scale_color_manual(values = c(\"inf\" = \"#0077b6\", \"sup\" = \"#e63946\", \"not\"=\"#000000\"), \n                     labels = c(\"sign. &lt; 0\", \"sign. &gt; 0\", \"non sign.\")) +\n  labs(x = \"Constante aléatoire\", y = \"Pays\")\n\n\n\nFigure 9.18: Constantes aléatoires estimées par Pays (IC par simulations)\n\n\n\nLa figure 9.18 permet de repérer en un coup d’oeil les pays pour lesquels la probabilité d’utiliser le vélo comme moyen de transport pour le trajet le plus fréquent est la plus élevée ou la plus faible. Notez cependant que les valeurs représentées sont pour l’instant des logarithmes de rapport de cotes. Nous devons donc les convertir en rapports de cotes avec la fonction exponentielle pour faciliter leur interprétation.\n\n# Conversion en rapports de cote (et arrondissement à trois décimales)\nmat &lt;- round(exp(simsRE[c(\"mean\" , \"lower\" , \"upper\")]),3)\nrownames(mat) &lt;- simsRE$groupID\nnames(mat) &lt;- c(\"RC\" , \"RC.025\" , \"RC.975\")\nprint(mat)\n\n                   RC RC.025 RC.975\nAllemagne       1.667  1.191  2.333\nAutriche        1.311  0.927  1.853\nBelgique        1.428  1.022  1.997\nBulgarie        0.541  0.374  0.784\nCroatie         1.880  1.354  2.610\nDanemark        4.043  2.926  5.587\nEspagne         0.292  0.194  0.439\nEstonie         1.121  0.787  1.598\nFinlande        2.242  1.621  3.102\nFrance          0.523  0.357  0.766\nGrande Bretagne 0.396  0.269  0.583\nGrèce           0.615  0.422  0.897\nHongrie         2.359  1.700  3.273\nIreland         0.377  0.254  0.558\nItalie          0.805  0.575  1.126\nLettonie        1.270  0.901  1.790\nLituanie        0.902  0.632  1.287\nLuxembourg      0.419  0.262  0.670\nPays-Bas        3.939  2.873  5.400\nPologne         1.658  1.189  2.311\nPortugal        0.218  0.139  0.340\nRoumanie        0.542  0.376  0.781\nSlovaquie       1.029  0.727  1.455\nSlovénie        1.363  0.969  1.916\nSuède           2.166  1.555  3.018\nTchéquie        1.172  0.837  1.641\n\n\nNous observons ainsi qu’une personne vivant en Finlande voit ses chances multipliées par 2,25 d’utiliser le vélo comme mode de transport pour son trajet le plus fréquent comparativement à la moyenne des pays européens. À l’inverse, une personne résidant en France a 47 % de chances de moins d’utiliser le vélo.\nNotez cependant que cette approche basée sur des simulations peut poser des problèmes, car elle ne renvoie qu’une erreur standard pour mesurer l’incertitude de nos constantes. Dans les cas où nous ne disposons pas de beaucoup d’observations par groupe, la distribution a posteriori des constantes peut être asymétrique, rendant l’estimation des intervalles de confiance par les erreurs standards inutiles. Il est possible de détecter ce cas de figure quand les médianes et les moyennes renvoyées par la fonction simsRE diffèrent nettement. Une alternative plus robuste est à nouveau d’estimer la variabilité des effets aléatoires par bootstrap. Cette méthode requiert bien plus de temps de calcul que la précédente, nous vous recommandons donc de commencer par la méthode par simulations pour disposer d’un premier aperçu des résultats et d’utiliser ensuite la méthode bootstrap quand votre modèle est dans sa forme finale.\n\n# Création de la fonction d'extraction\nextractor2 &lt;- function(mod){\n  elements &lt;- ranef(mod)$Pays\n  vec &lt;- elements[,1]\n  names(vec) &lt;- rownames(elements)\n  return(vec)\n}\n# Préparation de l'opération en multitraitement\ncl &lt;- makeCluster(8)\nclusterEvalQ(cl, library(\"lme4\"))\n# Calcul des effets aléatoires en bootstrap\nvaleurs &lt;- bootMer(modele1, FUN = extractor2, nsim = 1000,\n                   use.u = T, type = \"parametric\", ncpus = 8,\n                   parallel=\"snow\",\n                   cl = cl)\n# Sauvegarder des résultats!\nsave(valeurs, file = 'data/glmm/boot_binom2.rda')\n\nPuisque nous disposons des distributions bootstrapées des différents effets aléatoires, nous pouvons directement les représenter dans un graphique (figure 9.19). Les résultats sont très similaires à ceux de la figure 9.18, ce qui s’explique par le grand nombre d’observations et de groupes. Avec moins d’observations, il est recommandé de privilégier l’approche par bootstrap.\n\n# Chargement de nos valeurs bootstrapées\nload('data/glmm/boot_binom2.rda')\n# Conversion des bootstraps en intervalle de confiance\nq025 &lt;- function(x){return(quantile(x, probs = 0.025))}\nq975 &lt;- function(x){return(quantile(x, probs = 0.975))}\ndf &lt;- reshape2::melt(valeurs$t)\ndf_med &lt;- df %&gt;% group_by(Var2) %&gt;% summarise(\n  med = median(value),\n  lower = q025(value),\n  upper = q975(value))\n# Ajout d'une variable pour la couleur si significatif\ndf_med$sign &lt;- case_when(\n  df_med$lower&lt;0 & df_med$upper&lt;0 ~ \"inf\",\n  df_med$lower&gt;0 & df_med$upper&gt;0 ~ \"sup\",\n  TRUE ~ \"not\"\n)\n# Affichage des résultats\nggplot(df_med) + \n  geom_errorbar(aes(xmin = lower, xmax = upper, y = reorder(Var2, med)), width = 0.5) +\n  geom_point(aes(x = med, y = reorder(Var2, med), color = sign)) + \n  scale_color_manual(values = c(\"inf\" = \"#0077b6\", \"sup\" = \"#e63946\", \"not\"=\"#000000\"), \n                     labels = c(\"sign. &lt; 0\", \"sign. &gt; 0\", \"non sign.\")) +\n  labs(x = \"Constante aléatoire\", y = \"Pays\")\n\n\n\nFigure 9.19: Constantes aléatoires estimées par Pays (IC par bootstrap)\n\n\n\n\n9.6.2 Ajustement du modèle avec constantes et pentes aléatoires\nDans le modèle précédent, nous avons ajusté, pour chaque pays, une constante aléatoire afin de vérifier si la probabilité d’utiliser le vélo comme mode de transport principal changeait d’un pays d’Europe à l’autre. Nous souhaitons à présent tester l’hypothèse que l’effet de l’âge sur la probabilité d’utiliser le vélo varie d’un pays à l’autre. Pour cela, nous ajustons des constantes aléatoires par pays. Nous comparons trois modèles, triés ici selon leur niveau de complexité (nombre de paramètres) :\n\nle modèle avec uniquement des constantes aléatoires;\nle modèle avec des constantes et des pentes aléatoires indépendantes;\nle modèle avec des constantes et des pentes aléatoires corrélées.\n\nDans le package lme4, les syntaxes pour ajuster ces trois modèles sont les suivantes :\n\nconstantes aléatoires : +(1|Pays);\nconstantes et pentes aléatoires indépendantes : +(1 + Age||Pays);\nconstantes et pentes aléatoires corrélées : +(1 + Age|Pays).\n\nNotez qu’il est aussi possible d’ajuster un modèle avec uniquement des pentes aléatoires avec la syntaxe : +(-1 + Age|Pays). Le paramètre -1 sert à retirer explicitement la constante aléatoire du modèle. Ajustons donc nos deux modèles avec pentes et constantes aléatoires.\n\n# Constantes et pentes aléatoires indépendantes\nmodele2 &lt;- glmer(y ~ Sexe + Age2 + Education + StatutEmploi + Revenu +\n              Residence + Duree2 + ConsEnv + (1 + Age2||Pays),\n            family = binomial(link=\"logit\"),\n            control = glmerControl(optimizer = \"bobyqa\"),\n            data = dfenquete2)\n# Constantes et pentes aléatoires corrélées\nmodele3 &lt;- glmer(y ~ Sexe + Age2 + Education + StatutEmploi + Revenu +\n              Residence + Duree2 + ConsEnv + (1 + Age2|Pays),\n            family = binomial(link=\"logit\"),\n            control = glmerControl(optimizer = \"bobyqa\"),\n            data = dfenquete2)\n\n\n9.6.2.1 Significativité de l’effet aléatoire\nPuisque les trois modèles sont imbriqués, la première étape est de vérifier si les ajouts successifs au modèle de base sont significatifs, ce que nous pouvons tester avec un rapport de vraisemblance.\n\nanova(modele1, modele2, modele3)\n\nData: dfenquete2\nModels:\nmodele1: y ~ Sexe + Age2 + Education + StatutEmploi + Revenu + Residence + Duree2 + ConsEnv + (1 | Pays)\nmodele2: y ~ Sexe + Age2 + Education + StatutEmploi + Revenu + Residence + Duree2 + ConsEnv + (1 + Age2 || Pays)\nmodele3: y ~ Sexe + Age2 + Education + StatutEmploi + Revenu + Residence + Duree2 + ConsEnv + (1 + Age2 | Pays)\n        npar   AIC   BIC  logLik deviance  Chisq Df Pr(&gt;Chisq)   \nmodele1   18 19176 19323 -9570.1    19140                        \nmodele2   19 19171 19325 -9566.3    19133 7.5754  1   0.005917 **\nmodele3   20 19172 19335 -9566.1    19132 0.4033  1   0.525385   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nNous constatons ainsi que l’ajout des pentes aléatoires permet d’améliorer significativement le modèle, mais que l’ajout de la corrélation entre les pentes et les constantes aléatoires a un apport très marginal. Nous décidons tout de même de le garder dans un premier temps, car ce paramètre a un intérêt théorique. Affichons le résumé du modèle 3.\n\nsummary(modele3)\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: y ~ Sexe + Age2 + Education + StatutEmploi + Revenu + Residence +  \n    Duree2 + ConsEnv + (1 + Age2 | Pays)\n   Data: dfenquete2\nControl: glmerControl(optimizer = \"bobyqa\")\n\n     AIC      BIC   logLik deviance df.resid \n 19172.2  19335.1  -9566.1  19132.2    25527 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-1.2087 -0.4392 -0.3218 -0.2137  7.1677 \n\nRandom effects:\n Groups Name        Variance Std.Dev. Corr \n Pays   (Intercept) 0.594976 0.77135       \n        Age2        0.007326 0.08559  -0.22\nNumber of obs: 25547, groups:  Pays, 26\n\nFixed effects:\n                              Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                   -3.35793    0.21306 -15.760  &lt; 2e-16 ***\nSexehomme                      0.37289    0.03796   9.823  &lt; 2e-16 ***\nAge2                          -0.08775    0.02780  -3.157 0.001594 ** \nEducationsecondaire            0.17963    0.10382   1.730 0.083597 .  \nEducationsecondaire inferieur  0.28700    0.11189   2.565 0.010315 *  \nEducationuniversite            0.13012    0.10713   1.215 0.224510    \nStatutEmploisans emploi        0.25625    0.04251   6.028 1.66e-09 ***\nRevenufaible                   0.07058    0.07182   0.983 0.325727    \nRevenumoyen                    0.03841    0.06534   0.588 0.556594    \nRevenusans reponse             0.20362    0.10265   1.984 0.047304 *  \nRevenutres eleve              -0.12420    0.18566  -0.669 0.503528    \nRevenutres faible              0.23562    0.08595   2.741 0.006117 ** \nResidencegrande ville          0.26958    0.06936   3.887 0.000102 ***\nResidencepetite-moyenne ville  0.27570    0.06157   4.478 7.53e-06 ***\nResidencezone rurale          -0.11897    0.06917  -1.720 0.085428 .  \nDuree2                        -0.01889    0.01927  -0.980 0.327069    \nConsEnv                        0.10189    0.00929  10.967  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nÀ nouveau, nous nous intéressons ici principalement à la section Random Effect, puisque les effets fixes s’interprètent exactement comme dans les modèles présentés dans le chapitre 6. Les constantes ont une variance de 0,595 et les pentes de 0,007. La corrélation entre les deux effets est de -0,22. Cette corrélation est négative et relativement faible, ce qui signifie que les pays dans lesquels la constante est forte tendent à avoir un coefficient plus petit pour l’âge, et donc une réduction accrue de la probabilité d’utiliser le vélo avec l’âge. Nous devons cependant encore nous assurer qu’elle est significativement différente de 0. Pour cela, nous devons calculer l’intervalle de confiance des trois paramètres de variance du modèle. Nous utilisons à nouveau une approche par bootstrap et nous enregistrons les résultats.\n\n# Fonction d'extraction des trois paramètres de variance\nextractor3 &lt;- function(mod){\n  vari1 &lt;- VarCorr(mod)[[1]][[1]]\n  vari2 &lt;- VarCorr(mod)[[1]][[4]]\n  covari &lt;- VarCorr(mod)[[1]][[2]]\n  return(c(\"vari1\"=vari1,\"vari2\"=vari2,\"covari\"=covari))\n}\n# Lancement du bootstrap\nvaleurs &lt;- bootMer(modele3, FUN = extractor3, nsim = 1000,\n                   use.u = FALSE, type = \"parametric\", ncpus = 8,\n                   parallel=\"snow\",\n                   cl = cl,\n                   .progress=\"txt\", PBarg=list(style=3))\n# Enregistrement des résultats\nsave(valeurs, file = 'data/glmm/boot_binom3.rda')\n\nÀ partir des valeurs bootstrapées, nous pouvons représenter les distributions de ces trois paramètres (variance des constantes, variance des pentes et corrélation entre les deux).\n\n# Chargement des résultats\nload('data/glmm/boot_binom3.rda')\n# Conversion des valeurs de covariance en corrélation\ndf &lt;- data.frame(\n  corr_values = valeurs$t[,3] / (sqrt(valeurs$t[,1]) * sqrt(valeurs$t[,2])),\n  vari_const = valeurs$t[,1],\n  vari_pente = valeurs$t[,2]\n  )\n# Histogramme pour la variance des constantes\nbreaks1 &lt;- quantile(df$vari_const, probs=c(0.025,0.5,0.975,0.999))\nlabel1 &lt;- round(breaks1,3)\np1 &lt;- ggplot(df) + \n  geom_histogram(aes(x = vari_const), color = \"black\", fill = \"white\", bins = 30) + \n  geom_vline(xintercept = median(df$vari_const), color = \"red\", linetype = 1, linetype = \"dashed\") + \n  geom_vline(xintercept = quantile(df$vari_const, probs = 0.025), \n             color = \"blue\", linetype = 0.5, linetype = \"dashed\") + \n  geom_vline(xintercept = quantile(df$vari_const, probs = 0.975), \n             color = \"blue\", linetype = 0.5, linetype = \"dashed\") + \n  labs(x = \"Variance des constantes\", y = \"\")+ \n  scale_x_continuous(breaks = breaks1, labels = label1)\n# Histogramme pour la variance des pentes\nbreaks2 &lt;- quantile(df$vari_pente, probs=c(0.025,0.5,0.975,0.999))\nlabel2 &lt;- round(breaks2,3)\np2 &lt;- ggplot(df) + \n  geom_histogram(aes(x = vari_pente), color = \"black\", fill = \"white\", bins = 30) + \n  geom_vline(xintercept = median(df$vari_pente), color = \"red\", linetype = 1, linetype = \"dashed\") + \n  geom_vline(xintercept = quantile(df$vari_pente, probs = 0.025), \n             color = \"blue\", size = 0.5, linetype = \"dashed\") + \n  geom_vline(xintercept = quantile(df$vari_pente, probs = 0.975), \n             color = \"blue\", size = 0.5, linetype = \"dashed\") + \n  labs(x = \"Variance des pentes\", y = \"\")+\n  scale_x_continuous(breaks = breaks2, labels = label2)\n# Histogramme pour la corrélation\nbreaks3 &lt;- c(-1,-0.5,0,0.5,1, median(df$corr_values))\nlabel3 &lt;- round(breaks3,3)\np3 &lt;- ggplot(df) + \n  geom_histogram(aes(x = corr_values), color = \"black\", fill = \"white\", bins = 30) + \n  geom_vline(xintercept = median(df$corr_values), color = \"red\", size = 1, linetype = \"dashed\") + \n  geom_vline(xintercept = quantile(df$corr_values, probs = 0.025), \n             color = \"blue\", size = 0.5, linetype = \"dashed\") + \n  geom_vline(xintercept = quantile(df$corr_values, probs = 0.975), \n             color = \"blue\", size = 0.5, linetype = \"dashed\") + \n  labs(x = \"Corrélation pentes/constantes\", y = \"\") + \n  scale_x_continuous(breaks = breaks3, labels = label3)\nggarrange(p1, p2, p3, ncol = 2, nrow = 2)\n\n\n\nFigure 9.20: Incertitude autour des paramètres de variance obtenue par bootstrap\n\n\n\nNous constatons ainsi, à la figure 9.20, que la variance des constantes aléatoires est significativement différente de zéro (cette valeur n’est pas dans l’intervalle de confiance à 95 % représenté par les lignes verticales bleues) et une médiane de 0,56 (ligne verticale rouge). Pour les pentes, zéro est également à la limite de l’intervalle de confiance, et la distribution asymétrique et étalée nous indique que ce paramètre est fortement incertain dans le modèle. Enfin, la corrélation entre les pentes et les constantes est de loin le paramètre le plus incertain et son intervalle de confiance est franchement à cheval sur zéro, ce qui devrait nous amener à privilégier un modèle sans ce paramètre.\nPour terminer, nous pouvons calculer les R2 marginal et conditionnel du modèle afin de mieux cerner le rôle joué par les effets fixes et les effets aléatoires.\n\nr.squaredGLMM(modele3)\n\n                   R2m        R2c\ntheoretical 0.03413723 0.18360167\ndelta       0.01419943 0.07636937\n\n\nLes valeurs des R2 marginal et conditionnel du modèle sont similaires à celles que nous avons obtenus avec seulement des constantes aléatoires dans la section précédente, signalant l’apport relativement faible des pentes aléatoires.\n\n9.6.2.2 Analyse des effets aléatoires\nPour analyser facilement les constantes et les pentes aléatoires de chaque pays, nous pouvons représenter graphiquement leurs intervalles de confiance construits à partir des simulations tirées de la distribution a posteriori du modèle.\n\n# Simulations et extraction des effets aléatoires\nlibrary(merTools)\nsimsRE &lt;- REsim(modele3, n.sims = 1000, oddsRatio = FALSE)\n# Calcul des intervalles de confiance\nsimsRE$lower &lt;- simsRE$mean - 1.96 * simsRE$sd\nsimsRE$upper &lt;- simsRE$mean + 1.96 * simsRE$sd\n# Variable binaire pour la significativité\nsimsRE$sign &lt;- case_when(\n  simsRE$lower&lt;0 & simsRE$upper&lt;0 ~ \"inf\",\n  simsRE$lower&gt;0 & simsRE$upper&gt;0 ~ \"sup\",\n  TRUE ~ \"not\"\n)\ndf1 &lt;- subset(simsRE, grepl(\"Intercept\", simsRE$term, fixed = TRUE))\ndf2 &lt;- subset(simsRE, grepl(\"Age2\", simsRE$term, fixed = TRUE))\n# Représentation des intervalles de confiance\np1 &lt;- ggplot(df1) + \n  geom_errorbarh(aes(xmin = lower, xmax = upper,\n                     y = reorder(groupID, mean)), size = 0.5, height = 0.5) + \n  geom_point(aes(x = mean, y = reorder(groupID, mean),\n                 color = sign)) + \n  scale_color_manual(values = c(\"inf\" = \"#0077b6\", \"sup\" = \"#e63946\", \"not\"=\"#000000\"), \n                     labels = c(\"sign. &lt; 0\", \"non sign.\", \"sign. &gt; 0\")) +\n  labs(x = \"Constante aléatoire\", y = \"Pays\")\np2 &lt;- ggplot(df2) + \n  geom_errorbarh(aes(xmin = lower, xmax = upper,\n                     y = reorder(groupID, mean)), size = 0.5, height = 0.5) + \n  geom_point(aes(x = mean, y = reorder(groupID, mean),\n                 color = sign)) + \n  scale_color_manual(values = c(\"inf\" = \"#0077b6\", \"sup\" = \"#e63946\", \"not\"=\"#000000\"), \n                     labels = c(\"sign. &lt; 0\", \"non sign.\", \"sign. &gt; 0\")) +\n  labs(x = \"Pente aléatoire (âge)\", y = \"Pays\")\nggarrange(p1, p2, common.legend = TRUE, nrow = 1, ncol = 2)\n\n\n\nFigure 9.21: Constantes aléatoires estimées par pays (intervalles de confiance obtenus par simulations)\n\n\n\nLa figure 9.21 nous permet ainsi de constater que l’effet des pays sur les pentes est presque toujours non significatif, sauf pour le Danemark. Son effet négatif (-0,136) indique un renforcement de l’effet général, lui-même négatif (-0,088). Une interprétation possible est qu’au Danemark, l’utilisation du vélo est proportionnellement plus courante par les jeunes que dans le reste des pays de l’Europe.\nPour l’interprétation finale, il est nécessaire d’afficher les valeurs exactes de ces différents paramètres et, dans notre cas, de les convertir en rapports de cotes avec la fonction exponentielle. Pour les pentes aléatoires, il peut être plus facile d’interpréter la somme de l’effet fixe et de l’effet aléatoire.\n\n# Extraction des effets aléatoires obtenus par simulation\nmat &lt;- simsRE[c(\"mean\" , \"lower\" , \"upper\")]\nmat$Pays &lt;- simsRE$groupID\nmat$effet &lt;- simsRE$term\n# Séparation des pentes et des constantes\ndf1 &lt;- subset(mat, grepl(\"Intercept\", mat$effet, fixed = TRUE))\ndf2 &lt;- subset(mat, grepl(\"Age2\", mat$effet, fixed = TRUE))\n# Conversion en rapports de cotes pour les pentes (+ effet fixe)\ndf2$RC &lt;- round(exp(df2$mean + fixef(modele3)[[3]]),3)\ndf2$RC025 &lt;- round(exp(df2$lower + fixef(modele3)[[3]]),3)\ndf2$RC975 &lt;- round(exp(df2$upper + fixef(modele3)[[3]]),3)\nprint(head(df2[c(\"Pays\" , \"RC\" , \"RC025\" , \"RC975\")],10))\n\n        Pays    RC RC025 RC975\n27 Allemagne 0.835 0.744 0.937\n28  Autriche 0.986 0.875 1.112\n29  Belgique 0.895 0.797 1.005\n30  Bulgarie 0.946 0.824 1.086\n31   Croatie 0.905 0.802 1.020\n32  Danemark 0.799 0.720 0.886\n33   Espagne 0.920 0.796 1.063\n34   Estonie 0.950 0.835 1.080\n35  Finlande 0.865 0.774 0.967\n36    France 0.897 0.783 1.029\n\n\nNous constatons ainsi qu’au Danemark, les chances pour un individu d’utiliser le vélo sont réduites de 20 % à chaque augmentation de l’âge d’un écart-type, contre seulement 1,5 % en Autriche (non significatif pour ce dernier). Notons ici que l’écart-type de la variable Age est de 11 ans. Nous pouvons à présent analyser les constantes.\n\n# Conversion en rapports de cotes pour les constantes\ndf1$RC &lt;- round(exp(df1$mean),3)\ndf1$RC025 &lt;- round(exp(df1$lower),3)\ndf1$RC975 &lt;- round(exp(df1$upper),3)\nprint(head(df1[c(\"Pays\" , \"RC\" , \"RC025\" , \"RC975\")],10))\n\n        Pays    RC RC025 RC975\n1  Allemagne 1.691 1.207 2.369\n2   Autriche 1.312 0.925 1.860\n3   Belgique 1.435 1.015 2.029\n4   Bulgarie 0.547 0.375 0.799\n5    Croatie 1.885 1.350 2.630\n6   Danemark 4.087 2.937 5.686\n7    Espagne 0.291 0.192 0.440\n8    Estonie 1.131 0.798 1.602\n9   Finlande 2.243 1.609 3.125\n10    France 0.527 0.359 0.774\n\n\nEn revanche, les chances pour un individu d’utiliser le vélo comme mode de transport pour son trajet le plus fréquent sont 4 fois supérieures à la moyenne européenne, contre seulement 1,3 fois en Autriche. Notez à nouveau que les intervalles de confiance pour ces pentes et ces constantes pourraient être estimés plus fiablement par bootstrap.\n\n9.6.2.3 Diagnostic des effets aléatoires\nPour rappel, dans un modèle GLMM, les effets aléatoires sont modélisés comme provenant de distributions normales. Nous devons donc vérifier qu’ils respectent cette condition d’application. La figure 9.22 (graphique quantile-quantile) nous permet de constater que les constantes suivent bien une distribution normale, ce qui ne semble pas vraiment être le cas pour les pentes. Considérant que leurs effets sont petits, il serait plus pertinent ici de les retirer du modèle.\n\n\n\n\nFigure 9.22: Distribution normale univariée des constantes et des pentes aléatoires\n\n\n\nConsidérant que ce modèle inclut une corrélation entre les constantes et les pentes aléatoires, il est également nécessaire de vérifier si elles suivent conjointement une distribution normale bivariée. La figure 9.23 semble indiquer que c’est le cas.\n\ncor_mat &lt;- VarCorr(modele3)[[1]]\nre_effects &lt;- data.frame(ranef(modele3)$Pays)\nnames(re_effects) &lt;- c(\"constante\" , \"pente\")\nlibrary(ellipse)\nlevels &lt;- c(0.05,0.25,0.75,0.95)\nels &lt;- lapply(levels, function(i){\n  el &lt;- data.frame(ellipse(cor_mat, center = c(0,0), level = i))\n  names(el) &lt;- c(\"x\" , \"y\")\n  return(el)\n})\nref_points &lt;- data.frame(data.frame(MASS::mvrnorm(n = 1000, mu = c(0,0), Sigma = cor_mat)))\nnames(ref_points) &lt;- c(\"x\" , \"y\")\nggplot() + \n  geom_point(aes(x = x, y = y), data = ref_points, alpha = 0.3, size = 0.4) + \n  geom_path(data = els[[1]], aes(x = x, y = y, color = \"a\")) + \n  geom_path(data = els[[2]], aes(x = x, y = y, color = \"b\")) + \n  geom_path(data = els[[3]], aes(x = x, y = y, color = \"c\")) +\n  geom_path(data = els[[4]], aes(x = x, y = y, color = \"d\")) + \n  geom_point(data = re_effects, aes(x = constante, y = pente))+\n  scale_color_manual(values = c(\"a\"=\"#90e0ef\",\n                                \"b\"=\"#00b4d8\",\n                                \"c\"=\"#0077b6\",\n                                \"d\"=\"#03045e\"),\n                     labels = c(\"5 %\" , \"25 %\" , \"75 %\" , \"95 %\"))+\n  labs(x = \"Constantes\", y = \"Pentes\", color = \"quantiles\")\n\n\n\nFigure 9.23: Distribution normale bivariée des constantes et des pentes aléatoires\n\n\n\n\n9.6.2.4 Inférence pour les effets fixes\nNous avons mentionné, dans les sections précédentes, que le calcul de valeurs de p pour les effets fixes fait l’objet de controverses pour les modèles GLMM. La méthode offrant le meilleur compromis entre rapidité de calcul et fiabilité est la méthode Satterthwaite implémentée dans le package lmerTest. Pour l’utiliser, il suffit de charger le package lmerTest après lme4, ce qui modifie la fonction summary pour qu’elle utilise directement cette approche.\n\nlibrary(lmerTest)\nround(summary(modele3)$coefficients,3)\n\n                              Estimate Std. Error z value Pr(&gt;|z|)\n(Intercept)                     -3.358      0.213 -15.760    0.000\nSexehomme                        0.373      0.038   9.823    0.000\nAge2                            -0.088      0.028  -3.157    0.002\nEducationsecondaire              0.180      0.104   1.730    0.084\nEducationsecondaire inferieur    0.287      0.112   2.565    0.010\nEducationuniversite              0.130      0.107   1.215    0.225\nStatutEmploisans emploi          0.256      0.043   6.028    0.000\nRevenufaible                     0.071      0.072   0.983    0.326\nRevenumoyen                      0.038      0.065   0.588    0.557\nRevenusans reponse               0.204      0.103   1.984    0.047\nRevenutres eleve                -0.124      0.186  -0.669    0.504\nRevenutres faible                0.236      0.086   2.741    0.006\nResidencegrande ville            0.270      0.069   3.887    0.000\nResidencepetite-moyenne ville    0.276      0.062   4.478    0.000\nResidencezone rurale            -0.119      0.069  -1.720    0.085\nDuree2                          -0.019      0.019  -0.980    0.327\nConsEnv                          0.102      0.009  10.967    0.000\n\n\nLes deux autres options envisageables sont : effectuer une analyse de type 3 ou calculer les intervalles de confiance par bootstrap. Cependant, elles requièrent beaucoup plus de temps de calcul. Par conséquent, elles ne sont pas présentées ici."
  },
  {
    "objectID": "09-GLMM.html#sec-097",
    "href": "09-GLMM.html#sec-097",
    "title": "9  Régressions à effets mixtes (GLMM)",
    "section": "\n9.7 Quiz de révision du chapitre",
    "text": "9.7 Quiz de révision du chapitre\n\n\n\n\n\nGLMM est un acronyme signifiant :\n\n\nRelisez au besoin la section 9.1.2.\n\n\n\n\n\n\nmodèles linéaires généralisés à effets mixtes\n\n\n\n\n\n\n\nmodèles linéaires gaussiens à effets Mixtes\n\n\n\n\n\n\n\nmodèles linéaires généralisés multinomiaux\n\n\n\n\n\n\n\nmodèles linéaires généralisés multiniveau\n\n\n\n\n\n\n\n\n\n\nLes modèles GLMM, comparativement aux GLM, permettent de tenir compte de :\n\n\nRelisez au besoin la section 9.1.1.\n\n\n\n\n\n\nla distribution spécifique de la variable Y\n\n\n\n\n\n\n\nles distributions spécifiques des variables X\n\n\n\n\n\n\n\nl’hétéroscédasticité des résidus\n\n\n\n\n\n\n\nla non-indépendance des observations\n\n\n\n\n\n\n\n\n\n\nUn effet aléatoire se distingue d’un effet fixe, car :\n\n\nRelisez au besoin la section 9.1.2.\n\n\n\n\n\n\nUn effet aléatoire n’est pas propre aux individus (unités d’observations), mais provient de facteurs externes.\n\n\n\n\n\n\n\nUn effet aléatoire induit une forme de hiérarchie, de regroupement d’individus dans des groupes au sein desquels les observations ont plus tendance à se ressembler.\n\n\n\n\n\n\n\nUn effet aléatoire provient d’une autre population que les unités d’observations et peut donc être également échantillonné.\n\n\n\n\n\n\n\nUn effet aléatoire implique un partage de l’information dans son estimation. Comparativement à un effet fixe, la conséquence est notamment la réduction des tailles d’effet (shrinkage).\n\n\n\n\n\n\n\n\n\n\nQuels sont les principaux types d’effets que nous pouvons modéliser avec des effets aléatoires?\n\n\nRelisez au besoin la section 9.2.\n\n\n\n\n\n\nDes constantes aléatoires, suggérant des écarts absolus entre les groupes\n\n\n\n\n\n\n\nDes pentes aléatoires, suggérant des écarts en termes d’effets pour certains prédicteurs en fonction des groupes\n\n\n\n\n\n\n\nDes pentes et des constantes aléatoires\n\n\n\n\n\n\n\n\n\n\nQuels indicateurs peuvent être utilisés pour analyser la part de la variance / déviance expliquée aux différents niveaux d’un GLMM?\n\n\nRelisez au besoin la section 9.2.1.3.\n\n\n\n\n\n\nL’ICC, soit le coefficient de corrélation intraclasse\n\n\n\n\n\n\n\nLe BIC, soit le critère d’information bayésien\n\n\n\n\n\n\n\nL’AIC\n\n\n\n\n\n\n\nLa déviance expliquée\n\n\n\n\n\n\n\nLes R2 marginal et conditionnel\n\n\n\n\n\n\n\n\n\n\nToutes les variables catégorielles devraient être incluses dans un modèle comme des effets aléatoires.\n\n\nRelisez au besoin la section 9.1.2.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\n\nLors de l’estimation d’un effet aléatoire, le modèle estime exactement :\n\n\nRelisez au besoin la section 9.2.1.\n\n\n\n\n\n\nk + 1 paramètres, soit le nombre de catégories plus un paramètre pour la variance de l’effet aléatoire en question\n\n\n\n\n\n\n\nun seul paramètre, la variance de la distribution normale associée à l’effet aléatoire en question\n\n\n\n\n\n\n\nk paramètres, soit le nombre de catégories pour l’effet aléatoire en question\n\n\n\n\n\n\n\nk - 1 paramètres, soit le nombre de catégories moins un pour la catégorie de référence\n\n\n\n\n\n\n\n\n\nVérifier votre résultat\n\n\n\n\n\n\n\n\n\nAly, Sharif S, Jianyang Zhao, Ben Li et Jiming Jiang. 2014. « Reliability of environmental sampling culture results using the negative binomial intraclass correlation coefficient. » SpringerPlus 3 (1): 40. https://doi.org/10.1186/2193-1801-3-40.\n\n\nBolker, Benjamin M, Mollie E Brooks, Connie J Clark, Shane W Geange, John R Poulsen, M Henry H Stevens et Jada-Simone S White. 2009. « Generalized linear mixed models: a practical guide for ecology and evolution. » Trends in ecology & evolution 24 (3): 127‑135. https://doi.org/10.1016/j.tree.2008.10.008.\n\n\nBurdenski, Jr Thomas K. 2000. « Evaluating univariate, bivariate, and multivariate normality using graphical procedures. » ERIC: 1‑62.\n\n\nGelman, Andrew. 2005. « Analysis of variance—why it is more important than ever. » The annals of statistics 33 (1): 1‑53. https://doi.org/10.1214/009053604000001048.\n\n\nGelman, Andrew et Jennifer Hill. 2006. Data analysis using regression and multilevel/hierarchical models. Cambridge university press.\n\n\nMcElreath, Richard. 2020. Statistical rethinking: A Bayesian course with examples in R and Stan. CRC press.\n\n\nNakagawa, Shinichi, Paul C. D. Johnson et Holger Schielzeth. 2017. « The coefficient of determination R2 and intra-class correlation coefficient from generalized linear mixed-effects models revisited and expanded. » Journal of The Royal Society Interface 14 (134): 20170213. https://doi.org/10.1098/rsif.2017.0213.\n\n\nStryhn, H, J Sanchez, P Morley, C Booker et IR Dohoo. 2006. « Interpretation of variance parameters in multilevel Poisson regression models. » In Proceedings of the 11th International Symposium on Veterinary Epidemiology and Economics. Vol. 702. s.n.\n\n\nWu, Sheng, Catherine M Crespi et Weng Kee Wong. 2012. « Comparison of methods for estimating the intraclass correlation coefficient for binary responses in cancer prevention cluster randomized trials. » Contemporary clinical trials 33 (5): 869‑880. https://doi.org/10.1016/j.cct.2012.05.004."
  },
  {
    "objectID": "10-Multiniveau.html#sec-101",
    "href": "10-Multiniveau.html#sec-101",
    "title": "10  Régressions multiniveaux",
    "section": "\n10.1 Modèles multiniveaux : deux intérêts majeurs",
    "text": "10.1 Modèles multiniveaux : deux intérêts majeurs\nLes modèles multiniveaux ont deux principaux avantages : analyser la répartition de la variance entre les différents niveaux et introduire des variables explicatives aux différents niveaux du modèle.\n\n10.1.1 Répartition de la variance entre les différents niveaux\nLes modèles multiniveaux permettent d’estimer comment se répartit la variance entre les différents niveaux du jeu de données. Dans les deux exemples de l’encadré précédent, ils permettraient de répondre aux questions suivantes :\n\nQuel niveau explique le plus l’IMC, le niveau individuel (niveau 1) ou le niveau contextuel (niveau 2)?\nComment se répartit la variance des notes à l’examen de mathématiques entre les trois niveaux? A-t-on plus de variance pour les individus (niveau 1) ou au sein des classes (niveau 2) ou entre les différentes écoles (niveau 3)?\n\n10.1.2 Estimation des coefficients aux différents niveaux\nLes modèles multiniveaux permettent d’estimer simultanément les coefficients de plusieurs variables indépendantes introduites à chacun des niveaux du modèle. Autrement dit, de voir comment les variables indépendantes introduites aux différents niveaux influencent la variable dépendante (Y) mesurée au niveau 1. Si nous reprenons l’exemple à trois niveaux (élèves/classes/écoles), plusieurs facteurs peuvent influencer la réussite ou la performance scolaire des élèves aux différents niveaux :\n\nVariables indépendantes au niveau 1 (élève) : âge, sexe, statut socioéconomique, langue maternelle autre que la langue d’enseignement…\nVariables indépendantes au niveau 2 (classe) : nombre d’élèves par classe, programme spécialisé ou pas…\nVariables indépendantes au niveau 3 (école) : indice de défavorisation de l’école, école publique ou privée, qualité des infrastructures de l’école (bâtiment, gymnase, cour d’école)…\n\nDans la même veine, afin d’illustrer l’apport des modèles multiniveaux dans le champ de la géographie de la santé, Philibert et Apparicio (2007, 129) signalent que « pour un modèle à deux niveaux, il s’agit de modéliser \\(y_{ij}\\), par exemple l’IMC d’un individu i (niveau 1) résidant dans un quartier j (niveau 2). Il est alors possible de mettre des variables explicatives tant au niveau 1 (âge, sexe, revenu, niveau d’éducation, etc.) qu’au niveau 2 (niveau de défavorisation sociale du quartier, offre de services et d’équipements sportifs et récréatifs, caractéristiques de l’environnement urbain, etc.). Dans cet exemple, nous pouvons voir comment la modélisation multiniveau permet d’estimer simultanément les effets environnementaux et individuels de manière à distinguer la contribution de chacun des niveaux (ex. : l’effet du revenu des individus et celui de la défavorisation du quartier) dans l’explication des variations géographiques observées ».\n\n\n\n\n\nÉvaluer les effets de milieu avec des analyses multiniveaux\n\n\nEn santé des populations et en études urbaines, les modèles multiniveaux sont largement mobilisés pour évaluer les effets de milieu (neighbourhoods effects ou area effects en anglais).\nAtkinson et Kintrea (2001, 2278) définissent les « effets de milieu comme le changement net dans les potentialités de l’existence (life chances) attribuable au fait de vivre dans un quartier (ou une zone) plutôt qu’un autre » [traduction libre]. Les effets de milieu peuvent être positifs ou négatifs et concerner aussi bien les enfants que les adultes.\nLes analyses multiniveaux sont particulièrement adaptées à l’évaluation des effets de milieu. En effet, plusieurs phénomènes — état de santé, comportement ou choix individuels — peuvent être influencés à la fois par des caractéristiques individuelles (âge, sexe, niveau de revenu, niveau d’éducation, etc.) et par des caractéristiques contextuelles (caractéristiques du quartier).\nAvec un modèle multiniveau, une fois contrôlées les caractéristiques individuelles (variables indépendantes mesurées au niveau 1), il est alors possible d’évaluer l’effet des caractéristiques du quartier (variables indépendantes mesurées au niveau 2) sur un phénomène \\(y_{ij}\\) mesuré pour un individu i résidant dans un quartier j."
  },
  {
    "objectID": "10-Multiniveau.html#sec-102",
    "href": "10-Multiniveau.html#sec-102",
    "title": "10  Régressions multiniveaux",
    "section": "\n10.2 Différents types de modèles multiniveaux",
    "text": "10.2 Différents types de modèles multiniveaux\n\n10.2.1 Description du jeu de données utilisé\nDans le cadre de cette section, nous présentons uniquement les modèles à deux niveaux, soit celui pour modéliser un phénomène \\(y_{ij}\\). Pour ce faire, nous utilisons des données tirées d’une étude de Pham et al. (2017). Dans cet article, les auteurs souhaitent évaluer les effets des caractéristiques de la forme urbaine et des caractéristiques socioéconomiques sur la couverture des arbres de rue, et ce, à partir d’un modèle multiniveau. Ils disposent ainsi d’une structure hiérarchique de données avec deux niveaux : les tronçons de rue (niveau 1, n = 10 814) inclus dans un et un seul secteur de recensement (niveau 2, n = 312). La variable dépendante (\\(y_{ij}\\)) est le pourcentage de la superficie du tronçon de rue qui est couverte par des arbres, calculé à partir d’images satellites à haute résolution (Quickbird, 60 cm, septembre 2008). L’ensemble des variables utilisées pour les modèles sont reportées au tableau 10.1.\nSept variables indépendantes relatives à la forme urbaine sont mesurées pour les tronçons de rue, soit la largeur et la longueur de la rue, l’âge médian des bâtiments (introduit également au carré pour vérifier l’existence d’un effet curvilinéaire; voir la section 7.5.1.1), les pourcentages de bâtiments résidentiels, de duplex et de triplex, le nombre de bâtiments et finalement la distance moyenne entre le bâtiment et la rue. Les variables indépendantes pour les 312 secteurs de recensement (niveau 2) sont extraites du recensement canadien de 2006 (tableau 10.1).\n\n\n\n\nTableau 10.1: Statistiques descriptives pour les variables des modèles multiniveaux\n\n\n\n\n\n\n\n\n\nNom\nIntitulé\nType\nNiveau\nMoy.\nÉcart type\n\n\n\nPCTArb\nArbres sur le tronçon de rue (%)\nVD\n1\n7,2\n10,7\n\n\nWidth\nLargeur des rues\nVI\n1\n16,0\n7,3\n\n\nLength\nLongueur de rues\nVI\n1\n136,0\n87,8\n\n\nAgeMed\nÂge médian des bâtiments\nVI\n1\n1 952,7\n28,3\n\n\nResiPCT\nBâtiments résidentiels (%)\nVI\n1\n83,5\n28,0\n\n\nDuTriPct\nDuplex ou triplex (%)\nVI\n1\n41,8\n39,3\n\n\nNoLog\nNombre de bâtiments\nVI\n1\n14,0\n14,4\n\n\nSetback\nDistance entre le bâtiment et la rue\nVI\n1\n7,2\n4,3\n\n\nValLog\nValeur moyenne des logements (milliers de dollars)\nVI\n2\n267,6\n80,0\n\n\nUDipPCT\nDiplômés universitaires (%)\nVI\n2\n16,9\n9,6\n\n\nPCTFRAVI\nPersonnes à faible revenu (%)\nVI\n2\n30,3\n11,5\n\n\nPCTIMGRE\nImmigrants récents (%)\nVI\n2\n10,0\n7,3\n\n\nAvecEnf\nMénages avec enfants (%)\nVI\n2\n34,8\n12,6\n\n\nFranPCT\nLangue maternelle française (%)\nVI\n2\n66,9\n24,1\n\n\n\n\n\n\n\n10.2.2 Démarche classique pour les modèles multiniveaux\nLa démarche habituelle en analyse multiniveau est de réaliser plusieurs modèles, allant du plus simple au plus complexe. Cette stratégie permet habituellement de bien cerner la répartition de la variance entre les différents niveaux et l’apport des variables explicatives introduites aux différents niveaux. De la sorte, cinq types de modèles peuvent être construits :\n\nLe modèle vide (appelé aussi modèle inconditionnel) qui comprend des constantes aléatoires au niveau 2, mais aucune variable explicative.\nLe modèle avec uniquement les variables indépendantes au niveau 1 et des constantes aléatoires au niveau 2.\nLe modèle complet avec les variables indépendantes aux deux niveaux et des constantes aléatoires.\nLe modèle complet avec les variables indépendantes aux deux niveaux, incluant une interaction entre une variable indépendante mesurée au niveau 1 et une autre mesurée au niveau 2.\nLe modèle avec les variables indépendantes aux deux niveaux et des constantes et pentes aléatoires.\n\nDans les sous-sections suivantes, nous détaillons les quatre premiers modèles en prenant soin de montrer les similitudes qu’ils partagent avec les modèles à effets mixtes vus précédemment. Notez d’emblée que les trois premiers modèles sont les plus fréquemment utilisés.\n\n10.2.2.1 Modèle vide\nComme son nom l’indique, le modèle vide ne comprend aucune variable explicative. Il consiste simplement à faire varier la constante du niveau 1 avec des effets aléatoires au niveau 2, ce qui explique qu’il est souvent comparé à une ANOVA avec des effets aléatoires. En d’autres termes, ce modèle correspond à un GLMM avec constantes aléatoires dans lequel aucune variable indépendante n’est incluse au niveau 1. D’ailleurs, si vous comparez l’équation 10.1 avec l’équation 9.2 au chapitre précédent, vous constaterez que seul le paramètre \\(\\beta_1 x_1\\) a été ôté et qu’il comprend aussi deux variances : l’une fixe au niveau 1 (\\(\\sigma_e\\)) et l’autre aléatoire (stochastique) au niveau 2 (\\(\\sigma_{\\upsilon}\\)).\n\\[\n\\begin{aligned}\n&Y \\sim Normal(\\mu,\\sigma_e)\\\\\n&g(\\mu) = \\beta_0 + \\upsilon \\\\\n&\\upsilon \\sim Normal(0, \\sigma_{\\upsilon}) \\\\\n&g(x) = x\n\\end{aligned}\n\\tag{10.1}\\]\nQuel est alors l’intérêt de réaliser un modèle si simple? À partir des deux variances, il est possible de calculer le coefficient de corrélation intraclasse (intraclass-correlation (ICC) en anglais) qui est le rapport entre la variance aléatoire et la somme des variances des deux niveaux, soit fixe et aléatoire (équation 10.2). Ce coefficient varie ainsi de 0 à 1 et indique la proportion de la variance de la variable dépendante qui est imputable au niveau 2. Tous(tes) les auteur(e)s s’entendent sur le fait qu’il est impératif de commencer une analyse de multiniveau en calculant ce modèle vide qui nous informe de la répartition de la variance entre les deux niveaux (Raudenbush et Bryk 2002; Gelman et Hill 2006; Tabachnick, Fidell et Ullman 2007; Bressoux 2010). Nous pourrons ensuite analyser l’évolution de ce coefficient dans les modèles subséquents.\n\\[\n\\rho = \\frac{\\sigma_{\\upsilon}}{\\sigma_{\\upsilon} + \\sigma_{e}}\n\\tag{10.2}\\]\nLes résultats du modèle vide (inconditionnel) à partir des données de Pham et al. (2017) sont présentés au tableau 10.2. La variance du niveau 1 est de 92,93 contre 19,82 au niveau 2. Le coefficient de corrélation intraclasse vaut alors : \\(\\mbox{19,82} / \\mbox{(19,82} + \\mbox{92,93}) = \\mbox{0,1758}\\). Cela signifie que 18 % de la variance de la variable dépendante sont imputables au niveau 2 (des secteurs de recensement) et 82 % au niveau 1 (des tronçons). Nous verrons comment évolue ce coefficient dans les modèles subséquents.\n\n\n\n\nTableau 10.2: Résultats du modèle vide (modèle 1)\n\n\n\n\n\n\n\nParamètre\nCoefficient\nErreur type\nValeur de T\n\n\n\nEffets fixes (niveau 1)\n\n\n\n\n\nConstante\n7,337\n0,277\n26,466\n\n\nRépartition de la variance\n\n\n\n\n\nVariance (niveau 1)\n19,818\n\n\n\n\nVariance (niveau 2)\n92,925\n\n\n\n\nCoefficient de corrélation intraclasse\n0,176\n\n\n\n\nQualité d’ajustement du modèle\n\n\n\n\n\nAIC\n80 305,219\n\n\n\n\nR2 marginal\n0,000\n\n\n\n\nR2 conditionnel\n0,176\n\n\n\n\n\n\n\n\n\n10.2.2.2 Modèle avec les variables indépendantes du niveau 1\nDans ce second modèle, nous introduisons uniquement les variables explicatives au niveau 1. Par conséquent, ce modèle est tout simplement un modèle à effets mixtes (GLMM) avec des constantes aléatoires largement décrit à la section 9.2.1). Si vous comparez l’équation du modèle vide (équation 10.1) avec l’équation de ce modèle (équation 10.3), vous constaterez que le paramètre \\(\\beta_1 x_1\\) a été ajouté. Il correspond au coefficient pour la variable indépendante \\(X_1\\) mesurée au niveau 1 (effet fixe). Nous pourrions alors ajouter d’autres paramètres pour les autres variables indépendantes du modèle, soit \\(\\beta_1 x_1 + \\beta_2 x_2+ \\ldots + \\beta_k x_k\\) (\\(k\\) étant le nombre de variables explicatives mesurées au niveau 1, effets fixes).\n\\[\n\\begin{aligned}\n&Y \\sim Normal(\\mu,\\sigma_e)\\\\\n&g(\\mu) = \\beta_0 + \\beta_1 x_1 + \\upsilon \\\\\n&\\upsilon \\sim Normal(0, \\sigma_{\\upsilon})) \\\\\n&g(x) = x\n\\end{aligned}\n\\tag{10.3}\\]\nLes résultats du second modèle sont présentés au tableau 10.3.\nLa répartition de la variance entre les deux niveaux. La variance du niveau 1 est désormais de 15,263 contre 80,317 au niveau 2, ce qui permet d’obtenir un coefficient de corrélation intraclasse de 0,1597. Cela signifie que de 16 % de la variance de la variable dépendante sont imputables au niveau 2 (des secteurs de recensement), une fois contrôlées les caractéristiques des tronçons.\nLa qualité d’ajustement du modèle. Dans le chapitre précédent sur les GLMM, nous avons largement décrit plusieurs mesures de la qualité d’ajustement du modèle, notamment l’AIC et les R2 marginal et conditionnel. À titre de rappel, voici comment interpréter ces mesures :\n\nPlus la valeur de l’AIC est faible, mieux le modèle est ajusté. En comparant les valeurs d’AIC du modèle vide et du modèle avec les variables explicatives du niveau 1 (80 305 versus 78 785), nous constatons, sans surprise, que ce dernier modèle est plus performant.\nLe R2 marginal indique la proportion de la variance expliquée uniquement si les effets fixes sont pris en compte (ici, 0,129). Quant au R2 conditionnel, il indique la proportion de la variance expliquée à la fois par les effets fixes et aléatoires (ici, 0,268). L’écart important entre les deux R2 signale que les secteurs de recensement (effets aléatoires, niveau 2) jouent un rôle important dans le modèle.\n\nQuelles informations peut-on tirer des coefficients de régression? Les variables indépendantes relatives à la forme urbaine les plus importantes sont : le pourcentage de bâtiments résidentiels (ResiPCT), la largeur de la rue (Width) et le nombre de bâtiments (NoLog). Aussi, la distance entre le bâtiment et la rue (Setback) est associée positivement avec la variable dépendante. En effet, à chaque ajout d’un mètre de la distance moyenne entre les bâtiments et le tronçon de rue, la couverture des arbres sur le tronçon augmente de 0,202 point de pourcentage, toutes choses étant égales par ailleurs.\n\n\n\n\nTableau 10.3: Résultats du modèle avec les variables indépendantes au niveau 1 (modèle 2)\n\n\n\n\n\n\n\nParamètre\nCoefficient\nErreur type\nValeur de T\n\n\n\nEffets fixes (niveau 1)\n\n\n\n\n\nConstante\n-1 028,618\n179,736\n-5,723\n\n\nWidth\n-0,129\n0,013\n-10,160\n\n\nLength\n0,011\n0,002\n6,322\n\n\nAgeMed\n1,103\n0,186\n5,946\n\n\nAgeMed2\n0,000\n0,000\n-6,158\n\n\nResiPCT\n0,047\n0,003\n13,558\n\n\nDuTriPct\n-0,013\n0,003\n-4,842\n\n\nNoLog\n0,147\n0,011\n13,938\n\n\nSetback\n0,202\n0,023\n8,792\n\n\nRépartition de la variance\n\n\n\n\n\nVariance (niveau 1)\n15,263\n\n\n\n\nVariance (niveau 2)\n80,317\n\n\n\n\nCoefficient de corrélation intraclasse\n0,160\n\n\n\n\nQualité d’ajustement du modèle\n\n\n\n\n\nAIC\n78 785,827\n\n\n\n\nR2 marginal\n0,129\n\n\n\n\nR2 conditionnel\n0,268\n\n\n\n\n\n\n\n\nRemarquez la valeur de la constante : −1028,618. À titre de rappel, la constante est la valeur que prend la variable dépendante quand toutes les variables indépendantes sont égales à 0. Or, il est impossible qu’elles soient toutes égales à zéro.\n\n\n\n\n\nCentrage des variables quantitatives mesurées au niveau 1\n\n\nEn analyse multiniveau, il est très courant et souvent recommandé de centrer les variables explicatives quantitatives au niveau 1. Deux options sont alors possibles :\n\nPour une variable indépendante donnée, les observations sont centrées sur leur moyenne générale, c’est-à-dire la moyenne de l’ensemble des observations du jeu de données, soit \\(X_{ij} - \\bar{X}\\). Dans ce cas, la constante est donc la valeur que prend la variable \\(Y\\) quand toutes les variables indépendantes sont égales à leur moyenne respective.\nChaque observation est centrée sur la moyenne de son groupe respectif, soit \\(X_{ij} - \\bar{X}_{.j}\\).\n\nComme signalé par Bressoux (2010, 328), « dans le premier cas, la variance des pentes sera estimée pour l’individu moyen dans la distribution générale, tandis que dans le second elle est estimée pour l’individu moyen de chaque groupe ».\nAutrement dit, comparativement à un modèle sans centrage, les valeurs des coefficients pour les variables indépendantes sont les mêmes dans le premier cas (seule la valeur de la constante va changer) tandis qu’elles sont différentes dans le second cas.\nAttention, il ne faut pas appliquer de centrage sur une variable qualitative, qu’elle soit dichotomique, nominale ou ordinale.\nPourquoi la pratique du centrage en analyse multiniveau est si courante?\nDans la plupart des livres sur les régressions multiniveaux, le centrage est recommandé, notamment dans l’ouvrage classique de Raudenbush et Bryk (2002). Rappelons que ces modèles sont largement utilisés en éducation avec une structure hiérarchique classique élève/école/classe. Nous nous intéressons alors à l’individu moyen (l’élève), ce qui explique que le centrage est habituellement appliqué. Par exemple, ne pas centrer l’âge des élèves fait que la constante qui est obtenue est peu interprétable : difficile d’évaluer la note moyenne à un examen quand la variable âge de l’élève a la valeur de 0, tout comme les autres variables explicatives quantitatives relatives à l’élève.\nCentrage et réduction de l’ensemble des variables du modèle\nIl est à noter que certains auteurs centrent et réduisent l’ensemble des variables du modèle. À titre de rappel, le centrage consiste à soustraire à chaque valeur la moyenne de la variable; la réduction, à la diviser par l’écart-type de la variable (section 2.5.5.2). Pour chaque variable, la moyenne est alors égale à 0 et l’écart-type à 1. Les coefficients s’interprètent alors en termes d’augmentation d’une unité d’écart-type tant pour la VI que la VD. Ils correspondent alors à des coefficients de régression standardisés (abordés dans la section 7.4.2). Ce processus de centrage et de réduction des variables peut être motivé par des problèmes de convergence du modèle (lorsque l’algorithme d’optimisation n’arrive pas à trouver une solution pour produire les coefficients).\n\n\nPar conséquent, nous vous proposons de centrer les variables du niveau 1 de notre jeu de données. Si vous comparez les tableaux 10.3 et 10.4, vous constaterez que les valeurs relatives aux coefficients, aux mesures de la répartition de la variance et à la qualité d’ajustement du modèle sont les mêmes. Seule la valeur de la constante change : elle passe de −1028,618 à 7,228. Elle s’interprète désormais de la façon suivante : si toutes les variables explicatives sont égales à leurs moyennes respectives, alors le pourcentage de la superficie du tronçon couverte par des arbres est égal à 7,228 %.\n\n\n\n\nTableau 10.4: Résultats du modèle avec les variables indépendantes centrées au niveau 1 (modèle 2)\n\n\n\n\n\n\n\nParamètre\nCoefficient\nErreur type\nValeur de T\n\n\n\nEffets fixes (niveau 1)\n\n\n\n\n\nConstante\n7,228\n0,248\n29,151\n\n\nWidth.c\n-0,129\n0,013\n-10,160\n\n\nLength.c\n0,011\n0,002\n6,322\n\n\nAgeMed.c\n1,103\n0,186\n5,946\n\n\nAgeMed2.c\n0,000\n0,000\n-6,158\n\n\nResiPCT.c\n0,047\n0,003\n13,558\n\n\nDuTriPct.c\n-0,013\n0,003\n-4,842\n\n\nNoLog.c\n0,147\n0,011\n13,938\n\n\nSetback.c\n0,202\n0,023\n8,792\n\n\nRépartition de la variance\n\n\n\n\n\nVariance (niveau 1)\n15,263\n\n\n\n\nVariance (niveau 2)\n80,317\n\n\n\n\nCoefficient de corrélation intraclasse\n0,160\n\n\n\n\nQualité d’ajustement du modèle\n\n\n\n\n\nAIC\n78 785,827\n\n\n\n\nR2 marginal\n0,129\n\n\n\n\nR2 conditionnel\n0,268\n\n\n\n\n\n\n\n\n\n10.2.2.3 Modèle complet avec les variables indépendantes aux niveaux 1 et 2\nLe troisième type de modèle consiste à introduire à la fois les variables explicatives mesurées au niveau 1 et au niveau 2 (équation 10.4). Il est communément appelé le modèle complet. Les variables explicatives du niveau 2 sont aussi considérées comme des effets fixes.\n\\[\n\\begin{aligned}\n&Y \\sim Normal(\\mu,\\sigma_e)\\\\\n&g(\\mu)  = \\underbrace{\\beta_0 + \\beta_1 x_1}_{\\mbox{effets fixes (niveau 1)}}+ \\underbrace{\\beta_2 z_2}_{\\mbox{effets fixes (niveau 2)}}+\\epsilon \\\\\n&\\upsilon \\sim Normal(0, \\sigma_{\\upsilon}) \\\\\n&g(x) = x\n\\end{aligned}\n\\tag{10.4}\\]\nLes résultats du troisième modèle sont présentés au tableau 10.5. Ce modèle permet d’évaluer les effets des caractéristiques socioéconomiques (mesurés au niveau des secteurs de recensement) sur la couverture des arbres des îlots, une fois contrôlées les caractéristiques de la forme urbaine des tronçons. Rappelons que dans ce modèle, les constantes sont aléatoires et les variables indépendantes au niveau 1 sont centrées.\nQuelles informations peut-on tirer des coefficients de régression du niveau 2? D’emblée, deux caractéristiques n’ont pas d’effet significatif sur la variable dépendante, soit les pourcentages de diplômés universitaires et de ménages avec enfants. Par contre, toutes choses étant égales par ailleurs, la valeur moyenne des logements et le pourcentage d’immigrants récents sont associés à une augmentation de la couverture végétale. À l’inverse, le pourcentage de personnes à faible revenu est associé à une diminution de la couverture végétale.\n\n\n\n\nTableau 10.5: Résultats du modèle avec les variables indépendantes aux niveaux 1 et 2 (modèle 3)\n\n\n\n\n\n\n\nParamètre\nCoefficient\nErreur type\nValeur de T\n\n\n\nEffets fixes (niveau 1 : tronçons)\n\n\n\n\n\nConstante\n-0,518\n3,227\n-0,160\n\n\nWidth.c\n-0,132\n0,013\n-10,375\n\n\nLength.c\n0,011\n0,002\n6,265\n\n\nAgeMed.c\n1,097\n0,185\n5,920\n\n\nAgeMed2.c\n0,000\n0,000\n-6,136\n\n\nResiPCT.c\n0,046\n0,003\n13,352\n\n\nDuTriPct.c\n-0,013\n0,003\n-4,737\n\n\nNoLog.c\n0,148\n0,011\n13,985\n\n\nSetback.c\n0,194\n0,023\n8,428\n\n\nEffets fixes (niveau 2 : secteurs de recensement)\n\n\n\n\n\nValLog\n0,016\n0,004\n4,126\n\n\nUDipPCT\n0,014\n0,035\n0,396\n\n\nPCTFRAVI\n-0,088\n0,030\n-2,988\n\n\nPCTIMGRE\n0,237\n0,049\n4,870\n\n\nAvecEnf\n0,001\n0,032\n0,018\n\n\nFranPCT\n0,052\n0,016\n3,183\n\n\nRépartition de la variance\n\n\n\n\n\nVariance (niveau 1)\n12,121\n\n\n\n\nVariance (niveau 2)\n80,347\n\n\n\n\nCoefficient de corrélation intraclasse\n0,131\n\n\n\n\nQualité d’ajustement du modèle\n\n\n\n\n\nAIC\n78 776,845\n\n\n\n\nR2 marginal\n0,160\n\n\n\n\nR2 conditionnel\n0,270\n\n\n\n\n\n\n\n\n\n10.2.2.4 Modèle avec une interaction entre deux niveaux\nDans la section 7.5.4, nous avons vu comment introduire des variables d’interaction dans une régression linéaire multiple, soit entre deux variables continues (section 7.5.4.1), soit entre une variable continue et une variable dichotomique (section 7.5.4.2), soit entre deux variables dichotomiques (section 7.5.4.3). En analyse multiniveau, il peut être pertinent d’introduire une interaction entre une variable mesurée au niveau 1 et une autre mesurée au niveau 2 (équation 10.5).\n\\[\n\\begin{aligned}\n&Y \\sim Normal(\\mu,\\sigma_e)\\\\\n&g(\\mu)  = \\underbrace{\\beta_0 + \\beta_1 x_1}_{\\mbox{effets fixes (niv. 1)}}+ \\underbrace{\\beta_2 z_2}_{\\mbox{effets fixes (niv. 2)}}+ \\underbrace{\\beta_3 (x_1 \\times z_2)}_{\\mbox{interaction (niv. 1 et 2)}}+ \\epsilon \\\\\n&\\upsilon \\sim Normal(0, \\sigma_{\\upsilon})) \\\\\n&g(x) = x\n\\end{aligned}\n\\tag{10.5}\\]\nDans le tableau 10.6, nous introduisons une variable d’interaction entre la distance entre le bâtiment et la rue (Setback.c) et le pourcentage de personnes à faible revenu (PCTFRAVI). On constate alors que PCTFRAVI est associé négativement avec la variable dépendante (\\(\\beta =\\) −0,079, t = −2,684). Toutefois, lorsqu’elle est mise en interaction avec la variable Setback.c, cette variable est significative et positive (\\(\\beta =\\) 0,008, t = 4,591).\n\n\n\n\nTableau 10.6: Résultats du modèle avec une variable d’interaction entre les deux niveaux 1 et 2 (modèle 4)\n\n\n\n\n\n\n\nParamètre\nCoefficient\nErreur type\nValeur de T\n\n\n\nEffets fixes (niveau 1 : tronçons)\n\n\n\n\n\nConstante\n-0,009\n3,198\n-0,003\n\n\nWidth.c\n-0,136\n0,013\n-10,660\n\n\nLength.c\n0,011\n0,002\n6,289\n\n\nAgeMed.c\n1,092\n0,185\n5,894\n\n\nAgeMed2.c\n0,000\n0,000\n-6,114\n\n\nResiPCT.c\n0,046\n0,003\n13,239\n\n\nDuTriPct.c\n-0,013\n0,003\n-4,742\n\n\nNoLog.c\n0,145\n0,011\n13,747\n\n\nSetback.c\n0,003\n0,048\n0,072\n\n\nEffets fixes (niveau 2 : secteurs de recensement)\n\n\n\n\n\nValLog\n0,016\n0,004\n4,141\n\n\nUDipPCT\n0,009\n0,035\n0,268\n\n\nPCTFRAVI\n-0,079\n0,029\n-2,684\n\n\nPCTIMGRE\n0,219\n0,048\n4,543\n\n\nAvecEnf\n-0,007\n0,032\n-0,221\n\n\nFranPCT\n0,050\n0,016\n3,072\n\n\nVariable d’interaction (niv. 1 et 2)\n\n\n\n\n\nSetback X PCTFRAVI\n0,008\n0,002\n4,591\n\n\nRépartition de la variance\n\n\n\n\n\nVariance (niveau 1)\n11,829\n\n\n\n\nVariance (niveau 2)\n80,239\n\n\n\n\nCoefficient de corrélation intraclasse\n0,128\n\n\n\n\nQualité d’ajustement du modèle\n\n\n\n\n\nAIC\n78 768,659\n\n\n\n\nR2 marginal\n0,163\n\n\n\n\nR2 conditionnel\n0,270"
  },
  {
    "objectID": "10-Multiniveau.html#sec-103",
    "href": "10-Multiniveau.html#sec-103",
    "title": "10  Régressions multiniveaux",
    "section": "\n10.3 Conditions d’application des régressions multiniveaux",
    "text": "10.3 Conditions d’application des régressions multiniveaux\nPuisque les modèles multiniveaux sont une extension des modèles à effets mixtes (GLMM), nous retrouvons globalement les mêmes conditions d’application (voir la section 9.3), dont les principales sont :\n\nl’absence de multicolinéarité excessive,\nla normalité des résidus,\nl’absence d’observations trop influentes dans le modèle.\n\nCombien de groupes au niveau 2? Dans la section 9.3, nous avons vu que dans un modèle GLMM, plusieurs auteur(e)s, notamment Gelman et Hill (2006), préconisent un minimum de cinq groupes dans un modèle à effets mixtes. Toutefois, dans un modèle complet d’une régression multiniveau, nous introduisons aussi des variables indépendantes au niveau 2. Par conséquent, le nombre de groupes doit être augmenté significativement, et ce, idéalement proportionnellement au nombre des variables indépendantes ajoutées au niveau 2. En ce sens, Bressoux (2010, 325) conseille d’avoir au moins 10 groupes pour chaque variable indépendante mesurée au niveau 2. Toujours selon Bressoux (2010, 325), certains auteurs recommandent même 20 groupes par variable indépendante au niveau 2. En conséquence, bien qu’aucune règle de pouce soit clairement admise, il est clair qu’un modèle complet multiniveau nécessite un nombre de groupes conséquent."
  },
  {
    "objectID": "10-Multiniveau.html#sec-104",
    "href": "10-Multiniveau.html#sec-104",
    "title": "10  Régressions multiniveaux",
    "section": "\n10.4 Mise en œuvre dans R",
    "text": "10.4 Mise en œuvre dans R\nPour mettre en œuvre des modèles multiniveaux avec une variable dépendante continue, nous utilisons la fonction lmer du package lme4. Pour d’autres distributions, nous pouvons utiliser la fonction glmer implémentant différentes familles de modèles GLM, notamment binomiale (modèle multiniveau logistique), gaussien, Gamma, inverse gaussien, Poisson, Quasi-poisson, etc. Comme pour les modèles GLMM, lorsque d’autres distributions sont nécessaires, il est possible d’utiliser le package gamlss.\n\n10.4.1 Le modèle vide\nDans le code R ci-dessous, la syntaxe lmer(PCTArb ~ 1 + (1| SRNOM),  data = Multiniveau) permet de construire le modèle vide avec la variable indépendante PCTArb et SRNOM comme variable définissant les groupes au niveau 2, soit les 312 secteurs de recensement. À titre de rappel, le modèle vide ne comprend aucune variable indépendante.\n\nlibrary(\"lme4\")\nlibrary(\"MuMIn\")\n# chargement du jeu de données\nload(\"data/multiniveau/dataArbres.RData\")\n\n# MODÈLE 1 : modèle vide (sans prédicteurs)\n#------------------------------------------------------\n# Écrire Y ~ 1 signifie que le modèle est vide\n# 1| SRNOM : signifie que l'on fait varier la constante avec la variable SRNOM\nModele1 &lt;- lmer(PCTArb ~ 1 + (1| SRNOM),  data = Multiniveau)\n\n# Nombre de groupes\ncat(\"nombre de groupes =\", length(unique(Multiniveau$SRNOM)))\n\nnombre de groupes = 312\n\n\nLa fonction summary(Modele1) permet d’afficher les résultats du modèle. Dans la section intitulée Random effects, la variance pour le niveau 2 (SRNOM (Intercept)) est de 19,82 contre 92,93 pour le niveau 1 (Residual). Le coefficient de corrélation intraclasse (ICC) est donc égal à \\(\\mbox{19,82 / (19,82+92,93)} \\times \\mbox{100 = 17,58}\\)%.\n\n# Résultats du modèle\nsummary(Modele1)\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: PCTArb ~ 1 + (1 | SRNOM)\n   Data: Multiniveau\n\nREML criterion at convergence: 80299.2\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-1.9413 -0.5295 -0.2235  0.2175  8.4695 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n SRNOM    (Intercept) 19.82    4.452   \n Residual             92.93    9.640   \nNumber of obs: 10814, groups:  SRNOM, 312\n\nFixed effects:\n            Estimate Std. Error t value\n(Intercept)   7.3373     0.2772   26.47\n\n\nNotez qu’il est possible d’obtenir directement la valeur de l’ICC avec la fonction icc(Modele1) du package performance et les statistiques d’ajustement du modèle avec les fonctions logLik, AIC et BIC.\n\n# Calcul de l'ICC (coefficient intraclasse)\nperformance::icc(Modele1)\n\n# Intraclass Correlation Coefficient\n\n    Adjusted ICC: 0.176\n  Unadjusted ICC: 0.176\n\nICC1 &lt;- performance::icc(Modele1)\ncat(\"Part de la variance de la variable dépendante imputable au niveau 2 : \", \n    round(ICC1$ICC_adjusted*100,2), \"%\", sep = \"\")\n\nPart de la variance de la variable dépendante imputable au niveau 2 : 17.58%\n\n# Qualité d'ajustement du modèle\ncat(\"Statistiques d'ajustement du modèle :\",\n    \"\\n-2 Log V = \", -2*logLik(Modele1),\n    \"\\nAIC =\", AIC(Modele1), \n    \"\\nBIC =\", BIC(Modele1))\n\nStatistiques d'ajustement du modèle : \n-2 Log V =  80299.22 \nAIC = 80305.22 \nBIC = 80327.08\n\n\n\n10.4.2 Modèle avec les variables indépendantes du niveau 1\nLe second modèle consiste à introduire les variables indépendantes mesurées pour les tronçons de rue (niveau 1). Notez comment sont centrées préalablement les variables explicatives.\n\n# Centrage des variables indépendantes\nVINiv1 &lt;- c(\"Width\" , \"Length\" , \"AgeMed\" , \"AgeMed2\" , \"ResiPCT\" , \"DuTriPct\" , \"NoLog\" , \"Setback\")\nfor (e in VINiv1){\n  e.c &lt;- paste(e, \".c\", sep = \"\")\n  Multiniveau[[e.c]] &lt;- Multiniveau[[e]] - mean(Multiniveau[[e]])\n}\n\n# MODÈLE 2 : modèle avec les prédicteurs au niveau 1 (rues) \n# ------------------------------------------------------\nModele2 &lt;- lmer(PCTArb ~\n                  # Variables indépendantes au niveau 1\n                   Width.c+Length.c+AgeMed.c+AgeMed2.c+ResiPCT.c+DuTriPct.c+NoLog.c+Setback.c+\n                   (1| SRNOM), data = Multiniveau)\n\n# Résultats du modèle\nsummary(Modele2)\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: PCTArb ~ Width.c + Length.c + AgeMed.c + AgeMed2.c + ResiPCT.c +  \n    DuTriPct.c + NoLog.c + Setback.c + (1 | SRNOM)\n   Data: Multiniveau\n\nREML criterion at convergence: 78763.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.9065 -0.5536 -0.1941  0.2569  9.4205 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n SRNOM    (Intercept) 15.26    3.907   \n Residual             80.32    8.962   \nNumber of obs: 10814, groups:  SRNOM, 312\n\nFixed effects:\n              Estimate Std. Error t value\n(Intercept)  7.228e+00  2.479e-01  29.151\nWidth.c     -1.292e-01  1.272e-02 -10.160\nLength.c     1.085e-02  1.717e-03   6.322\nAgeMed.c     1.103e+00  1.856e-01   5.946\nAgeMed2.c   -2.950e-04  4.791e-05  -6.158\nResiPCT.c    4.699e-02  3.466e-03  13.558\nDuTriPct.c  -1.299e-02  2.683e-03  -4.842\nNoLog.c      1.473e-01  1.057e-02  13.938\nSetback.c    2.018e-01  2.295e-02   8.792\n\nCorrelation of Fixed Effects:\n           (Intr) Wdth.c Lngth. AgMd.c AgMd2. RsPCT. DTrPc. NoLg.c\nWidth.c    -0.003                                                 \nLength.c    0.011 -0.216                                          \nAgeMed.c    0.000  0.010 -0.014                                   \nAgeMed2.c   0.002 -0.011  0.013 -1.000                            \nResiPCT.c   0.056  0.095  0.208  0.023 -0.024                     \nDuTriPct.c -0.010  0.022  0.086 -0.074  0.077  0.025              \nNoLog.c    -0.030  0.156 -0.785 -0.008  0.009 -0.269 -0.127       \nSetback.c   0.048 -0.018 -0.146  0.007 -0.008 -0.014  0.035  0.038\nfit warnings:\nSome predictor variables are on very different scales: consider rescaling\n\n# Calcul de l'ICC (coefficient intraclasse)\nperformance::icc(Modele2)\n\n# Intraclass Correlation Coefficient\n\n    Adjusted ICC: 0.160\n  Unadjusted ICC: 0.139\n\nICC2 &lt;- performance::icc(Modele2)\ncat(\"Part de la variance de la variable dépendante \",\n    \"\\nimputable au niveau 2 : \", round(ICC2$ICC_adjusted*100,2), \"%\", sep = \"\")\n\nPart de la variance de la variable dépendante \nimputable au niveau 2 : 15.97%\n\n# Calcul des R2 conditionnel et marginal avec les fonctions\n# r.squaredGLMM ou r2_nakagawa du package performance\nr.squaredGLMM(Modele2)\n\n           R2m       R2c\n[1,] 0.1292872 0.2683329\n\nr2_nakagawa(Modele2)\n\n# R2 for Mixed Models\n\n  Conditional R2: 0.268\n     Marginal R2: 0.129\n\n# Qualité d'ajustement du modèle\ncat(\"Statistiques d'ajustement du modèle\",\n    \"\\n-2 Log L = \", -2*logLik(Modele2),\n    \"\\nAIC =\", AIC(Modele2), \n    \"\\nBIC =\", BIC(Modele2))\n\nStatistiques d'ajustement du modèle \n-2 Log L =  78763.83 \nAIC = 78785.83 \nBIC = 78866\n\n\n\n10.4.3 Modèle avec les variables indépendantes aux niveaux 1 et 2\nLe troisième modèle comprend à la fois les variables indépendantes mesurées aux deux niveaux (tronçons et secteurs de recensement).\n\n# MODÈLE 3 : modèle complet avec les prédicteurs aux niveaux 1 et 2\n# ------------------------------------------------------\nModele3 &lt;- lmer(PCTArb ~\n                  # Variables indépendantes au niveau 1\n                   Width.c+Length.c+AgeMed.c+AgeMed2.c+ResiPCT.c+DuTriPct.c+NoLog.c+Setback.c+\n                  # Variables indépendantes au niveau 2\n                  ValLog+UDipPCT+PCTFRAVI+PCTIMGRE+AvecEnf+FranPCT+\n                  (1| SRNOM), data = Multiniveau)\n\n# Résultats du modèle\nsummary(Modele3)\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: PCTArb ~ Width.c + Length.c + AgeMed.c + AgeMed2.c + ResiPCT.c +  \n    DuTriPct.c + NoLog.c + Setback.c + ValLog + UDipPCT + PCTFRAVI +  \n    PCTIMGRE + AvecEnf + FranPCT + (1 | SRNOM)\n   Data: Multiniveau\n\nREML criterion at convergence: 78742.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.0461 -0.5558 -0.1939  0.2622  9.4190 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n SRNOM    (Intercept) 12.12    3.482   \n Residual             80.35    8.964   \nNumber of obs: 10814, groups:  SRNOM, 312\n\nFixed effects:\n              Estimate Std. Error t value\n(Intercept) -5.175e-01  3.227e+00  -0.160\nWidth.c     -1.319e-01  1.271e-02 -10.375\nLength.c     1.076e-02  1.717e-03   6.265\nAgeMed.c     1.097e+00  1.854e-01   5.920\nAgeMed2.c   -2.936e-04  4.785e-05  -6.136\nResiPCT.c    4.649e-02  3.482e-03  13.352\nDuTriPct.c  -1.268e-02  2.677e-03  -4.737\nNoLog.c      1.478e-01  1.057e-02  13.985\nSetback.c    1.944e-01  2.307e-02   8.428\nValLog       1.591e-02  3.856e-03   4.126\nUDipPCT      1.405e-02  3.546e-02   0.396\nPCTFRAVI    -8.837e-02  2.958e-02  -2.988\nPCTIMGRE     2.367e-01  4.860e-02   4.870\nAvecEnf      5.778e-04  3.226e-02   0.018\nFranPCT      5.213e-02  1.638e-02   3.183\nfit warnings:\nSome predictor variables are on very different scales: consider rescaling\n\n# Qualité d'ajustement du modèle\ncat(\"Statistiques d'ajustement du modèle\",\n    \"\\n-2 Log L = \", -2*logLik(Modele3),\n    \"\\nAIC =\", AIC(Modele3), \"\\nBIC =\", BIC(Modele3))\n\nStatistiques d'ajustement du modèle \n-2 Log L =  78742.85 \nAIC = 78776.85 \nBIC = 78900.75\n\n# Calcul de l'ICC (coefficient intraclasse)\nperformance::icc(Modele3)\n\n# Intraclass Correlation Coefficient\n\n    Adjusted ICC: 0.131\n  Unadjusted ICC: 0.110\n\nICC3 &lt;- performance::icc(Modele3)\ncat(\"Part de la variance de la variable dépendante \",\n    \"\\nimputable au niveau 2 : \", round(ICC3$ICC_adjusted*100,2), \"%\", sep = \"\")\n\nPart de la variance de la variable dépendante \nimputable au niveau 2 : 13.11%\n\n# Calcul des R2 conditionnel et marginal avec les fonctions\n# r.squaredGLMM ou r2_nakagawa du package performance\nr.squaredGLMM(Modele3)\n\n           R2m      R2c\n[1,] 0.1598477 0.269979\n\nr2_nakagawa(Modele3)\n\n# R2 for Mixed Models\n\n  Conditional R2: 0.270\n     Marginal R2: 0.160\n\n\n\n10.4.4 Modèle complet avec une interaction\nLe quatrième modèle consiste à ajouter au modèle complet une interaction entre deux variables des deux niveaux.\n\n# Variance d'interaction\nMultiniveau$PCTFRAVI_Setback &lt;-  Multiniveau$PCTFRAVI * Multiniveau$Setback.c\n\n# MODÈLE 4 : interaction aux deux niveaux\n# ------------------------------------------------------\nModele4 &lt;- lmer(PCTArb ~\n                  # Variables indépendantes au niveau 1\n                   Width.c+Length.c+AgeMed.c+AgeMed2.c+ResiPCT.c+DuTriPct.c+NoLog.c+Setback.c+\n                  # Variables indépendantes au niveau 2\n                  ValLog+UDipPCT+PCTFRAVI+PCTIMGRE+AvecEnf+FranPCT+\n                  # Variable d'interaction\n                  PCTFRAVI_Setback+\n(1| SRNOM), data = Multiniveau)\n\n# Résultats du modèle\nsummary(Modele4)\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: PCTArb ~ Width.c + Length.c + AgeMed.c + AgeMed2.c + ResiPCT.c +  \n    DuTriPct.c + NoLog.c + Setback.c + ValLog + UDipPCT + PCTFRAVI +  \n    PCTIMGRE + AvecEnf + FranPCT + PCTFRAVI_Setback + (1 | SRNOM)\n   Data: Multiniveau\n\nREML criterion at convergence: 78732.7\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.0148 -0.5568 -0.1922  0.2598  9.4261 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n SRNOM    (Intercept) 11.83    3.439   \n Residual             80.24    8.958   \nNumber of obs: 10814, groups:  SRNOM, 312\n\nFixed effects:\n                   Estimate Std. Error t value\n(Intercept)      -0.0094840  3.1984732  -0.003\nWidth.c          -0.1356543  0.0127250 -10.660\nLength.c          0.0107911  0.0017159   6.289\nAgeMed.c          1.0915688  0.1851983   5.894\nAgeMed2.c        -0.0002923  0.0000478  -6.114\nResiPCT.c         0.0460769  0.0034803  13.239\nDuTriPct.c       -0.0126785  0.0026735  -4.742\nNoLog.c           0.1453667  0.0105748  13.747\nSetback.c         0.0034430  0.0475943   0.072\nValLog            0.0158168  0.0038196   4.141\nUDipPCT           0.0094041  0.0351462   0.268\nPCTFRAVI         -0.0788297  0.0293729  -2.684\nPCTIMGRE          0.2193705  0.0482873   4.543\nAvecEnf          -0.0070626  0.0319907  -0.221\nFranPCT           0.0498673  0.0162308   3.072\nPCTFRAVI_Setback  0.0081695  0.0017794   4.591\nfit warnings:\nSome predictor variables are on very different scales: consider rescaling\n\n# Qualité d'ajustement du modèle\ncat(\"Statistiques d'ajustement du modèle\",\n    \"\\n-2 Log L = \", -2*logLik(Modele4),\n    \"\\nAIC =\", AIC(Modele3), \"\\nBIC =\", BIC(Modele4))\n\nStatistiques d'ajustement du modèle \n-2 Log L =  78732.66 \nAIC = 78776.85 \nBIC = 78899.85\n\n# Calcul de l'ICC (coefficient intraclasse)\nperformance::icc(Modele4)\n\n# Intraclass Correlation Coefficient\n\n    Adjusted ICC: 0.128\n  Unadjusted ICC: 0.108\n\nICC4 &lt;- performance::icc(Modele4)\ncat(\"Part de la variance de la variable dépendante \",\n    \"\\nimputable au niveau 2 : \", round(ICC4$ICC_adjusted*100,2), \"%\", sep = \"\")\n\nPart de la variance de la variable dépendante \nimputable au niveau 2 : 12.85%\n\n# Calcul des R2 conditionnel et marginal avec les fonctions\n# r.squaredGLMM ou r2_nakagawa du package performance\nr.squaredGLMM(Modele4)\n\n           R2m      R2c\n[1,] 0.1628372 0.270394\n\nr2_nakagawa(Modele4)\n\n# R2 for Mixed Models\n\n  Conditional R2: 0.270\n     Marginal R2: 0.163\n\n\n\n10.4.5 Comparaison des quatre modèles\nPour comparer les modèles, nous utilisons habituellement les statistiques d’ajustement du modèle vues plus haut, soit le maximum de vraisemblance (−2 Log-likelihood), l’AIC, l’ICC et les R2 marginal et conditionnel.\n\nc_logLik &lt;- c(logLik(Modele1),logLik(Modele2),logLik(Modele3),logLik(Modele4))\nICC &lt;- c(performance::icc(Modele1)$ICC_adjusted,\n         performance::icc(Modele2)$ICC_adjusted,\n         performance::icc(Modele3)$ICC_adjusted,\n         performance::icc(Modele4)$ICC_adjusted)\n\nR2m &lt;- c(r.squaredGLMM(Modele1)[1],\n         r.squaredGLMM(Modele2)[1],\n         r.squaredGLMM(Modele3)[1],\n         r.squaredGLMM(Modele4)[1])\n\nR2c &lt;- c(r.squaredGLMM(Modele1)[2],\n         r.squaredGLMM(Modele2)[2],\n         r.squaredGLMM(Modele3)[2],\n         r.squaredGLMM(Modele4)[2])\n\nprint(data.frame(\n            Modele = c(\"Modèle 1 (vide)\", \n                       \"Modèle 2 (VI : niv. 1)\", \n                       \"Modèle 3 (VI : niv. 1 et 2)\",\n                       \"Modèle 4 (interaction niv. 1 et 2\"),\n            dl = AIC(Modele1, Modele2, Modele3, Modele4)$df,\n            Moins2LogLik = round(-2*c_logLik,0),\n            AIC = round(AIC(Modele1, Modele2, Modele3, Modele4)$AIC,0),\n            ICC = round(ICC,4),\n            R2marg = round(R2m,3),\n            R2cond = round(R2c,3)\n))\n\n                             Modele dl Moins2LogLik   AIC    ICC R2marg R2cond\n1                   Modèle 1 (vide)  3        80299 80305 0.1758  0.000  0.176\n2            Modèle 2 (VI : niv. 1) 11        78764 78786 0.1597  0.129  0.268\n3       Modèle 3 (VI : niv. 1 et 2) 17        78743 78777 0.1311  0.160  0.270\n4 Modèle 4 (interaction niv. 1 et 2 18        78733 78769 0.1285  0.163  0.270\n\n\nVous constaterez ci-dessus que les valeurs d’AIC et de -2 log de vraisemblance diminuent des modèles 1 à 4, signalant une amélioration progressive des modèles. Cela se traduit aussi par une augmentation du R2 conditionnel incluant à la fois les effets fixes et aléatoires. Sans surprise, la valeur du coefficient de corrélation intraclasse diminue du modèle vide au modèle complet : plus nous ajoutons de variables dépendantes, plus la capacité explicative du niveau 2 diminue.\nIl est également judicieux de vérifier si un modèle est significativement différent du modèle précédent avec la fonction anova qui compare les différences de leurs déviances. En guise d’exemple, la différence de déviance de 59 (\\(\\mbox{78 625}-\\mbox{78 684}=\\mbox{59}\\)) entre les modèles 3 et 2 (modèle complet versus modèle GLMM) avec six degrés de liberté – puisque le modèle 3 inclut six variables indépendantes de plus que le précédent (\\(\\mbox{17}-\\mbox{11}=\\mbox{6}\\)) – est significative (p &lt; 0,001). Cela indique que le modèle 3 est plus performant que le précédent.\n\nanova(Modele1, Modele2, Modele3, Modele4)\n\nData: Multiniveau\nModels:\nModele1: PCTArb ~ 1 + (1 | SRNOM)\nModele2: PCTArb ~ Width.c + Length.c + AgeMed.c + AgeMed2.c + ResiPCT.c + DuTriPct.c + NoLog.c + Setback.c + (1 | SRNOM)\nModele3: PCTArb ~ Width.c + Length.c + AgeMed.c + AgeMed2.c + ResiPCT.c + DuTriPct.c + NoLog.c + Setback.c + ValLog + UDipPCT + PCTFRAVI + PCTIMGRE + AvecEnf + FranPCT + (1 | SRNOM)\nModele4: PCTArb ~ Width.c + Length.c + AgeMed.c + AgeMed2.c + ResiPCT.c + DuTriPct.c + NoLog.c + Setback.c + ValLog + UDipPCT + PCTFRAVI + PCTIMGRE + AvecEnf + FranPCT + PCTFRAVI_Setback + (1 | SRNOM)\n        npar   AIC   BIC logLik deviance    Chisq Df Pr(&gt;Chisq)    \nModele1    3 80304 80326 -40149    80298                           \nModele2   11 78706 78786 -39342    78684 1614.351  8  &lt; 2.2e-16 ***\nModele3   17 78659 78783 -39313    78625   59.131  6  6.758e-11 ***\nModele4   18 78640 78771 -39302    78604   21.166  1  4.213e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "10-Multiniveau.html#sec-105",
    "href": "10-Multiniveau.html#sec-105",
    "title": "10  Régressions multiniveaux",
    "section": "\n10.5 Quiz de révision du chapitre",
    "text": "10.5 Quiz de révision du chapitre\n\n\n\n\n\nQuels sont les deux intérêts majeurs des modèles multiniveaux?\n\n\nRelisez au besoin la section 10.1.\n\n\n\n\n\n\nAnalyser la répartition de la variance entre les différents niveaux\n\n\n\n\n\n\n\nIntroduire des variables explicatives aux différents niveaux du modèle\n\n\n\n\n\n\n\nConstruire des splines\n\n\n\n\n\n\n\n\n\n\nLe modèle vide comprend :\n\n\nRelisez au besoin la section 10.2.2.1.\n\n\n\n\n\n\naucune variable explicative\n\n\n\n\n\n\n\nplusieurs variables explicatives aux niveaux 1 et 2\n\n\n\n\n\n\n\n\n\n\nUn modèle avec uniquement les variables indépendantes du niveau 1 est un modèle à effets mixtes (GLMM).\n\n\nRelisez au besoin la section 10.2.2.2.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\n\nQuelle mesure permet d’analyser la répartition de la variance entre les deux niveaux?\n\n\nRelisez au besoin la section 10.2.2.1.\n\n\n\n\n\n\nCoefficients de régression\n\n\n\n\n\n\n\nCoefficient de corrélation intraclasse\n\n\n\n\n\n\n\nAIC\n\n\n\n\n\n\n\n\n\n\nUn modèle complet comprend des variables explicatives aux deux niveaux.\n\n\nRelisez au besoin la section 10.2.2.3.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\n\nEst-ce possible d’introduire une interaction entre une variable mesurée au niveau 1 et une autre mesurée au niveau 2?\n\n\nRelisez au besoin la section 10.2.2.4.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\nVérifier votre résultat\n\n\n\n\n\n\n\n\n\nAtkinson, Rowland et Keith Kintrea. 2001. « Disentangling area effects: Evidence from deprived and non-deprived neighbourhoods. » Urban studies 38 (12): 2277‑2298. https://doi.org/10.1080%2F00420980120087162.\n\n\nBressoux, Pascal. 2010. Modélisation statistique appliquée aux sciences sociales. De boeck.\n\n\nGelman, Andrew et Jennifer Hill. 2006. Data analysis using regression and multilevel/hierarchical models. Cambridge university press.\n\n\nPham, Thi-Thanh-Hien, Philippe Apparicio, Shawn Landry et Joseph Lewnard. 2017. « Disentangling the effects of urban form and socio-demographic context on street tree cover: A multi-level analysis from Montréal. » Landscape and Urban Planning 157: 422‑433. http://dx.doi.org/10.1016/j.landurbplan.2016.09.001.\n\n\nPhilibert, Mathieu D et Philippe Apparicio. 2007. « Statistiques spatiales appliquées à l’analyse de données de santé. » In Géographie de la santé : un panorama, 111‑132. Economica.\n\n\nRaudenbush, Stephen W et Anthony S Bryk. 2002. Hierarchical linear models: Applications and data analysis methods. Vol. 1. Sage.\n\n\nTabachnick, Barbara G, Linda S Fidell et Jodie B Ullman. 2007. Using multivariate statistics. Pearson."
  },
  {
    "objectID": "11-GAM.html#sec-111",
    "href": "11-GAM.html#sec-111",
    "title": "11  Modèles généralisés additifs",
    "section": "\n11.1 Introduction",
    "text": "11.1 Introduction\nPuisque les modèles GAM sont une extension des modèles GLM, ils peuvent s’appliquer à des modèles pour des variables indépendantes qualitatives, de comptage ou continues. Nous l’appliquons ici, à titre d’illustration, à une variable indépendante continue. Pour rappel, la formule décrivant un modèle linéaire généralisé (GLM) utilisant une distribution normale et une fonction de lien identitaire est la suivante :\n\\[\n\\begin{aligned}\n&Y \\sim Normal(\\mu,\\sigma)\\\\\n&g(\\mu) = \\beta_0 + \\beta X\\\\\n&g(x) = x\n\\end{aligned}\n\\tag{11.1}\\]\nLes coefficients \\(\\beta\\) permettent de quantifier l’effet des variables indépendantes (X) sur la moyenne (l’espérance) (\\(\\mu\\)) de la variable dépendante (Y). Un coefficient \\(\\beta_k\\) négatif indique que, si la variable \\(X_k\\) augmente, alors la variable Y tend à diminuer et inversement, si le coefficient est positif. L’inconvénient de cette formulation est que le modèle est capable de capter uniquement des relations linéaires entre ces variables. Or, il existe de nombreuses situations dans lesquelles une variable indépendante a un lien non linéaire avec une variable dépendante; voici quelques exemples :\n\nSi nous mesurons le niveau de bruit émis par une source sonore (variable dépendante) à plusieurs endroits et que nous tentons de prédire l’intensité sonore en fonction de la distance à la source (variable indépendante), nous pouvons nous attendre à observer une relation non linéaire entre les deux. En effet, le son étant une énergie se dispersant selon une sphère dans l’espace, son intensité est inversement proportionnelle au carré de la distance avec la source sonore.\nLa concentration de la pollution atmosphérique en ville suit généralement des patrons temporels et spatiaux influencés directement par la météorologie et les activités humaines. Autrement dit, il serait absurde d’introduire l’espace de façon linéaire (avec un gradient nord-sud ou est-ouest), ou le moment de la journée de façon linéaire (comme si la pollution augmentait du matin au soir ou inversement). En guise d’exemple, la figure 11.1, tirée de Gelb et Apparicio (2020), illustre bien ces variations temporelles pour deux polluants (le dioxyde d’azote et l’ozone).\n\n\n\nFigure 11.1: Patron journalier du dioxyde d’azote et de l’ozone à Paris\n\n\n11.1.1 Non-linéarité fonctionnelle\nIl existe de nombreuses façons d’introduire des relations non linéaires dans un modèle. La première et la plus simple à mettre en œuvre est de transformer la variable indépendante à l’aide d’une fonction inverse, exponentielle, logarithmique ou autre.\nPrenons un premier exemple avec une variable Y que nous tentons de prédire avec une variable X, présenté à la figure 11.2. Si nous ajustons une droite de régression à ces données (en bleu), nous constatons que l’augmentation de X est associée à une augmentation de Y. Cependant, la droite de régression est très éloignée des données et ne capte qu’une petite partie de la relation. Une lecture attentive permet de constater que l’effet de X sur Y augmente de plus en plus rapidement à mesure que X augmente. Cette forme est caractéristique d’une relation exponentielle. Nous pouvons donc transformer la variable X avec la fonction exponentielle afin d’obtenir un meilleur ajustement (en rouge).\n\n\n\n\nFigure 11.2: Relation non linéaire exponentielle\n\n\n\nLa figure 11.3 illustre trois autres situations avec les fonctions logarithmique, logistique inverse et racine carrée. Cette approche peut donner des résultats intéressants si vous disposez d’une bonne justification théorique sur la forme attendue de la relation entre X et Y.\n\n\n\n\nFigure 11.3: Autres relations non linéaires\n\n\n\nIl existe également des cas de figure dans lesquels aucune fonction ne donne de résultats pertinents, comme illustré à la figure 11.4. Nous constatons facilement qu’aucune des fonctions proposées n’est capable de bien capter la relation entre les deux variables. Puisque cette relation est complexe, il convient alors d’utiliser une autre stratégie pour la modéliser.\n\n\n\n\nFigure 11.4: Relation non linéaire plus complexe\n\n\n\n\n11.1.2 Non-linéarité avec des polynomiales\nNous avons vu, dans le chapitre sur la régression simple (section 7.5.1.1), qu’il est possible d’utiliser des polynomiales pour ajuster des relations non linéaires. Pour rappel, il s’agit simplement d’ajouter à un modèle la variable X à différents exposants (\\(X+X^2+\\dots+X^k\\)). Chaque exposant supplémentaire (chaque ordre supplémentaire) permet au modèle d’ajuster une relation plus complexe. Rien de tel qu’un graphique pour illustrer le tout (figure 11.5).\n\n\n\n\nFigure 11.5: Visualisation de plusieurs polynomiales\n\n\n\nL’enjeu est de sélectionner le bon nombre de degrés de la polynomiale pour le modèle. Chaque degré supplémentaire constitue une nouvelle variable dans le modèle, et donc un paramètre supplémentaire. Un trop faible nombre de degrés produit des courbes trop simplistes, alors qu’un nombre trop élevé conduit à un surajustement (overfitting en anglais) du modèle. La figure 11.6 illustre ces deux situations.\n\n\n\n\nFigure 11.6: Sur et sous-ajustement d’une polynomiale\n\n\n\nUn des problèmes inhérents à l’approche des polynomiales est la difficulté d’interprétation. En effet, les coefficients ne sont pas directement interprétables et seule une figure représentant les prédictions du modèle permet d’avoir une idée de l’effet de la variable X sur la variable Y.\n\n11.1.3 Non-linéarité par segments\nUn compromis intéressant offrant une interprétation simple et une relation potentiellement complexe consiste à découper la variable X en segments, puis d’ajuster un coefficient pour chacun de ces segments. Nous obtenons ainsi une ligne brisée et des coefficients faciles à interpréter (figure 11.7). Nous ne présentons pas d’exemple d’application dans R, mais sachez que le package segmented permet d’ajuster ce type de modèle.\n\n\n\n\nFigure 11.7: Régression par segment\n\n\n\nL’enjeu est alors de déterminer le nombre de points et la localisation de points de rupture. L’inconvénient majeur de cette approche est qu’en réalité, peu de phénomènes sont marqués par des ruptures très nettes.\nÀ la figure 11.7, nous avons divisé la variable X en trois segments (\\(k_1\\), \\(k_2\\) et \\(k_3\\)), définis respectivement avec les intervalles suivants : [0,00-0,22], [0,22-0,41] et [0,41-1,00]. Concrètement, cela revient à diviser la variable X en trois nouvelles variables \\(X_{k1}\\), \\(X_{k2}\\), et \\(X_{k3}\\). La valeur de \\(X_{ik}\\) est égale à \\(x_i\\) si \\(x_i\\) se trouve dans l’intervalle propre à k, et à 0 autrement. Ici, nous obtenons trois coefficients :\n\nle premier est positif, une augmentation de X sur le premier segment est associée à une augmentation de Y;\nle second est négatif, une augmentation de X sur le second segment est associée à une diminution de Y;\nle troisième est aussi négatif, une augmentation de X sur le troisième segment est associée à une diminution de Y, mais moins forte que pour le second segment.\n\n11.1.4 Non-linéarité avec des splines\n\nLa dernière approche, et certainement la plus flexible, est d’utiliser ce que l’on appelle une spline pour capter des relations non linéaires. Une spline est une fonction créant des variables supplémentaires à partir d’une variable X et d’une fonction de base. Ces variables supplémentaires, appelées bases (basis en anglais), sont ajoutées au modèle; la sommation de leurs valeurs multipliées par leurs coefficients permet de capter les relations non linéaires entre une variable dépendante et une variable indépendante. Le nombre de bases et leur localisation (plus souvent appelé nœuds) permettent de contrôler la complexité de la fonction non linéaire.\nPrenons un premier exemple simple avec une fonction de base triangulaire (tent basis en anglais). Nous créons ici une spline avec sept nœuds répartis équitablement sur l’intervalle de valeurs de la variable X. Les sept bases qui en résultent sont présentées à la figure 11.8. Dans cette figure, chaque sommet d’un triangle correspond à un nœud et chaque triangle correspond à une base.\n\n\n\n\nFigure 11.8: Bases de la spline triangulaire\n\n\n\nEn ajoutant ces bases dans notre modèle de régression, nous pouvons ajuster un coefficient pour chacune et le représenter en multipliant ces bases par les coefficients obtenus avec une simple régression linéaire (figure 11.9).\n\n\n\n\nFigure 11.9: Spline triangulaire multipliée par ces coefficients\n\n\n\nNous remarquons ainsi que les bases correspondant à des valeurs plus fortes de Y ont reçu des coefficients plus élevés. Pour reconstituer la fonction non linéaire, il suffit d’additionner ces bases multipliées par leurs coefficients, soit la ligne bleue à la figure 11.10.\n\n\n\n\nFigure 11.10: Spline triangulaire\n\n\n\nLa fonction de base triangulaire est intéressante pour présenter la logique qui sous-tend les splines, mais elle est rarement utilisée en pratique. On lui préfère généralement d’autres formes donnant des résultats plus lisses comme les B-spline quadratiques, B-spline cubiques, M-spline, Duchon spline, etc.\n\n\n\n\nFigure 11.11: Comparaison de différentes bases\n\n\n\nLes approches que nous venons de décrire sont regroupées sous l’appellation de modèles additifs. Dans les prochaines sous-sections, nous nous concentrons davantage sur les splines du fait de leur plus grande flexibilité."
  },
  {
    "objectID": "11-GAM.html#sec-112",
    "href": "11-GAM.html#sec-112",
    "title": "11  Modèles généralisés additifs",
    "section": "\n11.2 Spline de régression et spline de lissage",
    "text": "11.2 Spline de régression et spline de lissage\nDans les exemples précédents, nous avons vu que la construction d’une spline nécessite d’effectuer deux choix importants : le nombre de nœuds et leur localisation. Un trop grand nombre de nœuds conduit à un surajustement du modèle alors qu’un trop faible nombre de nœuds conduit à un sous-ajustement. Lorsque ces choix sont effectués par l’utilisateur et que les bases sont ajoutées manuellement dans le modèle tel que décrit précédemment, nous parlons alors de splines de régression (Regression Spline en anglais).\nUne approche a été proposée pour faciliter le choix du nombre de nœuds, il s’agit de splines de lissage (smoothing spline en anglais). L’idée derrière cette approche est d’introduire dans le modèle une pénalisation associée avec le nombre de nœuds (ou degré de liberté) de la spline, dans un souci de parcimonie : chaque nœud supplémentaire doit suffisamment contribuer au modèle pour être conservé. Il n’est pas nécessaire ici de rentrer dans le détail mathématique de cette pénalisation qui est un peu complexe. Retenez simplement qu’elle dépend d’un paramètre appelé \\(\\lambda\\) :\n\nplus \\(\\lambda\\) tend vers 0, plus la pénalisation est faible et plus la spline de lissage devient une simple spline de régression;\nà l’inverse, plus elle est forte, plus la pénalité est importante, au point que la spline peut se résumer à une simple ligne droite.\n\nCela est illustré à la figure 11.12 comprenant trois splines avec 20 nœuds et des valeurs \\(\\lambda\\) différentes contrôlant la force de la pénalité.\nBien évidemment, nous constatons qu’avec la spline de régression (non pénalisée), 20 nœuds conduisent à un fort surajustement du modèle. En revanche, les splines de lissage (pénalisées) permettent de corriger ce problème de surajustement. Toutefois, une valeur trop importante de \\(\\lambda\\) conduit à un sous-ajustement du modèle (ici \\(\\lambda = 3\\) et \\(\\lambda = 100\\), lignes verte et bleue).\n\n\n\n\nFigure 11.12: Pénalisation des splines\n\n\n\nAvec les splines de lissage, l’enjeu est de sélectionner une valeur optimale de \\(\\lambda\\). Le plus souvent, les packages R estiment eux-mêmes ce paramètre à partir des données utilisées dans le modèle. Toutefois, gardez en mémoire que vous pouvez modifier ce paramètre. Mentionnons également que les splines de lissage peuvent être reparamétrées dans un modèle pour être intégrées comme des effets aléatoires. Dans ce cas-ci, \\(\\lambda\\) est remplacé par un simple paramètre de variance directement estimé dans le modèle (Wood 2004)."
  },
  {
    "objectID": "11-GAM.html#sec-113",
    "href": "11-GAM.html#sec-113",
    "title": "11  Modèles généralisés additifs",
    "section": "\n11.3 Interprétation d’une spline\n",
    "text": "11.3 Interprétation d’une spline\n\nL’interprétation d’une spline se fait à l’aide de graphiques. En effet, puisqu’elle est composée d’un ensemble de coefficients appliqués à des bases, il est difficile d’interpréter directement ces derniers. Nous préférons alors représenter la fonction obtenue à l’aide d’un graphique, illustrant son effet marginal. Ce graphique est construit en trois étapes :\n\nCréer un jeu de données fictif dans lequel l’ensemble des variables indépendantes sont fixées à leurs moyennes respectives, sauf la variable pour laquelle nous souhaitons représenter la spline. Pour cette dernière, un ensemble de valeurs allant de son minimum à son maximum est utilisé;\nUtiliser le modèle pour prédire les valeurs attendues de la variable dépendante pour chacune des observations fictives ainsi créées;\nAfficher les prédictions obtenues dans un graphique.\n\nNotez ici qu’un graphique des effets marginaux se base sur les prédictions du modèle. Si un modèle est mal ajusté, les prédictions ne seront pas fiables et il sera inutile d’interpréter la spline obtenue.\nIl est aussi possible, dans le cas des splines de lissage, d’interpréter les estimated degrees of freedom (EDF) qui constituent une approximation du nombre de nœuds de la spline. S’ils ne nous renseignent pas sur la forme de la spline, ils nous indiquent son niveau de complexité. Une spline avec un EDF de 1 est en réalité un simple terme linéaire. Plus l’EDF augmente, plus la spline est complexe."
  },
  {
    "objectID": "11-GAM.html#sec-114",
    "href": "11-GAM.html#sec-114",
    "title": "11  Modèles généralisés additifs",
    "section": "\n11.4 Multicolinéarité non linéaire",
    "text": "11.4 Multicolinéarité non linéaire\nLorsque des splines sont ajoutées dans un modèle, il est nécessaire de vérifier si ces dernières ne posent pas un problème de multicolinéarité. Cependant, le VIF ne peut plus être utilisé du fait de la non-linéarité des relations modélisées. Il est alors nécessaire d’utiliser une autre mesure : la concurvité (concurvity) permettant de mesurer sur une échelle allant de 0 à 1 à quel point deux splines ont en réalité capturé le même effet et se substituent l’une à l’autre. Une valeur de 0 indique une absence totale de concurvité alors qu’une valeur de 1 indique que deux splines sont rigoureusement identiques (modèle non identifiable)."
  },
  {
    "objectID": "11-GAM.html#sec-115",
    "href": "11-GAM.html#sec-115",
    "title": "11  Modèles généralisés additifs",
    "section": "\n11.5 Splines avancées",
    "text": "11.5 Splines avancées\nJusqu’ici, nous avons seulement présenté le cas le plus simple pour lequel une spline est construite à partir d’une seule variable dépendante continue, mais les splines peuvent être utilisées dans de nombreux autres contextes et ont une incroyable flexibilité. Nous détaillons ici trois exemples fréquents : les splines cycliques, les splines variant par groupe et les splines multivariées. Pour une description complète des effets non linéaires possibles avec mgcv, n’hésitez pas à consulter sa documentation.\n\n\n\n\nTableau 11.1: Exemples de splines avancées\n\n\n\n\n\n\nType\nCode\nDescription\n\n\n\nspline cyclique\ns(x, bs = 'cc')\nUne spline cyclique doit être utilisée si le 0 de la variable X correspond également à sa valeur maximum. Un bon exemple est le temps dans une journée, car 24 h est équivalent à 0 h\n\n\nspline variant par groupe\ns(x, by = x2)\nUne spline variant par groupe permet d’ajuster une spline à une variable X1 différente pour chaque groupe identifié par une variable qualitative X2\n\n\nspline bivariée\ns(x1,x2)\nUne spline bivariée est utilisée pour modéliser l’interaction non linéaire de deux variables X1 et X2 s’exprimant dans la même unité (typiquement des coordonnées géographiques cartésiennes)\n\n\nspline d’interaction complète\nte(x1,x2)\nUne spline d’interaction permet de modéliser l’interaction non linéaire de deux variables continues pouvant s’exprimer dans des unités différentes, elle combine les effets spécifiques de chacune des deux variables et leur interaction\n\n\nspline d’interaction partielle\ns(x1) + s(x2) + ti(x1,x2)\nUne spline d’interaction partielle permet de distinguer les effets non linéaires individuels de deux variables de leur interaction non linéaire\n\n\n\n\n\n\n\n11.5.1 Splines cycliques\nUne spline cyclique est une extension d’une spline classique dont les bases aux extrémités sont spécifiées de telle sorte que la valeur au départ de la spline soit la même que celle à la fin de la spline. Cela permet à la spline de former une boucle, ce qui est particulièrement intéressant pour des variables dont le 0 et la valeur maximale correspondent en réalité à la même valeur. L’exemple le plus parlant est certainement le cas d’une variable représentant la mesure d’un angle en degrés. Les valeurs de 0 et 360 sont identiques et les valeurs 350 et 10 sont toutes les deux à une distance de 10 degrés de 0. Un autre exemple possible serait de considérer l’heure comme une variable continue; dans ce cas, 24 h et 0 h signifient la même chose.\nPrenons un exemple concret. Nous souhaitons modéliser la concentration de dioxyde d’azote (NO2) à Paris, mesurée par un ensemble de stations fixes. Nous pourrions nous attendre à ce que le NO2 suive chaque jour un certain patron. Concrètement, à proximité d’axes routiers majeurs, nous nous attendons à observer des pics suivant les flux pendulaires. À la figure 11.13, nous retrouvons bien les deux pics attendus correspondant aux heures de pointe du matin et du soir. Aussi, comme indiqué par la ligne rouge, la valeur prédite par la spline est la même à 24 h et à 0 h.\n\n\n\n\nFigure 11.13: Spline cyclique pour modéliser la concentration de dioxyde d’azote\n\n\n\n\n11.5.2 Splines par groupe\nTel qu’abordé dans les chapitres précédents, il arrive régulièrement que les observations appartiennent à différents groupes. Dans ce cas de figure, nous pouvons être amenés à vérifier si la relation décrite par une spline est identique pour chacun des groupes d’observations. Il s’agit alors d’ajuster une spline différente par groupe. Dans l’exemple précédent, chaque valeur de NO2 a été mesurée par une station fixe de mesure spécifique. Compte tenu du fait que l’environnement autour de chaque station est particulier, nous pourrions s’attendre à ce que les valeurs de NO2 ne présentent pas exactement les mêmes patrons journaliers pour chaque station.\nÀ la figure 11.14, il est possible de constater que le NO2 suit globalement le même patron temporel pour l’ensemble des stations à l’exception de trois d’entres-elles. Il s’agit en réalité de stations situées dans des secteurs ruraux de la région parisienne, et donc moins impactées par le trafic routier.\n\n\n\n\nFigure 11.14: Spline cyclique variant par groupe\n\n\n\n\n11.5.3 Splines multivariées et splines d’interaction\nJusqu’ici, nous n’avons considéré que des splines ne s’appliquant qu’à une seule variable indépendante; cependant, il est possible de construire des splines multivariées s’ajustant simultanément sur plusieurs variables indépendantes. L’objectif est alors de modéliser les potentielles interactions non linéaires entre les variables indépendantes combinées dans une même spline. Prenons un exemple concret, dans la section sur les modèles GLM, nous avons modélisé la couverture des aires de diffusion (AD) à Montréal par des îlots de chaleur. Parmi les variables indépendantes, nous avons notamment utilisé la distance au centre-ville ainsi que la part de la surface végétalisée des AD. Nous pourrions formuler l’hypothèse que ces deux variables influencent conjointement et de façon non linéaire la proportion de la surface d’îlot de chaleur dans chaque AD. Pour représenter une spline sur plusieurs dimensions, nous utilisons alors une carte de chaleur dont la couleur représente la valeur de la variable dépendante prédite en fonction des deux variables indépendantes.\nIl est important de distinguer la spline d’interaction et la spline multivariée. La première est utilisée lorsque les variables indépendantes introduites dans la spline ne sont pas exprimées sur la même échelle et n’évoluent pas conjointement. L’exemple donné ci-dessus avec les variables de végétation et de distance au centre-ville est un exemple de spline d’interaction, la première variable étant exprimée en pourcentage et l’autre en mètres. De plus, ces deux variables ne sont pas conjointes, mais bien distinctes l’une de l’autre. Un cas typique où une spline multivariée serait à privilégier est le cas de l’ajout des coordonnées spatiales dans le modèle. L’emplacement des AD est mesuré par deux variables (coordonnées spatiales x et y) toutes les deux exprimées en mètres évoluant conjointement, au sens où les coordonnées x n’interagissent pas avec les coordonnées y, mais forment à elles deux un espace propre. Au-delà de la problématique de l’échelle des données, il est important de retenir que les splines d’interaction tendent à être davantage pénalisées que les splines multivariées.\nLa spline d’interaction représentée à la figure 11.15 indique que les AD avec la plus grande proportion de leur surface couverte par des îlots de chaleur sont situées à moins de 25 kilomètres du centre-ville, au-delà de cette distance, cette proportion chute en bas de 0,1, soit 10 % de la surface de l’AD. En revanche, à proximité du centre-ville (moins d’un kilomètre), même les AD disposant d’un fort pourcentage de surface végétalisée sont tout de même marquées par un fort pourcentage de surface couverte par des îlots de chaleur.\nLes splines bivariées sont fréquemment utilisées pour capturer un potentiel patron spatial dans les données. En effet, si nous disposons des coordonnées spatiales de chaque observation (x, y), il est possible d’ajuster une spline bivariée sur ces coordonnées, contrôlant ainsi l’effet de l’espace.\n\n\n\n\nFigure 11.15: Spline d’interaction bivariée\n\n\n\nIl n’y a pas de limite théorique au nombre de variables qui peuvent être ajoutées dans une spline d’interaction ou multivariée. Notez cependant que plus le nombre de dimensions augmente, plus la fonction à estimer est complexe et plus le volume de données nécessaire est grand et doit couvrir densément l’ensemble de l’espace d’échantillonnage multidimensionnel."
  },
  {
    "objectID": "11-GAM.html#sec-116",
    "href": "11-GAM.html#sec-116",
    "title": "11  Modèles généralisés additifs",
    "section": "\n11.6 Mise en œuvre dans R",
    "text": "11.6 Mise en œuvre dans R\nIl est possible d’ajuster des splines de régression dans n’importe quel package permettant d’ajuster des coefficients pour un modèle de régression. Il suffit de construire les bases des splines en amont à l’aide du package splines2 et de les ajouter directement dans l’équation de régression. En revanche, il est nécessaire d’utiliser des packages spécialisés pour ajuster des splines de lissage. Parmi ceux-ci, mgcv est probablement le plus populaire du fait de sa (très) grande flexibilité, suivi des packages gamlss, gam et VGAM. Nous comparons ici les deux approches, puis nous tentons d’améliorer le modèle que nous avons ajusté pour prédire le pourcentage de surface couverte par des îlots de chaleur dans les aires de diffusion de Montréal, dans une perspective d’équité environnementale. Pour rappel, la variable dépendante est exprimée en pourcentage et nous utilisons une distribution bêta pour la modéliser.\n\nlibrary(mgcv)\n# Chargement des données\ndataset &lt;- read.csv(\"data/gam/data_chaleur.csv\", fileEncoding = \"utf8\")\n# Ajustement du modèle de base\nrefmodel &lt;- gam(hot ~\n          A65Pct + A014Pct + PopFRPct + PopMVPct +\n          poly(prt_veg, degree = 2)  + Arrond,\n        data = dataset, family = betar(link = \"logit\"))\n\nDans notre première analyse de ces données, nous avons ajusté une polynomiale d’ordre 2 pour représenter un potentiel effet non linéaire de la végétation sur les îlots de chaleur. Nous remplaçons à présent ce terme par une spline de régression en sélectionnant quatre nœuds.\n\nlibrary(splines2)\n# Création des bases de la spline\nbasis &lt;- bSpline(x = dataset$prt_veg, df =4, intercept = FALSE)\n# Ajouter les bases au DataFrame\nbasisdf &lt;- as.data.frame(basis)\nnames(basisdf) &lt;- paste('spline',1:ncol(basisdf), sep='')\ndataset &lt;- cbind(dataset, basisdf)\n# Ajuster le modèle\nmodel0 &lt;- gam(hot ~\n          A65Pct + A014Pct + PopFRPct + PopMVPct +\n          spline1 + spline2 + spline3 + spline4 + Arrond,\n        data = dataset, family = betar(link = \"logit\"))\n\nNous pouvons à présent ajuster une spline de lissage et laisser mgcv déterminer son niveau de complexité.\n\n# Ajustement du modèle avec une spline simple\nmodel1 &lt;- gam(hot ~\n          A65Pct + A014Pct + PopFRPct + PopMVPct +\n          s(prt_veg)  + Arrond,\n        data = dataset, family = betar(link = \"logit\"))\n\nNotez ici que la syntaxe à employer est très simple, il suffit de spécifier s(prt_veg) pour indiquer à la fonction gam que vous souhaitez ajuster une spline pour la variable prt_veg. Nous pouvons à présent comparer l’ajustement des deux modèles en utilisant la mesure de l’AIC.\n\n# Comparaison des AIC\nAIC(refmodel, model0, model1)\n\n               df       AIC\nrefmodel 40.00000 -6399.784\nmodel0   42.00000 -6419.630\nmodel1   44.61065 -6417.562\n\n\nNous constatons que la valeur de l’AIC du second modèle est plus réduite, indiquant un meilleur ajustement du modèle avec une spline de régression. Notons cependant que la différence avec la spline de lissage est anecdotique (deux points de l’AIC) et que nous connaissions a priori le bon nombre de nœuds à utiliser. Pour des relations plus complexes, les splines de lissage ont tendance à nettement mieux performer. Voyons à présent comment représenter ces trois termes non linéaires.\n\n# Création d'un DataFrame de prédiction dans lequel seule\n# la variable prt_veg varie.\ndfpred &lt;- data.frame(\n  prt_veg = seq(min(dataset$prt_veg), max(dataset$prt_veg), 0.5),\n  A65Pct = mean(dataset$A65Pct),\n  A014Pct = mean(dataset$A014Pct),\n  PopFRPct = mean(dataset$PopFRPct),\n  PopMVPct = mean(dataset$PopMVPct),\n  Arrond = \"Verdun\"\n)\n\n# Recréation des bases de la spline de régression\n# pour les nouvelles observations\nnvl_bases &lt;- data.frame(predict(basis, newx = dfpred$prt_veg))\nnames(nvl_bases) &lt;- paste('spline',1:ncol(basisdf), sep='')\ndfpred &lt;- cbind(dfpred, nvl_bases)\n\n# Définition de la fonction inv.logit, soit l'inverse de la fonction \n# de lien du modèle pour retrouver les prédictions dans l'échelle \n# originales des données\ninv.logit &lt;- function(x){exp(x)/(1+exp(x))}\n\n# Utilisation des deux modèles pour effectuer les prédictions\npredref &lt;- predict(refmodel, newdata = dfpred, type = 'link', se.fit = TRUE)\npredmod0 &lt;- predict(model0, newdata = dfpred, type = 'link', se.fit = TRUE)\npredmod1 &lt;- predict(model1, newdata = dfpred, type = 'link', se.fit = TRUE)\n\n# Calcul de la valeur prédite et construction des intervalles de confiance\ndfpred$polypred &lt;- inv.logit(predref$fit)\ndfpred$poly025 &lt;- inv.logit(predref$fit - 1.96 * predref$se.fit)\ndfpred$poly975 &lt;- inv.logit(predref$fit + 1.96 * predref$se.fit)\n\ndfpred$regsplinepred &lt;- inv.logit(predmod0$fit)\ndfpred$regspline025 &lt;- inv.logit(predmod0$fit - 1.96 * predmod0$se.fit)\ndfpred$regspline975 &lt;- inv.logit(predmod0$fit + 1.96 * predmod0$se.fit)\n\ndfpred$splinepred &lt;- inv.logit(predmod1$fit)\ndfpred$spline025 &lt;- inv.logit(predmod1$fit - 1.96 * predmod1$se.fit)\ndfpred$spline975 &lt;- inv.logit(predmod1$fit + 1.96 * predmod1$se.fit)\n\n# Créer un graphique pour afficher les résultats\nggplot(dfpred) + \n  geom_ribbon(aes(x = prt_veg, ymin = poly025, ymax = poly975),\n              alpha = 0.4, color = \"grey\") +\n  geom_ribbon(aes(x = prt_veg, ymin = spline025, ymax = spline975),\n              alpha = 0.4, color = \"grey\") +\n  geom_ribbon(aes(x = prt_veg, ymin = regspline025, ymax = regspline975),\n              alpha = 0.4, color = \"grey\") +\n  geom_line(aes(y = polypred, x = prt_veg, color = \"polynomiale\"),\n            linewidth = 1) + \n  geom_line(aes(y = regsplinepred, x = prt_veg, color = \"spline de régression\"),\n            linewidth = 1)+\n  geom_line(aes(y = splinepred, x = prt_veg, color = \"spline de lissage\"),\n            linewidth = 1)\n\n\n\nFigure 11.16: Comparaison d’une spline et d’une polynomiale\n\n\n\nNous constatons que les trois termes renvoient des prédictions très similaires et qu’une légère différence n’est observable que pour les secteurs avec les plus hauts niveaux de végétation (supérieurs à 75 %).\nJusqu’ici, nous utilisons l’arrondissement dans lequel est comprise chaque aire de diffusion comme une variable nominale afin de capturer la dimension spatiale du jeu de données. Puisque nous avons abordé la notion de splines bivariées, il serait certainement plus efficace d’en construire une à partir des coordonnées géographiques (x,y) des centroïdes des aires de diffusion. En effet, il est plus probable que la distribution des îlots de chaleur suive un patron spatial continu sur le territoire plutôt que les délimitations arbitraires des arrondissements.\n\n# Ajustement du modèle avec une spline bivariée pour l'espace\nmodel2 &lt;- gam(hot ~\n          A65Pct + A014Pct + PopFRPct + PopMVPct +\n          s(prt_veg)  + s(X,Y),\n        data = dataset, family = betar(link = \"logit\"))\n\nNotez ici que l’expression s(X,Y) permet de créer une spline bivariée à partir des coordonnées (x, y), soit deux colonnes présentes dans le jeu de données. Ces coordonnées sont exprimées toutes deux en mètres et n’interagissent pas ensemble au sens strict, nous devons donc ajuster une spline bivariée. Si vous avez besoin d’ajuster une spline d’interaction (notamment quand les variables sont dans des unités différentes), il est nécessaire d’utiliser une autre syntaxe te(X,Y) ou t2(X,Y) faisant appel à une structure mathématique légèrement différente, soit des tensor product smooths.\nPuisque notre modèle intègre deux splines, nous devons nous assurer que nous n’avons pas de problème de concurvité, ce que nous pouvons faire avec la fonction concurvity du package mgcv.\n\nvalues &lt;- concurvity(model2, full = FALSE)\n\n# Worst, estimation pessimiste de la concurvité\nround(values$worst,3)\n\n           para s(prt_veg) s(X,Y)\npara          1      0.000  0.000\ns(prt_veg)    0      1.000  0.458\ns(X,Y)        0      0.458  1.000\n\n# Observed, estimation optimiste de la concurvité\nround(values$observed,3)\n\n           para s(prt_veg) s(X,Y)\npara          1      0.000  0.000\ns(prt_veg)    0      1.000  0.154\ns(X,Y)        0      0.403  1.000\n\n# Estimate, estimation entre deux de la concurvité\nround(values$estimate,3)\n\n           para s(prt_veg) s(X,Y)\npara          1      0.000  0.000\ns(prt_veg)    0      1.000  0.142\ns(X,Y)        0      0.358  1.000\n\n\nNous pouvons ainsi constater des niveaux de concurvité tout à fait acceptables dans notre modèle. Des valeurs supérieures à 0,8 devraient être considérées comme alarmantes, surtout si elles sont reportées pour observed et estimate.\nVoyons désormais, le résumé d’un modèle GAM tel que présenté dans R.\n\nsummary(model2)\n\n\nFamily: Beta regression(15.469) \nLink function: logit \n\nFormula:\nhot ~ A65Pct + A014Pct + PopFRPct + PopMVPct + s(prt_veg) + s(X, \n    Y)\n\nParametric coefficients:\n              Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -0.6050031  0.0645191  -9.377  &lt; 2e-16 ***\nA65Pct       0.0027671  0.0014072   1.966   0.0493 *  \nA014Pct     -0.0019040  0.0027674  -0.688   0.4914    \nPopFRPct     0.0095992  0.0014323   6.702 2.06e-11 ***\nPopMVPct     0.0010113  0.0008159   1.239   0.2152    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nApproximate significance of smooth terms:\n             edf Ref.df Chi.sq p-value    \ns(prt_veg)  6.38  7.565   6731  &lt;2e-16 ***\ns(X,Y)     27.10 28.764   1349  &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nR-sq.(adj) =  0.891   Deviance explained = 90.8%\n-REML = -3234.3  Scale est. = 1         n = 3157\n\n\nLa première partie du résumé comprend les résultats pour les effets fixes et linéaires du modèle. Ils s’interprètent comme pour ceux d’un GLM classique. La seconde partie présente les résultats pour les termes non linéaires. La valeur de p permet de déterminer si la spline a ou non un effet différent de 0. Une valeur non significative indique que la spline ne contribue pas au modèle. Les colonnes edf et Ref.df indiquent la complexité de la spline et peuvent être considérées comme une approximation du nombre de nœuds. Dans notre cas, la spline spatiale (s(X,Y)) est environ 5 fois plus complexe que la spline ajustée pour la végétation (s(prt_veg)). Cela n’est pas surprenant puisque la dimension spatiale (spline bivariée) du phénomène est certainement plus complexe que l’effet de la végétation. Notez ici que des valeurs edf et Ref.df proches de 1 signaleraient que l’effet d’un prédicteur est essentiellement linéaire et qu’il n’est pas nécessaire de recourir à une spline pour cette variable.\nLa dernière partie du résumé comprend deux indicateurs de qualité d’ajustement, soit le R2 ajusté et la part de la déviance expliquée.\n\nAIC(refmodel, model1, model2)\n\n               df       AIC\nrefmodel 40.00000 -6399.784\nmodel1   44.61065 -6417.562\nmodel2   40.06053 -6596.884\n\n\nNous pouvons constater que le fait d’introduire la spline spatiale dans le modèle contribue à réduire encore la valeur de l’AIC, et donc à améliorer le modèle. À ce stade, nous pourrions tenter de forcer la spline à être plus complexe en augmentant le nombre de nœuds.\n\n# Augmentation de la complexité de la spline spatiale\nmodel3 &lt;- gam(hot ~\n          A65Pct + A014Pct + PopFRPct + PopMVPct +\n          s(prt_veg)  + s(X,Y,k = 40),\n        data = dataset, family = betar(link = \"logit\"))\n\nAIC(refmodel, model1, model2, model3)\n\n               df       AIC\nrefmodel 40.00000 -6399.784\nmodel1   44.61065 -6417.562\nmodel2   40.06053 -6596.884\nmodel3   48.28633 -6639.955\n\n\nCela a pour effet d’améliorer de nouveau le modèle. Pour vérifier si l’augmentation du nombre nœuds est judicieuse, il est possible de représenter le résultat des deux splines précédentes. Pour ce faire, nous proposons de calculer les valeurs prédites de la spline pour chaque localisation dans notre terrain d’étude, en le découpant préalablement en pixels de 100 de côté. Pour cette prédiction, nous maintenons toutes les autres variables à leur moyenne respective afin d’évaluer uniquement l’effet de la spline spatiale.\n\nlibrary(viridis)\nlibrary(metR) # pour placer des étiquettes sur les isolignes\n\n# Création d'un DataFrame fictif pour les prédictions\ndfpred &lt;- expand.grid(\n  prt_veg =mean(dataset$prt_veg),\n  A65Pct = mean(dataset$A65Pct),\n  A014Pct = mean(dataset$A014Pct),\n  PopFRPct = mean(dataset$PopFRPct),\n  PopMVPct = mean(dataset$PopMVPct),\n  X = seq(min(dataset$X), max(dataset$X),100),\n  Y = seq(min(dataset$Y), max(dataset$Y),100)\n)\n\ndfpred$predicted1 &lt;- predict(model2, newdata = dfpred, type = 'response')\ndfpred$predicted2 &lt;- predict(model3, newdata = dfpred, type = 'response')\n\n# Centrage des prédictions\ndfpred$predicted1 &lt;- dfpred$predicted1 - mean(dfpred$predicted1)\ndfpred$predicted2 &lt;- dfpred$predicted2 - mean(dfpred$predicted2)\n\n# Représentation des splines\nplot1 &lt;- ggplot(dfpred) + \n  geom_raster(aes(x = X, y = Y, fill = predicted1)) + \n  geom_point(aes(x = X, y = Y),\n             size = 0.2, alpha = 0.4,\n             color = \"black\", data = dataset)+\n  geom_contour(aes(x = X, y = Y, z = predicted1), binwidth = 0.1, \n               color = \"white\", linetype = 'dashed') + \n  geom_text_contour(aes(x = X, y = Y, z = predicted1), \n                    color = \"white\", binwidth = 0.1)+\n  scale_fill_viridis() +\n  coord_cartesian() + \n  theme(axis.title= element_blank(),\n        axis.text = element_blank(),\n        axis.ticks =  element_blank()\n        ) + \n  labs(subtitle = \"spline de base\", fill = \"prédictions\")\n\nplot2 &lt;- ggplot(dfpred) + \n  geom_raster(aes(x = X, y = Y, fill = predicted2)) + \n  geom_point(aes(x = X, y = Y),\n             size = 0.2, alpha = 0.4,\n             color = \"black\", data = dataset)+\n  geom_contour(aes(x = X, y = Y, z = predicted2),\n               binwidth = 0.1, color = \"white\", linetype = 'dashed') + \n  geom_text_contour(aes(x = X, y = Y, z = predicted2), color = \"white\", binwidth = 0.1)+\n  scale_fill_viridis() +\n  coord_cartesian()+ \n  theme(axis.title= element_blank(),\n        axis.text = element_blank(),\n        axis.ticks =  element_blank()\n        ) + \n  labs(subtitle = \"spline plus complexe\", fill = \"prédictions\")\n\nggarrange(plot1, plot2, nrow = 1, ncol = 2, common.legend = TRUE, legend = 'bottom')\n\n\n\nFigure 11.17: Comparaison de deux splines spatiales\n\n\n\nOr, il s’avère que les deux splines spatiales sont très similaires (figure 11.17). Par conséquent, il est vraisemblablement plus pertinent de conserver la plus simple des deux. Notez que le Mont-Royal, compris dans le cercle central avec une isoligne à 0, est caractérisé par des valeurs plus faibles d’îlots de chaleur, alors que les quartiers centraux situés un peu plus au nord sont au contraire marqués par des pourcentages d’îlots de chaleur supérieurs de 20 points de pourcentage en moyenne."
  },
  {
    "objectID": "11-GAM.html#sec-117",
    "href": "11-GAM.html#sec-117",
    "title": "11  Modèles généralisés additifs",
    "section": "\n11.7 GAMM",
    "text": "11.7 GAMM\nBien entendu, il est possible de combiner les modèles généralisés additifs (GAM) avec les modèles à effet mixtes (GLMM) abordés dans les sections précédentes. Ces modèles généralisés additifs à effets mixtes (GAMM) peuvent facilement être mis en œuvre avec mgcv.\n\n11.7.0.1 GAMM et interceptes aléatoires\nPour définir des constantes aléatoires, il suffit d’utiliser la notation s(var, bs = 're') avec var une variable nominale. Reprenons l’exemple précédent, mais avec cette fois-ci les arrondissements comme un intercepte aléatoire.\n\ndataset$Arrond &lt;- as.factor(dataset$Arrond)\nmodel4 &lt;- gam(hot ~\n          A65Pct + A014Pct + PopFRPct + PopMVPct +\n          s(prt_veg)  + s(Arrond, bs = \"re\"),\n        data = dataset, family = betar(link = \"logit\"))\n\nL’enjeu est ensuite d’extraire la variance propre à cet effet aléatoire ainsi que les valeurs des interceptes pour chaque arrondissement.\n\ngam.vcomp(model4)\n\n\nStandard deviations and 0.95 confidence intervals:\n\n               std.dev       lower      upper\ns(prt_veg) 0.007047166 0.003785275 0.01311993\ns(Arrond)  0.393539474 0.302707198 0.51162747\n\nRank: 2/2\n\n\nNous constatons donc que l’écart-type de l’effet aléatoire des arrondissements est de 0,39, ce qui signifie que les effets de chaque arrondissement seront compris à 95 % entre -1,17 et 1,17 (1.17 = 3*0.39) sur l’échelle du prédicteur linéaire. En effet, rappelons que les effets aléatoires sont modélisés comme des distributions normales et que 95 % de la densité d’une distribution normale se situe entre -3 et +3 écarts-types. Pour extraire les interceptes spécifiques de chaque arrondissement, nous pouvons utiliser la fonction get_random du package itsadug.\n\nlibrary(itsadug)\nvalues &lt;- get_random(model4)[[1]]\ndf &lt;- data.frame(\n  ri = as.numeric(values),\n  arrond = names(values)\n)\n\nggplot(df) + \n  geom_point(aes(x = ri, y = reorder(arrond, ri))) + \n  geom_vline(xintercept = 0, color = \"red\") + \n  labs(y = \"Arrondissement\", x = \"intercepte aléatoire\")\n\n\n\nFigure 11.18: Constantes aléatoires pour les arrondissements\n\n\n\nNous constatons ainsi, à la figure 11.18, que pour une partie des arrondissements, la densité d’îlot de chaleur est systématiquement supérieure à la moyenne régionale représentée ici par la ligne rouge (0 = effet moyen pour tous les arrondissements). Il convient alors d’améliorer ce graphique en ajoutant le niveau d’incertitude associé à chaque intercepte. Pour ce faire, nous utilisons la fonction extract_random_effects du package mixedup. Notez que ce package n’est actuellement pas disponible sur CRAN et doit être téléchargé sur github avec la commande suivante :\n\nremotes::install_github('m-clark/mixedup')\n\nAvec la version 4.0.1 de R, nous avons rencontré des difficultés pour installer mixedup. Nous avons donc simplement récupéré le code source de la fonction et l’avons enregistré dans un fichier de code séparé que nous appelons ici.\n\nsource(\"code_complementaire/gam_functions.R\")\n\nNous pouvons ensuite procéder à l’extraction des effets aléatoires et les représenter à nouveau (figure 11.19).\n\ndf_re &lt;- extract_random_effects.gam(model4, re = \"Arrond\")\n\nggplot(df_re) + \n  geom_errorbarh(aes(xmin = lower_2.5, xmax = upper_97.5, y = reorder(group, value))) +\n  geom_point(aes(x = value, y = reorder(group, value))) + \n  geom_vline(xintercept = 0, color = \"red\") + \n  labs(y = \"Arrondissement\", x = \"Intercepte aléatoire\")\n\n\n\nFigure 11.19: Constantes aléatoires pour les arrondissements avec intervalle de confiance\n\n\n\nCela permet de distinguer quels écarts sont significativement différents de 0 au seuil de 95 %. À titre de rappel, pour être significatif à ce seuil, un intervalle représenté par une ligne noire horizontale ne doit pas intersecter la ligne rouge verticale. Puisque nous utilisons ici la distribution bêta et une fonction de lien logistique, nous devons utiliser des prédictions pour simplifier l’interprétation des coefficients. Nous fixons ici toutes les variables à leur moyenne respective, sauf l’arrondissement, et calculons les prédictions dans l’échelle originale (0 à 1).\n\ndfpred &lt;- data.frame(\n  A65Pct = mean(dataset$A65Pct),\n  A014Pct = mean(dataset$A014Pct),\n  PopFRPct = mean(dataset$PopFRPct),\n  PopMVPct = mean(dataset$PopMVPct),\n  prt_veg = mean(dataset$prt_veg),\n  Arrond = as.character(unique(dataset$Arrond))\n)\n\n# Calculer les prédictions pour le prédicteur linéaire\ndfpred$preds &lt;- predict(model4, newdata = dfpred, type = \"link\")\n\n# Calculer l'intervalle de confiance en utilisant les valeurs\n# extraites avec extract_random_effects\ndfpred &lt;- dfpred[order(dfpred$Arrond),]\ndf_re &lt;- df_re[order(df_re$group),]\n\ndfpred$lower &lt;- dfpred$preds - 1.96*df_re$se\ndfpred$upper &lt;- dfpred$preds + 1.96*df_re$se\n\n# Il nous reste juste à reconvertir le tout dans l'unité d'origine\n# en utilisant l'inverse de la fonction logistique\ninv.logit &lt;- function(x){exp(x)/(1+exp(x))}\n\ndfpred$lower &lt;- inv.logit(dfpred$lower)\ndfpred$upper &lt;- inv.logit(dfpred$upper)\ndfpred$preds &lt;- inv.logit(dfpred$preds)\n\nggplot(dfpred) + \n  geom_errorbarh(aes(xmin = lower, xmax = upper, y = reorder(Arrond, preds))) +\n  geom_point(aes(x = preds, y = reorder(Arrond, preds))) + \n  geom_vline(xintercept = mean(dfpred$preds), color = \"red\") + \n  labs(y = \"Arrondissement\", x = \"intercepte aléatoire\")\n\n\n\nFigure 11.20: Prédictions pour les différents arrondissements pour une AD fictive moyenne\n\n\n\nNous constatons ainsi, à la figure 11.20, que pour une hypothétique aire de diffusion moyenne, la différence de densité d’îlot de chaleur peut être de 0,32 (32 % de la surface de l’AD) entre les arrondissements Verdun et Dollard-des-Ormeaux.\n\n11.7.0.2 GAMM et coefficients aléatoires\nEn plus des interceptes aléatoires, il est aussi possible de définir des coefficients aléatoires. Reprenons notre exemple et tentons de faire varier l’effet de la variable PopFRPct en fonction de l’arrondissement.\n\nmodel5 &lt;- gam(hot ~\n          A65Pct + A014Pct + PopFRPct + PopMVPct +\n          s(prt_veg)  + s(Arrond, bs = \"re\") + \n          s(PopFRPct, Arrond, bs = \"re\"),\n        data = dataset, family = betar(link = \"logit\"))\n\nNotez ici une distinction importante! Le modèle n’assume aucune corrélation entre les coefficients aléatoires pour la variable PopFRPct et pour les constantes aléatoires. Il est présumé que ces deux effets proviennent de deux distributions normales distinctes. En d’autres termes, le modèle ne dispose pas des paramètres nécessaires pour vérifier si les arrondissements avec les constantes les plus fortes (avec des densités supérieures d’îlot de chaleur) sont aussi des arrondissements dans lesquels l’effet de la variable PopFRPct est plus prononcé (et vice-versa). Pour plus d’informations sur cette distinction, référez-vous à la section 9.2.3.\n\nAIC(model4, model5)\n\n             df       AIC\nmodel4 41.54635 -6421.791\nmodel5 56.84734 -6466.726\n\n\nCe dernier modèle présente une valeur de l’AIC plus faible et serait donc ainsi mieux ajusté que notre modèle avec seulement un intercepte aléatoire. Nous pouvons donc extraire les coefficients aléatoires et les représenter à la figure 11.21.\n\ndf_re &lt;- extract_random_effects.gam(model5)\ndf_re &lt;- subset(df_re, df_re$effect == 'PopFRPct')\n\nggplot(df_re) + \n  geom_errorbarh(aes(xmin = lower_2.5, xmax = upper_97.5, y = reorder(group, value))) +\n  geom_point(aes(x = value, y = reorder(group, value))) + \n  geom_vline(xintercept = 0, color = \"red\") + \n  labs(y = \"Arrondissement\", x = \"coefficient aléatoire\")\n\n\n\nFigure 11.21: Pentes et constantes aléatoires pour les arrondissements\n\n\n\nNous constatons notamment que seuls trois arrondissements ont des coefficients aléatoires significativement différents de 0. Ainsi, pour les arrondissements Anjou et Plateau-Mont-Royal, les coefficients aléatoires sont respectivement de -0,013 et -0,015, et viennent donc se retrancher à la valeur moyenne régionale de 0,0154 qui atteint alors presque 0. Du point de vue de l’interprétation, nous pouvons en conclure que le groupe des personnes à faible revenu ne subit pas de surexposition aux îlots de chaleur à l’échelle des AD dans ces arrondissements.\nEn revanche, dans l’arrondissement Mercier-Hochelaga-Maisonneuve, la situation est à l’inverse plus systématiquement en défaveur des populations à faible revenu, avec une taille d’effet près de deux fois supérieure à la moyenne régionale. En effet, l’effet moyen régional (coefficient fixe) est de 0,0154, auquel vient s’ajouter l’effet spécifique (coefficient aléatoire) de Mercier-Hochelaga-Maisonneuve, soit 0,011, pour un effet total de 0,0264\n\n\n\n\n\nDes effets aléatoires plus complexes dans les GAMM\n\n\nIl est possible de spécifier des GAMM avec des effets aléatoires plus complexes autorisant, par exemple, des corrélations entre les différents effets / niveaux. Il faut pour cela utiliser la fonction gamm de mgcv ou la fonction gamm4 du package gamm4. La première offre plus de flexibilité, mais la seconde est plus facile à utiliser et doit être privilégiée quand un modèle comporte un très grand nombre de groupes dans un effet aléatoire, ou lorsque la distribution du modèle n’est pas gaussienne. La fonction gamm permet d’ajuster des modèles non gaussiens, mais elle utilise une approche appelée PQL (Penalized Quasi-Likelihood en anglais) connue pour être moins stable et moins précise.\nCependant, dans l’exemple de cette section, nous utilisons un modèle GAMM avec une distribution bêta, ce qui n’est actuellement pas supporté par les fonctions gamm et gamm4. Pour un modèle GAMM plus complexe utilisant une distribution bêta, il est nécessaire d’utiliser le package gamlss, mais ce dernier utilise aussi une approche de type PQL. Nous montrons tout de même ici comment ajouter un modèle qui inclut une corrélation entre les deux effets aléatoires de l’exemple précédent. Notez ici que le terme re apparaissant dans la formule permet de spécifier un effet aléatoire en utilisant la syntaxe du package nlme. Plus spécifiquement, gamlss fait un pont avec nlme et utilise son algorithme d’ajustement au sein de ces propres routines. De même, le terme pb permet de spécifier une spline de lissage dans le même esprit que mgcv. Il est également possible d’utiliser le terme ga faisant le lien avec mgcv et de profiter de sa flexibilité dans gamlss.\n\nlibrary(gamlss)\nlibrary(gamlss.add)\n\nmodel6 &lt;- gamlss(hot ~\n          pb(prt_veg) + \n          re(fixed = ~ A65Pct + A014Pct + PopFRPct + PopMVPct, \n             random = ~(1 + PopFRPct)|Arrond),\n        data = dataset, family = BE(mu.link = \"logit\"))\n\nNous pouvons ensuite accéder à la partie du modèle qui nous intéresse, soit celle concernant les effets aléatoires.\n\nrandomPart &lt;- model6$mu.coefSmo[[2]]\nprint(randomPart)\n\nLinear mixed-effects model fit by maximum likelihood\n  Data: Data \n  Log-likelihood: -2964.494\n  Fixed: fix.formula \n (Intercept)       A65Pct      A014Pct     PopFRPct     PopMVPct \n-0.060862840 -0.001945204 -0.010139278  0.017259606 -0.002599745 \n\nRandom effects:\n Formula: ~(1 + PopFRPct) | Arrond\n Structure: General positive-definite, Log-Cholesky parametrization\n            StdDev     Corr  \n(Intercept) 0.47298363 (Intr)\nPopFRPct    0.01078909 -0.646\nResidual    0.99888012       \n\nVariance function:\n Structure: fixed weights\n Formula: ~W.var \nNumber of Observations: 3157\nNumber of Groups: 33 \n\n\nÀ lecture de la partie du résumé consacrée aux résultats pour les effets aléatoires, nous constatons que la corrélation entre les interceptes aléatoires et les coefficients aléatoires est de -0,65. Cela signifie que pour les arrondissements avec des interceptes élevés (plus grande proportion d’îlots de chaleur), l’effet de la variable PopFRPct tend à être plus faible. Autrement dit, dans les arrondissements avec beaucoup d’îlots de chaleur, les personnes à faible revenu ont tendance à être moins exposées, tel qu’illustré à la figure 11.22).\n\ndf &lt;- ranef(randomPart)\ndf$arrond &lt;- rownames(df)\nnames(df) &lt;- c('Intercept', 'PopFRPct', 'Arrondissement')\n\nggplot(df) + \n  geom_hline(yintercept = 0, color = \"red\") +\n  geom_vline(xintercept = 0, color = \"red\") +\n  geom_point(aes(x = Intercept, y = PopFRPct))\n\n\n\nFigure 11.22: Relation entre les effets aléatoires des arrondissements et la variable population à faible revenu"
  },
  {
    "objectID": "11-GAM.html#sec-118",
    "href": "11-GAM.html#sec-118",
    "title": "11  Modèles généralisés additifs",
    "section": "\n11.8 Quiz de révision du chapitre",
    "text": "11.8 Quiz de révision du chapitre\n\n\n\n\n\nQue signifie l’acronyme GAM?\n\n\nRelisez l’introduction du chapitre 11 au besoin.\n\n\n\n\n\n\nGaussian Asymetric Model\n\n\n\n\n\n\n\nGeneralized Additive Model\n\n\n\n\n\n\n\nGaussian Asynchronus Model\n\n\n\n\n\n\n\nGeneralized Asymetric Model\n\n\n\n\n\n\n\n\n\n\nQuel est l’intérêt d’un modèle GAM comparativement à un modèle GLM?\n\n\nRelisez au besoin la section 11.1.\n\n\n\n\n\n\nLa possibilité d’ajuster n’importe quelle distribution dans le modèle\n\n\n\n\n\n\n\nLa possibilité de tenir compte de structures de corrélation entre les observations\n\n\n\n\n\n\n\nL’ajout de termes nonlinéaires pour les prédicteurs\n\n\n\n\n\n\n\nLa transformation de la variable Y pour quelle se rapproche d’une distribution normale\n\n\n\n\n\n\n\n\n\n\nUne spline ajustée sur une variable X dans un GAM est construite comme :\n\n\nRelisez au besoin la section 11.1.4.\n\n\n\n\n\n\nun ensemble de coefficients ajustés à différentes sections de la variable X identifiées par des points de ruptures\n\n\n\n\n\n\n\nla somme d’un ensemble de polynomiales de X multipliées par des coefficients ajustés par le modèle\n\n\n\n\n\n\n\nla somme d’un ensemble de fonctions de base appliquées à X et multipliées par des coefficients ajustés par le modèle\n\n\n\n\n\n\n\n\n\n\nLe degré de complexité d’une spline est contrôlé par :\n\n\nRelisez au besoin la section 11.1.4.\n\n\n\n\n\n\nle nombre de nœuds de la spline\n\n\n\n\n\n\n\nle nombre de variables X sur lesquelles la spline est ajustée\n\n\n\n\n\n\n\nle type de fonction de base de la spline\n\n\n\n\n\n\n\nla distribution du modèle\n\n\n\n\n\n\n\n\n\n\nLe nombre de nœuds d’une spline peut être :\n\n\nRelisez au besoin la section 11.3.\n\n\n\n\n\n\ndéfini manuellement, nous parlons alors de spline de régression\n\n\n\n\n\n\n\ndéterminé par une approche automatique appelée pénalisation de la vraisemblance, nous parlons alors de spline de lissage\n\n\n\n\n\n\n\ndéterminé automatiquement en reparamétrisant la spline comme un effet aléatoire, nous parlons alors de spline de lissage\n\n\n\n\n\n\n\ndéterminé de façon itérative en ajoutant un nœud à chaque fois et en comparant le R2 de Nagelkerke\n\n\n\n\n\n\n\n\n\n\nUne spline bivariée est un autre nom pour une spline d’interaction.\n\n\nRelisez au besoin la section 11.5.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\n\nUne spline peut être ajustée sur plus que deux variables X simultanément.\n\n\nRelisez au besoin la section 11.5.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\n\nPour interpréter les résultats d’une spline, il est possible de :\n\n\nRelisez au besoin la section 11.4.\n\n\n\n\n\n\nobserver le nombre de degrés de liberté (estimated degree of freedom) de cette dernière pour se faire une idée de son degré de complexité\n\n\n\n\n\n\n\nreprésenter graphiquement les fonctions de base utilisées par la spline\n\n\n\n\n\n\n\nreprésenter les prédictions du modèle “toutes choses égales par ailleurs” afin d’obtenir les effets marginaux des termes non linéaires\n\n\n\n\n\n\n\nextraire les coefficients de la spline et les interpréter de façon classique\n\n\n\n\n\n\n\n\n\nVérifier votre résultat\n\n\n\n\n\n\n\n\n\nGelb, Jérémy et Philippe Apparicio. 2020. « Modelling cyclists’ multi-exposure to air and noise pollution with low-cost sensors: The case of Paris. » Atmosphere 11 (4): 422. https://doi.org/10.3390/atmos11040422.\n\n\nWood, Simon N. 2004. « Stable and efficient multiple smoothing parameter estimation for generalized additive models. » Journal of the American Statistical Association 99 (467): 673‑686. https://doi.org/10.1198/016214504000000980."
  },
  {
    "objectID": "12-AnalysesFactorielles.html#sec-121",
    "href": "12-AnalysesFactorielles.html#sec-121",
    "title": "12  Méthodes factorielles",
    "section": "\n12.1 Aperçu des méthodes factorielles",
    "text": "12.1 Aperçu des méthodes factorielles\n\n12.1.1 Méthodes factorielles et types de données\nEn analyse factorielle, la nature même des données du tableau à traiter détermine la méthode à employer : l’analyse en composantes principales (ACP) est adaptée aux tableaux avec des variables continues (idéalement normalement distribuées), l’analyse factorielle des correspondances (AFC) s’applique à des tableaux de contingence tandis que l’analyse des correspondances multiples (ACM) permet de résumer des tableaux avec des données qualitatives (issues d’un sondage par exemple) (tableau 12.1). Sachez toutefois qu’il existe d’autres méthodes factorielles qui ne sont pas abordées dans ce chapitre, notamment : l’analyse factorielle de données mixtes (AFDM) permettant d’explorer des tableaux avec à la fois des variables continues et des variables qualitatives et l’analyse factorielle multiple hiérarchique (AFMH) permettant de traiter des tableaux avec une structure hiérarchique. Pour s’initier à ces deux autres méthodes factorielles plus récentes, consultez notamment l’excellent ouvrage de Jérôme Pagès (2013).\n\n\n\n\nTableau 12.1: Trois principales méthodes factorielles\n\n\n\n\n\n\n\nMéthode factorielle\nAbr.\nType de données\nType de distance\n\n\n\nAnalyse en composantes principales\nACP\nVariables continues\nDistance euclidienne\n\n\nAnalyse factorielle des correspondances\nAFC\nTableau de contingence\nDistance du khi-deux\n\n\nAnalyse factorielle des correspondances multiples\nACM\nVariables qualitatives\nDistance du khi-deux\n\n\n\n\n\n\n\n12.1.2 Bref historique des méthodes factorielles\nIl existe une longue tradition de l’utilisation des méthodes factorielles dans le monde universitaire francophone puisque plusieurs d’entre elles ont été proposées par des statisticiens et des statisticiennes francophones à partir des années 1960. L’analyse en composantes principales (ACP) a été proposée dès les années 1930 par le statisticien américain Harold Hotelling (1933). En revanche, l’analyse des correspondances (AFC) et son extension, l’analyse des correspondances multiples (ACM), ont été proposées par le statisticien français Jean-Paul Benzécri (1973), tandis que l’analyse factorielle de données mixtes (AFDM) a été proposée par Brigitte Escofier et Jérôme Pagès (Escofier 1979; Pagès 2002).\nAinsi, plusieurs ouvrages de statistique sur les méthodes factorielles, désormais classiques, ont été publiés en français (Benzécri 1973; Escofier et Pagès 1998; Lebart, Morineau et Piron 1995; Pagès 2013). Ils méritent grandement d’être consultés, notamment pour mieux comprendre les formulations mathématiques (matricielles et géométriques) de ces méthodes. À cela s’ajoutent plusieurs ouvrages visant à « vulgariser ces méthodes » en sciences sociales; c’est notamment le cas de l’excellent ouvrage de Léna Sanders (1989) en géographie."
  },
  {
    "objectID": "12-AnalysesFactorielles.html#sec-122",
    "href": "12-AnalysesFactorielles.html#sec-122",
    "title": "12  Méthodes factorielles",
    "section": "\n12.2 Analyses en composantes principales (ACP)",
    "text": "12.2 Analyses en composantes principales (ACP)\nD’emblée, notez qu’il existe deux types d’analyse en composantes principales (ACP) (Principal Component Analysis, PCA en anglais) :\n\nl’ACP non normée dans laquelle les variables quantitatives du tableau sont uniquement centrées (moyenne = 0).\nl’ACP normée dans laquelle les variables quantitatives du tableau sont préalablement centrées réduites (moyenne = 0 et variance = 1; section 2.5.5.2).\n\nPuisque les variables d’un tableau sont souvent exprimées dans des unités de mesure différentes ou avec des ordres de grandeur différents (intervalles et écarts-types bien différents), l’utilisation de l’ACP normée est bien plus courante. Elle est d’ailleurs l’option par défaut dans les fonctions R permettant de calculer une ACP. Par conséquent, nous détaillons dans cette section uniquement l’ACP normée.\nAutrement dit, le recours à une ACP non normée est plus rare et s’applique uniquement à la situation suivante : toutes les variables du tableau sont mesurées dans la même unité (par exemple, en pourcentage); il pourrait être ainsi judicieux de conserver leurs variances respectives.\n\n12.2.1 Recherche d’une simplification\nL’ACP permet d’explorer et de résumer un tableau constitué uniquement de variables quantitatives (figure 12.2), et ce, de trois façons : 1) en montrant les ressemblances entre les individus (observations), 2) en révélant les liaisons entre les variables quantitatives et 3) en résumant l’ensemble des variables du tableau par des variables synthétiques nommées composantes principales.\n\n\nFigure 12.2: Tableau pour une ACP\n\nRessemblance entre les individus. Concrètement, deux individus se ressemblent si leurs valeurs respectives pour les p variables du tableau sont similaires. Cette proximité/ressemblance est évaluée à partir de la distance euclidienne (équation 12.1). La notion de distance fait l’objet d’une section à part entière (section 13.2.1) que vous pouvez consulter dès à présent si elle ne vous est pas familière.\n\\[\nd^2(a,b) = \\sum_{j=1}^p(x_{aj}-x_{bj})^2\n\\tag{12.1}\\]\nPrenons un exemple fictif avec trois individus (i, j et k) ayant des valeurs pour trois variables préalablement centrées réduites (V1 à V3) (tableau 12.2). La proximité entre les paires de points est évaluée comme suit :\n\\[d^2(i,j)=(-\\mbox{1,15}-\\mbox{0,49})^2+(-\\mbox{1,15}-\\mbox{0,58})^2+(\\mbox{0,83}+\\mbox{1,11})^2=\\mbox{9,44}\\] \\[d^2(i,k)=(-\\mbox{1,15}+\\mbox{0,66})^2+(-\\mbox{1,15}-\\mbox{0,58})^2+(\\mbox{0,83}-\\mbox{0,28})^2=\\mbox{5,98}\\]\n\\[d^2(j,k)= (\\mbox{0,49}+\\mbox{0,66})^2+(\\mbox{0,58}-\\mbox{0,58})^2+(-\\mbox{1,11}-\\mbox{0,28})^2=\\mbox{1,97}\\]\nNous pouvons en conclure que i est plus proche de k que de j, mais aussi que la paire de points les plus proches est (i,k). En d’autres termes, les deux observations i et k sont les plus similaires du jeu de données selon la distance euclidienne.\n\n\n\n\nTableau 12.2: Données fictives\n\n\n\n\n\n\n\n\n\n\nVariables centrées réduites\n\n\n\nIndividu\nV1\nV2\nV3\n\n\n\n\ni\n-1,15\n-1,15\n0,83\n\n\nj\n0,49\n0,58\n-1,11\n\n\nk\n0,66\n0,58\n0,28\n\n\n\n\n\n\n\n\nLiaisons entre les variables. Dans une ACP normée, les liaisons entre les variables deux à deux sont évaluées avec le coefficient de corrélation (section 4.3.1), soit la moyenne du produit des deux variables centrées réduites (équation 12.2). Notez que dans une ACP non normée, plus rarement utilisée, les liaisons sont évaluées avec la covariance puisque les variables sont uniquement centrées (équation 12.3).\n\\[\nr_{xy} = \\frac{\\sum_{i=1}^n (x_{i}-\\bar{x})(y_{i}-\\bar{y})}{n\\sqrt{\\sum_{i=1}^n(x_i - \\bar{x})^2(y_i - \\bar{y})^2}}=\\sum_{i=1}^n\\frac{Zx_iZy_i}{n}\n\\tag{12.2}\\]\n\\[\ncov(x,y) = \\frac{\\sum_{i=1}^n (x_{i}-\\bar{x})(y_{i}-\\bar{y})}{n}\n\\tag{12.3}\\]\nComposantes principales. Au chapitre 4, nous avons abordé deux méthodes pour identifier des relations linéaires entre des variables continues normalement distribuées :\n\nla corrélation de Pearson (section 4.3), qu’il est possible d’illustrer graphiquement à partir d’un nuage de points;\nla régression linéaire simple (section 4.4), permettant de résumer la relation linéaire entre deux variables avec une droite de régression de type \\(Y=a+bX\\).\n\nBrièvement, plus deux variables sont corrélées (positivement ou négativement), plus le nuage de points qu’elles forment est allongé et plus les points sont proches de la droite de régression (figure 12.3, partie a). À l’inverse, plus la liaison entre les deux variables normalement distribuées est faible, plus le nuage prend la forme d’un cercle et plus les points du nuage sont éloignés de la droite de régression (figure 12.3, partie b). Puisqu’en ACP normée, les variables sont centrées réduites, le centre de gravité du nuage de points est (x = 0, y = 0) et il est toujours traversé par la droite de régression. Finalement, nous avons vu que la méthode des moindres carrés ordinaires (MCO) permet de déterminer cette droite en minimisant les distances entre les valeurs observées et celles projetées orthogonalement sur cette droite (valeurs prédites). Dans le cas de deux variables uniquement, l’axe factoriel principal/la composante principale est donc la droite qui résume le mieux la liaison entre les deux variables (en rouge). L’axe 2 représente la seconde plus importante composante (axe, dimension) et il est orthogonal (perpendiculaire) au premier axe (en bleu).\n\n\nFigure 12.3: Corrélation, allongement du nuage de points et axes factoriels\n\nImaginez maintenant trois variables pour lesquelles vous désirez identifier un axe, une droite qui résume le mieux les liaisons entre elles. Visuellement, vous passez d’un nuage de points en deux dimensions (2D) à un nuage en dimensions (3D). Si les corrélations entre les trois variables sont très faibles, alors le nuage prend la forme d’un ballon de soccer (football en Europe). Par contre, plus ces liaisons sont fortes, plus la forme est allongée comme un ballon de rugby et plus les points sont proches de l’axe traversant le ballon.\nAjouter une autre variable revient alors à ajouter une quatrième dimension qu’il est impossible de visualiser, même pour les plus fervents adaptes de science-fiction. Pourtant, le problème reste le même : identifier, dans un plan en p dimensions (variables), les axes factoriels – les composantes principales – qui concourent le plus à résumer les liaisons entre les variables continues préalablement centrées réduites, et ce, en utilisant la méthode des moindres carrés ordinaires.\n\n\n\n\n\nComposantes principales et axes factoriels\n\n\nLes termes composantes principales et axes factoriels sont des synonymes employés pour référer aux nouvelles variables synthétiques produites par l’ACP et résumant l’information du tableau initial.\n\n\n\n12.2.2 Aides à l’interprétation\nPour illustrer les aides à l’interprétation de l’ACP, nous utilisons un jeu de données spatiales tiré d’un article sur l’agglomération lyonnaise en France (Gelb et Apparicio 2021). Ce jeu de données comprend dix variables, dont quatre environnementales (EN) et six socioéconomiques (SE), pour les îlots regroupés pour l’information statistique (IRIS) de l’agglomération lyonnaise (tableau 12.3 et figure 12.4). Sur ces dix variables, nous calculons une ACP normée.\n\n\n\n\nTableau 12.3: Statistiques descriptives pour le jeu de données utilisé pour l’ACP\n\n\n\n\n\n\n\n\n\n\n\n\nNom\nIntitulé\nType\nMoy.\nE.-T.\nMin.\nMax.\n\n\n\nLden\nLden\nBruit routier (Lden dB(A))\nEN\n55,6\n4,9\n33,9\n71,7\n\n\nNO2\nNO2\nDioxyde d’azote (ug/m3)\nEN\n28,7\n7,9\n12,0\n60,2\n\n\nPM25\nPM25\nParticules fines (PM\\(_{2,5}\\))\nEN\n16,8\n2,1\n11,3\n21,9\n\n\nVegHautPrt\nVegHautPrt\nCanopée (%)\nEN\n18,7\n10,1\n1,7\n53,8\n\n\nPct0_14\nPct0_14\nMoins de 15 ans (%)\nSE\n18,5\n5,7\n0,0\n54,0\n\n\nPct_65\nPct_65\n65 ans et plus (%)\nSE\n16,2\n5,9\n0,0\n45,1\n\n\nPct_Img\nPct_Img\nImmigrants (%)\nSE\n14,5\n9,1\n0,0\n59,8\n\n\nTxChom1564\nTxChom1564\nTaux de chômage\nSE\n14,8\n8,1\n0,0\n98,8\n\n\nPct_brevet\nPct_brevet\nPersonnes à faible scolarité (%)\nSE\n23,5\n12,6\n0,0\n100,0\n\n\nNivVieMed\nNivVieMed\nMédiane du niveau de vie (Euros)\nSE\n21 804,5\n4 922,5\n11 324,0\n38 707,0\n\n\n\n\n\n\n\n\nFigure 12.4: Cartographie des dix variables utilisées pour l’ACP\n\n\n\n\n\n\nTrois étapes pour bien analyser une ACP et comprendre la signification des axes factoriels\n\n\n\nInterprétation des résultats des valeurs propres pour identifier le nombre d’axes (de composantes principales) à retenir. L’enjeu est de garder un nombre d’axes limité qui résume le mieux le tableau initial (réduction des données).\nAnalyse des résultats pour les variables (coordonnées factorielles, cosinus carrés et contributions sur les axes retenus).\nAnalyse des résultats pour les individus (coordonnées factorielles, cosinus carrés et contributions sur les axes retenus).\n\nLes deux dernières étapes permettent de comprendre la signification des axes retenus et de les qualifier. Cette étape d’interprétation est essentielle en sciences sociales. En effet, nous avons vu dans l’introduction du chapitre que les méthodes factorielles permettent de résumer l’information d’un tableau en quelques nouvelles variables synthétiques, souvent considérées comme des variables latentes dans le jeu de données. Il convient alors de bien comprendre ces variables synthétiques (latentes), si nous souhaitons les utiliser dans une autre analyse subséquente (par exemple, les introduire dans une régression).\n\n\n\n12.2.2.1 Résultats de l’ACP pour les valeurs propres\nÀ titre de rappel, une ACP normée est réalisée sur des variables préalablement centrées réduites (équation 12.4), ce qui signifie que pour chaque variable :\n\nNous soustrayons à chaque valeur la moyenne de la variable correspondante (centrage); la moyenne est donc égale à 0.\nNous divisons cette différence par l’écart-type de la variable correspondante (réduction); la variance est égale à 1.\n\n\\[\nz= \\frac{x_i-\\mu}{\\sigma}\n\\tag{12.4}\\]\nPar conséquent, la variance totale (ou inertie totale) d’un tableau sur lequel est calculée une ACP normée est égale au nombre de variables qu’il comprend. Puisque nous l’appliquons ici à dix variables, la variance totale du tableau à réduire – c’est-à-dire à résumer en K nouvelles variables synthétiques, composantes principales, axes factoriels – est donc égale à 10. Trois mesures reportées au tableau 12.4 permettent d’analyser les valeurs propres :\n\n\\(\\mbox{VP}_k\\), la valeur propre (eigenvalue en anglais) de l’axe k, c’est-à-dire la quantité de variance du tableau initial résumé par l’axe.\n\\(\\mbox{VP}_k / \\mbox{P}\\) avec P étant le nombre de variables que comprend le tableau initial. Cette mesure représente ainsi le pourcentage de la variance totale du tableau résumé par l’axe k; autrement dit, la quantité d’informations du tableau initial résumée par l’axe, la composante principale k. Cela nous permet ainsi d’évaluer le pouvoir explicatif de l’axe.\nLe pourcentage cumulé pour les axes.\n\n\n\n\n\nTableau 12.4: Résultats de l’ACP pour les valeurs propres\n\n\nComposante\nValeur propre\nPourcentage\nPourc. cumulé\n\n\n\ncomp 1\n1\n3,543\n35,425\n35,425\n\n\ncomp 2\n2\n2,760\n27,596\n63,021\n\n\ncomp 3\n3\n1,042\n10,422\n73,443\n\n\ncomp 4\n4\n0,751\n7,511\n80,954\n\n\ncomp 5\n5\n0,606\n6,059\n87,013\n\n\ncomp 6\n6\n0,388\n3,880\n90,893\n\n\ncomp 7\n7\n0,379\n3,788\n94,681\n\n\ncomp 8\n8\n0,244\n2,441\n97,122\n\n\ncomp 9\n9\n0,217\n2,167\n99,289\n\n\ncomp 10\n10\n0,071\n0,711\n100,000\n\n\n\n\n\n\nAvant d’analyser en détail le tableau 12.4, notez que la somme des valeurs propres de toutes les composantes de l’ACP est toujours égale au nombre de variables du tableau initial. Aussi, la quantité de variance expliquée (les valeurs propres) décroît de la composante 1 à la composante K.\nCombien d’axes d’une ACP faut-il retenir? Pour répondre à cette question, deux approches sont possibles :\n\nApproche statistique (avec le critère de Kaiser (1960)). Nous retenons uniquement les composantes qui présentent une valeur propre supérieure à 1. Rappelez-vous qu’en ACP normée, les variables sont préalablement centrées réduites, et donc que leur variance respective est égale à 1. Par conséquent, une composante ayant une valeur propre inférieure à 1 a un pouvoir explicatif inférieur à celui d’une variable. À la lecture du tableau, nous retenons les trois premières composantes si nous appliquons ce critère.\nApproche empirique basée sur la lecture des pourcentages et des pourcentages cumulés. Nous pouvons retenir uniquement les deux premières composantes. En effet, ces deux premiers facteurs résument près des deux tiers de la variance totale du tableau (63,02 %). Cela démontre bien que l’ACP, comme les autres méthodes factorielles, est bien une méthode de réduction de données puisque nous résumons dix variables avec deux nouvelles variables synthétiques (axes, composantes principales). Pour faciliter le choix du nombre d’axes, il est fortement conseillé de construire des histogrammes à partir des valeurs propres, des pourcentages et des pourcentages cumulés (figure 12.5). Or, à la lecture de ces graphiques, nous constatons que la variance expliquée chute drastiquement après les deux premières composantes. Par conséquent, nous pouvons retenir uniquement les deux premiers axes.\n\n\n\n\n\n\nLecture du diagramme des valeurs propres\n\n\nPlus les variables incluses dans l’ACP sont corrélées entre elles, plus l’ACP est intéressante : plus les valeurs propres des premiers axes sont fortes et plus il y a des sauts importants dans le diagramme des valeurs propres. À l’inverse, lorsque les variables incluses dans l’ACP sont peu corrélées entre elles, il n’y a pas de sauts importants dans l’histogramme, autrement dit les valeurs propres sont uniformément décroissantes.\n\n\n\n\n\n\nFigure 12.5: Graphiques personnalisés pour les valeurs propres pour l’ACP\n\n\n\n\n12.2.2.2 Résultats de l’ACP pour les variables\nPour qualifier les axes, quatre mesures sont disponibles pour les variables :\n\nLes coordonnées factorielles des variables sont simplement les coefficients de corrélation de Pearson des variables sur l’axe k et varient ainsi de -1 à 1 (relire au besoin la section 4.3). Pour qualifier un axe, il convient alors de repérer les variables les plus corrélées positivement et négativement sur l’axe, autrement dit, de repérer les variables situées aux extrémités l’axe.\nLes cosinus carrés des variables (Cos2) (appelés aussi les qualités de représentation des variables sur un axe) permettent de repérer le ou les axes qui concourent le plus à donner un sens à la variable. Ils sont en fait les coordonnées des variables mises au carré. La somme des cosinus carrés d’une variable sur tous les axes de l’ACP est donc égale à 1 (sommation en ligne).\nLa qualité de représentation d’une variable sur les n premiers axes est simplement la somme des cosinus carrés d’une variable sur les axes retenus. Par exemple, pour la variable Lden, la qualité de représentation de la variable sur le premier axe est égale : \\(\\mbox{0,42}^2=\\mbox{0,17}\\). Pour cette même variable, la qualité de la Lden sur les trois premiers axes est égale à : \\(\\mbox{0,17}+\\mbox{0,32}+\\mbox{0,26}=\\mbox{0,75}\\).\nLes contributions des variables permettent de repérer celles qui participent le plus à la formation d’un axe. Elles s’obtiennent en divisant les cosinus carrés par la valeur propre de l’axe multiplié par 100. La somme des contributions des variables pour un axe donné est donc égale à 100 (sommation en colonne). Par exemple, pour la variable Lden, la contribution sur le premier axe est égale : \\(\\mbox{0,174} / \\mbox{3,543} \\times \\mbox{100}= \\mbox{4,920 }%\\).\n\nLes résultats de l’ACP pour les variables sont présentés au tableau 12.5.\n\n\n\n\nTableau 12.5: Résultats de l’ACP pour les variables\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCoordonnées\n\n\nCosinus carrés\n\n\nContributions\n\n\n\nVariable\n1\n2\n3\n1\n2\n3\nQualité\n1\n2\n3\n\n\n\n\nLden\n0,42\n0,57\n0,51\n0,17\n0,32\n0,26\n0,75\n4,92\n11,64\n24,80\n\n\nNO2\n0,15\n0,93\n0,19\n0,02\n0,86\n0,04\n0,92\n0,66\n31,07\n3,54\n\n\nPM25\n0,19\n0,92\n0,03\n0,04\n0,84\n0,00\n0,87\n1,01\n30,36\n0,12\n\n\nVegHautPrt\n-0,40\n-0,42\n0,40\n0,16\n0,18\n0,16\n0,50\n4,63\n6,35\n15,46\n\n\nPct0_14\n0,55\n-0,53\n0,08\n0,30\n0,28\n0,01\n0,59\n8,61\n10,28\n0,55\n\n\nPct_65\n-0,41\n-0,27\n0,72\n0,17\n0,07\n0,51\n0,75\n4,73\n2,66\n49,26\n\n\nPct_Img\n0,87\n-0,09\n0,11\n0,76\n0,01\n0,01\n0,78\n21,56\n0,29\n1,08\n\n\nTxChom1564\n0,77\n-0,09\n-0,07\n0,60\n0,01\n0,00\n0,61\n16,89\n0,27\n0,45\n\n\nPct_brevet\n0,73\n-0,43\n0,22\n0,53\n0,19\n0,05\n0,77\n14,94\n6,81\n4,61\n\n\nNivVieMed\n-0,88\n0,09\n0,04\n0,78\n0,01\n0,00\n0,79\n22,06\n0,28\n0,14\n\n\n\n\n\n\n\n\nAnalyse de la première composante principale (valeur propre de 3,54, 35,43 %)\n\nÀ la lecture des contributions, il est clair que quatre variables contribuent grandement à la formation de l’axe 1 : NivVieMed (22,06 %), Pct_Img (21,56 %), TxChom1564 (16,89 %) et Pct_brevet (14,94 %). Il convient alors d’analyser en détail leurs coordonnées factorielles et leurs cosinus carrés.\nÀ la lecture des coordonnées factorielles, nous constatons que trois variables socioéconomiques sont fortement corrélées positivement avec l’axe 1, soit le pourcentage d’immigrants (0,87), le taux de chômage (0,77) et le pourcentage de personnes avec une faible scolarité (0,73). À l’autre extrémité, la médiane du niveau de vie (en euros) est négativement corrélée avec l’axe 1. Comment interpréter ce résultat? Premièrement, cela signifie que plus la valeur de l’axe 1 est positive et élevée, plus celles des trois variables (Pct_Img,TxChom1564 et Pct_brevet) sont aussi élevées (corrélations positives) et plus la valeur de NivVieMed est faible (corrélation négative). Inversement, plus la valeur de l’axe 1 est négative et faible, les valeurs de Pct_Img, TxChom1564 et Pct_brevet sont faibles et plus celle de NivVieMed est forte. Deuxièmement, cela signifie que les trois variables (Pct_Img,TxChom1564 et Pct_brevet) sont fortement corrélées positivement entre elles puisqu’elles se situent sur la même extrémité de l’axe et qu’elles sont toutes trois négativement corrélées avec la variable NivVieMed. Cela peut être rapidement confirmé avec la matrice de corrélation entre les dix variables (tableau 12.6).\nÀ la lecture des cosinus carrés de l’axe 1, nous constatons que plus des trois quarts de la dispersion/de l’information des variables NivVieMed (0,78) et Pct_Img (0,76) est concentrée sur l’axe 1.\n\n\n\n\n\nTableau 12.6: Matrice de corrélation de Pearson entre les variables utilisées pour l’ACP\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVariable\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\n\n\n\nLden\nA. Lden\n\n0,62\n0,49\n-0,23\n0,04\n-0,09\n0,28\n0,19\n0,14\n-0,26\n\n\nNO2\nB. NO2\n0,62\n\n0,90\n-0,28\n-0,34\n-0,21\n0,07\n0,04\n-0,25\n-0,04\n\n\nPM25\nC. PM25\n0,49\n0,90\n\n-0,39\n-0,34\n-0,26\n0,12\n0,07\n-0,25\n-0,10\n\n\nVegHautPrt\nD. VegHautPrt\n-0,23\n-0,28\n-0,39\n\n0,04\n0,32\n-0,22\n-0,18\n-0,14\n0,32\n\n\nPct0_14\nE. Pct0_14\n0,04\n-0,34\n-0,34\n0,04\n\n-0,12\n0,46\n0,36\n0,54\n-0,45\n\n\nPct_65\nF. Pct_65\n-0,09\n-0,21\n-0,26\n0,32\n-0,12\n\n-0,24\n-0,30\n0,00\n0,32\n\n\nPct_Img\nG. Pct_Img\n0,28\n0,07\n0,12\n-0,22\n0,46\n-0,24\n\n0,66\n0,64\n-0,73\n\n\nTxChom1564\nH. TxChom1564\n0,19\n0,04\n0,07\n-0,18\n0,36\n-0,30\n0,66\n\n0,47\n-0,62\n\n\nPct_brevet\nI. Pct_brevet\n0,14\n-0,25\n-0,25\n-0,14\n0,54\n0,00\n0,64\n0,47\n\n-0,67\n\n\nNivVieMed\nJ. NivVieMed\n-0,26\n-0,04\n-0,10\n0,32\n-0,45\n0,32\n-0,73\n-0,62\n-0,67\n\n\n\n\n\n\n\nAnalyse de la deuxième composante principale (valeur propre de 2,76, 27,60 %)\n\nÀ la lecture des contributions, trois variables environnementales contribuent à la formation de l’axe 2 : principalement, celles sur la pollution de l’air (NO2 = 31,07 % et PM25 = 30,36 %) et secondairement, celle sur le bruit routier (Lden = 11,64 %).\nÀ la lecture des coordonnées factorielles, ces trois variables sont fortement corrélées positivement avec l’axe 2 : NO2 (0,93), PM25 (0,92) et Lden (0,57). À l’autre extrémité de l’axe, la variable Pct0_14 est négativement, mais pas fortement, corrélée (-0,53). La lecture de la matrice de corrélation au tableau 12.6 confirme que ces trois variables environnementales sont fortement corrélées positivement entre elles (par exemple, un coefficient de corrélation de Pearson de 0,90 entre NO2 et PM25).\nÀ la lecture des cosinus carrés de l’axe 2, nous constatons que près de 90 % de la dispersion/de l’information des variables NO2 (0,86) et PM25 (0,84) est concentrée sur l’axe 2.\n\nAnalyse de la troisième composante principale (valeur propre de 1,042, 10,42 %)\n\nLe pourcentage de personnes âgées (Pct_65) contribue principalement à la formation de l’axe 3 avec lequel il est corrélé positivement (contribution de 49,26 % et coordonnée factorielle de 0,72). S’en suit la variable Lden, qui joue un rôle beaucoup moins important (contribution de 24,80 % et coordonnée factorielle de 0,51).\n\n\n\n\n\n\nLien entre la valeur propre d’un axe et le nombre de variables contribuant à sa formation\n\n\nVous auvez compris que plus la valeur propre d’un axe est forte, plus il y a potentiellement de variables qui concourent à sa formation. Cela explique que pour la troisième composante, qui a une faible valeur propre (1,042), seule une variable contribue significativement à sa formation.\n\n\nAnalyse de la qualité de représentation des variables sur les premiers axes de l’ACP\nÀ titre de rappel, la qualité est simplement la somme des cosinus carrés d’une variable sur les axes retenus. Si nous retenons trois axes, les six variables qui sont le mieux résumées – et qui ont donc le plus d’influence sur les résultats de l’ACP – sont  : NO2 (0,92), PM25 (0,87), NivVieMed (0,79), Pct_Img (0,78), Pct_brevet (0,77) et Lden (0,75).\nQualification, dénomination d’axes factoriels\nL’analyse des coordonnées, des contributions et des cosinus carrés doit vous permettre de formuler un intitulé pour chacun des axes retenus. Nous vous proposons les intitulés suivants :\n\nNiveau de défavorisation socioéconomique (axe 1). Plus la valeur de l’axe est élevée, plus le niveau de défavorisation de l’entité spatiale (IRIS) est élevé.\nQualité environnementale (axe 2). Plus la valeur de l’axe est forte, plus les niveaux de pollution atmosphérique (dioxyde d’azote et particules fines) et de bruit (Lden) sont élevés.\n\nRecours à des graphiques pour analyser les résultats de l’ACP pour des variables\nPlus le nombre de variables utilisées pour calculer l’ACP est important, plus l’analyse des coordonnées factorielles, des cosinus carrés et des contributions reportés dans un tableau devient fastidieuse. Puisque l’ACP a été calculée sur dix variables, l’analyse des valeurs du tableau 12.5 a été assez facile et rapide. Imaginez maintenant que nous réalisons une ACP sur une centaine de variables, la taille du tableau des résultats pour les variables sera considérable… Par conséquent, il est recommandé de construire plusieurs graphiques qui facilitent l’analyse des résultats pour les variables.\nPar exemple, à la figure 12.6, nous avons construit des graphiques avec les coordonnées factorielles sur les trois premiers axes de l’ACP. En un coup d’œil, il est facile de repérer les variables les plus corrélées positivement ou négativement avec chacun d’entre eux. Aussi, il est fréquent de construire un nuage de points avec les coordonnées des variables sur les deux premiers axes factoriels, soit un graphique communément appelé nuage de points des variables sur le premier plan factoriel sur lequel est représenté le cercle des corrélations (figure 12.7). Bien entendu, cet exercice peut être fait avec d’autres axes factoriels (les axes 3 et 4 par exemple).\n\n\n\n\nFigure 12.6: Coordonnées factorielles des variables\n\n\n\n\n\n\n\nFigure 12.7: Premier plan factoriel de l’ACP pour les variables\n\n\n\n\n12.2.2.3 Résultats de l’ACP pour les individus\nComme pour les variables, nous retrouvons les mêmes mesures pour les individus : les coordonnées factorielles, les cosinus carrés et les contributions. Les coordonnées factorielles des individus sont les projections orthogonales des observations sur l’axe. Puisqu’en ACP normée, les variables utilisées pour l’ACP sont centrées réduites, la moyenne des coordonnées factorielles des individus pour un axe est toujours égale à zéro. En revanche, contrairement aux coordonnées factorielles pour les variables, les coordonnées pour les individus ne varient pas de -1 à 1! Les cosinus carrés quantifient à quel point chaque axe représente chaque individu. Enfin, les contributions quantifient l’apport de chaque individu à la formation d’un axe.\nSi le jeu de données comprend peu d’observations, il est toujours possible de créer un nuage de points des individus sur le premier plan factoriel sur lequel vous pouvez ajouter les étiquettes permettant d’identifier les observations (figure 12.8). Ce graphique est rapidement illisible lorsque le nombre d’observations est important. Il peut rester utile si certaines des observations du jeu de données doivent faire l’objet d’une analyse spécifique.\n\n\n\n\nFigure 12.8: Premier plan factoriel pour les individus\n\n\n\nLorsque les observations sont des unités spatiales, il est très intéressant de cartographier les coordonnées factorielles des individus (figure 12.8). À la lecture de la carte choroplèthe de gauche (axe 1), nous pouvons constater que le niveau de défavorisation socioéconomique est élevé dans l’est (IRIS en vert), et inversement, très faible à l’ouest de l’agglomération (IRIS en rouge). À la lecture de la carte de droite (axe 2), sans surprise, la partie centrale de l’agglomération est caractérisée par des niveaux de pollution atmosphérique et de bruit routier bien plus élevés qu’en périphérie.\n\n\n\n\nFigure 12.9: Cartographie des coordonnées factorielles des individus\n\n\n\n\n\n\n\n\nAutres éléments intéressants de l’ACP\n\n\nAjout de variables ou d’individus supplémentaires\nPremièrement, il est possible d’ajouter des variables continues ou des individus supplémentaires qui n’ont pas été pris en compte dans le calcul de l’ACP (figure 12.10). Concernant les variables continues supplémentaires, il s’agit simplement de calculer leurs corrélations avec les axes retenus de l’ACP. Concernant les individus, il s’agit de les projeter sur les axes factoriels. Pour plus d’informations sur le sujet, consultez les excellents ouvrages de Ludovic Lebart, Alain Morineau et Marie Piron (1995, 42‑45) ou encore de Jérôme Pagès (2013, 22‑24).\n\n\nFigure 12.10: Variables et individus supplémentaires pour l’ACP\n\nPondération des individus et des variables\nDeuxièmement, il est possible de pondérer à la fois les individus et, plus rarement, les variables lors du calcul de l’ACP.\nAnalyse en composantes principales non paramétrique\nTroisièmement, il est possible de calculer une ACP sur des variables préalablement transformées en rang (section 2.5.5.2). Cela peut être justifié lorsque les variables sont très anormalement distribuées en raison de valeurs extrêmes. Les coordonnées factorielles pour les variables sont alors le coefficient de Spearman (section 4.3.3) et non de Pearson. Aussi, les variables sont centrées non pas sur leurs moyennes respectives, mais sur leurs médianes. Pour plus d’informations sur cette approche, consultez de nouveau Lebart et al. (1995, 51‑52).\nAnalyse en composantes principales robuste\nFinalement, d’autres méthodes plus avancées qu’une ACP non paramétrique peuvent être utilisées afin d’obtenir des composantes principales qui ne sont pas influencées par des valeurs extrêmes : les ACP robustes (Rivest et Plante 1988; Hubert, Rousseeuw et Vanden Branden 2005) qui peuvent être mises en œuvre, entre autres avec le package roscpca.\n\n\n\n12.2.3 Mise en œuvre dans R\nPlusieurs packages permettent de calculer une ACP dans R, notamment psych avec la fonction principal, ade4 avec la fonction dudi.pca et FactoMineR(Lê, Josse et Husson 2008) avec la fonction PCA. Ce dernier est certainement le plus abouti. De plus, il permet également de calculer une analyse des correspondances (AFC), une analyse des correspondances multiples (ACM) et une analyse factorielle de données mixtes (AFDM). Nous utilisons donc FactoMineR pour mettre en œuvre les trois types de méthodes factorielles abordées dans ce chapitre (ACP, AFC et ACM). Pour l’ACP, nous exploitons un jeu de données issu du package geocmeans qu’il faut préalablement charger à l’aide des lignes de code suivantes.\n\nlibrary(geocmeans)\ndata(LyonIris)\nData &lt;- st_drop_geometry(LyonIris[c(\"CODE_IRIS\" , \"Lden\" , \"NO2\" , \"PM25\" , \"VegHautPrt\",\n                        \"Pct0_14\" , \"Pct_65\" , \"Pct_Img\",\n                        \"TxChom1564\" , \"Pct_brevet\" , \"NivVieMed\")])\n\n\n12.2.3.1 Calcul et exploration d’une ACP avec FactoMineR\n\nPour calculer l’ACP, il suffit d’utiliser la fonction PCA de FactoMineR, puis la fonction summary(MonACP) qui renvoie les résultats de l’ACP pour :\n\nLes valeurs propres (section Eigenvalues) pour les composantes principales (Dim.1 à Dim.n) avec leur variance expliquée brute (Variance) en pourcentage (% of var.) et en pourcentage cumulé (Cumulative % of var.).\nLes dix premières observations (section Individuals) avec les coordonnées factorielles (Dim.1 à Dim.n), les contributions (ctr) et les cosinus carrés (cos2). Pour accéder aux résultats pour toutes les observations, utilisez les fonctions res.acp$ind ou encore res.acp$ind$coord (uniquement les coordonnées factorielles), res.acp$ind$contrib (uniquement les contributions) et res.acp$ind$cos2 (uniquement les cosinus carrés).\nLes variables (section Variables) avec les coordonnées factorielles (Dim.1 à Dim.n), les contributions (ctr) et les cosinus carrés (cos2).\n\n\nlibrary(FactoMineR)\n# Version classique avec FactoMineR\n# Construction d'une ACP sur les colonnes 2 à 11 du DataFrame Data\nres.acp &lt;- PCA(Data[,2:11], scale.unit = TRUE, graph = FALSE)\n# Affichage des résultats de la fonction PCA\nprint(res.acp)\n\n**Results for the Principal Component Analysis (PCA)**\nThe analysis was performed on 506 individuals, described by 10 variables\n*The results are available in the following objects:\n\n   name               description                          \n1  \"$eig\"             \"eigenvalues\"                        \n2  \"$var\"             \"results for the variables\"          \n3  \"$var$coord\"       \"coord. for the variables\"           \n4  \"$var$cor\"         \"correlations variables - dimensions\"\n5  \"$var$cos2\"        \"cos2 for the variables\"             \n6  \"$var$contrib\"     \"contributions of the variables\"     \n7  \"$ind\"             \"results for the individuals\"        \n8  \"$ind$coord\"       \"coord. for the individuals\"         \n9  \"$ind$cos2\"        \"cos2 for the individuals\"           \n10 \"$ind$contrib\"     \"contributions of the individuals\"   \n11 \"$call\"            \"summary statistics\"                 \n12 \"$call$centre\"     \"mean of the variables\"              \n13 \"$call$ecart.type\" \"standard error of the variables\"    \n14 \"$call$row.w\"      \"weights for the individuals\"        \n15 \"$call$col.w\"      \"weights for the variables\"          \n\n# Résumé des résultats (valeurs propres, individus, variables)\nsummary(res.acp)\n\n\nCall:\nPCA(X = Data[, 2:11], scale.unit = TRUE, graph = FALSE) \n\n\nEigenvalues\n                       Dim.1   Dim.2   Dim.3   Dim.4   Dim.5   Dim.6   Dim.7\nVariance               3.543   2.760   1.042   0.751   0.606   0.388   0.379\n% of var.             35.425  27.596  10.422   7.511   6.059   3.880   3.788\nCumulative % of var.  35.425  63.021  73.443  80.954  87.013  90.893  94.681\n                       Dim.8   Dim.9  Dim.10\nVariance               0.244   0.217   0.071\n% of var.              2.441   2.167   0.711\nCumulative % of var.  97.122  99.289 100.000\n\nIndividuals (the 10 first)\n               Dist    Dim.1    ctr   cos2    Dim.2    ctr   cos2    Dim.3\n1          |  3.054 |  1.315  0.096  0.185 | -2.515  0.453  0.678 |  0.221\n2          |  1.882 |  0.193  0.002  0.011 | -1.744  0.218  0.859 |  0.082\n3          |  2.820 |  2.338  0.305  0.687 | -0.860  0.053  0.093 | -0.765\n4          |  2.816 | -0.740  0.031  0.069 |  2.265  0.367  0.647 |  1.293\n5          |  3.210 | -2.208  0.272  0.473 | -1.597  0.183  0.248 |  1.471\n6          |  3.016 |  2.287  0.292  0.575 | -1.515  0.164  0.252 |  0.390\n7          |  3.022 | -1.540  0.132  0.260 | -1.803  0.233  0.356 |  0.465\n8          |  3.122 | -1.536  0.132  0.242 | -2.038  0.298  0.426 | -0.120\n9          |  4.743 | -3.930  0.862  0.687 | -1.806  0.234  0.145 |  0.993\n10         |  3.055 |  2.713  0.411  0.789 |  0.368  0.010  0.014 | -0.391\n              ctr   cos2  \n1           0.009  0.005 |\n2           0.001  0.002 |\n3           0.111  0.074 |\n4           0.317  0.211 |\n5           0.411  0.210 |\n6           0.029  0.017 |\n7           0.041  0.024 |\n8           0.003  0.001 |\n9           0.187  0.044 |\n10          0.029  0.016 |\n\nVariables\n              Dim.1    ctr   cos2    Dim.2    ctr   cos2    Dim.3    ctr   cos2\nLden       |  0.417  4.920  0.174 |  0.567 11.640  0.321 |  0.508 24.799  0.258\nNO2        |  0.153  0.657  0.023 |  0.926 31.068  0.857 |  0.192  3.540  0.037\nPM25       |  0.189  1.007  0.036 |  0.915 30.355  0.838 |  0.035  0.117  0.001\nVegHautPrt | -0.405  4.630  0.164 | -0.419  6.353  0.175 |  0.401 15.459  0.161\nPct0_14    |  0.552  8.605  0.305 | -0.533 10.281  0.284 |  0.076  0.553  0.006\nPct_65     | -0.409  4.730  0.168 | -0.271  2.658  0.073 |  0.716 49.258  0.513\nPct_Img    |  0.874 21.559  0.764 | -0.089  0.288  0.008 |  0.106  1.077  0.011\nTxChom1564 |  0.774 16.893  0.598 | -0.086  0.267  0.007 | -0.068  0.450  0.005\nPct_brevet |  0.727 14.936  0.529 | -0.434  6.813  0.188 |  0.219  4.612  0.048\nNivVieMed  | -0.884 22.062  0.782 |  0.088  0.278  0.008 |  0.038  0.136  0.001\n            \nLden       |\nNO2        |\nPM25       |\nVegHautPrt |\nPct0_14    |\nPct_65     |\nPct_Img    |\nTxChom1564 |\nPct_brevet |\nNivVieMed  |\n\n\nAvec les fonctions de base barplot et plot, il est possible de construire rapidement des graphiques pour explorer les résultats de l’ACP pour les valeurs propres, les variables et les individus.\n\n# Graphiques pour les valeurs propres\nbarplot(res.acp$eig[,1], main=\"Valeurs propres\", names.arg=1:nrow(res.acp$eig))\n\n\n\nbarplot(res.acp$eig[,2], main=\"Variance expliquée (%)\", names.arg=1:nrow(res.acp$eig))\n\n\n\nbarplot(res.acp$eig[,3], main=\"Variance expliquée cumulée (%)\",\n        names.arg=1:nrow(res.acp$eig))\n\n\n\n# Nuage du points du premier plan factoriel pour les variables et les individus\nplot(res.acp, graph.type = \"classic\", choix = \"var\", axes = 1:2, \n     title = \"Premier plan factoriel (variables)\")\n\n\n\nplot(res.acp, graph.type = \"classic\", choix = \"ind\", axes = 1:2, \n     title = \"Premier plan factoriel (individus)\")\n\n\n\n\n\n\n\n\n\nPondérations pour les individus et les variables\n\n\nNous avons vu, dans un encadré ci-dessus, qu’il est possible d’ajouter des variables et des individus supplémentaires dans une ACP, ce que permet la fonction PCA de FactoMineR avec les paramètres ind.sup et quanti.sup. Aussi, pour ajouter des pondérations aux individus ou aux variables, utilisez les paramètres row.w et col.w. Pour plus d’informations sur ces paramètres, consulter l’aide de la fonction en tapant ?PCA dans la console de RStudio.\n\n\n\n12.2.3.2 Exploration graphique des résultats de l’ACP avec factoextra\n\nVisuellement, vous avez pu constater que les graphiques ci-dessus (pour les valeurs propres et pour le premier plan factoriel pour les variables et les individus), réalisés avec les fonctions de base barplot et plot, sont peu attrayants. Avec le package factoextra, quelques lignes de code suffissent pour construire des graphiques bien plus esthétiques.\nPremièrement, la syntaxe ci-dessous renvoie deux graphiques pour analyser les résultats des valeurs propres (figure 12.11).\n\nlibrary(factoextra)\nlibrary(ggplot2)\nlibrary(ggpubr)\n\n# Graphiques pour les variables propres avec factoextra\nG1 &lt;- fviz_screeplot(res.acp, choice =\"eigenvalue\", addlabels = TRUE,\n                     x = \"Composantes\",\n                     y = \"Valeur propre\",\n                    title = \"\")\nG2 &lt;- fviz_screeplot(res.acp, choice =\"variance\", addlabels = TRUE,\n                     x = \"Composantes\",\n                     y = \"Pourcentage de la variance expliquée\",\n                     title = \"\")\nggarrange(G1, G2)\n\n\n\nFigure 12.11: Graphiques pour les valeurs propres de l’ACP avec factoextra\n\n\n\nDeuxièmement, la syntaxe ci-dessous renvoie trois graphiques pour analyser les contributions de chaque variable aux deux premiers axes de l’ACP (figures 12.12 et 12.13) et la qualité de représentation des variables sur les trois premiers axes (figure 12.14), c’est-à-dire la somme des cosinus carrés sur les trois axes retenus.\n\n# Contributions des variables aux deux premières composantes avec factoextra\nfviz_contrib(res.acp, choice = \"var\", axes = 1, top = 10,\n             title = \"Contributions des variables à la première composante\")\nfviz_contrib(res.acp, choice = \"var\", axes = 2, top = 10,\n             title = \"Contributions des variables à la première composante\")\nfviz_cos2(res.acp, choice = \"var\", axes = 1:3)+\n  labs(x = \"\", y = \"Somme des cosinus carrés sur les 3 axes retenus\",\n       title = \"Qualité de représentation des variables sur les axes retenus de l'ACP\")\n\n\n\n\n\nFigure 12.12: Contributions des variables à la première composante avec factoextra\n\n\n\n\n\n\n\nFigure 12.13: Contributions des variables à la deuxième composante avec factoextra\n\n\n\n\n\n\n\nFigure 12.14: Qualité des variables sur les trois premières composantes avec factoextra\n\n\n\nTroisièmement, le code ci-dessous renvoie un nuage de points pour le premier plan factoriel de l’ACP (axes 1 et 2) pour les variables (figure 12.15) et les individus (figure 12.16).\n\n# Premier plan factoriel pour les variables avec factoextra\nfviz_pca_var(res.acp, col.var=\"contrib\",\n             title = \"Premier plan factoriel pour les variables\")+\n  scale_color_gradient2(low=\"#313695\", mid=\"#ffffbf\", high=\"#a50026\",\n                        midpoint=mean(res.acp$var$contrib[,1]))\n# Premier plan factoriel pour les individus avec factoextra\nfviz_pca_ind(res.acp, label = \"none\", title = \"ACP. Individus\")\nfviz_pca_ind(res.acp, col.ind=\"cos2\", title = \"ACP. Individus\") +\n  scale_color_gradient2(low=\"blue\", mid=\"white\", high=\"red\", midpoint=0.50)\n\n\n\n\n\nFigure 12.15: Premier plan factoriel de l’ACP pour les variables avec factoextra\n\n\n\n\n\n\n\nFigure 12.16: Premier plan factoriel de l’ACP pour les individus avec factoextra\n\n\n\n\n12.2.3.3 Personnalisation des graphiques avec les résultats de l’ACP\nAvec un peu plus de lignes de code et l’utilisation d’autres packages (ggplot2, ggpubr, stringr, corrplot), vous pouvez aussi construire des graphiques personnalisés.\nPremièrement, la syntaxe ci-dessous permet de réaliser trois graphiques pour analyser les valeurs propres (figure 12.17). Notez que, d’un coup d’œil, nous pouvons identifier les composantes principales avec une valeur propre égale ou supérieure à 1.\n\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(stringr)\nlibrary(corrplot)\n\n# Calcul de l'ACP\nres.acp &lt;- PCA(Data[,2:11], ncp=5, scale.unit = TRUE, graph = FALSE)\nprint(res.acp)\n\n# Construction d'un DataFrame pour les valeurs propres\ndfACPvp &lt;- data.frame(res.acp$eig)\nnames(dfACPvp) &lt;- c(\"VP\" , \"VP_pct\" , \"VP_cumupct\")\ndfACPvp$Composante &lt;- factor(1:nrow(dfACPvp), levels = rev(1:nrow(dfACPvp)))\ncouleursAxes &lt;- c(\"steelblue\" , \"skyblue2\")\nvpsup1 &lt;- round(sum(subset(dfACPvp, VP &gt;= 1)$VP),2)\nvpsup1cumul &lt;- round(sum(subset(dfACPvp, VP &gt;= 1)$VP_pct),2)\n\nplotVP1 &lt;- ggplot(dfACPvp, aes(x = VP, y = Composante, fill = VP&lt;1))+\n  geom_bar(stat = \"identity\", width = .6, alpha = .8, color = \"black\")+\n  geom_vline(xintercept = 1, linetype = \"dashed\", color = \"azure4\", linewidth = 1)+\n  scale_fill_manual(name = \"Valeur\\npropre\" , values = couleursAxes, labels = c(\"&gt;= 1\" , \"&lt; 1\"))+\n  labs(x = \"Valeur propre\", y = \"Composante principale\")\nplotVP2 &lt;- ggplot(dfACPvp, aes(x = VP_pct, y = Composante, fill = VP&lt;1))+\n  geom_bar(stat = \"identity\", width = .6, alpha = .8, color = \"black\")+\n  scale_fill_manual(name = \"Valeur\\npropre\" , values = couleursAxes, labels = c(\"&gt;= 1\" , \"&lt; 1\"))+\n  theme(legend.position = \"none\")+\n  labs(x = \"Pourcentage de la variance expliquée\", y = \"\")\nplotVP3 &lt;- ggplot(dfACPvp, aes(x = VP_cumupct, y = Composante, fill = VP&lt;1, group=1))+\n  geom_bar(stat = \"identity\", width = .6, alpha = .8, color = \"black\")+\n  scale_fill_manual(name = \"Valeur\\npropre\" , values = couleursAxes, labels = c(\"&gt;= 1\" , \"&lt; 1\"))+\n  geom_line(colour = \"brown\", linetype = \"solid\", size=.8) +\n  geom_point(size=3, shape=21, color = \"brown\", fill = \"brown\")+\n  theme(legend.position = \"none\")+\n  labs(x = \"Pourcentage cumulé de la variance expliquée\", y = \"\")\n\ntext1 &lt;- paste0(\"Somme des valeurs propres supérieures à 1 : \",\n                vpsup1,\n                \".\\nPourcentage cumulé des valeurs propres supérieures à 1 : \",\n                vpsup1cumul, \"%.\")\nannotate_figure(ggarrange(plotVP1, plotVP2, plotVP3, ncol = 2, nrow = 2),\n                text_grob(\"Analyse des valeurs propres\", \n                         color = \"black\", face = \"bold\", size = 12),\n                bottom = text_grob(text1,\n                           color = \"black\", hjust = 1, x = 1, size = 10))\n\n\n\n\n\nFigure 12.17: Graphiques personnalisés pour les valeurs propres\n\n\n\nDeuxièmement, la syntaxe ci-dessous permet de :\n\nConstruire un DataFrame avec les résultats des variables.\nConstruire des histogrammes avec les coordonnées des variables sur les axes factoriels (figure 12.18). Notez que les coordonnées négatives sont indiquées avec des barres bleues et celles positives, avec des barres de couleur saumon.\nUn graphique avec les contributions des variables sur les axes retenus (figure 12.19).\nUn graphique avec les cosinus carrés des variables sur les axes retenus (figure 12.20).\nUn histogramme avec la qualité des variables sur les axes retenus (figure 12.21), soit la sommation de leurs cosinus carrés sur les axes retenus.\n\n\n# Analyse des résultats de L'ACP pour les variables\nlibrary(corrplot)\nlibrary(stringr)\nlibrary(ggplot2)\nlibrary(ggpubr)\n\n# Indiquer le nombre d'axes à conserver suite à l'analyse des valeurs propres\nnComp &lt;- 3\n# Variance expliquée par les axes retenus\nvppct &lt;- round(dfACPvp[1:nComp,\"VP_pct\"],1)\n# Dataframe des résultats pour les variables\nCoordsVar &lt;- res.acp$var$coord[, 1:nComp]\nCos2Var   &lt;- res.acp$var$cos2[, 1:nComp]\nCtrVar   &lt;- res.acp$var$contrib[, 1:nComp]\ndfACPVars &lt;- data.frame(Variable =  row.names(res.acp$var$coord[, 1:nComp]),\n                        Coord = CoordsVar,\n                        Cos2 = Cos2Var,\n                        Qualite = rowSums(Cos2Var),\n                        Ctr = CtrVar)\nrow.names(dfACPVars) &lt;- NULL\nnames(dfACPVars) &lt;- str_replace(names(dfACPVars), \".Dim.\", \"Comp\")\ndfACPVars\n\n# Histogrammes pour les coordonnées\ncouleursCoords &lt;- c(\"lightsalmon\" , \"steelblue\")\nplotCoordF1 &lt;- ggplot(dfACPVars,\n                      aes(y = reorder(Variable, CoordComp1),\n                          x = CoordComp1, fill = CoordComp1&lt;0))+\n  geom_bar(stat = \"identity\", width = .6, alpha = .8, color = \"black\")+\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1)+\n  scale_fill_manual(name = \"Coordonnée\" , values = couleursCoords,\n                    labels = c(\"Positive\" , \"Négative\"))+\n  labs(x = paste0(\"Axe 1 (\", vppct[1],\"%)\"), y = \"Variable\")+\n  theme(legend.position = \"none\")\nplotCoordF2 &lt;- ggplot(dfACPVars,\n                      aes(y = reorder(Variable, CoordComp2),\n                          x = CoordComp2, fill = CoordComp2&lt;0))+\n  geom_bar(stat = \"identity\", width = .6, alpha = .8, color = \"black\")+\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1)+\n  scale_fill_manual(name = \"Coordonnée\" , values = couleursCoords,\n                    labels = c(\"Positive\" , \"Négative\"))+\n  labs(x = paste0(\"Axe 2 (\", vppct[2],\"%)\"), y = \"Variable\")+\n  theme(legend.position = \"none\")\nplotCoordF3 &lt;- ggplot(dfACPVars,\n                      aes(y = reorder(Variable, CoordComp3),\n                          x = CoordComp3, fill = CoordComp3&lt;0))+\n  geom_bar(stat = \"identity\", width = .6, alpha = .8, color = \"black\")+\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1)+\n  scale_fill_manual(name = \"Coordonnée\", values = couleursCoords,\n                    labels = c(\"Positive\" , \"Négative\"))+\n  labs(x = paste0(\"Axe 3 (\", vppct[3],\"%)\"), y = \"Variable\")\n\nannotate_figure(ggarrange(plotCoordF1, plotCoordF2, plotCoordF3, nrow = nComp),\n                text_grob(\"Coordonnées des variables sur les axes factoriels\",\n                          color = \"black\", face = \"bold\", size = 12))\n\n# Contributions des variables à la formation des axes\ncorrplot(CtrVar, is.corr = FALSE, method =\"square\",\n         addCoef.col = 1, cl.pos = FALSE)\n\n# La qualité des variables sur les composantes retenues : cosinus carrés\ncorrplot(Cos2Var, is.corr = FALSE, method =\"square\",\n         addCoef.col = 1, cl.pos = FALSE)\n\nggplot(dfACPVars)+\n  geom_bar(aes(y = reorder(Variable, Qualite), x=Qualite),\n            stat = \"identity\", width = .6, alpha = .8, fill = \"steelblue\")+\n  labs(x = \"\", y = \"Somme des cosinus carrés sur les axes retenus\",\n       title = \"Qualité de représentation des variables sur les axes retenus de l'ACP\",\n       subtitle = paste0(\"Variance expliquée par les \", nComp, \n                         \" composantes : \", sum(vppct), \"%\"))\n\n\n\n\n\nFigure 12.18: Histogrammes personnalisés avec les coordonnées factorielles pour les variables\n\n\n\n\n\nFigure 12.19: Graphiques personnalisés avec les contributions des variables\n\n\n\nFigure 12.20: Graphiques personnalisés avec les cosinus carrés des variables\n\n\n\n\n\nFigure 12.21: Graphique personnalisé avec la qualité des variables sur les axes retenus de l’ACP\n\n\n\nTroisièmement, lorsque les observations sont des unités spatiales, il convient de cartographier les coordonnées factorielles des individus. Dans le jeu de données utilisé, les observations sont des polygones délimitant les îlots regroupés pour l’information statistique (IRIS) pour l’agglomération de Lyon (France). Nous utilisons les packages tmap et RColorBrewer pour réaliser des cartes choroplèthes avec les coordonnées des deux premières composantes (figure 12.22).\n\nlibrary(\"tmap\")\nlibrary(\"RColorBrewer\")\n# Analyse des résultats de l'ACP pour les individus\n# Dataframe des résultats pour les individus\nCoordsInd &lt;- res.acp$ind$coord[, 1:nComp]\nCos2Ind   &lt;- res.acp$ind$cos2[, 1:nComp]\nCtrInd    &lt;- res.acp$ind$contrib[, 1:nComp]\ndfACPInd &lt;- data.frame(Coord = CoordsInd, Cos2 = Cos2Ind, Ctr = CtrInd)\nnames(dfACPInd) &lt;- str_replace(names(dfACPInd), \".Dim.\", \"Comp\")\n# Fusion du tableau original avec les résultats de l'ACP pour les individus\nCartoACP &lt;- cbind(LyonIris, dfACPInd)\n# Cartographie des coordonnées factorielles pour les individus pour les\n# deux premières composantes\nCarte1 &lt;- tm_shape(CartoACP) +\n          tm_polygons(col = \"CoordComp1\", style = \"cont\",\n                      midpoint = 0, title = \"Coordonnées\")+\n          tm_layout(main.title = paste0(\"Axe 1 (\", vppct[1],\"%)\"),\n             attr.outside = TRUE, frame = FALSE, main.title.size = 1)\nCarte2 &lt;- tm_shape(CartoACP) +\n          tm_polygons(col = \"CoordComp2\", style = \"cont\",\n                      midpoint = 0, title = \"Coordonnées\")+\n  tm_layout(main.title = paste0(\"Axe 2 (\", vppct[2],\"%)\"),\n             attr.outside = TRUE, frame = FALSE, main.title.size = 1)\ntmap_arrange(Carte1, Carte2)\n\n\n\nFigure 12.22: Cartographie des coordonnées factorielles des individus\n\n\n\n\n\n\n\n\nExploration interactive des résultats d’une ACP avec le package explor.\n\n\nVous avez compris qu’il ne suffit pas de calculer une ACP, il faut retenir les n premiers axes de l’ACP qui nous semblent les plus pertinents, puis les interpréter à la lecture des coordonnées factorielles, des cosinus carrés et des contributions des variables et des individus sur les axes. Il faut donc bien explorer les résultats à l’aide de tableaux et de graphiques! Cela explique que nous avons mobilisé de nombreux graphiques dans les deux sections précédentes (12.2.3.2 et 12.2.3.3). L’exploration des données d’une ACP peut aussi être réalisée avec des graphiques interactifs. Or, un superbe package dénommé explor, reposant sur Shiny, permet d’explorer de manière interactive les résultats de plusieurs méthodes factorielles calculés avec FactorMinerR. Pour cela, il vous suffit de lancer les deux lignes de code suivantes :\nlibrary(explor)\nexplor(res.acp)\nFinalement, explor permet également d’explorer les résultats d’une analyse des correspondances (AFC) et d’une analyse des correspondances multiples (ACM)."
  },
  {
    "objectID": "12-AnalysesFactorielles.html#sec-123",
    "href": "12-AnalysesFactorielles.html#sec-123",
    "title": "12  Méthodes factorielles",
    "section": "\n12.3 Analyse factorielle des correspondances (AFC)",
    "text": "12.3 Analyse factorielle des correspondances (AFC)\n\n\n\n\n\nAFC et tableau de contingence\n\n\nPour bien comprendre l’AFC, il est essentiel de bien maîtriser les notions de tableau de contingence (marges du tableau, fréquences observées et théoriques, pourcentages en ligne et en colonne, contributions au khi-deux) et de distance du khi-deux. Si ce n’est pas le cas, il est conseillé de (re)lire le chapitre 5.\n\n\nDans le chapitre 5, nous avons vu comment construire un tableau de contingence (figure 12.23) à partir de deux variables qualitatives comprenant plusieurs modalités, puis comment vérifier s’il y a dépendance entre les deux variables qualitatives avec le test du khi-deux. Or, s’il y a bien dépendance, il est peut-être judicieux de résumer l’information que contient le tableau de contingence en quelques nouvelles variables synthétiques, objectif auquel répond l’analyse factorielle des correspondances (AFC).\n\n\nFigure 12.23: Tableau de contingence pour une AFC\n\nÀ titre de rappel (section 12.1.2), l’AFC a été développée par le statisticien français Jean-Paul Benzécri (1973). Cela explique qu’elle est souvent enseignée et utilisée en sciences sociales dans les universités francophones, mais plus rarement dans les universités anglophones. Pourtant, les applications de l’AFC sont nombreuses dans différentes disciplines des sciences sociales comme illustrées avec les exemples suivants :\n\nEn géographie, les modalités de la première variable du tableau de contingence sont souvent des entités spatiales (régions, municipalités, quartiers, etc.) croisées avec les modalités d’une autre variable qualitative (catégories socioprofessionnelles, modes de transport, tranches de revenu des ménages ou des individus, etc.).\nEn économie régionale, nous pourrions vouloir explorer un tableau de contingence croisant des entités spatiales (par exemple, MRC au Québec, départements en France) et les effectifs d’emplois pour différents secteurs d’activité.\nEn sciences politiques, le recours à l’AFC peut être intéressant pour explorer les résultats d’une élection. Les deux variables qualitatives pourraient être les circonscriptions électorales et les partis politiques. Le croisement des lignes et des colonnes du tableau de contingence représenterait le nombre de votes obtenus par un parti politique j dans la circonscription électorale i. Appliquer une AFC sur un tel tableau de contingence permettrait de révéler les ressemblances entre les différents partis politiques et celles entre les circonscriptions électorales.\n\n\n\n\n\n\nAppliquer une ACP sur un tableau de contingence : un bien mauvais calcul…\n\n\nIl pourrait être tentant de transformer le tableau de contingence initial (tableau 12.7) en un tableau avec les pourcentages en ligne (tableau 12.8) afin de lui appliquer une analyse en composantes principales. Une telle démarche a deux inconvénients majeurs : chacune des modalités de la première variable qualitative (I) aurait alors le même poids; chacune des modalités de la deuxième variable (J) aurait aussi le même poids. Or, à la lecture des marges en ligne et en colonne au tableau 12.7), il est clair que les modalités j1 et i1 comprennent bien plus d’individus que les autres modalités respectives.\nSi nous reprenons le dernier exemple applicatif, cela signifierait que le même poids est accordé à chaque parti puisque les variables sont centrées réduites en ACP (moyenne = 0 et variance = 1). Autrement dit, les grands partis traditionnels seraient ainsi sur le pied d’égalité que les autres partis. Aussi, chaque circonscription électorale aurait le même poids bien que certaines comprennent bien plus d’électeurs et d’électrices que d’autres.\n\n\n\n\nTableau 12.7: Exemple de tableau de contingence pour l’AFC\n\n\n\n\n\n\n\n\n\n\n\nj1\nj2\nj3\nj4\nj5\nMarge (ligne)\n\n\n\ni1\n357 060\n22 010\n276 625\n65 000\n29 415\n750 110\n\n\ni2\n427 530\n26 400\n295 860\n69 410\n30 645\n849 845\n\n\ni3\n147 500\n6 545\n34 545\n4 415\n1 040\n194 045\n\n\ni4\n128 520\n6 405\n42 925\n6 565\n2 670\n187 085\n\n\nMarge (colonne)\n1 060 610\n61 360\n649 955\n145 390\n63 770\n1 981 085\n\n\n\n\n\n\n\n\n\n\nTableau 12.8: Exemple d’un tableau de contingence transformé (pourcentage en ligne) pour l’ACP\n\n\nV1\nV2\nV3\nV4\nV5\n\n\n\ni1\n47,6\n2,9\n36,9\n8,7\n3,9\n\n\ni2\n50,3\n3,1\n34,8\n8,2\n3,6\n\n\ni3\n76,0\n3,4\n17,8\n2,3\n0,5\n\n\ni4\n68,7\n3,4\n22,9\n3,5\n1,4\n\n\n\n\n\n\n\n\n\n12.3.1 Recherche d’une simplification basée sur la distance du khi-deux\nSur le plan mathématique et des objectifs visés, l’AFC est similaire à l’ACP puisqu’elle permet d’explorer un tableau de trois façons : 1) en montrant les ressemblances entre un ensemble d’individus (I), 2) en révélant les liaisons entre les variables (J) et 3) en résumant le tout avec des variables synthétiques. Toutefois, avec l’AFC, les ensembles I et J sont les modalités de deux variables qualitatives (dont le croisement forme un tableau de contingence) et elle est basée sur la distance du khi-deux (et non sur la distance euclidienne comme en ACP).\nAinsi, avec la distance du khi-deux, la proximité (ressemblance) entre deux lignes (i et l) et deux colonnes (j et k) est mesurée comme suit :\n\\[\nd_{\\chi_{il}^2} = \\sum_j \\frac{1}{f_{.j}}(\\frac{f_{ij}}{f_{i.}}-\\frac{f_{lj}}{f_{l.}})^2\n\\tag{12.5}\\]\n\\[\nd_{\\chi_{jk}^2} = \\sum_i \\frac{1}{f_{i.}}(\\frac{f_{ij}}{f_{.j}}-\\frac{f_{ik}}{f_{.k}})^2\n\\tag{12.6}\\]\nPrenons un exemple fictif pour calculer ces deux distances. Le tableau 12.9 comprend trois modalités en ligne (I) et trois autres en colonne (J). Le total des effectifs de ce tableau de contingence est égal à 1 665.\nÀ partir des données brutes, il est facile de construire deux tableaux : le profil des lignes et le profil des colonnes (tableau 12.10, c’est-à-dire les proportions en ligne et en colonne.\n\n\n\n\nTableau 12.9: Données brutes du tableau de contingence\n\n\nj1\nj2\nj3\nTotal (ligne)\n\n\n\ni1\n360\n65\n275\n700\n\n\ni2\n420\n70\n290\n780\n\n\ni3\n145\n5\n35\n185\n\n\nTotal (colonne)\n925\n140\n600\n1 665\n\n\n\n\n\n\n\n\n\n\nTableau 12.10: Profils des lignes et des colonnes\n\n\nj1\nj2\nj3\nTotal\n\n\n\nProfil des lignes\n\n\ni1\n0,514\n0,093\n0,393\n1\n\n\ni2\n0,538\n0,090\n0,372\n1\n\n\ni3\n0,784\n0,027\n0,189\n1\n\n\nProfils des colonnes\n\n\ni1\n0,389\n0,464\n0,458\n\n\n\ni2\n0,454\n0,500\n0,483\n\n\n\ni3\n0,157\n0,036\n0,058\n\n\n\nTotal\n1,000\n1,000\n1,000\n\n\n\n\n\n\n\n\n\nEn divisant les valeurs du tableau 12.9 par le grand total (1 665), nous obtenons tous les termes utilisés dans les équations 12.5 et 12.6 au tableau 12.11 :\n\nLes fréquences relatives dénommées \\(f_{ij}\\).\nLa marge \\(fi.\\) est égale à la somme des fréquences relatives en ligne.\nLa marge \\(f.j\\) est égale à la somme des fréquences relatives en colonne.\nLa somme de toutes les fréquences relatives est donc égale à 1, soit \\(\\sum{f_{i.}}\\) ou \\(\\sum{f_{.j}}\\).\n\n\n\n\n\nTableau 12.11: Données relatives du tableau de contingence (fij)\n\n\nj1\nj2\nj3\nTotal (fi.)\n\n\n\ni1\n0,216\n0,039\n0,165\n0,420\n\n\ni2\n0,252\n0,042\n0,174\n0,468\n\n\ni3\n0,087\n0,003\n0,021\n0,111\n\n\nTotal (f.j)\n0,556\n0,084\n0,360\n1,000\n\n\n\n\n\n\nIl est possible de calculer les distances entre les différentes modalités de I en appliquant l’équation 12.5; par exemple, la distance entre les observations i1 et i2 est égale à :\n\\[d_{(i1,i2)}=\\frac{\\mbox{1}}{\\mbox{0,556}}(\\mbox{0,216}-\\mbox{0,252})^2+\\frac{\\mbox{1}}{\\mbox{0,084}}(\\mbox{0,039}-\\mbox{0,042})^2+\n\\frac{\\mbox{1}}{\\mbox{0,360}}(\\mbox{0,165}-\\mbox{0,174})^2=\\mbox{0,003}\\]\nAvec l’équation 12.6, la distance entre les modalités j1 et j2 de J est égale à :\n\\[d_{(j1,j2)}=\\frac{\\mbox{1}}{\\mbox{0,420}}(\\mbox{0,216}-\\mbox{0,039})^2+ \\frac{\\mbox{1}}{\\mbox{0,468}}(\\mbox{0,252}-\\mbox{0,042})^2 + \\frac{\\mbox{1}}{\\mbox{0,111}}(\\mbox{0,087}-\\mbox{0,003})^2=\\mbox{0,233}\\]\nÀ la lecture du tableau 12.12, les modalités les plus semblables sont i1 et i2 (0,003) pour I et j1 et j3 (0,058) pour J.\n\n\n\n\nTableau 12.12: Distances du khi-deux entre les modalités I et les modalités J\n\nInd.\ni1\ni2\ni3\nCol.\nj1\nj2\nj3\n\n\n\ni1\n0,000\n0,003\n0,103\nj1\n0,000\n0,233\n0,058\n\n\ni2\n0,003\n0,000\n0,132\nj2\n0,233\n0,000\n0,078\n\n\ni3\n0,103\n0,132\n0,000\nj3\n0,058\n0,078\n0,000\n\n\n\n\n\n\nFinalement, l’approche pour déterminer les axes factoriels de l’AFC est similaire à celle de l’ACP : les axes factoriels sont les droites orthogonales qui minimisent les distances aux points du profil des lignes, excepté que la métrique pour mesurer ces distances est celle du khi-deux (et non celle la distance euclidienne comme pour l’ACP). Pour plus détails sur le calcul de ces axes (notamment les formulations matricielles), consultez notamment Benzécri (1973), Escofier et Pagès (1998) et Lebart et al. (1995).\n\n12.3.2 Aides à l’interprétation\nPour illustrer les aides à l’interprétation de l’AFC, nous utilisons un jeu de données spatiales extrait du profil du recensement de 2016 de Statistique Canada pour les secteurs de recensement de l’île de Montréal. La liste des modalités des variables qu’il comprend est reportée au tableau 12.13. L’AFC est calculée sur un tableau de contingence croisant les secteurs de recensement (lignes) et les modalités d’une variable relative au mode de transport utilisé pour les déplacements domicile-travail (colonnes). Ces modalités sont cartographiées à la figure 12.24).\n\n\n\n\nTableau 12.13: Jeu de données utilisé pour l’analyse factorielle des correspondances\n\n\nNom\nIntitulé\nSomme\n\n\n\nModalités de la variable utilisée dans l'AFC (mode de transport)\n\n\nVehCond\nVehCond\nVéhicule motorisé (conducteur·trice)\n427 560\n\n\nVehPass\nVehPass\nVéhicule motorisé (passager·ère)\n26 490\n\n\nTranspC\nTranspC\nTransport en commun\n295 800\n\n\nApied\nApied\nÀ pied\n69 330\n\n\nVelo\nVelo\nBicyclette\n30 615\n\n\nAutreMoyen\nAutreMoyen\nAutre moyen\n7 750\n\n\nModalités de la variable supplémentaire (durée du trajet)\n\n\nT15min\nT15min\nMoins de 15 minutes\n130 435\n\n\nT1529min\nT1529min\n15 à 29 minutes\n287 500\n\n\nT3044min\nT3044min\n30 à 44 minutes\n244 425\n\n\nT4559min\nT4559min\n45 à 59 minutes\n107 065\n\n\nT60plus\nT60plus\n60 minutes et plus\n88 050\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 12.24: Cartographie des modalités de la variable mode de transport utilisée pour l’AFC\n\n\n\n\n12.3.2.1 Résultats de l’AFC pour les valeurs propres\nAvant de calculer l’AFC, il convient de vérifier s’il y a bien une dépendance entre les modalités des deux variables qualitatives. En effet, si les deux variables sont indépendantes, il n’est pas nécessaire de résumer le tableau de contingence avec une AFC. Pour ce faire, nous utilisons le test du khi-deux largement décrit à la section 5.2. Les résultats de ce test signalent qu’il existe des associations entre les modalités des deux variables (\\(\\chi\\) = 203 971, p &lt; 0,001, tableau 12.14). Nous pouvons donc appliquer une AFC sur ce tableau de contingence.\n\n\n\n\nTableau 12.14: Résultats du test du khi-deux sur le tableau de contingence\n\nMesure\nValeur\n\n\n\nModalités I (secteurs de recensement)\n521,00\n\n\nModalités J (variable mode de transport)\n6,00\n\n\nSomme des données brutes (\\(n_{ij}\\))\n857 545,00\n\n\nKhi-deux (\\(\\chi^2\\))\n207 129,27\n\n\nDegrés de liberté, soit \\((c-1)\\times(l-1)\\)\n\n2 600,00\n\n\nValeur de p\n\n0,00\n\n\nCoefficient Phi au carré (\\(\\phi^2=\\chi^2 / n_{ij})\\)\n\n0,24\n\n\n\n\n\n\nNous avons vu qu’en ACP normée (section 12.2.2.1), la somme des valeurs propres est égale au nombre de variables puisqu’elles sont centrées réduites. Par contre, en AFC, cette somme est égale à l’inertie totale du tableau de contingence, c’est-à-dire à la valeur du khi-deux divisée par le nombre total des effectifs bruts (soit le coefficient phi au carré, \\(\\phi^2\\)) (section 5.2). Le tableau 12.15 permet de vérifier que la somme des valeurs propres est bien égale au coefficient phi au carré :\n\\[\\mbox{0,156}+\\mbox{0,046}+\\mbox{0,031}+\\mbox{0,004}+\\mbox{0,004} = \\mbox{0,24}\\]\n\\[\\phi^2 = \\chi^2 / n_{ij}=\\mbox{203 971}/ \\mbox{849 795} = \\mbox{0,24}\\]\n\n\n\n\nTableau 12.15: Résultats de l’AFC pour les valeurs propres\n\n\nAxe factoriel\nValeur propre\nPourcentage\nPourc. cumulé\n\n\n\ndim 1\n1\n0,156\n64,590\n64,590\n\n\ndim 2\n2\n0,046\n19,250\n83,840\n\n\ndim 3\n3\n0,031\n12,995\n96,835\n\n\ndim 4\n4\n0,004\n1,683\n98,518\n\n\ndim 5\n5\n0,004\n1,482\n100,000\n\n\n\n\n\n\nCombien d’axes d’une AFC faut-il retenir?\n\nApproche statistique. Mike Bendixen (1995), cité dans l’excellent site STHDA, propose deux critères pour sélectionner les premiers axes d’une AFC : \\(c_1= 1 / (l-1) \\times 100\\) et \\(c_2= 1 / (c-1) \\times 100\\) avec l et c étant respectivement les nombres de modalités en ligne et en colonne. Autrement dit, lorsque les données sont distribuées aléatoirement, la valeur propre en pourcentage devrait être égale à \\(c_1\\) et celle de l’axe factoriel moyen à \\(c_2\\). Par conséquent, nous pourrions retenir uniquement les axes dont les valeurs propres en pourcentage excèdent : \\(c_1 = \\mbox{1}/(\\mbox{521}-\\mbox{1})\\times \\mbox{100}=\\mbox{0,19 }%\\) et \\(c_2=\\mbox{1}/(\\mbox{6}-\\mbox{1})\\times \\mbox{100}=\\mbox{20 }%\\). En appliquant ces deux critères, seul le premier axe factoriel qui résume 65,6 % mérite d’être retenu.\nApproche empirique basée sur la lecture des pourcentages et des pourcentages cumulés. Nous retenons uniquement les deux premières composantes qui résument 85 % de la variance totale. Pour faciliter le choix du nombre d’axes avec cette approche empirique, il est fortement conseillé de construire un histogramme à partir des valeurs propres, soit brutes, soit en pourcentage, soit en pourcentage cumulé (figure 12.25).\n\n\n\n\n\nFigure 12.25: Histogramme des valeurs propres de l’AFC\n\n\n\n\n12.3.2.2 Résultats de l’AFC pour les variables et les individus\nComme pour l’ACP, nous retrouvons les trois mêmes mesures pour les variables et les individus : 1) les coordonnées factorielles, 2) les contributions et 3) les cosinus carrés.\n\n\n\n\n\nCompréhension des axes factoriels de l’AFC : une étape essentielle, incontournable…\n\n\nComme en ACP, l’analyse des trois mesures (coordonnées, contributions et cosinus carrés) pour les variables et les individus doit vous permettre de comprendre la signification des axes factoriels retenus de l’AFC. Cette étape d’interprétation est essentielle afin de qualifier les variables latentes (axes factoriels, variables synthétiques) produites par l’AFC.\n\n\n\n\nLes coordonnées factorielles sont simplement les projections des points-lignes et des points-colonnes sur les axes de l’AFC. Tant pour les lignes que pour les colonnes, ces coordonnées bénéficient de deux propriétés intéressantes. Premièrement, pour chaque axe factoriel k, la somme du produit des marges des variables (\\(f.j\\), colonnes) ou des individus (\\(fi.\\), lignes) avec leurs coordonnées respectives (\\(C^k_j\\) et \\(C^k_i\\)) est égale à 0 (équation 12.7). Deuxièmement, pour chaque axe factoriel k, la somme des produits entre les marges (en ligne et en colonne) et les coordonnées au carré (en ligne et en colonne) est égale à la valeur propre de l’axe (équation 12.8).\n\n\\[\n\\sum{f.j (C^k_j)}= 0 \\text{ et} \\sum{fi. (C^k_i)}= 0\n\\tag{12.7}\\]\n\\[\n\\sum{fi. (C^k_i)^2}= \\mu_k \\text{ et} \\sum{f.j (C^k_j)^2}= \\mu_k\n\\tag{12.8}\\]\nEn guise d’exemple, le tableau 12.16 permet de vérifier les deux propriétés des coordonnées pour les variables. Les sommes de \\({f.j (C^k_j)}\\) pour les axes 1 et 2 sont bien égales à 0; et les sommes de \\({f.j (C^k_j)^2}\\) pour les axes 1 et 2 sont bien égales aux valeurs propres de ces deux axes, soit 0,156 et 0,046 (comparez ces valeurs avec celles reportées au tableau 12.15 plus haut).\n\n\n\n\nTableau 12.16: Vérification des deux propriétés des coordonnées factorielles pour les variables\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCoord.\n\n\nf.j x Coord.\n\n\nf.j x Coord2\n\n\n\nModalité\nf.j\n1\n2\n1\n2\n1\n2\n\n\n\n\nVehCond\n0,499\n-0,329\n0,077\n-0,164\n0,038\n0,054\n0,003\n\n\nVehPass\n0,031\n-0,255\n0,081\n-0,008\n0,003\n0,002\n0,000\n\n\nTranspC\n0,345\n0,208\n-0,229\n0,072\n-0,079\n0,015\n0,018\n\n\nApied\n0,081\n0,813\n0,545\n0,066\n0,044\n0,053\n0,024\n\n\nVelo\n0,036\n0,938\n-0,187\n0,033\n-0,007\n0,031\n0,001\n\n\nAutreMoyen\n0,009\n0,142\n0,078\n0,001\n0,001\n0,000\n0,000\n\n\nSomme\n1,000\n\n\n0,000\n0,000\n0,156\n0,046\n\n\n\n\n\n\n\n\n\n\n\n\n\nParticularité de l’AFC\n\n\nContrairement à l’ACP, les coordonnées factorielles pour les variables en AFC ne sont pas les coefficients de corrélation de Pearson des variables sur les axes!\n\n\n\n\nLes contributions des colonnes ou des lignes en AFC permettent de repérer celles qui contribuent le plus à la formation des axes factoriels (de manière analogue à l’ACP). Pour un axe donné, leur sommation est égale à 100 %. Elles s’obtiennent en multipliant la coordonnée au carré avec la marge et en divisant le tout par la valeur propre de l’axe (équations 12.9 et 12.10).\n\n\\[\n\\mbox{Ctr}_j^k =\\frac{f.j(C^k_j)^2}{\\mu_{k}}\\times 100\n\\tag{12.9}\\]\n\\[\n\\mbox{Ctr}_i^k =\\frac{fi.(C^k_i)^2}{\\mu_{k}}\\times 100\n\\tag{12.10}\\]\n\n\nLes cosinus carrés (Cos2) (appelés aussi les qualités de représentation sur un axe) permettent de repérer le ou les axes qui concourent le plus à donner un sens aux colonnes (variables) et aux lignes (individus), de manière analogue à l’ACP. Pour une variable ou un individu, la sommation des Cos2 pour tous les axes de l’AFC est aussi égale à 1.\n\nInterprétation des résultats pour les colonnes (variables)\nMaintenant, analysons ces trois statistiques pour les variables pour les deux premiers axes de l’AFC (tableau 12.17 et figure 12.26).\nPour l’axe 1, résumant 65 % de la variance, trois modalités concourent à sa formation : VehCond (34,69 %), Apied (34,25 %) et Velo (20,13 %). À la lecture des coordonnées factorielles sur cet axe, les modes de transport relatifs aux véhicules motorisés (VehCond = -0,33 et VehPass = -0,25) s’opposent clairement aux modes actifs (Apied = 0,81 et Velo = 0,94), constat qu’il est possible de confirmer visuellement avec la figure 12.26. La modalité VehCond a d’ailleurs la plus forte valeur de Cos2 sur cet axe (0,92), ce qui signale, sans l’ombre d’un doute, que l’axe 1 est celui qui donne le plus de sens à cette modalité.\nPuisque l’axe 2 résume une partie beaucoup plus limitée de la variance du tableau (19,25 %), il n’est pas étonnant qu’un nombre plus limité de modalités concourent à sa formation : seules les contributions de la modalité Apied (51,68 %) et secondairement de TranspC (38,81 %) sont importantes. Leurs coordonnées factorielles s’opposent d’ailleurs sur cet axe (respectivement 0,81 et 0,21).\n\n\n\n\nTableau 12.17: Résultats de l’AFC pour les variables\n\n\n\n\n\n\n\n\n\n\n\n\n\nCoordonnées\n\n\nCosinus carrés\n\n\nContributions (%)\n\n\n\nModalité\n1\n2\n1\n2\n1\n2\n\n\n\n\nVehCond\n-0,33\n0,08\n0,92\n0,05\n34,69\n6,33\n\n\nVehPass\n-0,25\n0,08\n0,34\n0,03\n1,28\n0,44\n\n\nTranspC\n0,21\n-0,23\n0,39\n0,47\n9,53\n38,81\n\n\nApied\n0,81\n0,54\n0,67\n0,30\n34,25\n51,61\n\n\nVelo\n0,94\n-0,19\n0,56\n0,02\n20,13\n2,69\n\n\nAutreMoyen\n0,14\n0,08\n0,05\n0,01\n0,12\n0,12\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 12.26: Premier plan factoriel de l’AFC pour les variables\n\n\n\nInterprétation des résultats pour les individus\n\n\n\n\n\nPremier plan factoriel pour les variables et les individus\n\n\nLorsque le jeu de données comprend à la fois peu de modalités en ligne et en colonne, il est judicieux de les représenter simultanément sur le premier plan factoriel (axes 1 et 2). Pour ce faire, vous pouvez utiliser la fonction fviz_ca_biplot du package factoextra.\n\n\nÉtant donné que notre jeu de données comprend 521 secteurs de recensement, nous proposons ici de cartographier les coordonnées factorielles des individus pour les deux premiers axes de l’AFC (figure 12.27). Pour l’axe 1, les secteurs de recensement à l’est et l’ouest de l’île de Montréal présentent les coordonnées les plus fortement négatives (en rouge); dans ces zones, l’usage des véhicules motorisés pour des déplacements domicile-travail est certainement surreprésenté, comparativement aux modes actifs. À l’inverse, dans les secteurs de recensement du centre de l’île présentant de fortes valeurs positives (en rouge), le recours aux modes de transports actifs (marche et vélo) est bien plus important, toutes proportions gardées. Quant à la cartographie des coordonnées pour l’axe 2, elle permet surtout de repérer quelques secteurs de recensement autour du centre-ville (très fortes valeurs positives en vert foncé) où les déplacements domicile-travail à pied sont plus fréquents, toutes proportions gardées.\nEn résumé, suite à l’analyse des coordonnées factorielles des variables et des individus, nous pouvons conclure que le premier axe est certainement le plus intéressant puisqu’il permet d’opposer l’usage des modes de transports motorisés versus les modes de transports actifs pour les déplacements domicile-travail sur l’île de Montréal. Cette nouvelle variable synthétique (variable latente) pourrait ainsi être introduite dans des analyses subséquentes (par exemple, dans un modèle de régression). Cela démontre qu’au même titre que l’ACP, l’AFC est une méthode de réduction de données puisque nous sommes passés d’un tableau comprenant 512 secteurs de recensement et six modalités à un tableau comprenant une seule variable synthétique (axe 1).\n\n\n\n\nFigure 12.27: Cartographie de coordonnées factorielles des individus pour l’AFC\n\n\n\n\n\n\n\n\nAjout de modalités supplémentaires dans une analyse des correspondances (AFC)\n\n\nComme pour l’ACP, il est possible d’ajouter des variables et des individus supplémentaires une fois l’AFC calculée. En guise d’illustration, nous avons ajouté à l’AFC précédemment analysée des modalités relatives à la durée des temps de déplacements : moins de 15 minutes, 15 à 29, 30 à 44, 45 à 59, 60 minutes et plus. Sans surprise, sur le premier plan factoriel à la figure 12.27, cette dernière modalité, représentant les trajets les plus longs, est la plus proche des modalités relatives à l’usage des véhicules motorisés (VehCond et VehPass).\n\n\n\n\nFigure 12.28: Ajout de modalités supplémentaires sur le premier plan factoriel de l’AFC\n\n\n\n\n\n\n12.3.3 Mise en œuvre dans R\n\n12.3.3.1 Calcul d’une AFC avec FactoMineR\n\nPlusieurs packages permettent de calculer une AFC dans R, notamment ca (fonction ca), MASS (fonction corresp), ade4 (fonction dudi.coa) et FactoMineR (fonction CA). De nouveau, nous utilisons FactoMineR couplé au package factoextra pour réaliser rapidement des graphiques avec les résultats pour les variables et les coordonnées.\nPour calculer l’AFC, il suffit d’utiliser la fonction CA de FactoMineR, puis la fonction summary(res.afc), qui renvoie les résultats de l’AFC pour :\n\nLes valeurs propres (section Eigenvalues) pour les axes factoriels (Dim.1 à Dim.n) avec leur variance expliquée brute (Variance), en pourcentage (% of var.) et en pourcentage cumulé (Cumulative % of var.).\nLes dix premières observations (section Rows) avec les coordonnées factorielles (Dim.1 à Dim.n), les contributions (ctr) et les cosinus carrés (cos2). Pour accéder aux résultats pour toutes les observations, utilisez les fonctions res.afc$row ou encore res.afc$row$coord (uniquement les coordonnées factorielles), res.afc$row$contrib (uniquement les contributions) et res.afc$row$cos2 (uniquement les cosinus carrés).\nLes colonnes (section Columns) avec les coordonnées factorielles (Dim.1 à Dim.n), les contributions (ctr) et les cosinus carrés (cos2).\n\n\n# Chargement des packages\nlibrary(FactoMineR)\nlibrary(factoextra)\n# Chargement des données\nload(\"data/analysesfactorielles/DonneesAFC.Rdata\")\n# Avant de calculer l'AFC, il convient de vérifier si les deux variables\n# qualitatives sont dépendantes avec le test du khi-deux\nkhideux &lt;- chisq.test(dfDonneesAFC[,1:6])\nprint(khideux)\n\n\n    Pearson's Chi-squared test\n\ndata:  dfDonneesAFC[, 1:6]\nX-squared = 207129, df = 2600, p-value &lt; 2.2e-16\n\nif(khideux$p.value &lt;=0.05){\n  cat(\"La valeur de p &lt; 0,05. Les variables sont dépendantes. Calculez l'AFC.\")\n}else {\n    cat(\"La valeur de p &gt; 0,05. Les variables sont indépendantes. Inutile de calculer l'AFC\")\n}\n\nLa valeur de p &lt; 0,05. Les variables sont dépendantes. Calculez l'AFC.\n\n# Calcul de l'analyse des correspondances sur les six premières variables\nres.afc &lt;- CA(dfDonneesAFC[,1:6], graph = FALSE)\n# Affichage des résultats de la fonction CA\nprint(res.afc)\n\n**Results of the Correspondence Analysis (CA)**\nThe row variable has  521  categories; the column variable has 6 categories\nThe chi square of independence between the two variables is equal to 207129.3 (p-value =  0 ).\n*The results are available in the following objects:\n\n   name              description                   \n1  \"$eig\"            \"eigenvalues\"                 \n2  \"$col\"            \"results for the columns\"     \n3  \"$col$coord\"      \"coord. for the columns\"      \n4  \"$col$cos2\"       \"cos2 for the columns\"        \n5  \"$col$contrib\"    \"contributions of the columns\"\n6  \"$row\"            \"results for the rows\"        \n7  \"$row$coord\"      \"coord. for the rows\"         \n8  \"$row$cos2\"       \"cos2 for the rows\"           \n9  \"$row$contrib\"    \"contributions of the rows\"   \n10 \"$call\"           \"summary called parameters\"   \n11 \"$call$marge.col\" \"weights of the columns\"      \n12 \"$call$marge.row\" \"weights of the rows\"         \n\n# Visualisation des marges en colonne\nround(res.afc$call$marge.col,4)\n\n   VehCond    VehPass    TranspC      Apied       Velo AutreMoyen \n    0.4986     0.0309     0.3449     0.0808     0.0357     0.0090 \n\n# Visualisation des marges en ligne. Étant donné que nous avons 521 individus, \n# la ligne ci-dessous est en commentaire\n# round(res.afc$call$marge.row,4)\n\n# Sommaire des résultats de l'AFC\n# Remarquez que la première ligne de ce sommaire est le résultat du khi-deux\nsummary(res.afc)\n\n\nCall:\nCA(X = dfDonneesAFC[, 1:6], graph = FALSE) \n\nThe chi square of independence between the two variables is equal to 207129.3 (p-value =  0 ).\n\nEigenvalues\n                       Dim.1   Dim.2   Dim.3   Dim.4   Dim.5\nVariance               0.156   0.046   0.031   0.004   0.004\n% of var.             64.590  19.250  12.995   1.683   1.482\nCumulative % of var.  64.590  83.840  96.835  98.518 100.000\n\nRows (the 10 first)\n             Iner*1000    Dim.1    ctr   cos2    Dim.2    ctr   cos2    Dim.3\n1          |     0.155 | -0.304  0.095  0.961 | -0.023  0.002  0.006 |  0.048\n2          |     0.123 | -0.232  0.067  0.850 |  0.028  0.003  0.012 | -0.021\n3          |     0.268 | -0.246  0.127  0.737 | -0.002  0.000  0.000 | -0.046\n4          |     0.102 | -0.168  0.034  0.513 | -0.111  0.049  0.222 | -0.117\n5          |     0.118 | -0.251  0.067  0.883 |  0.004  0.000  0.000 | -0.007\n6          |     0.120 | -0.130  0.024  0.313 | -0.103  0.051  0.196 | -0.144\n7          |     0.124 | -0.029  0.002  0.022 | -0.158  0.167  0.626 | -0.079\n8          |     0.073 | -0.157  0.028  0.598 | -0.090  0.031  0.195 | -0.006\n9          |     0.014 | -0.060  0.005  0.506 | -0.033  0.005  0.150 | -0.018\n10         |     0.040 |  0.004  0.000  0.000 | -0.204  0.073  0.838 |  0.053\n              ctr   cos2  \n1           0.012  0.024 |\n2           0.003  0.007 |\n3           0.022  0.026 |\n4           0.080  0.246 |\n5           0.000  0.001 |\n6           0.146  0.380 |\n7           0.061  0.155 |\n8           0.000  0.001 |\n9           0.002  0.048 |\n10          0.007  0.056 |\n\nColumns\n             Iner*1000    Dim.1    ctr   cos2    Dim.2    ctr   cos2    Dim.3\nVehCond    |    58.559 | -0.329 34.687  0.924 |  0.077  6.331  0.050 |  0.051\nVehPass    |     5.923 | -0.255  1.283  0.338 |  0.081  0.440  0.035 |  0.001\nTranspC    |    38.261 |  0.208  9.534  0.389 | -0.229 38.812  0.472 | -0.124\nApied      |    79.193 |  0.813 34.252  0.675 |  0.545 51.610  0.303 | -0.147\nVelo       |    55.633 |  0.938 20.126  0.564 | -0.187  2.688  0.022 |  0.802\nAutreMoyen |     3.969 |  0.142  0.117  0.046 |  0.078  0.119  0.014 |  0.070\n              ctr   cos2  \nVehCond     4.141  0.022 |\nVehPass     0.000  0.000 |\nTranspC    16.995  0.139 |\nApied       5.543  0.022 |\nVelo       73.180  0.413 |\nAutreMoyen  0.140  0.011 |\n\n\n\n12.3.3.2 Exploration graphique des résultats de l’AFC avec factoextra\n\nComme pour l’ACP, factoextra dispose de plusieurs fonctions très intéressantes pour construire rapidement des graphiques avec les résultats de l’AFC. Premièrement, la syntaxe ci-dessous (avec la fonction fviz_screeplot) renvoie deux graphiques pour analyser les résultats des valeurs propres de l’AFC (figure 12.29).\n\nlibrary(factoextra)\nlibrary(ggplot2)\nlibrary(ggpubr)\n\n# Nombre de modalités en ligne et en colonne\nModalitesLig &lt;- nrow(dfDonneesAFC)\nModalitesCol &lt;- ncol(dfDonneesAFC[,1:6])\n# Critère statistique du profil moyen\ncritere2 &lt;- round(1/(ModalitesCol-1)*100,2)\ntexte &lt;- paste0(\"Critère pour le profil moyen : \", as.character(critere2), \" %\")\n# Graphique avec les valeurs propres\nG1 &lt;- fviz_screeplot(res.afc, choice = \"eigenvalue\",\n               ylab = \"Valeurs propres\",\n               xlab = \"Axes factoriels\",\n               main=\"Valeurs propres\")\nG2 &lt;- fviz_screeplot(res.afc, choice = \"variance\", addlabels = TRUE, ylim = c(0, 70),\n                     ylab = \"Variance expliquée (%)\",\n                     xlab = \"Axes factoriels\",\n                     main=\"Valeurs propres (%)\")+\n  geom_hline(yintercept=c2, linetype=1, color = \"red\", linewidth = 1)+\n  annotate(geom = \"text\", x = ModalitesCol-.5,\n          y = critere2+3, label=texte, \n          color = \"red\", hjust=1, linewidth = 4)\n\nWarning in annotate(geom = \"text\", x = ModalitesCol - 0.5, y = critere2 + :\nIgnoring unknown parameters: `linewidth`\n\nggarrange(G1, G2)\n\n\n\nFigure 12.29: Graphiques pour les valeurs propres de l’AFC avec factoextra\n\n\n\nAvec les fonctions fviz_contrib et fviz_cos2, il est très facile de réaliser des histogrammes pour les contributions et les cosinus carrés pour les variables (colonnes) ou les individus (lignes), et ce, avec le paramètre choice = c(\"row\", \"col\") (figure 12.30).\n\nlibrary(factoextra)\nlibrary(ggplot2)\nlibrary(ggpubr)\nVP1pct &lt;- round(res.afc$eig[1,2],2)\nVP2pct &lt;- round(res.afc$eig[2,2],2)\nG1 &lt;- fviz_contrib (res.afc, choice = \"col\", axes = 1, title = \"Axe 1\")\nG2 &lt;- fviz_contrib (res.afc, choice = \"col\", axes = 2, title = \"Axe 2\")\nggarrange(G1, G2, ncol = 2, nrow = 1)\n\n\n\nFigure 12.30: Contributions des variables avec factoextra\n\n\n\nQuant aux fonctions fviz_ca_col et fviz_ca_row, elles permettent rapidement de construire le premier plan factoriel pour les colonnes (variables) et les lignes (individus) (figure 12.31). Aussi, la fonction fviz_ca_biplot permet de construire un plan factoriel, mais avec les lignes et les colonnes simultanément.\n\nG3 &lt;- fviz_ca_col(res.afc,\n            repel = TRUE,\n            geom = c(\"text\" , \"point\"),\n            col.col = \"steelblue\",\n            title = \"Mode de transport\",\n            xlab = paste0(\"Axe 1 (\", VP1pct, \" %)\"),\n            ylab = paste0(\"Axe 2 (\", VP2pct, \" %)\"))\nG4 &lt;- fviz_ca_row(res.afc,\n            repel = TRUE,\n            geom = c(\"point\"),\n            col.row = \"steelblue\",\n            title = \"Secteurs de recensement\",\n            xlab = paste0(\"Axe 1 (\", VP1pct, \" %)\"),\n            ylab = paste0(\"Axe 2 (\", VP2pct, \" %)\"))\nggarrange(G3, G4, ncol = 2, nrow = 1)\n\n\n\nFigure 12.31: Premier plan factoriel de l’AFC pour les variables et les individus avec factoextra\n\n\n\nLa syntaxe ci-dessous permet d’ajouter des modalités supplémentaires dans l’AFC et de constuire le graphique du premier plan factoriel (figure 12.32).\n\n# Les colonnes 7 à 11 sont mises comme des variables supplémentaires dans l'AFC\nres.afc2 &lt;- CA(dfDonneesAFC, col.sup = 7:11, graph = FALSE)\nVP1pct &lt;- round(res.afc2$eig[1,2],2)\nVP2pct &lt;- round(res.afc2$eig[2,2],2)\nfviz_ca_col(res.afc2,\n            repel = TRUE,\n            geom= c(\"text\" , \"point\"),\n            col.col = \"steelblue\",\n            title = \"\",\n            xlab=paste0(\"Axe 1 (\", VP1pct, \" %)\"),\n            ylab=paste0(\"Axe 2 (\", VP2pct, \" %)\"))\n\n\n\nFigure 12.32: Ajout de modalités supplémentaires sur le premier plan factoriel l’AFC avec factoextra\n\n\n\nFinalement, la syntaxe ci-dessous permet de cartographier les coordonnées factorielles des individus de l’AFC avec le package tmap (figure 12.33).\n\nlibrary(tmap)\nlibrary(stringr)\ndfAFCInd &lt;- data.frame(Coord = res.afc$row$coord, \n                       Cos2 = res.afc$row$cos2, \n                       Ctr = res.afc$row$contrib)\nnames(dfAFCInd) &lt;- str_replace(names(dfAFCInd), \".Dim.\", \"Comp\")\nCartoAFC &lt;- cbind(sfDonneesAFC, dfAFCInd)\nVP1pct &lt;- tofr(round(res.afc$eig[1,2],2))\nVP2pct &lt;- tofr(round(res.afc$eig[2,2],2))\nCarte1 &lt;- tm_shape(CartoAFC) +\n  tm_fill(col = \"CoordComp1\", style = \"cont\", midpoint = 0, title = \"Coordonnées\")+\n  tm_layout(title = paste0(\"Axe 1 (\", VP1pct,\"%)\"), attr.outside = TRUE, frame = FALSE)\nCarte2 &lt;- tm_shape(CartoAFC) +\n  tm_fill(col = \"CoordComp2\", style = \"cont\", midpoint = 0, title = \"Coordonnées\")+\n  tm_layout(title = paste0(\"Axe 2 (\", VP2pct,\"%)\"), attr.outside = TRUE, frame = FALSE)\ntmap_arrange(Carte1, Carte2, nrow = 1)\n\n\n\nFigure 12.33: Cartographie de coordonnées factorielles des individus pour l’AFC"
  },
  {
    "objectID": "12-AnalysesFactorielles.html#sec-124",
    "href": "12-AnalysesFactorielles.html#sec-124",
    "title": "12  Méthodes factorielles",
    "section": "\n12.4 Analyse de correspondances multiples (ACM)",
    "text": "12.4 Analyse de correspondances multiples (ACM)\nL’analyse des correspondances multiples (ACM) est particulièrement adaptée à l’exploration de données issues d’une enquête par sondage, puisqu’elle permet de résumer/synthétiser l’information d’un tableau comprenant uniquement des variables qualitatives (figure 12.34).\n\n\nFigure 12.34: Lieu de pèlerinage de R\n\nPar exemple, une enquête sur la mobilité d’une population donnée pourrait comprendre plusieurs variables qualitatives, dont celles reportées au tableau 12.18.\n\n\n\n\nTableau 12.18: Exemple de variables qualitatives issues d’une enquête\n\nModalités des variables\nCodage\n\n\n\nSexe\n\n\nHomme\n1\n\n\nFemme\n2\n\n\nGroupe d'âge\n\n\nMoins de 20 ans\n1\n\n\n20 à 39 ans\n2\n\n\n40 à 59 ans\n3\n\n\n60 ans et plus\n4\n\n\nMode de transport\n\n\nAutomobile\n1\n\n\nTransport en commun\n2\n\n\nMarche\n3\n\n\nVélo\n4\n\n\n\n\n\n\n\n\nPour analyser de telles données, il suffit de transformer le tableau condensé (de données brutes) en un tableau disjonctif complet dans lequel chaque modalité des variables qualitatives devient une variable binaire prenant les valeurs de 0 ou 1 (tableaux 12.19 et 12.20). Notez que la somme de chaque ligne est alors égale au nombre de variables qualitatives.\n\n\n\n\nTableau 12.19: Tableau condensé (données brutes)\n\n\nSexe\nGroupe d’âge\nMode de transport\n\n\n\nInd. 1\n1\n1\n2\n\n\nInd. 2\n1\n2\n3\n\n\nInd. 3\n2\n3\n1\n\n\nInd. 4\n1\n2\n1\n\n\nInd. 5\n2\n4\n2\n\n\nInd. 6\n1\n4\n4\n\n\n\n\n\n\n\n\n\n\nTableau 12.20: Tableau disjonctif complet\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSexe\n\n\nGroupe d'âge\n\n\nMode de transport\n\n\n\nIndividu\nHomme\nFemme\nMoins de 20 ans\n20 à 39 ans\n40 à 59 ans\n60 ans et plus\nAuto.\nT.C.\nMarche\nVélo\n\n\n\n\nInd. 1\n1\n0\n1\n0\n0\n0\n0\n1\n0\n0\n\n\nInd. 2\n1\n0\n0\n1\n0\n0\n0\n0\n1\n0\n\n\nInd. 3\n0\n1\n0\n0\n1\n0\n1\n0\n0\n0\n\n\nInd. 4\n1\n0\n0\n1\n0\n0\n1\n0\n0\n0\n\n\nInd. 5\n0\n1\n0\n0\n0\n1\n0\n1\n0\n0\n\n\nInd. 6\n1\n0\n0\n0\n0\n1\n0\n0\n0\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\nACM versus AFC\n\n\nNous avons vu que l’AFC permet d’analyser un tableau de contingence avec deux variables qualitatives. En ACM, les colonnes sont les différentes modalités des variables qualitatives et les lignes sont les observations (par exemple, les individus ayant répondu à une enquête). En résumé, l’analyse des correspondances multiples (ACM) est simplement une analyse des correspondances (AFC) appliquée sur un tableau disjonctif complet.\nL’ACM permet ainsi de révéler les ressemblances entre les différentes modalités des variables qualitatives et les ressemblances entre les différents individus. Par conséquent, elle produit également des variables synthétiques (axes factoriels) résumant l’information contenue dans le tableau initial. L’évaluation de ces ressemblances et la détermination des axes factoriels sont aussi basées sur la distance du khi-deux.\n\n\n\n12.4.1 Aides à l’interprétation\nPuisque l’ACM est une extension de l’AFC, nous retrouvons les mêmes aides à l’interprétation : les valeurs propres pour les axes, les coordonnées factorielles, les contributions et les cosinus carrés pour les variables et les individus.\nPour présenter l’ACM, nous utilisons des données ouvertes de la Ville de Montréal et, plus particulièrement, celles d’un sondage auprès de la population de l’île de Montréal sur l’agriculture urbaine. Pour ce faire, nous avons conservé uniquement les personnes pratiquant l’agriculture urbaine (n = 352). Les variables qualitatives extraites pour l’ACM sont reportées au tableau 12.21) avec la description des questions, leurs modalités respectives avec les effectifs bruts et en pourcentage. Au final, l’ACM est calculée de la manière suivante :\n\nNeuf variables qualitatives relatives à la pratique de l’agriculture urbaine sont retenues (q3, q4, q5, q8, q9, q10, q11, q12 et q13).\nQuatre variables relatives au profil socioéconomique des personnes répondantes sont introduites comme variables supplémentaires (q15, q16, q17 et q21).\nChaque ligne est pondérée avec la variable pond.\n\nL’objectif de cette ACM est double :\n\nMontrer les ressemblances entre les différentes modalités relatives à la pratique de l’agriculture urbaine. L’analyse des axes factoriels devrait nous permettre d’identifier différents profils des personnes pratiquant l’agriculture urbaine.\nProjeter les modalités des variables socioéconomiques afin de vérifier si elles sont ou non associées aux axes factoriels, c’est-à-dire aux différents profils révélés par les axes.\n\n\n\n\n\n\nBloc attention\n\n\nL’analyse du sondage sur l’agriculture urbaine réalisée ici est purement exploratoire : elle vise uniquement à démontrer que l’ACM est un outil particulièrement intéressant pour analyser les données d’un sondage. Par contre, cette analyse n’a aucune prétention scientifique puisque nous ne sommes pas des spécialistes de l’agriculture urbaine. Dans ce champ de recherche très fertile qu’est l’agriculture urbaine (surement pas la meilleure blague du livre…), vous pourrez consulter plusieurs études montréalaises (McClintock 2018; Audate, Cloutier et Lebel 2021; Bhatt et Farah 2016).\n\n\n\n\n\n\nTableau 12.21: Variables qualitatives extraites du sondage sur l’agriculture urbaine de la Ville de Montréal\n\nModalité\nN\n%\n\n\n\nQ3. Depuis combien de temps cultivez-vous des fruits, des fines herbes ou des légumes?\n\n\nQ3. Moins de 1 an\n35\n9,9\n\n\nQ3. De 1 à 4 ans\n101\n28,7\n\n\nQ3. De 5 à 9 ans\n66\n18,8\n\n\nQ3. 10 ans ou plus\n150\n42,6\n\n\nQ4. Selon vous, quelle proportion des fruits, des fines herbes et des légumes que vous consommez durant l'été provient de votre propre production?\n\n\nQ4. Moins de 10%\n192\n54,5\n\n\nQ4. 10 à 25%\n70\n19,9\n\n\nQ4. 26 à 50%\n47\n13,4\n\n\nQ4. Plus de 50%\n43\n12,2\n\n\nQ5. Utilisez-vous du compost provenant de vos déchets verts ou alimentaires pour faire pousser des fruits, des fines herbes ou des légumes?\n\n\nQ5. Oui\n90\n25,6\n\n\nQ5. Non\n262\n74,4\n\n\nQ8. Récupérez-vous l'eau de pluie pour irriguer vos cultures de fruits, de fines herbes ou des légumes ou encore votre jardin?\n\n\nQ8. Oui\n72\n20,5\n\n\nQ8. Non\n280\n79,5\n\n\nQ9. Combien de sortes de fruits, de fines herbes ou de légumes cultivez-vous?\n\n\nQ9. Moins de 5 sortes\n170\n48,3\n\n\nQ9. 5 à 9 sortes\n124\n35,2\n\n\nQ9. 10 à 14 sortes\n42\n11,9\n\n\nQ9. 15 sortes ou plus\n16\n4,5\n\n\nQ10. Cultivez-vous suffisamment de fruits, de fines herbes ou de légumes pour partager avec d'autres personnes?\n\n\nQ10. Oui\n143\n40,6\n\n\nQ10. Non\n209\n59,4\n\n\nQ11. Échangez-vous vos semis ou vos récoltes de fruits, de fines herbes ou de légumes avec d'autres personnes?\n\n\nQ11. Oui\n90\n25,6\n\n\nQ11. Non\n262\n74,4\n\n\nQ12. Selon vous, l'agriculture urbaine contribue-t-elle à améliorer les rapports entre les gens?\n\n\nQ12. Oui\n283\n80,4\n\n\nQ12. Non\n46\n13,1\n\n\nQ12. NSP/NRP\n23\n6,5\n\n\nQ13. Saviez-vous que la Ville de Montréal encourage et soutient l'agriculture urbaine sur l'île de Montréal?\n\n\nQ13. Oui\n203\n57,7\n\n\nQ13. Non\n149\n42,3\n\n\nQ15. À quel groupe d'âge appartenez-vous?\n\n\nQ15. 18 à 34 ans\n54\n15,3\n\n\nQ15. 35 à 49 ans\n110\n31,2\n\n\nQ15. 50 à 64 ans\n101\n28,7\n\n\nQ15. 65 ans et plus\n87\n24,7\n\n\nQ16. Quelle est votre occupation principale?\n\n\nQ16. Travail temps plein\n177\n50,3\n\n\nQ16. Travail. temps partiel\n26\n7,4\n\n\nQ16. Étudiant\n14\n4,0\n\n\nQ16. Retraité\n101\n28,7\n\n\nQ16. Sans emploi\n10\n2,8\n\n\nQ16. À la maison\n24\n6,8\n\n\nQ17. Quel est le plus haut niveau de scolarité que vous avez complété?\n\n\nQ17. Aucun certificat ou dipl.\n25\n7,1\n\n\nQ17. Dipl. secondaires\n80\n22,7\n\n\nQ17. Dipl. collégiales\n75\n21,3\n\n\nQ17. Études universitaires\n172\n48,9\n\n\nQ21. Êtes-vous propriétaire ou locataire de votre résidence ?\n\n\nQ21. Propriétaire\n250\n71,0\n\n\nQ22. Locataire\n102\n29,0\n\n\n\n\n\n\n\n\n\n12.4.1.1 Résultats de l’ACM pour les valeurs propres\nLes résultats pour les valeurs propres sont reportés au tableau 12.22 et à la figure 12.35. En ACM, l’inertie totale du tableau des variables qualitatives est égale au nombre moyen de modalités par variable moins un, soit \\(\\frac{K}{J}-1\\) avec K et J étant respectivement les nombres de modalités et de variables. Aussi, le nombre d’axes produits par l’ACM est égal à \\(K - J\\). Pour notre tableau, l’inertie est donc égale à \\(\\mbox{25} / \\mbox{9} = \\mbox{1,77}\\) avec \\(\\mbox{25}-\\mbox{9} = \\mbox{16}\\) axes. Le nombre d’axes à retenir est souvent plus difficile à déterminer puisque, tel que signalé judicieusement par Jérôme Pagès (2002, 53) : « en pratique, comparée à l’ACP, l’ACM conduit, dans l’ensemble à : des pourcentages d’inertie plus petits; une décroissance de ces pourcentages plus douce ».\nL’histogramme des valeurs propres (figure 12.35) révèle plusieurs sauts importants dans les valeurs propres qui pourraient justifier le choix du nombre d’axes factoriels, soit aux axes 1, 2, 3 et 6. Pour l’exercice, nous retenons les trois premiers axes qui résument 30 % de l’inertie du tableau initial.\n\n\n\n\nTableau 12.22: Résultats de l’ACM pour les valeurs propres\n\n\nAxe factoriel\nValeur propre\nPourcentage\nPourc. cumulé\n\n\n\ndim 1\n1\n0,248\n13,940\n13,940\n\n\ndim 2\n2\n0,156\n8,792\n22,732\n\n\ndim 3\n3\n0,135\n7,620\n30,352\n\n\ndim 4\n4\n0,127\n7,161\n37,513\n\n\ndim 5\n5\n0,126\n7,065\n44,579\n\n\ndim 6\n6\n0,123\n6,916\n51,494\n\n\ndim 7\n7\n0,114\n6,385\n57,879\n\n\ndim 8\n8\n0,107\n6,003\n63,882\n\n\ndim 9\n9\n0,101\n5,671\n69,553\n\n\ndim 10\n10\n0,095\n5,327\n74,880\n\n\ndim 11\n11\n0,093\n5,234\n80,115\n\n\ndim 12\n12\n0,086\n4,822\n84,937\n\n\ndim 13\n13\n0,077\n4,340\n89,277\n\n\ndim 14\n14\n0,071\n4,011\n93,288\n\n\ndim 15\n15\n0,064\n3,619\n96,906\n\n\ndim 16\n16\n0,055\n3,094\n100,000\n\n\n\n\n\n\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\nFigure 12.35: Graphiques pour les valeurs propres pour l’ACM\n\n\n\n\n12.4.1.2 Résultats de l’ACM pour les modalités des variables\nÀ titre de rappel, comme pour l’ACP et l’AFC, nous retrouvons les trois mêmes mesures pour les variables et les individus (coordonnées factorielles, contributions et cosinus carrés). Plus les variables qualitatives du jeu de données comprennent de modalités, plus la taille du tableau des résultats des modalités est importante et plus il est fastidieux de l’analyser. Il est donc recommandé de construire des histogrammes avec les coordonnées factorielles et les contributions des modalités, mais aussi un nuage de points avec les coordonnées des modalités des variables qualitatives sur le premier, voire le deuxième plan factoriel.\n\n\n\n\n\nCompréhension des axes factoriels de l’ACM : une étape essentielle, incontournable…\n\n\nComme en ACP et en AFC, l’analyse des trois mesures (coordonnées, contributions et cosinus carrés) pour les variables et les individus doit vous permettre de comprendre la signification des axes factoriels retenus de l’ACM. Prenez le temps de bien réaliser cette étape d’interprétation souvent plus fastidieuse qu’en ACP et ACM, en raison du nombre élevé de modalités. Cette étape est en effet essentielle afin de qualifier les variables latentes (axes factoriels, variables synthétiques) produites par l’ACM.\n\n\nLes résultats pour les variables sont reportés 1) au tableau 12.23, 2) aux figures 12.36, 12.37 et 12.39 pour les coordonnées et les contributions et à la 12.38 pour le premier plan factoriel.\nInterprétation des résultats de l’axe 1 pour les variables\nSept modalités concourent le plus à la formation de l’axe 1 résumant 13,9 % de la variance : Q9. 10 à 14 sortes (10,35 %), Q10. Oui (9,99 %), Q9. Moins de 5 sortes (9,71 %), Q5. Oui (9,19 %), Q11. Oui (8,20 %), Q4. Moins de 10% (7,87 %) et Q10. Non (7,10 %). Aussi, les modalités suivantes sont aux deux extrémités de cet axe :\n\n\nCoordonnées négatives : Q12. Non (-0,84), Q3. Moins de 1 an (-0,73), Q9. Moins de 5 sortes (-0,67), Q4. Moins de 10% (-0,56), Q10. Non (-0,521). Cela signifie que lorsque les coordonnées des individus sont fortement négatives sur cet axe, les personnes pratiquant l’agriculture urbaine :\n\n\nne pensent pas que l’agriculture urbaine contribue à améliorer les rapports entre les gens (Q12);\n\ncultivent des fruits, des fines herbes ou de légumes depuis moins d’un an (Q3);\n\ncultivent moins de cinq sortes de fruits, de fines herbes ou de légumes (Q9);\n\nmoins de 10 % de la proportion des fruits, des fines herbes et des légumes consommés durant l’été provient de leur propre production (Q4);\n\nne cultivent pas suffisamment pour partager avec d’autres personnes (Q10).\n\n\n\nCoordonnées positives : Q9. 15 sortes ou plus (1,36), Q9. 10 à 14 sortes (1,28), Q5. Oui (0,95) et Q11. Oui (0,85). Cela signifie que lorsque les coordonnées des individus sont fortement positives sur cet axe, les personnes pratiquant l’agriculture urbaine :\n\n\ncultivent plus de dix sortes de fruits, de fines herbes ou de légumes (Q9);\n\nutilisent du compost provenant de leurs déchets verts ou de leurs déchets alimentaires pour faire pousser des fruits, des fines herbes ou de légumes (Q5);\n\néchangent leurs semis ou leurs récoltes de fruits, de fines herbes ou des légumes avec d’autres personnes (Q11).\n\n\n\nEn résumé, l’axe 1 oppose clairement les néophytes en agriculture versus les personnes expérimentées cultivant des fruits et de légumes variés avec leur propre compost et échangeant leurs semis ou leurs récoltes.\n\n\n\n\nTableau 12.23: Résultats de l’ACM pour les modalités des variables\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCoordonnées\n\n\nCosinus carrés\n\n\nContributions (%)\n\n\n\nModalité\n1\n2\n3\n1\n2\n3\n1\n2\n3\n\n\n\n\nQ3. Moins de 1 an\n-0,73\n0,68\n0,63\n2,70\n3,68\n3,64\n0,07\n0,06\n0,05\n\n\nQ3. De 1 à 4 ans\n-0,29\n-0,79\n0,39\n1,26\n15,30\n4,30\n0,04\n0,33\n0,08\n\n\nQ3. De 5 à 9 ans\n0,12\n0,38\n-1,11\n0,12\n2,02\n19,43\n0,00\n0,04\n0,29\n\n\nQ3. 10 ans ou plus\n0,45\n0,35\n0,02\n3,19\n3,01\n0,02\n0,11\n0,07\n0,00\n\n\nQ4. Moins de 10%\n-0,56\n0,03\n0,07\n7,87\n0,04\n0,22\n0,40\n0,00\n0,01\n\n\nQ4. 10 à 25%\n0,74\n-0,76\n-0,11\n4,92\n8,22\n0,19\n0,14\n0,14\n0,00\n\n\nQ4. 26 à 50%\n0,78\n0,64\n0,15\n3,82\n4,18\n0,28\n0,10\n0,07\n0,00\n\n\nQ4. Plus de 50%\n0,53\n0,40\n-0,37\n1,31\n1,17\n1,19\n0,03\n0,02\n0,02\n\n\nQ5. Oui\n0,95\n0,56\n-0,13\n9,19\n5,01\n0,29\n0,27\n0,09\n0,00\n\n\nQ5. Non\n-0,28\n-0,16\n0,04\n2,70\n1,47\n0,09\n0,27\n0,09\n0,00\n\n\nQ8. Oui\n0,55\n0,37\n1,21\n2,58\n1,86\n23,31\n0,07\n0,03\n0,35\n\n\nQ8. Non\n-0,13\n-0,09\n-0,29\n0,62\n0,45\n5,60\n0,07\n0,03\n0,35\n\n\nQ9. Moins de 5 sortes\n-0,67\n0,01\n0,47\n9,71\n0,00\n8,83\n0,42\n0,00\n0,21\n\n\nQ9. 5 à 9 sortes\n0,24\n0,11\n-0,79\n0,89\n0,30\n17,31\n0,03\n0,01\n0,32\n\n\nQ9. 10 à 14 sortes\n1,28\n-0,97\n0,07\n10,35\n9,42\n0,06\n0,27\n0,15\n0,00\n\n\nQ9. 15 sortes ou plus\n1,36\n2,15\n0,65\n3,62\n14,42\n1,50\n0,08\n0,21\n0,02\n\n\nQ10. Oui\n0,73\n-0,15\n0,07\n9,99\n0,63\n0,18\n0,38\n0,02\n0,00\n\n\nQ10. Non\n-0,52\n0,10\n-0,05\n7,10\n0,45\n0,13\n0,38\n0,02\n0,00\n\n\nQ11. Oui\n0,85\n-0,83\n0,32\n8,20\n12,45\n2,11\n0,25\n0,23\n0,03\n\n\nQ11. Non\n-0,29\n0,28\n-0,11\n2,79\n4,24\n0,72\n0,25\n0,23\n0,03\n\n\nQ12. Oui\n0,16\n0,02\n0,01\n0,97\n0,02\n0,01\n0,11\n0,00\n0,00\n\n\nQ12. Non\n-0,84\n-0,38\n0,09\n4,12\n1,32\n0,08\n0,11\n0,02\n0,00\n\n\nQ12. NSP/NRP\n-0,36\n0,56\n-0,31\n0,36\n1,39\n0,48\n0,01\n0,02\n0,01\n\n\nQ13. Oui\n0,17\n0,31\n0,31\n0,70\n3,91\n4,37\n0,04\n0,13\n0,12\n\n\nQ13. Non\n-0,22\n-0,40\n-0,40\n0,91\n5,05\n5,66\n0,04\n0,13\n0,12\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 12.36: Graphiques pour les résultats des modalités de l’axe 1 de l’ACM\n\n\n\nInterprétation des résultats de l’axe 2 pour les variables\nQuatre modalités concourent le plus à la formation de l’axe 2 résumant 8,8 % de la variance : Q3. De 1 à 4 ans (15,30 %), Q9. 15 sortes ou plus (14,42 %), Q11. Oui (12,45 %) et Q9. 10 à 14 sortes (9,42 %). Les modalités suivantes sont présentes aux deux extrémités de l’axe 2 :\n\n\nCoordonnées négatives : Q9. 10 à 14 sortes (-0,97), Q11. Oui (-0,83), Q3. De 1 à 4 ans (-0,79), Q4. 10 à 25% (-0,76). Cela signifie que lorsque les coordonnées des individus sont fortement négatives sur cet axe, les personnes pratiquant l’agriculture urbaine :\n\n\ncultivent de 10 à 14 sortes de fruits, de fines herbes ou de légumes (Q9);\n\néchangent leurs semis ou leurs récoltes de fruits, de fines herbes ou de légumes avec d’autres personnes (Q11);\n\ncultivent des fruits, des fines herbes ou des légumes depuis 1 à 4 ans (Q3);\n\nde 10 à 25 % de la proportion des fruits, des fines herbes et des légumes consommés durant l’été provient de leur propre production (Q4).\n\n\n\nCoordonnées positives : seule la modalité Q9. 15 sortes ou plus (2,15) présente une forte coordonnée positive.\n\nEn résumé, l’axe 2 permet surtout d’identifier des personnes pratiquant l’agriculture urbaine depuis quelques années (de 1 à 4 ans), mais cultivant déjà de nombreuses sortes de fruits et légumes et partageant aussi leurs semis ou récoltes.\n\n\n\n\nFigure 12.37: Graphiques pour les résultats des modalités de l’axe 2 de l’ACM\n\n\n\n\n\n\n\nFigure 12.38: Premier plan factoriel de l’ACM pour les modalités\n\n\n\nInterprétation des résultats de l’axe 3 pour les variables\nTrois modalités concourent le plus à la formation de l’axe 3 résumant 7,6 % de la variance : Q8. Oui (23,31), Q3. De 5 à 9 ans (19,43) et Q9. 5 à 9 sortes (17,31). Les modalités suivantes sont présentes aux deux extrémités de l’axe 3 :\n\n\nCoordonnées négatives : Q3. De 5 à 9 ans (-1,11), Q9. 5 à 9 sortes (-0,79).\n\nCoordonnées positives : seule la modalité Q8. Oui présente une coordonnée fortement positive (1,21).\n\nPar conséquent, cet axe semble plus complexe à analyser et surtout moins intéressant que les deux premiers.\n\n\n\n\nFigure 12.39: Graphiques pour les résultats des modalités de l’axe 3 de l’ACM\n\n\n\nAnalyse des variables supplémentaires dans l’ACM\nIl est ensuite possible de projeter les modalités supplémentaires sur les axes de l’ACM retenus (tableau 12.24 et figure 12.40). Les faibles valeurs des coordonnées factorielles des modalités supplémentaires sur les deux axes semblent indiquer que le profil socioéconomique des personnes pratiquant l’agriculture urbaine ne semble pas (ou peu) relié aux profils identifiés par les axes factoriels.\n\n\n\n\nTableau 12.24: Résultats de l’ACM pour les modalités des variables supplémentaires\n\n\n\n\n\n\n\n\n\n\n\nCoordonnées\n\n\nCosinus carrés\n\n\n\nModalité\n1\n2\n1\n2\n\n\n\n\nQ15. 18 à 34 ans\n-0,09\n-0,27\n0,00\n0,04\n\n\nQ15. 35 à 49 ans\n-0,06\n-0,01\n0,00\n0,00\n\n\nQ15. 50 à 64 ans\n0,14\n0,25\n0,01\n0,02\n\n\nQ15. 65 ans et plus\n0,11\n0,25\n0,00\n0,01\n\n\nQ16. Travail temps plein\n-0,10\n-0,06\n0,01\n0,01\n\n\nQ16. Travail. temps partiel\n0,36\n-0,15\n0,01\n0,00\n\n\nQ16. Étudiant\n-0,14\n-0,11\n0,00\n0,00\n\n\nQ16. Retraité\n0,17\n0,25\n0,01\n0,02\n\n\nQ16. Sans emploi\n0,44\n-0,14\n0,01\n0,00\n\n\nQ16. À la maison\n-0,06\n0,18\n0,00\n0,00\n\n\nQ17. Aucun certificat ou dipl.\n0,28\n0,16\n0,00\n0,00\n\n\nQ17. Dipl. secondaires\n-0,09\n0,01\n0,00\n0,00\n\n\nQ17. Dipl. collégiales\n0,01\n0,19\n0,00\n0,01\n\n\nQ17. Études universitaires\n0,00\n-0,10\n0,00\n0,01\n\n\nQ21. Propriétaire\n0,03\n0,02\n0,00\n0,00\n\n\nQ22. Locataire\n-0,06\n-0,03\n0,00\n0,00\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 12.40: Premier plan factoriel de l’ACM avec toutes les modalités incluant celles supplémentaires\n\n\n\n\n\n\n\n\nVisualisation de variables qualitatives ordinales sur un plan factoriel\n\n\nLorsque les variables qualitatives sont ordinales et non nominales, il peut être intéressant de relier les différentes modalités avec une ligne. Cela permet de comprendre en un coup d’œil la trajectoire que suivent les modalités sur les deux axes factoriels. En guise d’exemple, nous réalisons cet exercice pour les variables Q3 et Q9 (figure 12.41).\n\n\n\n\nFigure 12.41: Trajectoires des variables ordinales sur le premier plan factoriel de l’ACM\n\n\n\n\n\n\n12.4.1.3 Résultats de l’ACM pour les individus\nComme toute méthode factorielle, les coordonnées factorielles, les cosinus carrés et les contributions sont aussi disponibles pour les individus en ACM. Nous proposons ici simplement de réaliser le premier plan factoriel pour les individus en attribuant un dégradé de couleurs avec les cosinus carrés (figure 12.42). Il est aussi possible d’attribuer des couleurs aux différentes modalités d’une variable. Par exemple, sur le premier plan factoriel, nous avons utilisé la variable Q12. Selon vous, l’agriculture urbaine contribue-t-elle à améliorer les rapports entre les gens?. Cela permet de repérer visuellement que les personnes ayant répondu négativement à cette question ont surtout des coordonnées négatives sur l’axe 1.\n\n\n\n\nFigure 12.42: Premier plan factoriel de l’ACM pour les individus\n\n\n\n\n\n\n\nFigure 12.43: Premier plan factoriel de l’ACM pour les individus avec coloration d’une variable\n\n\n\n\n12.4.2 Mise en œuvre dans R\n\n12.4.2.1 Calcul d’une ACM avec FactoMineR\n\nPlusieurs packages permettent de calculer une ACM dans R, notamment ExPosition (fonction epMCA), ade4 (fonction dudi.mca) et FactoMineR (fonction MCA). De nouveau, nous utilisons FactoMineR couplé au package factoextra pour réaliser rapidement des graphiques.\nPour calculer l’ACM, il suffit d’utiliser la fonction MCA de FactoMineR, puis la fonction summary(res.acm) qui renvoie les résultats de l’ACM pour :\n\nLes valeurs propres (section Eigenvalues) pour les axes factoriels (Dim.1 à Dim.n) avec leur variance expliquée brute (Variance), en pourcentage (% of var.) et en pourcentage cumulé (Cumulative % of var.).\nLes dix premières observations (section Individuals) avec les coordonnées factorielles (Dim.1 à Dim.n), les contributions (ctr) et les cosinus carrés (cos2). Pour accéder aux résultats pour toutes les observations, utilisez les fonctions res.acm$ind ou encore res.acm$ind$coord (uniquement les coordonnées factorielles), res.acm$ind$contrib (uniquement les contributions) et res.acm$ind$cos2 (uniquement les cosinus carrés).\nLes dix premières modalités des variables (section Categories) avec les coordonnées factorielles (Dim.1 à Dim.n), les contributions (ctr) et les cosinus carrés (cos2).\n\nLa syntaxe ci-dessous permet, dans un premier temps, de calculer l’ACM, puis de créer un DataFrame pour les résultats des valeurs propres.\n\nlibrary(FactoMineR)\n# Calcul de l'AFC\nres.acm &lt;-  MCA(dfACM,            # Nom du DataFrame\n                ncp = 3,          # Nombre d'axes retenus\n                quali.sup=10:13,  # Variables supplémentaires\n                graph = FALSE, \n                row.w = dfenquete$pond) # Variables pour la pondération des lignes\n# Affichage des résultats\nprint(res.acm)\n\n**Results of the Multiple Correspondence Analysis (MCA)**\nThe analysis was performed on 352 individuals, described by 13 variables\n*The results are available in the following objects:\n\n   name                description                                          \n1  \"$eig\"              \"eigenvalues\"                                        \n2  \"$var\"              \"results for the variables\"                          \n3  \"$var$coord\"        \"coord. of the categories\"                           \n4  \"$var$cos2\"         \"cos2 for the categories\"                            \n5  \"$var$contrib\"      \"contributions of the categories\"                    \n6  \"$var$v.test\"       \"v-test for the categories\"                          \n7  \"$var$eta2\"         \"coord. of variables\"                                \n8  \"$ind\"              \"results for the individuals\"                        \n9  \"$ind$coord\"        \"coord. for the individuals\"                         \n10 \"$ind$cos2\"         \"cos2 for the individuals\"                           \n11 \"$ind$contrib\"      \"contributions of the individuals\"                   \n12 \"$quali.sup\"        \"results for the supplementary categorical variables\"\n13 \"$quali.sup$coord\"  \"coord. for the supplementary categories\"            \n14 \"$quali.sup$cos2\"   \"cos2 for the supplementary categories\"              \n15 \"$quali.sup$v.test\" \"v-test for the supplementary categories\"            \n16 \"$call\"             \"intermediate results\"                               \n17 \"$call$marge.col\"   \"weights of columns\"                                 \n18 \"$call$marge.li\"    \"weights of rows\"                                    \n\nsummary(res.acm)\n\n\nCall:\nMCA(X = dfACM, ncp = 3, quali.sup = 10:13, graph = FALSE, row.w = dfenquete$pond) \n\n\nEigenvalues\n                       Dim.1   Dim.2   Dim.3   Dim.4   Dim.5   Dim.6   Dim.7\nVariance               0.248   0.156   0.135   0.127   0.126   0.123   0.114\n% of var.             13.940   8.792   7.620   7.161   7.065   6.916   6.385\nCumulative % of var.  13.940  22.732  30.352  37.513  44.579  51.494  57.879\n                       Dim.8   Dim.9  Dim.10  Dim.11  Dim.12  Dim.13  Dim.14\nVariance               0.107   0.101   0.095   0.093   0.086   0.077   0.071\n% of var.              6.003   5.671   5.327   5.234   4.822   4.340   4.011\nCumulative % of var.  63.882  69.553  74.880  80.115  84.937  89.277  93.288\n                      Dim.15  Dim.16\nVariance               0.064   0.055\n% of var.              3.619   3.094\nCumulative % of var.  96.906 100.000\n\nIndividuals (the 10 first)\n                               Dim.1    ctr   cos2    Dim.2    ctr   cos2  \n4                           |  0.261  0.063  0.052 |  0.327  0.155  0.081 |\n10                          | -0.533  0.688  0.278 |  0.050  0.010  0.002 |\n11                          |  0.135  0.020  0.014 | -0.120  0.025  0.011 |\n15                          |  0.020  0.000  0.000 |  0.271  0.073  0.061 |\n17                          | -0.133  0.014  0.012 | -0.264  0.088  0.049 |\n18                          |  0.196  0.024  0.018 |  0.279  0.078  0.037 |\n19                          | -0.193  0.041  0.014 | -0.063  0.007  0.002 |\n21                          |  0.845  0.731  0.369 | -0.337  0.184  0.059 |\n23                          | -0.253  0.155  0.058 | -0.020  0.002  0.000 |\n26                          |  0.802  0.552  0.170 |  0.460  0.288  0.056 |\n                             Dim.3    ctr   cos2  \n4                            0.251  0.105  0.048 |\n10                          -0.413  0.757  0.167 |\n11                          -0.354  0.252  0.097 |\n15                          -0.503  0.291  0.209 |\n17                           0.835  1.019  0.486 |\n18                           0.104  0.012  0.005 |\n19                           0.159  0.051  0.010 |\n21                          -0.390  0.285  0.079 |\n23                          -0.375  0.624  0.128 |\n26                           0.098  0.015  0.003 |\n\nCategories (the 10 first)\n                                Dim.1     ctr    cos2  v.test     Dim.2     ctr\nQ3. Moins de 1 an           |  -0.731   2.704   0.068  -4.940 |   0.677   3.681\nQ3. De 1 à 4 ans            |  -0.286   1.259   0.043  -3.921 |  -0.791  15.299\nQ3. De 5 à 9 ans            |   0.119   0.122   0.003   1.102 |   0.385   2.023\nQ3. 10 ans ou plus          |   0.450   3.189   0.110   6.271 |   0.347   3.006\nQ4. Moins de 10%            |  -0.562   7.874   0.395 -11.913 |   0.033   0.044\nQ4. 10 à 25%                |   0.745   4.918   0.137   7.006 |  -0.765   8.220\nQ4. 26 à 50%                |   0.775   3.815   0.099   5.966 |   0.644   4.176\nQ4. Plus de 50%             |   0.527   1.310   0.033   3.424 |   0.395   1.167\nQ5. Oui                     |   0.950   9.194   0.265   9.760 |   0.557   5.008\nQ5. Non                     |  -0.279   2.701   0.265  -9.760 |  -0.164   1.471\n                               cos2  v.test     Dim.3     ctr    cos2  v.test  \nQ3. Moins de 1 an             0.058   4.578 |   0.627   3.636   0.050   4.236 |\nQ3. De 1 à 4 ans              0.328 -10.855 |   0.390   4.304   0.080   5.360 |\nQ3. De 5 à 9 ans              0.035   3.556 |  -1.110  19.427   0.293 -10.261 |\nQ3. 10 ans ou plus            0.065   4.835 |   0.023   0.016   0.000   0.327 |\nQ4. Moins de 10%              0.001   0.704 |   0.070   0.221   0.006   1.477 |\nQ4. 10 à 25%                  0.144  -7.194 |  -0.109   0.191   0.003  -1.021 |\nQ4. 26 à 50%                  0.068   4.957 |   0.154   0.276   0.004   1.187 |\nQ4. Plus de 50%               0.018   2.566 |  -0.372   1.195   0.016  -2.417 |\nQ5. Oui                       0.091   5.720 |  -0.126   0.294   0.005  -1.290 |\nQ5. Non                       0.091  -5.720 |   0.037   0.086   0.005   1.290 |\n\nCategorical variables (eta2)\n                              Dim.1 Dim.2 Dim.3  \nq3                          | 0.162 0.338 0.334 |\nq4                          | 0.400 0.191 0.023 |\nq5                          | 0.265 0.091 0.005 |\nq8                          | 0.071 0.032 0.352 |\nq9                          | 0.548 0.340 0.338 |\nq10                         | 0.381 0.015 0.004 |\nq11                         | 0.245 0.235 0.034 |\nq12                         | 0.121 0.038 0.007 |\nq13                         | 0.036 0.126 0.122 |\n\nSupplementary categories (the 10 first)\n                               Dim.1   cos2 v.test    Dim.2   cos2 v.test  \nQ15. 18 à 34 ans            | -0.091  0.004 -1.221 | -0.271  0.037 -3.630 |\nQ15. 35 à 49 ans            | -0.060  0.001 -0.731 | -0.014  0.000 -0.175 |\nQ15. 50 à 64 ans            |  0.140  0.006  1.419 |  0.251  0.018  2.543 |\nQ15. 65 ans et plus         |  0.107  0.002  0.874 |  0.248  0.011  2.020 |\nQ16. Travail temps plein    | -0.096  0.012 -2.084 | -0.065  0.005 -1.404 |\nQ16. Travail. temps partiel |  0.364  0.010  1.875 | -0.147  0.002 -0.757 |\nQ16. Étudiant               | -0.139  0.002 -0.774 | -0.111  0.001 -0.617 |\nQ16. Retraité               |  0.166  0.006  1.521 |  0.254  0.015  2.331 |\nQ16. Sans emploi            |  0.440  0.006  1.433 | -0.142  0.001 -0.464 |\nQ16. À la maison            | -0.056  0.000 -0.279 |  0.175  0.002  0.878 |\n                             Dim.3   cos2 v.test  \nQ15. 18 à 34 ans             0.092  0.004  1.232 |\nQ15. 35 à 49 ans            -0.112  0.005 -1.360 |\nQ15. 50 à 64 ans            -0.002  0.000 -0.020 |\nQ15. 65 ans et plus          0.015  0.000  0.122 |\nQ16. Travail temps plein    -0.025  0.001 -0.540 |\nQ16. Travail. temps partiel  0.291  0.006  1.497 |\nQ16. Étudiant               -0.088  0.001 -0.488 |\nQ16. Retraité                0.031  0.000  0.284 |\nQ16. Sans emploi            -0.495  0.007 -1.611 |\nQ16. À la maison             0.144  0.001  0.720 |\n\nSupplementary categorical variables (eta2)\n                              Dim.1 Dim.2 Dim.3  \nq15                         | 0.010 0.048 0.007 |\nq16                         | 0.027 0.020 0.015 |\nq17                         | 0.006 0.014 0.014 |\nq21                         | 0.002 0.001 0.007 |\n\n# Construction d'un DataFrame pour les valeurs propres\ndfACMvp &lt;- data.frame(res.acm$eig)\nnames(dfACMvp) &lt;- c(\"VP\" , \"VP_pct\" , \"VP_pctCumul\")\ndfACMvp$Axe &lt;- factor(1:nrow(dfACMvp), levels = rev(1:nrow(dfACMvp)))\ndfACMvp &lt;- dfACMvp[, c(4,1:3)]\n\n\n12.4.2.2 Exploration graphique des résultats de l’ACM pour les valeurs propres\nPour créer un histogramme des valeurs propres de l’ACM, vous pouvez utiliser la fonction fviz_screeplot de factoextra.\n\nlibrary(factoextra)\nlibrary(ggplot2)\n\nfviz_screeplot(res.acm, addlabels = TRUE,\n               x = \"Composantes\", y = \"Valeur propre\", title = \"\")\n\n\n\nFigure 12.44: Graphique pour les valeurs propres de l’ACM avec factoextra\n\n\n\nAvec un peu plus de lignes de code, il est relativement facile d’exploiter le DataFrame des valeurs propres créé précédemment (dfACMvp) pour construire des graphiques plus personnalisés.\n\nlibrary(factoextra)\nlibrary(ggplot2)\n\ncouleursAxes &lt;- c(\"steelblue\" , \"skyblue2\")\ng1 &lt;- ggplot(dfACMvp, aes(x = VP, y = Axe))+\n  geom_bar(stat = \"identity\", width = .6, alpha = .8, color = \"black\", fill = \"skyblue2\")+\n  labs(x = \"Valeur propre\", y = \"Axe factoriel\")\ng2 &lt;- ggplot(dfACMvp, aes(x = VP_pct, y = Axe))+\n  geom_bar(stat = \"identity\", width = .6, alpha = .8, color = \"black\", fill = \"skyblue2\")+\n  theme(legend.position = \"none\")+\n  labs(x = \"Variance expliquée (%)\", y = \"Axe factoriel\")\ng3 &lt;- ggplot(dfACMvp, aes(x = VP_pctCumul, y = Axe, group=1))+\n  geom_bar(stat = \"identity\", width = .6, alpha = .8, color = \"black\", fill = \"skyblue2\")+\n  geom_line(colour = \"brown\", linetype = \"solid\", size=.8) +\n  geom_point(size=3, shape=21, color = \"brown\", fill = \"brown\")+\n  theme(legend.position = \"none\")+\n  labs(x = \"Variance expliquée (% cumulé)\", y = \"Axe factoriel\")\nggarrange(g2, g3,  nrow = 2)\n\n\n\nFigure 12.45: Graphiques pour les valeurs propres de l’ACM avec factoextra\n\n\n\nLa syntaxe ci-dessous permet de construire un tableau avec les coordonnées factorielles, les cosinus carrés et les contributions pour les modalités des variables qualitatives.\n\nlibrary(stringr)\nnAxes &lt;- 3\ndfmodalites &lt;- data.frame(Modalite =rownames(res.acm$var$coord),\n                           Coord = round(res.acm$var$coord[, 1:nAxes],3),\n                           Cos2 = round(res.acm$var$cos2[, 1:nAxes],3),\n                           ctr = round(res.acm$var$contrib[, 1:nAxes],3))\nrownames(dfmodalites) &lt;- 1:nrow(dfmodalites)\nnames(dfmodalites) &lt;- str_replace(names(dfmodalites), \".Dim.\", \"F\")\n\n\n12.4.2.3 Exploration graphique des résultats de l’ACM pour les modalités\nAvant d’explorer graphiquement les résultats pour les modalités, il est judicieux de construire un DataFrame avec les coordonnées factorielles, les contributions et les cosinus carrés des modalités (voir la syntaxe ci-dessous).\n\nlibrary(kableExtra)\nlibrary(stringr)\nnAxes &lt;- 3\ndfmodalites &lt;- data.frame(Modalite =rownames(res.acm$var$coord),\n                           Coord = round(res.acm$var$coord[, 1:nAxes],2),\n                           ctr = round(res.acm$var$contrib[, 1:nAxes],2),\n                           Cos2 = round(res.acm$var$cos2[, 1:nAxes],2))\nrownames(dfmodalites) &lt;- 1:nrow(dfmodalites)\nnames(dfmodalites) &lt;- str_replace(names(dfmodalites), \".Dim.\", \"F\")\n\nPlusieurs fonctions très faciles à utiliser de factoextra permettent de construire rapidement des graphiques : fviz_mca_var pour un nuage de points d’un plan factoriel, fviz_cos2 et fviz_contrib (en utilisant le paramètre choice=var.cat) pour des histogrammes avec les cosinus carrés et les contributions des modalités.\nIl est aussi possible de créer vos propres graphiques avec ggplot2 en utilisant le DataFrame créé précédemment avec les modalités. Par exemple, la syntaxe ci-dessous renvoie deux histogrammes pour l’axe 1 : l’un avec les coordonnées, l’autre avec les contributions. Dans la syntaxe, repérez le terme CoordF1. Dupliquez la syntaxe et changez ce terme pour CoordF2 et CoordF3 pour réaliser les graphiques des axes 2 et 3.\n\n# Histogrammes pour les coordonnées des modalités\ncouleursCoords &lt;- c(\"lightsalmon\" , \"steelblue\")\nplotCoordF1 &lt;- ggplot(dfmodalites,\n                      aes(y = reorder(Modalite, CoordF1),\n                          x = CoordF1, fill = CoordF1&lt;0))+\n  geom_bar(stat = \"identity\", width = .6, alpha = .8, color = \"black\")+\n  geom_vline(xintercept = 0, color = \"black\", linewidth = 1)+\n  scale_fill_manual(name = \"Coordonnée\" , values = couleursCoords,\n                    labels = c(\"Positive\" , \"Négative\"))+\n  labs(x = \"Coordonnées sur l'axe 1\", y = \"Modalité\")+\n  theme(legend.position = \"none\", axis.text.y = element_text(size = 7))\n\nplotCtrF1 &lt;- ggplot(dfmodalites, aes(y = reorder(Modalite, ctrF1), x = ctrF1))+\n  geom_bar(stat = \"identity\", width = .6, alpha = .8, color = \"black\", fill = \"steelblue\")+\n  labs(x = \"Contributions sur l'axe 1\", y = \"Modalité\")+\n  theme(legend.position = \"none\", axis.text.y = element_text(size = 7))\n\nggarrange(plotCoordF1, plotCtrF1, ncol = 1, nrow = 2)\n\n\n\nFigure 12.46: Exemple de graphiques pour les résultats des modalités\n\n\n\nLa syntaxe suivante permet de construire le premier plan factoriel pour les modalités avec la fonction fviz_mca_var de factoextra (figure 12.47).\n\nres.acm2 &lt;-  MCA(dfACM[1:9], ncp = 3, graph = FALSE, row.w = dfenquete$pond)\nfviz_mca_var(res.acm2, repel = TRUE,\n             choice = \"var.cat\",\n             axes = c(1, 2),\n             # col.var = \"black\",\n             title = \"\", xlab = \"Axe 1\", ylab = \"Axe 2\",\n             ggtheme = theme_minimal ())\n\n\n\nFigure 12.47: Premier plan factoriel de l’ACM pour les modalités\n\n\n\nLa syntaxe suivante permet de construire le premier plan factoriel pour les modalités supplémentaires avec la fonction fviz_mca_var de factoextra (figure 12.48).\n\nfviz_mca_var(res.acm, repel = TRUE,\n             choice = \"var.cat\",\n             axes = c(1, 2),\n             col.var = \"gray23\",\n             col.quali.sup = \"darkred\",\n             labelsize = 3,\n             title = \"\", xlab = \"Axe 1\", ylab = \"Axe 2\", \n             ggtheme = theme_minimal ())\n\n\n\nFigure 12.48: Premier plan factoriel de l’ACM pour les modalités supplémentaires\n\n\n\nFinalement, la syntaxe ci-dessous renvoie un graphique avec la trajectoire de la variable Q3 (figure 12.49).\n\nlibrary(ggpubr)\nQ3 &lt;- dfmodalites[1:4, 1:3]\nggplot(Q3, aes(x = CoordF1, y = CoordF2, label=Modalite))+\n  xlim(-1, .75)+ylim(-1, 1)+\n  labs(title = \"Q3. Depuis combien de temps cultivez-vous \\n\n        des fruits, des fines herbes ou des légumes?\",\n       x = \"Axe 1\", y = \"Axe 2\")+\n  geom_label(nudge_x=0, nudge_y = 0.07) +\n  geom_line( color = \"black\", linewidth = .2)+\n  geom_point(shape=21, color = \"black\", fill = \"steelblue\", size=4)\n\n\n\nFigure 12.49: Trajectoires des variables ordinales sur le premier plan factoriel de l’ACM\n\n\n\n\n12.4.2.4 Exploration graphique des résultats de l’ACM pour les individus\nD’autres fonctions de factoextra produisent rapidement des graphiques pour les individus :\n\n\nfviz_cos2 et fviz_contrib (en utilisant le paramètre choice=ind) pour construire des histogrammes pour les cosinus carrés et les contributions des individus.\n\nfviz_mca_ind pour un nuage de points d’un plan factoriel (axes 1 et 2 habituellement).\n\nLa syntaxe ci-dessous produit le premier axe factoriel pour les individus (figure 12.50).\n\nfviz_mca_ind(res.acm, col.ind = \"cos2\",\n             gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"),\n             repel = TRUE,\n             xlab = \"Axe 1\", ylab = \"Axe 2\", title = \"\",\n             ggtheme = theme_minimal())\n\n\n\nFigure 12.50: Premier plan factoriel de l’ACM pour les individus avec factoextra\n\n\n\nLa syntaxe ci-dessous produit aussi le premier plan factoriel pour les individus, mais en attribuant une couleur différente aux modalités de la variable q12 (figure 12.51).\n\nfviz_mca_ind (res.acm,\n              label = \"none\",\n              habillage = \"q12\", # colorer par groupes\n             xlab = \"Axe 1\", ylab = \"Axe 2\", title = \"\",\n              palette = c (\"darkred\", \"steelblue\", \"gray23\"),\n              ggtheme = theme_minimal ())\n\n\n\nFigure 12.51: Premier plan factoriel de l’ACM pour les individus avec coloration d’une variable avec factoextra"
  },
  {
    "objectID": "12-AnalysesFactorielles.html#sec-125",
    "href": "12-AnalysesFactorielles.html#sec-125",
    "title": "12  Méthodes factorielles",
    "section": "\n12.5 Quiz de révision du chapitre",
    "text": "12.5 Quiz de révision du chapitre\n\n\n\n\n\nDes variables latentes ne sont pas directement observées, mais plutôt produites par la méthode factorielle afin de résumer les relations/associations entre plusieurs variables mesurées initialement.\n\n\nRelisez au besoin l’introduction du chapitre 12.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\n\nQuelles sont les métriques utilisées pour les trois principales méthodes factorielles?\n\n\nRelisez au besoin la section 12.1.1.\n\n\n\n\n\n\nACP (distance euclidienne), AFC (distance du khi-deux), ACM (distance du khi-deux)\n\n\n\n\n\n\n\nACP (distance du khi-deux), AFC (distance du khi-deux), ACM (distance euclidienne)\n\n\n\n\n\n\n\nACP (distance euclidienne), AFC (distance euclidienne), ACM (distance du khi-deux)\n\n\n\n\n\n\n\n\n\n\nEn ACP normée, la somme des valeurs propres (inertie totale) est égale au :\n\n\nRelisez au besoin le début de la section 12.2.2.1.\n\n\n\n\n\n\nnombre de variables quantitatives du tableau initial\n\n\n\n\n\n\n\nnombre d’observations moins le nombre de variables\n\n\n\n\n\n\n\n\n\n\nEn ACP normée, la coordonnée factorielle d’une variable sur un axe est :\n\n\nRelisez au besoin la section 12.2.2.2.\n\n\n\n\n\n\nle covariance de la variable avec la composante principale (axe factoriel)\n\n\n\n\n\n\n\nle coefficient de corrélation de la variable avec la composante principale (axe factoriel)\n\n\n\n\n\n\n\nla variance de la variable\n\n\n\n\n\n\n\n\n\n\nQuelles affirmations sont exactes pour toutes les méthodes factorielles?\n\n\nRelisez au besoin chacune des sections intitulées aides à l’interprétation pour les trois méthodes factorielles.\n\n\n\n\n\n\nLa somme des cosinus carrés en ligne est toujours égale à 1\n\n\n\n\n\n\n\nLa somme des valeurs propres est toujours égale à l’inertie totale du tableau\n\n\n\n\n\n\n\nLa somme des contributions en colonne pour un axe est égale à 100 %\n\n\n\n\n\n\n\nLes coordonnées factorielles sont toujours le coefficient de corrélation de la variable avec l’axe\n\n\n\n\n\n\n\n\n\n\nL’analyse des correspondances multiples (ACM) est simplement une analyse des correspondances (AFC) sur un tableau disjonctif complet?\n\n\nRelisez au besoin la section 12.4.\n\n\n\n\n\n\nVrai\n\n\n\n\n\n\n\nFaux\n\n\n\n\n\n\n\n\n\n\nDans une ACM, les variables du tableau disjonctif complet sont :\n\n\nRelisez au besoin la section 12.4.\n\n\n\n\n\n\nles fréquences des modalités des variables qualitatives\n\n\n\n\n\n\n\nles modalités des variables qualitatives transformées en variables binaires\n\n\n\n\n\n\n\n\n\n\nQuelles sont les étapes essentielles pour bien interpréter une analyse factorielle (ACP, AFC ou ACM)?\n\n\nRelisez le deuxième encadré à la section 12.2.1.\n\n\n\n\n\n\nInterprétation des résultats des valeurs propres pour identifier le nombre d’axes à retenir\n\n\n\n\n\n\n\nAnalyse des résultats pour les variables (coordonnées, cosinus carrés et contributions)\n\n\n\n\n\n\n\nAnalyse des résultats pour les individus (coordonnées, cosinus carrés et contributions)\n\n\n\n\n\n\n\nDénommer, qualifier chacun des axes suite à l’analyse des résultats pour les variables et les individus\n\n\n\n\n\n\n\n\n\nVérifier votre résultat\n\n\n\n\n\n\n\n\n\nAudate, Pierre Paul, Geneviève Cloutier et Alexandre Lebel. 2021. « The motivations of urban agriculture practitioners in deprived neighborhoods: A comparative study of Montreal and Quito. » Urban Forestry & Urban Greening 62: 127171. https://doi.org/10.1016/j.ufug.2021.127171.\n\n\nBendixen, Mike T. 1995. « Compositional perceptual mapping using chi-squared trees analysis and correspondence analysis. » Journal of Marketing Management 11 (6): 571‑581. https://doi.org/10.1080/0267257X.1995.9964368.\n\n\nBenzécri, Jean-Paul. 1973. L’analyse des données. Tome 1. La taxinomie. Tome 2. L’analyse des correspondances. Vol. 2. Dunod.\n\n\nBhatt, Vikram et Leila Marie Farah. 2016. « Cultivating Montreal: A Brief History of Citizens and Institutions Integrating Urban Agriculture in the City. » Urban Agriculture & Regional Food Systems 1 (1): 1‑12. http://dx.doi.org/10.2134/urbanag2015.01.1511.\n\n\nEscofier, Brigitte. 1979. « Traitement simultané de variables qualitatives et quantitatives en analyse factorielle. » Cahiers de l’Analyse des Données 4 (2): 137‑146.\n\n\nEscofier, Brigitte et Jérôme Pagès. 1998. « Analyses factorielles simples et multiples. » Dunod, Paris.\n\n\nGelb, Jérémy et Philippe Apparicio. 2021. « Apport de la classification floue c-means spatiale en géographie: essai de taxinomie socio-résidentielle et environnementale à Lyon. » Cybergeo: European Journal of Geography. https://doi.org/10.4000/cybergeo.36414.\n\n\nHotelling, Harold. 1933. « Analysis of a complex of statistical variables into principal components. » Journal of educational psychology 24 (6): 417. https://psycnet.apa.org/doi/10.1037/h0071325.\n\n\nHubert, Mia, Peter J Rousseeuw et Karlien Vanden Branden. 2005. « ROBPCA: a new approach to robust principal component analysis. » Technometrics 47 (1): 64‑79. https://doi.org/10.1198/004017004000000563.\n\n\nKaiser, Henry F. 1960. « The application of electronic computers to factor analysis. » Educational and psychological measurement 20 (1): 141‑151. https://doi.org/10.1177%2F001316446002000116.\n\n\nLê, Sébastien, Julie Josse et François Husson. 2008. « FactoMineR: A Package for Multivariate Analysis. » Journal of Statistical Software 25 (1): 1‑18. 10.18637/jss.v025.i01.\n\n\nLebart, Ludovic, Alain Morineau et Marie Piron. 1995. Statistique exploratoire multidimensionnelle. Dunod.\n\n\nMcClintock, Nathan. 2018. « Urban agriculture, racial capitalism, and resistance in the settler-colonial city. » Geography Compass 12 (6): 1‑16. https://doi.org/10.1111/gec3.12373.\n\n\nPagès, Jérôme. 2002. « Analyse factorielle multiple appliquée aux variables qualitatives et aux données mixtes. » Revue de statistique appliquée 50 (4): 5‑37.\n\n\n———. 2013. Analyse factorielle multiple avec R. EDP sciences.\n\n\nRivest, Louis-Paul et Nathalie Plante. 1988. « L’analyse en composantes principales robuste. » Revue de statistique appliquée 36 (1): 55‑66. http://www.numdam.org/article/RSA_1988__36_1_55_0.pdf.\n\n\nSanders, Lena. 1989. L’analyse statistique des données en géographie. GIP Reclus."
  },
  {
    "objectID": "13-MethodeClassification.html#sec-131",
    "href": "13-MethodeClassification.html#sec-131",
    "title": "13  Méthodes de classification non supervisée",
    "section": "\n13.1 Méthodes de classification : un aperçu",
    "text": "13.1 Méthodes de classification : un aperçu\nIl existe une multitude de méthodes de classification généralement regroupées dans plusieurs familles imbriquées à partir de deux distinctions importantes.\nLa première distinction vise à séparer les méthodes supervisées des non supervisées. Pour les premières, les catégories/groupes/classes des observations sont connues à l’avance. L’enjeu n’est pas de trouver les catégories puisqu’elles sont connues, mais de déterminer des règles ou un modèle permettant d’attribuer des observations à ces catégories. Parmi les méthodes de classification supervisée, les plus connues sont les forêts d’arbres décisionnels, les réseaux de neurones artificiels ou encore l’analyse factorielle discriminante. Nous n’abordons pas ces méthodes dans ce chapitre dédié uniquement aux méthodes de classification non supervisée. Pour ces dernières, les catégories ne sont pas connues à l’avance et l’enjeu est de faire ressortir les structures des groupes propres aux données. Ainsi, les méthodes de classification non supervisée « relèvent de la statistique exploratoire multidimensionnelle et permettent de classifier automatiquement les observations sans connaissance a priori sur la nature des classes présentes dans le jeu de données; les plus connues sont sans conteste les algorithmes de classification ascendante hiérarchique (CAH) et du k-means (k-moyennes) » (Gelb et Apparicio 2021, 1). Notez également qu’à la frontière entre ces deux familles, se situent les méthodes de classification semi-supervisée. Il s’agit de cas spécifiques où des informations partielles sont connues sur les groupes à détecter : seulement le groupe final de certaines observations est connu, certaines observations sont supposées appartenir à un même groupe même s’il est indéfini en lui-même (Bair 2013).\nLa seconde distinction vise à séparer les méthodes strictes des floues. Les premières ont pour objectif d’assigner chaque observation à une et une seule catégorie, alors que les secondes décrivent le degré d’appartenance de chaque observation à chaque catégorie. Autrement dit, « dans une classification stricte, chaque observation appartient à une seule classe. Mathématiquement parlant, l’appartenance à une classe donnée est binaire (0 ou 1) tandis que dans une classification floue, chaque observation a une probabilité d’appartenance variant de 0 à 1 à chacune des classes » (Gelb et Apparicio 2021, 1). Bien entendu, pour chaque observation, la somme des degrés d’appartenance à chacune des classes est égale à 1 (figure 13.2). En termes de données, cela signifie que pour les méthodes strictes, le groupe d’appartenance d’une observation est contenu dans une seule variable nominale (une colonne d’un DataFrame). Pour les méthodes floues, il est nécessaire de disposer d’autant de variables continues (plusieurs colonnes numériques d’un DataFrame), soit une par groupe, dans lesquelles sont enregistrées le degré d’appartenance de chaque observation à chacun des groupes. Parmi les méthodes de classification supervisée floue, notez que nous avons déjà abordé la régression logistique multinomiale dans le chapitre sur les GLM (section 8.2.4).\n\n\nFigure 13.2: Classifications stricte et floue\n\nEn résumé, le croisement de ces deux distinctions permet ainsi de différencier les méthodes supervisées strictes, supervisées floues, non supervisées strictes et non supervisées floues (figure 13.3), auxquelles s’ajoutent les méthodes semi-supervisées discutées brièvement.\n\n\nFigure 13.3: Synthèse des principales méthodes de classification (Gelb et Apparicio 2021)\n\nDans ce chapitre, nous décrivons les trois méthodes de classification non supervisée les plus utilisées et faciles à mettre en œuvre : la classification ascendante hiérarchique, les nuées dynamiques strictes (k-means et k-medians) et nuées dynamiques floues (c-means et c-medians)."
  },
  {
    "objectID": "13-MethodeClassification.html#sec-132",
    "href": "13-MethodeClassification.html#sec-132",
    "title": "13  Méthodes de classification non supervisée",
    "section": "\n13.2 Notions essentielles en classification",
    "text": "13.2 Notions essentielles en classification\nAvant de décrire différentes méthodes de classification non supervisées, il convient de définir deux notions centrales, soit la distance et l’inertie.\n\n13.2.1 Distance\nLa distance en analyse de données est définie comme une fonction (d) permettant de déterminer à quel point deux observations sont semblables ou différentes l’une de l’autre. Elle doit respecter les conditions suivantes :\n\nla non-négativité : la distance minimale entre deux objets est égale à 0; \\(d(x,y) \\geq 0\\).\nle principe d’identité des indiscernables : la distance entre deux objets \\(x\\) et \\(y\\) est égale à 0, si \\(x = y\\); \\(d(x,y)=0\\text{ si et seulement si }x=y\\).\nla symétrie : la distance entre \\(x\\) et \\(y\\) est la même qu’entre \\(y\\) et \\(x\\); \\(d(x,y) = d(y,x)\\).\nle triangle d’inégalité : passer d’un point \\(x\\) à un point \\(z\\) est toujours plus court ou égal que de passer par \\(y\\) entre \\(x\\) et \\(z\\); \\(d(x,z)\\leq d(x,y)+d(y,z)\\).\n\nIl existe un grand nombre de types de distance qui peuvent être utilisés pour déterminer le degré de similarité entre les observations. Nous présentons ici les six types les plus fréquemment utilisés en sciences sociales, mais retenez qu’il en existe bien d’autres.\n\n13.2.1.1 Distance euclidienne\nIl s’agit vraisemblablement de la distance la plus couramment utilisée, soit la longueur de la ligne droite la plus courte entre les deux objets considérés. Pour la représenter, admettons que nous nous intéressons à trois classes d’étudiants et d’étudiantes A, B et C pour lesquelles nous avons calculé la moyenne de leurs notes dans les cours de méthodes quantitatives et qualitatives. Ces deux variables sont mesurées dans la même unité et varient de 0 à 100. Le nuage de points à la figure 13.4 illustre cette situation avec des données fictives.\n\n\n\n\nFigure 13.4: Situation de base pour le calcul de distance\n\n\n\nLes distances euclidiennes entre les classes B et C et les classes C et A sont représentées par les lignes noires à la figure 13.5. Nous pouvons constater que la distance entre les classes C et B est plus petite que celle entre les classes A et C, ce qui signale que les deux premières se ressemblent davantage.\n\n\n\n\nFigure 13.5: Représentation de la distance euclidienne\n\n\n\nLa formule de la distance euclidienne (équation 13.1) est simplement la racine carrée de la somme des écarts au carré pour chacune des variables décrivant les observations a et b.\n\\[\nd(a,b) = \\sqrt{\\sum{}^v_{i=1}(a_i-b_i)^2}\n\\tag{13.1}\\]\navec v le nombre de variables décrivant les observations a et b.\nNous pouvons facilement calculer la distance euclidienne pour notre jeu de données :\n\n\\(d(A,B)=\\sqrt{(\\mbox{85}-\\mbox{80})^2+(\\mbox{80}-\\mbox{77})^2} = \\mbox{5,83}\\)\n\\(d(B, c)=\\sqrt{(\\mbox{80}-\\mbox{83})^2+(\\mbox{79}-\\mbox{77})^2} = \\mbox{3,60}\\)\n\n\n\n\n\n\nDistance et unité de mesure \n\n\nIl est très important de garder à l’esprit que la distance entre deux observations dépend directement des unités de mesure utilisées. Cela est très souvent problématique, car il est rare que toutes les variables utilisées pour décrire des observations soient mesurées dans la même unité. Ainsi, une variable dont les valeurs numériques sont plus grandes risque de déséquilibrer les calculs de distance. À titre d’exemple, une variable mesurée en mètres plutôt qu’en kilomètres produit des distances euclidiennes 1000 fois plus grandes.\nIl est donc nécessaire de standardiser les variables utilisées avant de calculer des distances. Cette opération permet de transformer les variables originales vers une échelle commune. Plusieurs types de transformations peuvent être utilisés tels que décrits à la section 2.5.5.2 :\n\nLe centrage et la réduction qui consistent à soustraire de chaque valeur sa moyenne, puis à la diviser par son écart-type. La nouvelle variable obtenue s’exprime alors en écart-type (appelé aussi score-z). La formule de la transformation est \\(f(x) = \\frac{x - \\bar{x}}{\\sigma_x}\\), avec \\(\\bar{x}\\) la moyenne de \\(x\\) et \\(\\sigma_x\\) l’écart-type de \\(x\\).\nLa transformation sur une mise à l’échelle de 0 à 1 qui permet de modifier l’étendue d’une variable afin que sa valeur maximale soit de 1 et sa valeur minimale soit de 0. La formule de cette transformation est \\(f(x) = \\frac{x-min(x)}{max(x)-min(x)}\\).\nLa transformation en rang qui consiste à remplacer les valeurs d’une variable par leur rang. La valeur la plus faible est remplacée par 1, et la plus forte par n (nombre d’observations). Notez que cette transformation modifie la distribution de la variable originale contrairement aux deux transformations précédentes. Cette propriété peut être désirable si les écarts absolus entre les valeurs ont peu d’importance, si la variable n’a pas été mesurée avec précision ou encore si des valeurs extrêmes sont présentes.\nLa transformation en percentile qui consiste à remplacer les valeurs d’une variable par leur percentile correspondant. Elle peut être vue comme une standardisation de la transformation en rang, car elle ne dépend pas du nombre d’observations.\n\nLa figure 13.6 montre l’effet de ces transformations sur l’histogramme d’une variable.\n\n\n\n\nFigure 13.6: Effets de différentes transformations sur la distribution d’une variable\n\n\n\n\n\n\n13.2.1.2 Distance de Manhattan\nCette seconde distance est également couramment utilisée. Elle doit son nom au réseau de rue de l’île de Manhattan qui suit un plan quadrillé. La distance de Manhattan correspond à la somme des écarts absolus entre les valeurs des différentes variables décrivant les observations (équation 13.2). La figure 13.7 illustre que la distance Manhattan (lignes noires) représente les deux côtés opposés de l’hypoténuse d’un triangle rectangle; l’hypoténuse représentant quant à elle la distance euclidienne.\n\\[\nd(a,b) = \\sum{}^v_{i=1}(|a_i-b_i|)\n\\tag{13.2}\\]\n\n\n\n\nFigure 13.7: Représentation de la distance de Manhattan\n\n\n\nLa distance de Manhattan doit être privilégiée à la distance euclidienne lorsque les données considérées ont un très grand nombre de dimensions (variables). En effet, lorsque le nombre de variables est important (supérieur à 30), la distance euclidienne tend à être grande pour toutes les paires d’observations et à moins bien discriminer les observations proches et lointaines les unes des autres. Du fait de sa nature additive, la distance de Manhattan est moins sujette à ce problème (Aggarwal, Hinneburg et Keim 2001).\nCalculons la distance de Manhattan pour nos deux paires d’observations :\n\n\\(d(A,B)=|85-80|+|80-77| = 8\\)\n\\(d(B, c)=|80-83|+|79-77| = 5\\)\n\n13.2.1.3 Distance du khi-deux\nLa distance du khi-deux est basée sur le test du khi-deux (chapitre 5) et est généralement utilisée pour calculer la distance entre deux histogrammes, deux images ou deux ensembles de mots. Plus précisément, elle permet de mesure la distance entre deux observations A et B, pour lesquelles nous disposons d’un ensemble de variables étant toutes des variables de comptage.\nPrenons un exemple concret en générant trois histogrammes A, B et C sur l’intervalle [0,50] à partir des distributions normale, log-normale et Gamma, puis comptons le nombre de valeurs de chaque unité (1, 2, 3, 4, etc.). Ces histogrammes sont représentés à la figure 13.8.\n\n\n\n\nFigure 13.8: Trois histogrammes pour illustrer le calcul de la distance du khi-deux\n\n\n\nNous pouvons calculer les distances du khi-deux entre les paires d’histogrammes (tableau 13.1). Nous constatons ainsi que les histogrammes B et C sont les plus semblables.\n\n\n\n\nTableau 13.1: Distance du khi-deux entre trois histogrammes\n\nHistogrammes\nDistance du khi-deux\n\n\n\nA-B\n284,8375\n\n\nA-C\n376,7862\n\n\nB-C\n219,5133\n\n\n\n\n\n\nLa formule de cette distance est la suivante :\n\\[\nd_{\\chi^2}(a,b) = \\frac{1}{2}\\sum^n_{i=1}\\frac{(a_i-b_i)^2}{(a_i+b_i)}\n\\tag{13.3}\\]\navec \\(a_i\\) et \\(b_i\\) les comptages pour les histogrammes. Notez que si \\(a_i\\) et \\(b_i\\) valent tous les deux 0, il faut retirer ces valeurs avant le calcul, car cela provoquerait une division par 0.\nÀ première vue, cette distance peut paraître moins utile que les deux précédentes. Pourtant, de nombreuses données sont collectées comme des histogrammes. Un premier exemple serait des images que nous pouvons représenter sous forme de trois histogrammes, un pour chaque canal de couleur (rouge, vert et bleu). Un second exemple serait des données sonores, souvent synthétisées sous forme d’histogrammes des fréquences sonores enregistrées (octaves ou tiers d’octaves). Un dernier exemple pourrait être le nombre d’accidents de la route enregistré à diverses intersections d’une ville chaque heure. Dans ce contexte, un histogramme serait formé par l’intersection avec les heures de la journée comme limites des bandes et le nombre d’accidents comme hauteur des bandes.\n\n13.2.1.4 Distance de Mahalanobis\nProposée dans les années 1930 par le statisticien indien Prasanta Chandra Mahalanobis (1936), cette distance se base sur la matrice de covariance des variables analysées. Plus spécifiquement, elle est utilisée pour calculer la distance entre un point et une distribution normale multivariée. Elle permet notamment de tenir compte du fait que certaines variables sont corrélées et ainsi d’éviter de surestimer les distances entre des observations dans des jeux de données comprenant des variables corrélées entre elles.\nLa formule permettant de calculer cette distance est la suivante :\n\\[\nd(a,b) = \\sqrt{(a-b)^TS^{-1}(a-b)}\n\\tag{13.4}\\]\navec S étant la matrice de covariance.\n\n13.2.1.5 Distance de Hamming\nCette distance est utilisée quand les écarts entre les variables de deux observations sont uniquement binaires. Un bon exemple serait un jeu de données ne comprenant que des variables qualitatives pouvant avoir une valeur identique pour deux observations (distance = 0) ou différente (distance = 1). La distance de Hamming est la simple addition de ces écarts.\nPrenons un exemple très simple en prenant trois maisons pour lesquelles nous connaissons cinq caractéristiques (tableau 13.2).\n\n\n\n\nTableau 13.2: Exemple de données pour la distance de Hamming\n\ncouleur\njardin\ngarage\ncheminée\nsous-sol\n\n\n\nblanc\nnon\noui\noui\nnon\n\n\nblanc\nnon\nnon\noui\nnon\n\n\nrouge\noui\noui\nnon\noui\n\n\n\n\n\n\nNous pouvons utiliser la distance de Hamming pour estimer le niveau de dissimilarité entre ces différentes maisons et l’organiser dans une matrice de distances. À la lecture du tableau 13.3), les maisons 2 et 3 sont les plus dissimilaires (distance de Hamming = 5), et les maisons 1 et 2 les plus similaires (distance de Hamming = 1).\n\n\n\n\nTableau 13.3: Distance de Hamming entre les maisons\n\n\nmaison 1\nmaison 2\nmaison 3\n\n\n\nmaison 1\n0\n1\n4\n\n\nmaison 2\n1\n0\n5\n\n\nmaison 3\n4\n5\n0\n\n\n\n\n\n\n\n13.2.1.6 Distance de Gower\nLa distance de Gower (1971) peut être utilisée pour mesurer la distance entre deux observations lorsque les données sont à la fois qualitatives et quantitatives. Cette distance est comprise dans un intervalle de 0 à 1, 0 signifiant que les deux observations sont identiques et 1, que les observations sont radicalement différentes.\nElle se calcule de la façon suivante :\n\\[\n\\begin{aligned}\n&d(a,b) = 1-\\frac{1}{p}\\sum^p_{j=1}s_{12j}\\\\\n&\\left\\{\\begin{array}{c}\ns_{xyj} = 1 \\text{ si } x_j = y_j \\text{, 0 autrement pour une variable qualitative} \\\\\ns_{xyj} =  1 - \\frac{|x_j-y_j|}{max(j)-min(j)} \\text{ pour une variable quantitative}\n\\end{array}\\right.\n\\end{aligned}\n\\tag{13.5}\\]\navec p le nombre de variables, x et y deux observations et j une variable.\nAutrement dit, si la valeur d’une variable qualitative diffère entre deux observations, la distance entre ces deux observations augmente de \\(1/p\\). Pour une variable quantitative, la distance augmente selon la différence absolue entre les valeurs de la variable divisée par l’étendue totale de la variable, le tout à nouveau divisé par p.\nSi cette mesure semble intéressante puisqu’elle permet de combiner des variables quantitatives et qualitatives, elle souffre de deux limites importantes :\n\nElle ne prend pas en compte le fait que certaines modalités des variables qualitatives sont moins fréquentes ni que certaines combinaisons sont également moins fréquentes.\nLes variables qualitatives tendent à affecter bien plus la distance que les variables quantitatives. En effet, pour obtenir un écart de 1 sur une variable quantitative, il faut que les deux valeurs soient respectivement le maximum et le minimum de cette variable.\n\n\n\n\n\n\nD’autres distances pour des données mixtes\n\n\nIl existe bien d’autres distances qui peuvent être utilisées dans le cas de données mixtes. Le package kmed en implémente cinq (auxquelles s’ajoute la distance de Gower) dans sa fonction distmix : les distances de Wishart, de Podani, d’Huang, d’Harikumar et d’Ahmad. Ces différentes distances ont toutes leurs avantages et leurs défauts respectifs; pour plus d’information, référez-vous à la documentation de la fonction distmix.\n\n\n\n13.2.1.7 Distance du Phi2\n\nLa distance du \\(\\Phi^2\\) (Phi2) est une variante de la distance du \\(\\chi^2\\). Il s’agit donc d’une distance à utiliser lorsque les données à analyser sont uniquement qualitatives. Elle calcule la distance entre deux observations en additionnant les différences entre les valeurs de chaque variable (1 si différentes, 0 si identiques, pour chaque variable), divisées respectivement par la fréquence totale d’occurrences de chaque modalité dans le jeu de données. En d’autres termes, cette distance tient compte du fait que certaines valeurs pour des variables qualitatives peuvent être observées plus fréquemment que d’autres et qu’une distance plus grande devrait être obtenue entre deux observations si l’une des deux présente des modalités rares comparativement au reste du jeu de données.\nElle peut être calculée de la façon suivante :\n\\[\nd_{\\Phi^2}(i,j) = \\frac{1}{Q}\\sum_k\\frac{(\\delta_{ik} - \\delta_{jk})^2}{f_k}\n\\tag{13.6}\\]\navec i et j deux observations, k une modalité d’une variable qualitative, Q le nombre total de modalités des variables qualitatives, \\(\\delta_{ik} = 1\\) si l’observation i a la modalité k, 0 sinon et \\(f_k\\) la fréquence de la modalité k dans le jeu de données.\nLa distance du \\(\\Phi^2\\) est très utile pour analyser les résultats de questionnaires.\n\n13.2.2 Inertie\nUne notion importante à saisir dans le cadre des méthodes de classification non supervisée est celui celle l’inertie d’un jeu de données. Elle est proche de la notion de variance qui a été présentée dans le chapitre sur la statistique univariée (section 2.5.3).\nL’inertie est une quantité permettant de décrire la dispersion des observations d’un jeu de données. Cette mesure dépend à la fois des données (nombres d’observations et de variables, échelle des variables) et de la mesure de distance retenue entre deux observations. Plus spécifiquement, l’inertie correspond à la somme des distances entre chaque observation et le centre du jeu de données.\n\\[\ninertie= \\sum{}^n_{i=1} d(c,x_i)\n\\tag{13.7}\\]\navec c le centre du jeu de données, n le nombre d’observations, x une observation et d la fonction calculant la distance entre deux observations.\nL’enjeu est de définir c dans un contexte où la distance euclidienne est utilisée. Il s’agit simplement d’une observation fictive dont les coordonnées sont les moyennes des différentes variables du jeu de données. Dans le cas d’autres distances, il peut s’agir de l’observation minimisant la distance à toutes les autres observations.\nPour bien visualiser la notion d’inertie, prenons une fois encore le jeu de données IRIS comme exemple. Admettons que nous ne nous intéressons qu’à deux variables de ce jeu de données : sepal.Length et sepal.Width. Nous pouvons représenter l’inertie totale du jeu de données à la figure 13.9.\n\n\n\n\nFigure 13.9: Représentation de l’inertie du jeu de données IRIS\n\n\n\nChaque ligne bleue représente la contribution de chaque point à l’inertie totale du jeu de données. Pour chaque iris, nous connaissons son espèce (Setosa, Versicolor ou Virginica). Nous pouvons donc attribuer chaque point de ce jeu de données à un groupe (une espèce dans notre cas). Il devient alors possible de calculer l’inertie de chacun des sous-groupes de notre jeu de données. Pour cela, nous devons calculer le centre de chaque groupe (généralement les moyennes des variables des observations au sein d’un groupe) et ensuite calculer l’inertie entre chaque observation et le centre de son groupe. Nous représentons cette situation à la figure 13.10.\n\n\n\n\nFigure 13.10: Représentation de l’inertie par groupe pour le jeu de données IRIS\n\n\n\nCette inertie propre aux groupes est toujours inférieure ou égale à l’inertie totale du jeu de données. Il s’agit en réalité de l’inertie que la structure de groupe n’est pas en mesure d’expliquer. En utilisant ces concepts, il est possible de calculer la part de l’inertie totale expliquée par les groupes (équation 13.8) :\n\\[\n\\text{inertie expliquée} = 1-\\frac{\\text{inertie totale}}{\\text{inertie restante}}\n\\tag{13.8}\\]\nCette valeur nous renseigne sur la capacité d’une classification à bien réduire l’inertie totale d’un jeu de données. Elle est comprise entre 0 et 1. Si l’inertie expliquée est à 0, c’est que la classification n’explique absolument aucune part de l’inertie totale. Si l’inertie expliquée est à 1, la classification utilisée explique l’intégralité de l’inertie, ce qui en pratique n’est atteignable que si le nombre de groupes de la classification est égal au nombre d’observations. En d’autres termes, chaque observation est attribuée à un groupe dont elle est la seule représentante. Un telle situation n’a aucun intérêt puisque l’objectif d’une classification est bien de réduire la complexité d’un jeu de données en regroupant les observations."
  },
  {
    "objectID": "13-MethodeClassification.html#sec-133",
    "href": "13-MethodeClassification.html#sec-133",
    "title": "13  Méthodes de classification non supervisée",
    "section": "\n13.3 Classification ascendante hiérarchique",
    "text": "13.3 Classification ascendante hiérarchique\nLa classification ascendante hiérarchique (CAH) est un algorithme de classification non supervisée dont l’objectif est de créer un arbre de classification des observations. Cet arbre est ensuite utilisé pour déterminer le nombre de groupes à former et à quel groupe appartient chaque observation.\n\n13.3.1 Fonctionnement de l’algorithme\nLa classification ascendante hiérarchique est un algorithme permettant de regrouper les observations d’un jeu de données de façon itérative. À chaque itération, deux observations similaires sont agrégées en un groupe représenté par le point central entre les deux observations. Le processus est ensuite répété en considérant le nouveau point comme une observation jusqu’à ce que toutes les observations soient fusionnées en un seul groupe.\nCes regroupements successifs créent un arbre de classification appelé dendrogramme. La racine de cet arbre est le groupe unique fusionnant toutes les observations, et ses branches correspondent aux différentes agrégations effectuées jusqu’aux observations individuelles. Cet arbre peut être vu comme une hiérarchie de classification. Chaque niveau de l’arbre est un regroupement de plus en plus généraliste au fur et à mesure que nous nous approchons de sa racine.\nPour appliquer cette méthode, il est nécessaire de sélectionner une fonction de distance pour mesurer la dissimilarité ou la ressemblance entre deux observations. L’algorithme fonctionne avec n’importe quelle fonction de distance, ce qui permet de l’appliquer aussi bien à des données qualitatives que quantitatives. En effet, l’opération de regroupement des observations se base sur une matrice de distance, soit un tableau de taille n x n indiquant pour chaque paire d’observations leur degré de dissimilarité. La figure 13.11 illustre cette transformation en appliquant la distance du \\(\\Phi^2\\) à un jeu de données comprenant cinq observations et 5 variables qualitatives.\n\n\n\n\nFigure 13.11: Du tableau de données à la matrice de distance\n\n\n\nEn plus de la fonction de distance, il est également nécessaire de sélectionner un critère d’agrégation, soit la règle permettant de décider à chaque itération quelles observations doivent être regroupées. Les méthodes les plus courantes sont :\n\nLe critère de Ward (1963) : cette méthode consiste à agréger à chaque itération les deux observations permettant de minimiser la variance (ou l’inertie) intra-groupe, ce qui revient à maximiser l’inertie inter-groupe (autrement dit, à rendre les groupes les plus homogènes possibles et les plus dissemblables entre eux). Ainsi, l’enjeu est de fusionner les deux observations permettant d’avoir les groupes les plus dissimilaires possible après fusion.\nLe lien complet : à chaque itération, les deux groupes d’observations associés sont ceux pour lesquels la distance maximale entre les observations les composant est la plus petite parmi tous les groupes.\nLe lien simple : à chaque itération, les deux groupes d’observations associés sont ceux pour lesquels la distance minimum entre les observations les composant est la plus petite parmi tous les groupes.\n\nLa plus utilisée est de loin la méthode de Ward. La méthode du lien complet produit généralement des résultats similaires. En revanche, la méthode du lien simple peut produire des groupes non sphériques (non centrés sur leur moyenne) plus difficile à interpréter.\nPrenons un instant pour visualiser cet algorithme (figure 13.12). Cette animation a été réalisée par David Sheehan et est également accessible sur son blog. Elle présente bien le processus d’agglomération de la classification ascendante hiérarchique et la construction progressive du dendrogramme.\n\n\nFigure 13.12: Principe de fonctionnement de la classification ascendante hiérarchique (auteur : David Sheehan)\n\n\n13.3.2 Choisir le bon nombre de groupes\nUne fois que l’algorithme a été appliqué aux données et le dendrogramme obtenu, il faut encore choisir le nombre optimal de groupes pour la classification finale. Chaque embranchement du dendrogramme constitue une classification possible, allant de la plus complexe (chaque observation appartient à un groupe formé d’elle seule) à la plus simple (toutes les observations appartiennent au même groupe). Si le nombre de groupes n’est pas connu à l’avance et qu’aucune forte justification théorique n’existe, il est possible d’utiliser plusieurs techniques pour déterminer un nombre de groupes judicieux à partir des données. Nous en présentons ici trois, mais il convient de ne pas s’en tenir uniquement à ses critères arbitraires. Il est important d’explorer les résultats de la classification obtenue pour plusieurs valeurs de k candidates et de tenir compte de la qualité des informations qu’elles fournissent. Au final, il est pertinent de retenir la classification dont les résultats offrent l’interprétation la plus claire avec un nombre de groupes réduit (principe de parcimonie).\n\n13.3.2.1 Méthode du coude\nCette première approche est la plus simple à mettre en œuvre. Il s’agit simplement de produire plusieurs classifications à partir du dendrogramme avec différentes valeurs de k (nombre de groupes) et de calculer à chaque fois la part de l’inertie expliquée. Chaque groupe supplémentaire ne peut qu’améliorer l’inertie expliquée, car pour rappel, si \\(k=n\\), alors nous expliquons 100 % de l’inertie totale. L’objectif est de déterminer à quel moment l’ajout d’un groupe supplémentaire ne contribue que de façon marginale à améliorer l’inertie expliquée. Si nous représentons les valeurs d’inertie expliquée pour les différentes valeurs de k dans un graphique, une rupture (un coude) indiquerait le point au-delà duquel les groupes supplémentaires ne captent finalement que du bruit et non plus de l’information.\nSi nous reprenons l’exemple du jeu de données IRIS, nous pouvons créer ce graphique avec k allant de 2 à 8 (figure 13.13). Un premier coude très net est observable pour \\(k = 3\\) et un second plus faible, mais tout de même marqué pour \\(k = 4\\).\n\n\n\n\nFigure 13.13: Méthode du coude\n\n\n\n\n\n\n\n\nInertie expliquée et centre de groupe\n\n\nPour calculer l’inertie expliquée, il est nécessaire de pouvoir déterminer pour le centre de gravité (ou centroïde) chaque groupe. Lorsque la distance euclidienne est utilisée, il s’agit simplement de calculer pour chaque groupe la valeur moyenne des différentes colonnes des observations. Cependant, lorsque d’autres distances sont utilisées, il peut être plus difficile de déterminer le centre d’un groupe. Avec la distance de Manhattan, il est par exemple recommandé d’utiliser la médiane des colonnes plutôt que la moyenne. Pour la distance de Hamming, la moyenne peut aussi être utilisée, car elle représente pour cette distance la fréquence d’occurrence des différentes modalités des variables qualitatives. Pour d’autres distances plus complexes, il est préférable de définir le centre d’un groupe comme le point de ce groupe minimisant les distances à tous les autres points du groupe. Il s’agit du médoïde du groupe.\n\n\n\n13.3.2.2 Indicateur de silhouette\nSi un coude net ne s’observe pas pour la méthode précédente, il est possible d’utiliser l’indicateur de silhouette. Il permet de mesurer pour une classification à quel point une observation est similaire à celles dans son propre groupe (cohésion) comparativement aux observations des autres groupes. Elle se calcule de la façon suivante :\n\\[\n\\begin{aligned}\ns(i) &= \\frac{b(i)-a(i)}{\\max \\{a(i), b(i)\\}} \\\\\na(i) &= \\frac{1}{|C_i|-1}\\sum_{j \\in C_i,i \\neq j}d(i,j) \\\\\nb(i) &= min_{i \\neq j}\\frac{1}{|C_j|}\\sum_{j \\in C_j}d(i,j)\n\\end{aligned}\n\\tag{13.9}\\]\navec \\(s(i)\\) la valeur de l’indice de silhouette pour l’observation i, \\(a(i)\\) la distance moyenne entre l’observation i et son groupe \\(C_i\\) et \\(b(i)\\) la distance minimale entre l’observation i et le centre de chaque autre groupe \\(C_j\\).\nLa valeur totale de l’indice est simplement la moyenne des valeurs moyennes des indices de silhouette au sein de chaque groupe. Une valeur plus élevée indique une meilleure classification. Il est nécessaire de déterminer le centre des groupes pour calculer cet indicateur, ce qui peut être un exercice difficile quand une distance autre que la distance euclidienne est utilisée. Référez-vous à la note de la section précédente pour plus d’informations. L’indice de silhouette semble indiquer que seulement trois groupes serait un choix optimal, soit la valeur la plus haute (figure 13.14).\n\n\n\n\nFigure 13.14: Méthode de l’indice de silhouette\n\n\n\n\n13.3.2.3 Méthode GAP\nCette méthode, proposée par Tibshirani, Walther et Hastie (2001), consiste à comparer l’inertie intra-groupe (inexpliquée) avec l’inertie observée pour un jeu de données généré aléatoirement (distribution uniforme des valeurs entre le minimum et le maximum de chaque variable) pour différentes valeurs successives de k. Une fois ces calculs effectués, l’objectif est de trouver la valeur de k telle que la valeur de GAP à k + 1 n’est pas plus grande qu’un écart type pour GAP à k + 1.\nLa statistique GAP est calculée ainsi :\n\\[\n\\begin{aligned}\nGAP(k) = \\frac{1}{\\text{nsim}} \\sum^{\\text{nsim}}_{\\text{sim} = 1} log(W_{ksim}) - log(W_k)\n\\end{aligned}\n\\tag{13.10}\\]\navec \\(W_k\\) l’inertie non expliquée (intra-groupe), \\(W_{ksim}\\) l’inertie non expliquée (intra-groupe) obtenue pour un jeu de données simulé et k le nombre de groupes.\nL’idée est qu’une bonne classification doit produire des résultats plus structurés que ce que nous pourrions attendre du hasard. Chaque groupe supplémentaire permet de réduire l’inertie, mais lorsque l’ajout d’un groupe ne permet pas un gain significatif comparativement au hasard, alors l’ajout de ce groupe ne se justifie pas. À nouveau, il est possible de visualiser la situation avec un simple graphique (figure 13.15). Selon cette méthode, il faudrait sélectionner quatre groupes, car il s’agit de la première valeur de k validant le critère de cette méthode. La seconde valeur retenue par cette méthode est 6.\n\n\n\n\nFigure 13.15: Méthode GAP\n\n\n\n\n13.3.3 Limites de la classification ascendante hiérarchique\nBien que très flexible (choix de la fonction de distance et du critère d’agrégation), la CAH fait face à un enjeu majeur : la vitesse d’exécution et la consommation de mémoire lorsque de grands jeux de données sont utilisés. En effet, il est nécessaire de calculer à chaque étape une matrice de distance entre les groupes. Si un jeu de données comprend 1000 observations, cette matrice comprend donc 1000 x 1000 cases, soit un million de distances. Même en divisant ce nombre par deux (les éléments de la matrice sont symétriques, donc \\(d(ij) = d(ji)\\)), ce nombre augmente avec le carré du nombre d’observations. Pour de grands jeux de données, la CAH peut donc échouer à cause des limites de l’ordinateur utilisé. Il existe des versions plus performantes de l’algorithme réduisant cette limite, mais il convient de la garder en mémoire. Quand un très grand jeu de données doit être analysé, les méthodes des nuées dynamiques sont une solution à considérer.\n\n13.3.4 Mise en œuvre dans R\nNous proposons ici un exemple issu d’un article portant sur les parcs urbains de Montréal (Apparicio et al. 2010), dont l’objectif était notamment de classifier ces parcs en fonction de leur superficie et des équipements qu’ils comprennent, et ce, en utilisant la classification ascendante hiérarchique. Nous proposons ici de reproduire l’étape de classification effectuée dans cet article. La base de données comporte 653 parcs pour lesquels la présence de 18 équipements est codée comme un ensemble de variables binaires (0 signifiant absence et 1 présence). Nous disposons également de la taille de ces parcs, recodée en cinq catégories : moins d’un hectare, de 1 à 5 hectares, de 5 à 10 hectares, de 10 à 20 hectares et 20 hectares et plus. Le tableau 13.4 indique le nombre d’équipements recensés dans les parcs.\n\n\n\n\nTableau 13.4: Équipements recensés dans les différents parcs de Montréal\n\nÉquipements\nN\n\n\n\nÉquipements pour les 0 à 4 ans\n\n\nAire de jeux\n601\n\n\nPataugeoire\n161\n\n\nJeux d’eau\n28\n\n\nTerrains de sport\n\n\nBaseball\n188\n\n\nSoccer (football)\n169\n\n\nBasketball\n144\n\n\nTennis\n125\n\n\nFootball\n36\n\n\nVolleyball\n24\n\n\nAthlétisme\n20\n\n\nÉquipements d'hiver\n\n\nPatinoire extérieure\n241\n\n\nGlissade\n30\n\n\nPiste de ski de fond\n14\n\n\nPiste de raquette\n9\n\n\nÉquipements spécialisés\n\n\nParc de planches à roulettes\n18\n\n\nPatins à roues alignées\n8\n\n\nAutres équipements\n\n\nPiscine intérieure\n92\n\n\nChemin de randonnée\n15\n\n\n\n\n\n\n\n\nPuisque notre jeu de données ne comporte que des variables qualitatives, nous utilisons la distance du \\(\\Phi^2\\) pour construire notre matrice de distance entre les parcs. Notons que, dans l’article original, la distance euclidienne au carré avait été utilisée, alors nous n’obtiendrons probablement pas les mêmes résultats, car la distance du \\(\\Phi^2\\) tient compte des fréquences d’occurrence des modalités des variables qualitatives.\n\n13.3.4.1 Calcul de la matrice de distance\nLa première étape consiste donc à charger notre jeu de données et à calculer la matrice de distance.\n\n# chargement du jeu de données et sélection des colonnes pour l'analyse\nparcs &lt;- read.csv(\"data/classification/Parcs.txt\", header = TRUE, stringsAsFactors = FALSE)\nX &lt;- parcs[c(5:22, 27)]\n\nPour calculer la distance du \\(\\Phi^2\\), nous utilisons la fonction dist du package proxy avec le paramètre method = \"Phi-squared\". Elle requiert que l’ensemble des variables catégorielles soient converties en variables binaires. Pour cela, nous pouvons utiliser la fonction dummy_cols du package fastDummies.\n\nlibrary(fastDummies)\nlibrary(proxy)\n\nX &lt;- dummy_cols(X, select_columns = \"HaTypo\", remove_selected_columns = TRUE)\nparc_distances &lt;- dist(as.matrix(X), method = \"Phi-squared\")\n\n\n13.3.4.2 Application de l’algorithme de classification ascendante hiérarchique\nUne fois la matrice obtenue, il ne reste plus qu’à appliquer la fonction hclust disponible de base dans R pour obtenir le dendrogramme. Comme dans l’article, nous utilisons le critère d’agrégation de Ward pour la création des groupes.\n\ndendogramme_parcs &lt;- hclust(parc_distances, method = \"ward.D\")\n\nPuisque nous n’utilisons pas la distance euclidienne, nous optons ici pour l’indice de silhouette pour déterminer le nombre adéquat de groupes à former. Nous testons toutes les valeurs comprises entre 2 et 10.\n\nlibrary(cluster)\nks &lt;- 2:10\n\n# Calcul des indices de silhouette pour les différentes valeurs de k\nvalues &lt;- sapply(ks, function(k){\n  # découpage du dendrogramme\n  groupes &lt;- cutree(dendogramme_parcs, k = k)\n  # calcul des valeurs de silhouette\n  sil &lt;- silhouette(groupes, dist = parc_distances)\n  # extraction de l'indice global (moyenne des moyennes)\n  idx &lt;- mean(summary(sil)$clus.avg.widths)\n  return(idx)\n})\n\n# Création d'un graphique avec les résultats\ndf &lt;- data.frame(k = ks,  silhouette = values)\nggplot(df) + \n  geom_line(aes(x = k, y = silhouette)) + \n  geom_point(aes(x = k, y = silhouette), color = \"red\") + \n  labs(x = \"nombre de groupes\", y = \"indice global de silhouette\")\n\n\n\nFigure 13.16: Valeur de l’indice de silhouette pour différents nombres de groupes\n\n\n\nSi nous écartons d’emblée les résultats pour k = 2 et k = 3 (trop peu de groupes pour l’interprétation), nous constatons que la solution optimale selon ce critère est k = 5. Dans l’article original, la solution k = 6 avait été retenue en examinant le dendrogramme. Comparons les résultats pour k = 5 et k = 6.\n\nresk5 &lt;- cutree(dendogramme_parcs, k = 5)\nresk6 &lt;- cutree(dendogramme_parcs, k = 6)\nsil5 &lt;- silhouette(resk5, dist = parc_distances)\nsil6 &lt;- silhouette(resk6, dist = parc_distances)\n\n# résumé pour l'indice de silhouette pour k = 5\nsummary(sil5)\n\nSilhouette of 693 units in 5 clusters from silhouette.default(x = resk5, dist = parc_distances) :\n Cluster sizes and average silhouette widths:\n        116         212         246          84          35 \n 0.07029553  1.00000000 -0.11827930 -0.19969707  1.00000000 \nIndividual silhouette widths:\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.62041 -0.08502  0.09814  0.30200  1.00000  1.00000 \n\n# résumé pour l'indice de silhouette pour k = 6\nsummary(sil6)\n\nSilhouette of 693 units in 6 clusters from silhouette.default(x = resk6, dist = parc_distances) :\n Cluster sizes and average silhouette widths:\n        116         212         197          49          84          35 \n 0.05906553  1.00000000 -0.10289391  0.07935325 -0.19969707  1.00000000 \nIndividual silhouette widths:\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.62041 -0.06414  0.10998  0.31846  1.00000  1.00000 \n\n\nNous constatons que le groupe supplémentaire vient séparer le groupe trois comprenant 246 parcs dans la solution avec k = 5. Ce dernier ne comprend plus que 197 parcs pour la solution k = 6 et le nouveau groupe en compte 49. Ce nouveau groupe à un indice de silhouette moyen relativement faible (0,079), et le fait de découper le groupe trois améliore très peu sa propre valeur (passant de -0,12 à -0,10). Nous retenons cependant ici la solution avec k = 6 afin de tenter de reproduire les résultats de l’article.\n\n13.3.4.3 Interprétation des résultats\nLa dernière étape consiste à identifier les groupes obtenus et leur attribuer un intitulé en fonction de leurs caractéristiques. Dans notre cas, la classification ne comporte que des variables binaires, nous pouvons donc calculer le pourcentage de valeurs à 1 (présence d’un équipement) dans chacun des groupes.\n\n# calcul du nombre de fois où chaque modalité est observée dans un groupe\nX$groupe &lt;- resk6\ndf_groupes &lt;- X %&gt;% \n  group_by(groupe) %&gt;% summarise_all(.funs = sum)\n\n# calcul du nombre d'observations par groupe\nnb_gp &lt;- table(resk6)\ngroupe_ratios &lt;- round(100 * as.matrix(df_groupes)[,2:ncol(df_groupes)] / as.vector(nb_gp),1)\ngroupe_ratios &lt;- as.data.frame(t(groupe_ratios))\nnames(groupe_ratios) &lt;- paste0(\"groupe \", 1:ncol(groupe_ratios))\n\n# calcul du nombre moyen d'équipements par catégorie par parc\nequip_class &lt;- list(\n  c(\"AIRE_JEUX\", \"JEUX_EAU\", \"PATAUGEOIRE\"),\n  c(\"ATHLETISME\", \"BASEBALL_S\", \"BASKETBALL\", \"FOOTBALL\", \"SOCCER\", \"TENNIS\", \"VOLLEY_BALL\"),\n  c(\"TOBBOGAN_G\", \"PATINOIRE_E\", \"RAQUETTES\", \"SKI_FOND\"),\n  c(\"PATIN_ROUE\", \"ROULI_ROUL\"),\n  c(\"PISC_EXT\", \"RANDONNEE\")\n)\n\nclass_compte &lt;- data.frame(sapply(equip_class, function(equip){\n  rowSums(X[equip])\n}))\nnames(class_compte) &lt;- c(\"enfants\", \"terrain_sport\", \"hiver\", \"specialise\", \"autre\")\nclass_compte$groupe &lt;- resk6\ndf_class_equip &lt;- class_compte %&gt;% \n  group_by(groupe) %&gt;% \n  summarise_all(mean)\n\ndf_class_equip &lt;- t(df_class_equip[2:ncol(df_class_equip)])\ncolnames(df_class_equip) &lt;- paste0(\"groupe \", 1:ncol(df_class_equip))\n\n# comptage du nombre moyen total d'équipements\ndf_equip_tot &lt;- data.frame(\n  nb = rowSums(X[1:18]),\n  groupe = resk6\n)\ndf_equip_tot_mean &lt;- df_equip_tot %&gt;% \n  group_by(groupe) %&gt;% \n  summarize_all(mean)\n\n# mise dans l'ordre de la première partie du tableau\nall_types &lt;- do.call(c, equip_class)\nidxs &lt;- match(all_types, row.names(groupe_ratios[1:length(all_types),]))\ngroupe_ratios &lt;- rbind(groupe_ratios[idxs,],\n                       groupe_ratios[(length(all_types)+1):nrow(groupe_ratios),])\n\n# combinaison des deux tableaux\ngroupe_ratios &lt;- rbind(groupe_ratios, df_class_equip, df_equip_tot_mean$nb, as.integer(nb_gp))\n\nIl est ensuite possible d’afficher le tableau obtenu pour l’interpréter. Les résultats sont ici rapportés au tableau 13.5.\n\n\n\n\nTableau 13.5: Caractéristiques des groupes obtenus lors de la CAH\n\n\ngroupe 1\ngroupe 2\ngroupe 3\ngroupe 4\ngroupe 5\ngroupe 6\n\n\n\nÉquipements pour les 0 à 4 ans (%)\n\n\nAire de jeux\n69,8\n100\n83,2\n71,4\n88,1\n100\n\n\nJeux d'eau\n7,8\n0\n2,5\n18,4\n6,0\n0\n\n\nPataugeoire\n36,2\n0\n47,2\n2,0\n29,8\n0\n\n\nTerrains de sport (%)\n\n\nAthlétisme\n12,1\n0\n2,0\n2,0\n1,2\n0\n\n\nBaseball\n62,1\n0\n50,8\n0,0\n19,0\n0\n\n\nBasketball\n37,9\n0\n36,0\n16,3\n21,4\n0\n\n\nFootball américain\n15,5\n0\n7,1\n8,2\n0,0\n0\n\n\nSoccer (football)\n52,6\n0\n29,9\n87,8\n7,1\n0\n\n\nTennis\n38,8\n0\n32,5\n8,2\n14,3\n0\n\n\nVolleyball\n7,8\n0\n4,6\n12,2\n0,0\n0\n\n\nÉquipements d'hiver (%)\n\n\nGlissade\n19,8\n0\n3,0\n2,0\n0,0\n0\n\n\nPatinoire\n58,6\n0\n59,4\n34,7\n46,4\n0\n\n\nPiste de ski de fond\n7,8\n0\n0,0\n0,0\n0,0\n0\n\n\nRaquettes\n12,1\n0\n0,0\n0,0\n0,0\n0\n\n\nÉquipements spécialisés (%)\n\n\nParc de planches à roulettes\n6,0\n0\n0,5\n0,0\n0,0\n0\n\n\nPatins à roues alignées\n8,6\n0\n4,1\n0,0\n0,0\n0\n\n\nAutres équipements (%)\n\n\nPiscine extérieure\n27,6\n0\n27,4\n4,1\n4,8\n0\n\n\nChemin de randonnée\n12,9\n0\n0,0\n0,0\n0,0\n0\n\n\nSuperficie (%)\n\n\nMoins d'un hectare\n0,0\n100\n0,0\n0,0\n100,0\n0\n\n\n1 à 5 hectares\n5,2\n0\n98,5\n100,0\n0,0\n100\n\n\n5 à 10 hectares\n61,2\n0\n0,0\n0,0\n0,0\n0\n\n\n10 à 20 hectares\n17,2\n0\n1,0\n0,0\n0,0\n0\n\n\n20 hectares et plus\n16,4\n0\n0,5\n0,0\n0,0\n0\n\n\nNombre moyen d'équipements selon le type\n\n\nÉquipements pour les 0 à 4 ans\n1,1\n1\n1,3\n0,9\n1,2\n1\n\n\nTerrains de sport\n2,3\n0\n1,6\n1,3\n0,6\n0\n\n\nÉquipements d'hiver\n1,0\n0\n0,6\n0,4\n0,5\n0\n\n\nÉquipements spécialisés\n0,1\n0\n0,0\n0,0\n0,0\n0\n\n\nAutres équipements\n0,4\n0\n0,3\n0,0\n0,0\n0\n\n\nTous les équipements\n4,9\n1\n3,9\n2,7\n2,4\n1\n\n\nNombre d'observations par groupe\n\n\n\n116,0\n212\n197,0\n49,0\n84,0\n35\n\n\n\n\n\n\n\n\n\nLe premier groupe correspond à de grands parcs (superficie généralement comprise entre 5 et plus de 20 hectares), il comporte 116 observations. Ces grands parcs sont en moyenne équipés de deux terrains de sport et d’un équipement d’hiver. Il s’agit vraisemblablement des grands parcs identifiés dans l’article original, dans lesquels se retrouvent également les parcs à vocation métropolitaine.\nLe second groupe (212 parcs) correspond à de très petits parcs (moins d’un hectare) comportant uniquement une aire de jeu.\nLe troisième groupe (197 parcs) correspond à de petits parcs (entre 1 et 5 hectares), souvent équipés d’une piscine extérieure (27,4 % des cas), et en moyenne de deux terrains de sports (essentiellement des terrains de tennis et de soccer). Ces parcs comprennent en moyenne plus de 4 équipements et doivent donc correspondre à la classe D dans l’article original (Petit parc (1 à 5 ha) avec en moyenne six équipements, dont une patinoire et une piscine).\nLe quatrième groupe (49 parcs) comprend de petits parcs (entre 1 et 5 hectares) qui ressemblent aux parcs du groupe 2 mais tendent à disposer en plus d’un terrain de sport (baseball ou basketball).\nLe quatrième groupe (84 parcs) correspond à de petits parcs, il est caractérisé par une présence plus marquée de pataugeoires (39 %).\nLe cinquième groupe (35 parcs) est très similaire au second groupe (uniquement une aire de jeux), excepté sont les parcs qui s’y trouvent sont de taille supérieure (de 1 à 5 hectares).\n\nConsidérant les différences minimes entre certains des groupes que nous avons obtenus, il est clair que retenir seulement trois ou cinq groupes serait préférable. Notez également l’importance du choix de la distance, car nous obtenons des résultats sensiblement différents de ceux de l’article original en ayant opté pour la distance du \\(\\Phi^2\\) plutôt que la distance euclidienne au carré.\n\n13.3.4.4 Utilisation de la matrice de distance euclidienne au carré\nPour obtenir des résultats plus proches de ceux de l’article original, nous pouvons reprendre notre analyse et utiliser cette fois-ci une distance euclidienne au carré.\n\nX$groupe &lt;- NULL\n# calcule de la matrice de distance\nparc_distances_euc &lt;- dist(as.matrix(X), method = \"Euclidean\")**2\n\n# Application de la CAH\ndendogramme_parcs_euc &lt;- hclust(parc_distances_euc, method = \"ward.D\")\n\n# calcul de l'indice de silhouette\nks &lt;- 2:10\nvalues &lt;- sapply(ks, function(k){\n  # découpage du dendrogramme\n  groupes &lt;- cutree(dendogramme_parcs_euc, k = k)\n  # calcul des valeurs de silhouette\n  sil &lt;- silhouette(groupes, dist = parc_distances_euc)\n  # extraction de l'indice global (moyenne des moyennes)\n  idx &lt;- mean(summary(sil)$clus.avg.widths)\n  return(idx)\n})\n\n# création d'un graphique avec les résultats\n\ndf &lt;- data.frame(\n  k = ks,\n  silhouette = values\n)\n\nggplot(df) + \n  geom_line(aes(x = k, y = silhouette)) + \n  geom_point(aes(x = k, y = silhouette), color = \"red\") + \n  labs(x = \"nombre de groupes\", y = \"indice global de silhouette\")\n\n\n\nFigure 13.17: Valeur de l’indice de silhouette pour différents nombres de groupes (distance euclidienne au carré)\n\n\n\nNous constatons cette fois-ci, que quatre groupes serait probablement le meilleur choix et qu’au-delà de ce nombre, l’indice global de silhouette ne fait que diminuer. Tentons cependant de reproduire les résultats de l’article avec k = 6.\n\nresk6 &lt;- cutree(dendogramme_parcs_euc, k = 6)\n\n# calcul du nombre de fois ou chaque modalité est observée dans un groupe\nX$groupe &lt;- resk6\ndf_groupes &lt;- X %&gt;% \n  group_by(groupe) %&gt;% summarise_all(.funs = sum)\n\n# calcul du nombre d'observations par groupe\nnb_gp &lt;- table(resk6)\n\ngroupe_ratios &lt;- round(100 * as.matrix(df_groupes)[,2:ncol(df_groupes)] / as.vector(nb_gp),1)\ngroupe_ratios &lt;- as.data.frame(t(groupe_ratios))\nnames(groupe_ratios) &lt;- paste0(\"groupe \", 1:ncol(groupe_ratios))\n\n# calcul du nombre moyen d'équipements par catégorie par parc\nequip_class &lt;- list(\n  c(\"AIRE_JEUX\", \"JEUX_EAU\", \"PATAUGEOIRE\"),\n  c(\"ATHLETISME\", \"BASEBALL_S\", \"BASKETBALL\", \"FOOTBALL\", \"SOCCER\", \"TENNIS\", \"VOLLEY_BALL\"),\n  c(\"TOBBOGAN_G\", \"PATINOIRE_E\", \"RAQUETTES\", \"SKI_FOND\"),\n  c(\"PATIN_ROUE\", \"ROULI_ROUL\"),\n  c(\"PISC_EXT\", \"RANDONNEE\")\n)\n\nclass_compte &lt;- data.frame(sapply(equip_class, function(equip){\n  rowSums(X[equip])\n}))\nnames(class_compte) &lt;- c(\"enfants\", \"terrain_sport\", \"hiver\", \"specialise\", \"autre\")\nclass_compte$groupe &lt;- resk6\ndf_class_equip &lt;- class_compte %&gt;% \n  group_by(groupe) %&gt;% \n  summarise_all(mean)\n\ndf_class_equip &lt;- t(df_class_equip[2:ncol(df_class_equip)])\ncolnames(df_class_equip) &lt;- paste0(\"groupe \", 1:ncol(df_class_equip))\n\n# comptage du nombre moyen d'équipements\ndf_equip_tot &lt;- data.frame(\n  nb = rowSums(X[1:18]),\n  groupe = resk6\n)\ndf_equip_tot_mean &lt;- df_equip_tot %&gt;% \n  group_by(groupe) %&gt;% \n  summarize_all(mean)\n\n# mise dans l'ordre de la première partie du tableau\nall_types &lt;- do.call(c, equip_class)\nidxs &lt;- match(all_types, row.names(groupe_ratios[1:length(all_types),]))\ngroupe_ratios &lt;- rbind(groupe_ratios[idxs,],\n                       groupe_ratios[(length(all_types)+1):nrow(groupe_ratios),])\n\n# combinaison des deux tableaux\ngroupe_ratios &lt;- rbind(groupe_ratios, df_class_equip, df_equip_tot_mean$nb, as.integer(nb_gp))\n\nRecréons le tableau final des résultats au tableau 13.6. Si vous comparez ce tableau avec celui de l’article original, vous verrez que notre groupe 3 correspond exactement à la classe A et que notre groupe 5 correspond exactement à la classe F. Pour les autres groupes, nous pouvons observer de légères variations, ce qui correspond vraisemblablement à des divergences d’implémentation des algorithmes entre le logiciel utilisé pour l’article (SAS) et R.\n\n\n\n\nTableau 13.6: Caractéristiques des groupes obtenus lors de la CAH (distance euclidienne au carré)\n\n\ngroupe 1\ngroupe 2\ngroupe 3\ngroupe 4\ngroupe 5\ngroupe 6\n\n\n\nÉquipements pour les 0 à 4 ans (%)\n\n\nAire de jeux\n79,6\n74,2\n96,6\n100,0\n20,0\n79,3\n\n\nJeux d'eau\n11,1\n3,0\n1,7\n5,1\n0,0\n5,9\n\n\nPataugeoire\n59,3\n42,4\n8,4\n61,0\n0,0\n19,7\n\n\nTerrains de sport (%)\n\n\nAthlétisme\n13,0\n15,2\n0,3\n0,0\n0,0\n1,0\n\n\nBaseball\n88,9\n63,6\n5,4\n89,8\n6,7\n13,8\n\n\nBasketball\n83,3\n30,3\n6,1\n35,6\n0,0\n18,2\n\n\nFootball\n31,5\n12,1\n0,0\n10,2\n0,0\n2,5\n\n\nSoccer (football)\n75,9\n57,6\n2,0\n27,1\n0,0\n33,5\n\n\nTennis\n90,7\n19,7\n4,1\n35,6\n0,0\n14,8\n\n\nVolleyball\n20,4\n3,0\n0,0\n1,7\n0,0\n4,9\n\n\nÉquipements d'hiver (%)\n\n\nGlissade\n14,8\n16,7\n0,0\n1,7\n33,3\n2,5\n\n\nPatinoire\n87,0\n57,6\n13,2\n86,4\n26,7\n30,5\n\n\nPiste de ski de fond\n1,9\n1,5\n0,0\n0,0\n46,7\n0,0\n\n\nRaquettes\n0,0\n1,5\n0,0\n0,0\n86,7\n0,0\n\n\nÉquipements spécialisés (%)\n\n\nParc de planches à roulettes\n0,0\n0,0\n0,0\n1,7\n46,7\n0,0\n\n\nPatins à roues alignées\n16,7\n7,6\n0,0\n5,1\n0,0\n0,5\n\n\nAutres équipements (%)\n\n\nPiscine extérieure\n75,9\n16,7\n1,4\n11,9\n6,7\n13,8\n\n\nChemin de randonnée\n1,9\n0,0\n0,0\n0,0\n93,3\n0,0\n\n\nSuperficie (%)\n\n\nMoins d'un hectare\n0,0\n0,0\n100,0\n0,0\n0,0\n0,0\n\n\n1 à 5 hectares\n42,6\n1,5\n0,0\n98,3\n0,0\n99,5\n\n\n5 à 10 hectares\n46,3\n69,7\n0,0\n0,0\n0,0\n0,0\n\n\n10 à 20 hectares\n1,9\n27,3\n0,0\n0,0\n13,3\n0,5\n\n\n20 hectares et plus\n9,3\n1,5\n0,0\n1,7\n86,7\n0,0\n\n\nNombre moyen d'équipements selon le type\n\n\nÉquipements pour les 0 à 4 ans\n1,5\n1,2\n1,1\n1,7\n0,2\n1,0\n\n\nTerrains de sport\n4,0\n2,0\n0,2\n2,0\n0,1\n0,9\n\n\nÉquipements d'hiver\n1,0\n0,8\n0,1\n0,9\n1,9\n0,3\n\n\nÉquipements spécialisés\n0,2\n0,1\n0,0\n0,1\n0,5\n0,0\n\n\nAutres équipements\n0,8\n0,2\n0,0\n0,1\n1,0\n0,1\n\n\nTous les équipements\n7,5\n4,2\n1,4\n4,7\n3,7\n2,4\n\n\nNombre d'observations par groupe\n\n\n\n54,0\n66,0\n296,0\n59,0\n15,0\n203,0"
  },
  {
    "objectID": "13-MethodeClassification.html#sec-134",
    "href": "13-MethodeClassification.html#sec-134",
    "title": "13  Méthodes de classification non supervisée",
    "section": "\n13.4 Nuées dynamiques",
    "text": "13.4 Nuées dynamiques\nLes méthodes des nuées dynamiques regroupent plusieurs algorithmes, tous plus ou moins liés avec l’algorithme le plus connu : k-means, originalement proposé par James MacQueen (1967). Nous présentons également ici plusieurs variantes du k-means, soit le k-medians, le k-medioids, le c-means et le c-medians.\n\n13.4.1 K-means\n\n\n13.4.1.1 Fonctionnement de l’algorithme\nNous commençons ici par détailler le fonctionnement de cet algorithme afin de mieux le cerner. D’emblée, cet algorithme nécessite que certains éléments soient définis d’avance :\n\nUne matrice de données X comportant n lignes (nombre d’observations) et p colonnes (nombre de variables). Chaque variable de cette matrice doit être quantitative et continue et de préférence dans une échelle standardisée (par exemple des variables centrées réduites).\nLe nombre de groupes à identifier k doit être choisi par l’utilisateur ou l’utilisatrice.\nLa distance d à utiliser entre les observations.\n\nLe fonctionnement classique du k-means est le suivant :\n\nDéfinir k centres de groupes de façon aléatoire.\nDéterminer pour chaque observation le centre de son groupe le plus proche en utilisant la fonction de distance.\nPour chacun des groupes ainsi formés, recalculer le centre du groupe en calculant le centroïde (moyennes le plus souvent) des observations appartenant à ce groupe.\nRépéter l’opération 2 avec les nouveaux centres.\nCalculer l’inertie expliquée par la nouvelle classification.\nComparer cette inertie expliquée avec celle obtenue lors de l’itération précédente.\nSi la variation entre les deux valeurs est supérieure à une certaine limite, reprendre à l’étape 2, sinon, l’algorithme prend fin.\n\nAinsi, l’algorithme k-means part d’une première classification obtenue aléatoirement et la raffine jusqu’au point où l’amélioration de la classification devient négligeable. Du fait de ce point de départ aléatoire, cet algorithme est dit heuristique, car deux exécutions risquent de ne pas donner exactement le même résultat. Par conséquent, en relaçant l’algorithme, vous pourriez obtenir des résultats légèrement différents, avec par exemple des groupes similaires, mais obtenus dans un autre ordre, le groupe 1 étant devenu le groupe 3 et vice-versa. Il est aussi possible d’obtenir des résultats radicalement différents d’une tentative à l’autre, ce qui signifie que les groupes formés sont très instables et ne sont pas représentatifs de la population étudiée.\n\n\n\n\n\nRéplicabilité des résultats dans R\n\n\nLorsqu’une méthode heuristique ou faisant appel au hasard est utilisée dans R, il est nécessaire de s’assurer que les résultats sont reproductibles. Cela permet notamment de relancer le même code et de réobtenir exactement les mêmes résultats : l’idée étant de figer le hasard.\nUltimement, un programme informatique est incapable de générer un résultat véritablement aléatoire, car il ne fait que suivre une suite d’opérations prédéterminées. Pour générer des résultats qui ressemblent au hasard, des algorithmes ont été proposés, partant d’une configuration initiale et appliquant une série d’opérations complexes permettant de générer des nombres semblant se distribuer aléatoirement. Si nous connaissons le point de départ de la suite d’opérations et que nous réappliquons ces dernières, alors nous sommes certains d’obtenir le même résultat. Il est possible, dans R, de définir un état initial de hasard à l’aide de la fonction set.seed. Avec ce point de départ défini, nous sommes certains d’obtenir les mêmes résultats en relançant les mêmes opérations.\nPrenons un exemple concret en sélectionnant aléatoire 3 chiffres dans un vecteur allant de 1 à 10.\n\nvec &lt;- 1:10\n\n# prenons un premier échantillon\nsample(vec, size = 3)\n\n[1] 4 9 3\n\n# et un second échantillon \nsample(vec, size = 3)\n\n[1]  6 10  8\n\n\nNous obtenons bien deux échantillons différents. Recommençons en utilisant la fonction set.seed pour obtenir cette fois-ci des résultats identiques.\n\nvec &lt;- 1:10\n\n# prenons un premier échantillon\nset.seed(123)\nsample(vec, size = 3)\n\n[1]  3 10  2\n\n# et un second échantillon \nset.seed(123)\nsample(vec, size = 3)\n\n[1]  3 10  2\n\n# prenons un troisème échantillon\nset.seed(4568997)\nsample(vec, size = 3)\n\n[1] 5 6 7\n\n# et un quatrième échantillon \nset.seed(4568997)\nsample(vec, size = 3)\n\n[1] 5 6 7\n\n\nVous constatez que nous utilisons cette fonction plusieurs fois au cours de cette section. Elle nous permet de nous assurer que les résultats obtenus ne changent pas entre le moment où nous écrivons le livre et le moment où nous le formatons. Sinon, le texte pourrait ne plus être en phase avec les images ou les tableaux.\n\n\nPour mieux comprendre le fonctionnement du k-means, nous proposons ici une visualisation de ses différentes itérations (figure 13.18). Nous pouvons constater que, pour ce jeu de données relativement simple, l’algorithme converge très rapidement et que sa solution varie peu au-delà de la troisième itération. L’amination de la figure 13.18 illustre pourquoi le k-means est appelé algorithme de nuées dynamiques.\n\n\nFigure 13.18: Algorithme K-means\n\n\n\n\n\n\nCentre de groupe et k-means\n\n\nÀ nouveau, puisque chaque itération du k-means nécessite de recalculer les centres des groupes formés, des problèmes peuvent être rencontrés avec certains types de distance. C’est pourquoi il est recommandé d’utiliser la distance euclidienne avec le k-means original. Si des distances plus complexes doivent être utilisées, il est préférable d’utiliser la classification ascendante hiérarchique.\n\n\n\n13.4.1.2 Choix du nombre optimal de groupes\nComme pour la CAH, le principal enjeu avec le k-means est de déterminer le nombre idéal de groupes pour effectuer la classification. Si ce nombre n’est pas connu à l’avance et qu’aucune forte justification théorique n’existe, il est possible d’utiliser les mêmes techniques que pour la CAH, soit la méthode du coude, l’indicateur de silhouette ou la méthode GAP.\n\n13.4.2 K-médianes\nLe k-medians est une variante du k-means. Contrairement au k-means privilégiant la distance euclidienne, le k-medians est à utiliser en priorité avec une distance de Manhattan. En effet, le centre d’un groupe n’est pas déterminé comme la moyenne des variables des observations appartenant à ce groupe (k-means), mais comme la médiane pour chaque variable (k-medians). En dehors de ces deux spécificités, il reprend le fonctionnement décrit plus haut pour le k-means. Il est particulièrement pertinent de l’utiliser quand un jeu de données comprend un très grand nombre de colonnes, car dans ce contexte, la distance euclidienne peine à représenter les différences entre les observations. De plus, l’utilisation de la médiane le rend moins sensible aux valeurs extrêmes.\n\n13.4.3 K-médoïds\nLe k-médoïds est également une variante du k-means. Le k-means crée des groupes en cherchant les centres de ces groupes dans l’espace multidimensionnel des données. Ces centres de groupes peuvent très bien ne pas correspondre à un point du jeu de données, au même titre que la moyenne d’une variable ne coïncide que rarement avec une observation réelle de cette variable. Pour le k-médoïds, les groupes sont formés en cherchant les centres de ces groupes parmi les observations du jeu de données. Ainsi, chaque groupe est centré sur une observation réelle, la plus similaire à l’ensemble des observations du groupe.\nL’algorithme effectue les opérations suivantes :\n\nSélectionner aléatoirement k observations du jeu de données, elles constituent les centres des groupes initiaux.\nAttribuer chaque observation au centre du groupe le plus proche.\nTant que la nouvelle solution est plus efficace, effectuer les opérations suivantes :\n\n\npour chaque centre m et pour chaque observation o,\n\nconsidérer l’inversion de m et o\n\nsi cette permutation est meilleure que les précédentes, la conserver en mémoire\n\n\neffectuer la meilleure permutation retenue si elle améliore la classification, sinon l’algorithme prend fin.\n\nLe k-médoïds est moins utilisé que le k-means, mais il est plus performant quand des distances autres que la distance euclidienne sont utilisées ou encore que des valeurs aberrantes/extrêmes sont présentes dans les données.\n\n13.4.4 Mise en œuvre dans R\nPour cet exemple, nous proposons d’utiliser le jeu de données spatiales LyonIris du package geocmeans. Ce jeu de données spatiales pour l’agglomération lyonnaise (France) comprend dix variables, dont quatre environnementales (EN) et six socioéconomiques (SE), pour les îlots regroupés pour l’information statistique (IRIS) de l’agglomération lyonnaise (tableau 13.7 et figure 12.4). Nous proposons de réaliser une analyse similaire à celle de l’article de Gelb et Apparicio (2021), soit de classer les IRIS de Lyon selon ces caractéristiques pour déterminer si certains groupes d’IRIS combinent des situations désavantageuses sur les plans sociaux et environnementaux, dans une perspective d’équité environnementale.\nNotez ici que la fonction st_drop_geometry provenant du package sf permet de retirer l’information géographique du jeu de données LyonIris pour obtenir un simple dataframe.\n\n\n\n\nTableau 13.7: Statistiques descriptives du jeu de données LyonIris\n\n\n\n\n\n\n\n\n\n\n\n\nNom\nIntitulé\nType\nMoy.\nE.-T.\nMin.\nMax.\n\n\n\nLden\nLden\nBruit routier (Lden dB(A))\nEN\n55,6\n4,9\n33,9\n71,7\n\n\nNO2\nNO2\nDioxyde d’azote (ug/m3)\nEN\n28,7\n7,9\n12,0\n60,2\n\n\nPM25\nPM25\nParticules fines (PM\\(_{2,5}\\))\nEN\n16,8\n2,1\n11,3\n21,9\n\n\nVegHautPrt\nVegHautPrt\nCanopée (%)\nEN\n18,7\n10,1\n1,7\n53,8\n\n\nPct0_14\nPct0_14\nMoins de 15 ans (%)\nSE\n18,5\n5,7\n0,0\n54,0\n\n\nPct_65\nPct_65\n65 ans et plus (%)\nSE\n16,2\n5,9\n0,0\n45,1\n\n\nPct_Img\nPct_Img\nImmigrants (%)\nSE\n14,5\n9,1\n0,0\n59,8\n\n\nTxChom1564\nTxChom1564\nTaux de chômage\nSE\n14,8\n8,1\n0,0\n98,8\n\n\nPct_brevet\nPct_brevet\nPersonnes à faible scolarité (%)\nSE\n23,5\n12,6\n0,0\n100,0\n\n\nNivVieMed\nNivVieMed\nMédiane du niveau de vie (Euros)\nSE\n21 804,5\n4 922,5\n11 324,0\n38 707,0\n\n\n\n\n\n\n\n13.4.4.1 Préparation des données\nLa première étape consiste donc à charger les données et à les préparer pour l’analyse. Toutes les variables que nous utilisons sont des variables continues. Cependant, elles ne sont pas exprimées dans la même échelle, nous proposons donc de les standardiser ici en les centrant (moyenne = 0) et en les réduisant (écart-type = 1). Cette opération peut être effectuée simplement dans R en utilisant la fonction scale.\n\n# Chargement des données\nlibrary(geocmeans)\nlibrary(sf)\n\ndata(LyonIris)\n\n# NB : LyonIris est un objet spatial, il faut donc extraire uniquement son DataFrame\nX &lt;- st_drop_geometry(LyonIris[c(\"Lden\" , \"NO2\" , \"PM25\" , \"VegHautPrt\" , \"Pct0_14\" , \"Pct_65\" , \"Pct_Img\",\n                     \"TxChom1564\" , \"Pct_brevet\" , \"NivVieMed\")])\n\n# Centrage et réduction de chaque colonne du DataFrame\nfor (col in names(X)){\n  X[[col]] &lt;- scale(X[[col]], center = TRUE, scale = TRUE)\n}\n\n\n13.4.4.2 Choix du nombre de groupes optimal\nLa seconde étape consiste à déterminer le nombre de groupes optimal. Pour cela, nous comparons les résultats des trois méthodes proposées : la méthode du coude, l’indice de silhouette et la méthode GAP. Pour chaque méthode, nous testons les nombres de groupes de 2 à 10.\n\n13.4.4.2.1 Méthode du coude\nCommençons par appliquer la méthode du coude. Nous calculons donc l’inertie expliquée par la classification pour différentes valeurs de k (nombre de groupes) avant de construire la figure 13.19.\n\nks &lt;- 2:10\n\n## ---- Méthode du coude ---- ##\ninertie_exps &lt;- sapply(ks, function(k){\n  # calcul du kmeans avec k\n  resultat &lt;- kmeans(X, centers = k)\n  # calcul de l'inertie expliquée (1 - inertie intragroupe / inertie totale)\n  inertie_exp &lt;- 1-(sum(resultat$withinss) / resultat$totss)\n  return(inertie_exp)\n})\n\ndf &lt;- data.frame(\n  k = ks,\n  inertie_exp = inertie_exps\n)\n\nggplot(df) + \n  geom_line(aes(x = k, y = inertie_exp)) + \n  geom_point(aes(x = k, y = inertie_exp), color = \"red\") + \n  labs(x = \"nombre de groupes\", y = \"inertie expliquée (%)\")\n\n\n\nFigure 13.19: Inertie expliquée pour différents nombres de groupes pour le k-means\n\n\n\nDans l’article original, quatre groupes avaient été retenus. Nous pouvons constater ici qu’un coude fort se situe à k = 3 et qu’au-delà de cette limite, l’ajout d’un groupe supplémentaire contribue à expliquer une plus petite partie de l’inertie supplémentaire comparativement au précédent.\n\n13.4.4.2.2 Indice de silhouette\nPoursuivons avec l’indice de silhouette calculé de nouveau avec des valeurs de k allant de 2 à 10. Notez que nous devons au préalable créer une matrice de distances entre les observations du jeu de données pour construire notre indice de silhouette. Puisque nous utilisons l’algorithme k-means, nous utilisons la distance euclidienne.\n\nks &lt;- 2:10\n\n# calcul d'une matrice de distance euclidienne entre les observations\ndist_mat &lt;- dist(X, method = \"euclidean\")\n\n## ---- indice de silhouette ---- ##\nvalues &lt;- sapply(ks, function(k){\n  resultat &lt;- kmeans(X, centers = k)\n  groupes &lt;- resultat$cluster\n  # calcul des valeurs de silhouette\n  sil &lt;- silhouette(groupes, dist = dist_mat)\n  # extraction de l'indice global (moyenne des moyennes)\n  idx &lt;- mean(summary(sil)$clus.avg.widths)\n  return(idx)\n})\n\ndf &lt;- data.frame(\n  k = ks,\n  silhouette = values\n)\n\nggplot(df) + \n  geom_line(aes(x = k, y = silhouette)) + \n  geom_point(aes(x = k, y = silhouette), color = \"red\") + \n  labs(x = \"nombre de groupes\", y = \"Indice de silhouette\")\n\n\n\nFigure 13.20: Indice de silhouette pour différents nombres de groupes pour le k-means\n\n\n\nÀ nouveau, la figure 13.20 indique que le nombre de groupes optimal est trois selon l’indice de silhouette.\n\n13.4.4.2.3 Méthode GAP\nPour appliquer la méthode GAP, nous proposons d’utiliser la fonction clusGap du package NbClust. Pour l’utiliser, il est nécessaire de définir une fonction renvoyant pour le nombre de groupes k et le jeu de données x une liste comprenant un vecteur attribuant chaque observation à chaque groupe. Il est possible de considérer ce type de fonction comme un « adaptateur ».\n\nlibrary(NbClust)\n\n# définition de la fonction adaptateur\nadaptor &lt;- function(x, k){\n  clust &lt;- kmeans(x, k)\n  return(list(\n    \"cluster\" = clust$cluster\n  ))\n}\n\n# calcul de la méthode GAP\nvals &lt;- clusGap(X, adaptor, K.max = 10, verbose = FALSE)\ntab &lt;- data.frame(vals$Tab)\ntab$k &lt;- 1:nrow(tab)\n\n# détermination des valeurs de k retenues par la méthode (1ere et 2e)\nis_valid &lt;- sapply(2:nrow(tab), function(i){\n  tab[i-1,\"gap\"] &gt;= (tab[i,\"gap\"] - tab[i,\"SE.sim\"])\n})\nvalids &lt;- subset(tab, is_valid)[1,]\nvalids2 &lt;- subset(tab, is_valid)[2,]\n\n# réalisation du graphique\nggplot(tab) + \n  geom_line(aes(x = k, y = gap)) + \n  geom_segment(x = valids$k, xend = valids$k, y = min(tab$gap), yend = valids$gap, \n               linetype = \"dashed\") +\n  geom_segment(x = valids2$k, xend = valids2$k, y = min(tab$gap), yend = valids2$gap, \n               linetype = \"dashed\") +\n  geom_point(aes(x = k, y = gap), color = \"red\") + \n  scale_x_continuous(breaks = 1:10) + \n  labs(x = \"nombre de groupes\", y = \"GAP\")\n\n\n\nFigure 13.21: Méthode GAP pour différents nombres de groupes pour le k-means\n\n\n\nLa figure 13.21 indique également que le nombre de groupes à retenir est trois. Nous retenons cependant quatre groupes pour pouvoir plus facilement comparer nos résultats avec ceux de l’article original.\n\n13.4.4.3 Application l’algorithme du k-means\n\nMaintenant que nous avons choisi le nombre de groupes à former, nous pouvons simplement appliquer la fonction kmeans présente de base dans R.\n\nset.seed(145)\nresultats &lt;- kmeans(X, centers = 4)\n\n\n13.4.4.4 Interprétation des résultats\nUne fois les groupes obtenus, l’étape la plus importante est de parvenir à interpréter ces groupes. Pour cela, il est nécessaire de les explorer en profondeur au travers des variables utilisées pour les constituer. Dans notre cas, le jeu de données LyonIris est spatialisé, nous pouvons donc commencer par cartographier les groupes.\n\nlibrary(tmap)\nLyonIris$groupes &lt;- paste(\"groupe\", resultats$cluster, sep = \" \")\n\ntm_shape(LyonIris) + \n  tm_polygons(col = \"groupes\", palette =\n                c(\"#EFBE89\", \"#4A6A9F\", \"#7DB47C\", \"#FAF29C\"), lty = 1, lwd = 0.1)\n\n\n\nFigure 13.22: Cartographie des groupes obtenus avec la méthode du k-means\n\n\n\nIl est ainsi possible de constater que le groupe 3 forme un ensemble assez compact d’IRIS au centre de Lyon. Le groupe 4 correspond quant à lui à des IRIS situés en périphérie plutôt éloignée, essentiellement à l’ouest. Le groupe 1 correspond à une périphérie proche du groupe 2 et apparaît comme un ensemble d’enclaves dispersées.\nPour distinguer rapidement les profils des différents groupes, il est possible d’utiliser un graphique en radar. La construction d’un tel graphique peut être un peu fastidieuse dans R, cependant le package geocmeans propose une fonction assez pratique : spiderPlots.\n\nlibrary(geocmeans)\n\n# création d'une matrice d'appartenance binaire des groupes\nmatrice_gp &lt;- fastDummies::dummy_cols(resultats$cluster, remove_selected_columns = TRUE)\n\n# réalisation du graphique\npar(mfrow=c(3,2), mai = c(0.1,0.1,0.1,0.1))\nplots &lt;- spiderPlots(X, matrice_gp, \n                     chartcolors = c(\"#EFBE89\", \"#4A6A9F\", \"#7DB47C\", \"#FAF29C\"))\n\n\n\nFigure 13.23: Graphiques en radar pour les groupes issus du k-means\n\n\n\nIl est ainsi possible de constater, à la figure 13.23, que le groupe 3 est caractérisé par un niveau de vie élevé, mais par des niveaux de concentration de pollution atmosphérique plus élevés également. Le groupe 4 en revanche est caractérisé par un important couvert végétal, un niveau de vie médian élevé et une plus forte proportion de personnes de plus de 65 ans. Le groupe 1 est quant à lui marqué par des niveaux sonores plus élevés. Enfin, le groupe 2 se caractérise par une plus grande proportion de population ayant obtenu comme diplôme le plus élevé le brevet des collèges, d’immigrants, de jeunes de moins de 15 ans et un taux de chômage plus élevé.\nNotez que ces graphiques nous permettent rapidement de nous faire une idée des caractéristiques des groupes, mais uniquement sur une échelle relative. En effet, ils ne nous indiquent à aucun moment la taille des écarts entre les groupes. Pour cela, il est nécessaire de réaliser des graphiques en violon pour chaque variable. Pour ce type de graphique, il est préférable d’utiliser les données originales non transformées pour pouvoir mieux appréhender si les différences entre les groupes sont importantes ou négligeables.\n\nlibrary(ggpubr)\nX2 &lt;- st_drop_geometry(LyonIris[c(\"Lden\" , \"NO2\" , \"PM25\" , \"VegHautPrt\" , \"Pct0_14\",\n                                  \"Pct_65\" , \"Pct_Img\" , \"TxChom1564\" , \"Pct_brevet\",\n                                  \"NivVieMed\")])\n\nplots &lt;- violinPlots(X2, as.character(resultats$cluster))\nggarrange(plotlist = plots, ncol = 2, nrow = 5)\n\n\n\nFigure 13.24: Graphiques en violon pour les groupes issus du k-means\n\n\n\nIl est également recommandé de calculer des statistiques descriptives par groupe et de les rapporter dans un tableau.\n\n# obtention d'un tableau par groupe\ntableaux &lt;- summarizeClusters(X2, matrice_gp, dec = 1, silent = TRUE)\n\n# concaténation des tableaux\ntableau_tot &lt;- do.call(rbind, tableaux)\n\n\n\n\n\nTableau 13.8: Descriptions des quatre groupes obtenus\n\n\nLden\nNO2\nPM25\nVegHautPrt\nPct014\nPct65\nPctImg\nTxChom1564\nPctbrevet\nNivVieMed\n\n\n\ngroupe 1\n\n\nQ5\n53,8\n25,2\n15,6\n6,6\n12,4\n10,0\n8,1\n7,6\n17,4\n15 822,7\n\n\nQ10\n54,5\n26,4\n15,9\n8,0\n13,9\n11,4\n9,2\n9,8\n18,1\n16 976,0\n\n\nQ25\n56,3\n29,3\n17,0\n11,0\n16,3\n13,6\n11,8\n11,5\n20,8\n18 454,0\n\n\nQ50\n58,9\n32,3\n18,2\n15,3\n18,3\n16,6\n15,9\n13,7\n24,1\n19 559,0\n\n\nQ75\n62,5\n36,5\n18,7\n22,3\n20,5\n19,5\n18,6\n16,9\n30,0\n21 575,2\n\n\nQ90\n64,7\n39,3\n19,0\n30,3\n22,7\n22,8\n21,1\n19,8\n33,0\n23 544,7\n\n\nQ95\n66,7\n40,7\n19,3\n35,6\n24,9\n25,1\n23,0\n21,9\n37,7\n24 765,7\n\n\nMean\n59,6\n32,7\n17,8\n17,2\n18,2\n16,7\n15,7\n14,1\n25,5\n19 948,0\n\n\nStd\n4,2\n5,2\n1,2\n8,5\n4,0\n4,7\n6,5\n4,3\n7,6\n2 637,2\n\n\ngroupe 2\n\n\nQ5\n50,8\n19,3\n13,9\n6,1\n18,3\n6,4\n17,7\n16,5\n30,5\n12 323,5\n\n\nQ10\n52,0\n20,2\n14,3\n7,8\n20,0\n8,7\n20,2\n16,8\n32,9\n12 747,0\n\n\nQ25\n53,9\n23,0\n15,3\n11,2\n22,8\n10,7\n23,5\n19,6\n36,2\n13 530,5\n\n\nQ50\n56,4\n25,1\n16,2\n14,5\n25,2\n13,6\n28,0\n24,5\n39,9\n15 340,0\n\n\nQ75\n58,4\n29,4\n17,0\n18,1\n27,8\n16,9\n33,5\n32,5\n46,0\n16 342,0\n\n\nQ90\n63,1\n33,7\n18,5\n24,4\n31,3\n20,2\n38,2\n36,3\n50,2\n18 363,9\n\n\nQ95\n64,9\n39,0\n19,1\n28,1\n32,8\n21,4\n41,1\n38,0\n60,2\n20 128,6\n\n\nMean\n56,8\n26,3\n16,2\n15,4\n25,4\n13,8\n28,5\n26,6\n42,0\n15 401,4\n\n\nStd\n4,1\n6,3\n1,5\n6,8\n6,2\n4,8\n8,0\n10,5\n11,3\n2 340,4\n\n\ngroupe 3\n\n\nQ5\n50,2\n28,3\n17,0\n5,0\n6,8\n5,2\n5,8\n7,7\n6,7\n19 029,9\n\n\nQ10\n51,2\n29,5\n17,6\n6,6\n9,5\n7,2\n6,7\n8,5\n7,7\n19 546,4\n\n\nQ25\n53,2\n31,3\n18,6\n9,2\n11,4\n9,5\n7,9\n11,0\n9,5\n21 652,0\n\n\nQ50\n55,2\n35,4\n19,3\n12,6\n14,1\n12,4\n11,0\n12,9\n12,0\n23 342,0\n\n\nQ75\n58,0\n39,6\n19,8\n16,0\n16,2\n16,0\n13,1\n15,1\n14,8\n25 954,1\n\n\nQ90\n60,0\n43,0\n20,1\n21,0\n18,2\n18,9\n16,3\n18,0\n16,6\n28 951,0\n\n\nQ95\n61,2\n44,4\n20,4\n29,3\n19,5\n20,9\n17,7\n19,3\n19,1\n31 922,5\n\n\nMean\n55,6\n35,8\n19,0\n13,6\n13,8\n12,6\n11,1\n13,1\n12,1\n23 999,7\n\n\nStd\n3,7\n5,6\n1,0\n6,8\n4,2\n4,7\n4,6\n4,4\n4,0\n3 870,3\n\n\ngroupe 4\n\n\nQ5\n44,9\n14,7\n12,7\n8,2\n13,1\n12,7\n3,8\n6,7\n10,8\n19 496,0\n\n\nQ10\n46,6\n15,7\n13,0\n11,8\n14,9\n13,5\n4,4\n7,0\n12,4\n20 257,0\n\n\nQ25\n50,3\n19,0\n13,8\n16,7\n17,1\n16,1\n6,0\n8,0\n15,7\n21 963,0\n\n\nQ50\n52,6\n22,0\n14,7\n24,9\n18,9\n19,3\n8,1\n9,8\n20,0\n24 109,8\n\n\nQ75\n54,9\n25,2\n15,5\n32,6\n20,8\n22,8\n10,9\n12,0\n25,6\n26 698,0\n\n\nQ90\n57,7\n27,5\n16,3\n41,2\n22,3\n27,4\n14,5\n14,7\n30,6\n29 947,0\n\n\nQ95\n59,1\n28,7\n16,8\n43,6\n22,7\n29,7\n18,1\n16,6\n33,1\n32 386,5\n\n\nMean\n52,3\n21,8\n14,7\n25,5\n18,6\n20,1\n8,8\n10,4\n21,1\n24 761,6\n\n\nStd\n4,3\n4,4\n1,2\n11,0\n3,1\n5,6\n4,2\n3,4\n7,6\n4 008,7\n\n\n\n\n\n\n\n\nLes constats que nous avons faits précédemment sont confirmés par la figure 13.24 et le tableau 13.8. Nous retrouvons ici les groupes originaux décrits dans l’article de Gelb et Apparicio (2021) :\n\nGroupe 1 : les espaces interstitiels, formant une périphérie proche du centre et relativement hétérogène sur les variables étudiées, mais caractérisée par des niveaux de bruit importants.\nGroupe 2 : les banlieues jeunes et défavorisées, avec des niveaux d’exposition aux pollutions atmosphérique et sonore relativement élevés comparativement à l’ensemble de la région.\nGroupe 3 : les quartiers centraux aisés, mais marqués par les plus hauts niveaux de pollution atmosphérique.\nGroupe 4 : les communes rurales, aisées et vieillissantes.\n\n\n\n\n\n\nInterprétation interactive\n\n\nSi, comme dans notre exemple, vos données comportent une dimension spatiale, le package geocmeans propose une fonction intéressante appelée sp_clust_explorer démarrant une application permettant d’explorer les résultats de votre classification. Le seul enjeu est de créer un objet de la classe FCMres. Voici un court exemple :\n\n# création d'une matrice binaire d'appartenance\nkmeans_mat &lt;- dummy_cols(resultats$cluster, remove_selected_columns = TRUE)\n\n# extraction des centres de notre classification\ncentres &lt;- resultats$centers\n\n# création de l'objet FCMres\nkmeansres &lt;- FCMres(list(\n  \"Centers\" = centres,\n  \"Belongings\" = kmeans_mat,\n  \"Data\" = X2,\n  \"m\" = 1,\n  \"algo\" = \"kmeans\"\n))\n\n# démarrage de l'application shiny\nsp_clust_explorer(object = kmeansres, spatial = LyonIris)\n\n\n\n\n13.4.4.5 K-médianes et K-médoides\nNous présentons simplement ici comment effectuer la même analyse en utilisant les variantes du k-means, soit le k-medians et le k-mediods.\nIl existe relativement peu d’implémentation du k-medians dans R, nous optons donc ici pour la fonction kGmedian du package Gmedian. Pour le k-mediods, nous avons retenu la fonction pam du package cluster.\n\nlibrary(Gmedian)\nk_median_res &lt;- kGmedian(X, 4)\n\nlibrary(cluster)\nk_mediods_res &lt;- pam(X,4)\n\nJuste pour le plaisir des yeux, nous pouvons cartographier les trois classifications obtenues en nous assurant au préalable de faire coïncider les groupes les plus similaires de nos trois classifications.\n\nmatrice_gp_kmeans &lt;- dummy_cols(resultats$cluster,\n                                remove_selected_columns = TRUE)\nmatrice_gp_kmedians &lt;- dummy_cols(as.vector(k_median_res$cluster),\n                                  remove_selected_columns = TRUE)\nmatrice_gp_kmedioids &lt;- dummy_cols(k_mediods_res$cluster,\n                                   remove_selected_columns = TRUE)\n\n# Appariement des groupes du k-medians avec ceux du kmeans\nmatrice_gp_kmedians &lt;- geocmeans::groups_matching(as.matrix(matrice_gp_kmeans),\n                                                 as.matrix(matrice_gp_kmedians))\n\n# Appariement des groupes du k-medioids avec ceux du kmeans\nmatrice_gp_kmedioids &lt;- geocmeans::groups_matching(as.matrix(matrice_gp_kmeans),\n                                                   as.matrix(matrice_gp_kmedioids))\n\n# ajouts des colonnes nécessaires à LyonIris\ncolnames(matrice_gp_kmeans) &lt;- paste0(\"groupe_\", 1:4)\ncolnames(matrice_gp_kmedians) &lt;- paste0(\"groupe_\", 1:4)\ncolnames(matrice_gp_kmedioids) &lt;- paste0(\"groupe_\", 1:4)\n\nLyonIris$kmeans &lt;- colnames(matrice_gp_kmeans)[max.col(matrice_gp_kmeans)]\nLyonIris$kmedians &lt;- colnames(matrice_gp_kmedians)[max.col(matrice_gp_kmedians)]\nLyonIris$kmedioids &lt;- colnames(matrice_gp_kmedioids)[max.col(matrice_gp_kmedioids)]\n\n# construction de la figure\ncouleurs &lt;- c(\"#EFBE89\", \"#4A6A9F\", \"#7DB47C\", \"#FAF29C\")\n\nmap1 &lt;- tm_shape(LyonIris) + \n  tm_polygons(col = \"kmeans\", palette = couleurs, lty = 1, lwd = 0.1)\nmap2 &lt;- tm_shape(LyonIris) + \n  tm_polygons(col = \"kmedians\", palette = couleurs, lty = 1, lwd = 0.1)\nmap3 &lt;- tm_shape(LyonIris) + \n  tm_polygons(col = \"kmedioids\", palette = couleurs, lty = 1, lwd = 0.1)\n\ntmap_arrange(map1, map2, map3, \n             ncol = 2, nrow = 2)\n\n\n\nFigure 13.25: Comparaison géographique des résultats obtenus pour le k-means, le k-medians et le k-medoids\n\n\n\nLes trois cartes sont très similaires (figure 13.25), ce qui signifie que les trois algorithmes tendent à attribuer les observations aux mêmes groupes. Cependant, nous observons des différences, notamment au nord avec des observations alternant entre les groupes 2 et 3 selon la méthode employée. Cela peut notamment signifier que ces observations sont « indécises », qu’il est difficile de les attribuer définitivement à une catégorie en particulier. Pour prendre en compte cette forme d’incertitude, il est possible d’opter pour des méthodes de classification en logique floue.\n\n13.4.5 Extensions en logique floue : c-means, c-medoids\n\nComme nous l’avons mentionné en introduction de cette section, les méthodes de classification floues ont pour objectif d’évaluer le degré d’appartenance de chaque observation à chaque groupe plutôt que d’attribuer chaque observation à un seul groupe. Il est ainsi possible de repérer des observations incertaines, à cheval entre plusieurs groupes. Nous présentons ici deux algorithmes appartenant à cette famille : le c-means et le c-medoids. Il s’agit dans les deux cas d’extensions des k-means et k-medoids vus précédemment.\nPour ces deux méthodes, comme pour le k-means, le nombre de groupes k doit être spécifié. Elles comprennent cependant un paramètre supplémentaire : m, appelé paramètre de floutage qui contrôle à quel point le résultat obtenu sera flou ou strict. Une valeur de 1 produit une classification stricte (chaque observation appartient à un seul groupe) et une valeur plus grande conduit à des classifications de plus en plus floues, jusqu’à ce que chaque observation appartienne à un degré identique à chacun des groupes. Il est recommandé de sélectionner m en même temps que k, car ces deux valeurs influencent simultanément la qualité de la classification. La meilleure approche consiste à tester un ensemble de combinaisons de m et de k et à comparer les valeurs obtenues pour différents indicateurs de qualité de classification floue. Parmi ces indicateurs, il est notamment recommandé d’utiliser le pourcentage de l’inertie expliquée, l’indice de silhouette pour classification floue, l’indice de Xie et Beni (1991), et de Fukuyama et Sugeno (Fukuyama 1989).\n\n13.4.5.1 Mise en œuvre du c-means dans R\nLe package fclust comprend un très grand nombre de méthodes pour effectuer des classifications floues, nous l’utilisons donc en priorité ici en combinaison avec des fonctions d’interprétation du package geocmeans.\n\n13.4.5.1.1 Préparation des données\nComme pour le k-means, cette méthode nécessite de disposer d’un jeu de données ne comprenant que des variables quantitatives dans la même échelle. Nous commençons donc à nouveau par standardiser nos données. Pour varier les plaisirs, nous optons cette fois-ci pour une transformation des variables dans une échelle allant de 0 à 100.\n\nlibrary(fclust)\n\ndata(LyonIris)\n\n# NB : LyonIris est un objet spatial, il faut donc extraire uniquement son DataFrame\nX &lt;- st_drop_geometry(LyonIris[c(\"Lden\" , \"NO2\" , \"PM25\" , \"VegHautPrt\" , \"Pct0_14\",\n                                 \"Pct_65\" , \"Pct_Img\",\n                                 \"TxChom1564\" , \"Pct_brevet\" , \"NivVieMed\")])\n\n# changement d'échelle des données (0 à 100)\nto_0_100 &lt;- function(x){\n  return((x-min(x)) / (max(x) - min(x)) * 100)\n}\n\nfor (col in names(X)){\n  X[[col]] &lt;- to_0_100(X[[col]])\n}\n\n\n13.4.5.1.2 Sélection de k et de m\n\nLa seconde étape consiste à sélectionner les valeurs optimales pour k et m. Nous testons ici toutes les valeurs de k de 2 à 7, et les valeurs de m de 1,5 à 2,5 (avec des écarts de 0,1).\n\nlibrary(e1071)\nset.seed(123)\nms &lt;- seq(1.5,2.5,by = 0.1)\nks &lt;- 2:7\n\n\n# calcul de toutes les combinaisons\ncombinaisons &lt;- expand.grid(ms, ks)\n\neval_indices &lt;- c(\"Explained.inertia\", \"Silhouette.index\", \"FukuyamaSugeno.index\")\n\nvalues &lt;- apply(combinaisons, MARGIN = 1, FUN = function(row){\n  m &lt;- row[[1]]\n  k &lt;- row[[2]]\n  resultats &lt;- FKM(X, k, m)\n  idx &lt;- geocmeans::calcqualityIndexes(as.matrix(X),\n                                       as.matrix(resultats$U), \n                                       m = m,\n                                       indices = eval_indices)\n  return(c(k, m, unlist(idx)))\n})\n\ndf_scores &lt;- data.frame(t(values))\nnames(df_scores) &lt;- c(\"k\", \"m\", \"inertie\", \"silhouette\", \"FukuyamaSugeno\")\n\n# changer l'échelle de l'indice pour un graphique plus joli\ndf_scores$FukuyamaSugeno &lt;- round(df_scores$FukuyamaSugeno/10000,2)\n\n# création de trois figures pour représenter les trois indicateurs\nlibrary(viridis)\n\nplot1 &lt;- ggplot(df_scores) + \n  geom_raster(aes(x = k, y = m, fill = inertie)) + \n  scale_fill_viridis() + \n  scale_x_continuous(breaks = c(2,3,4,5,6,7)) +\n  coord_fixed(ratio=4) + \n  guides(fill = guide_colourbar(barwidth = 5, barheight = 0.5)) +\n  labs(fill = \"Inertie expliquée\") + \n  theme(legend.position = \"bottom\", legend.box = \"horizontal\",\n        legend.title = element_text( size=9), legend.text=element_text(size=8))\n\nplot2 &lt;- ggplot(df_scores) + \n  geom_raster(aes(x = k, y = m, fill = silhouette)) + \n  scale_fill_viridis() + \n  scale_x_continuous(breaks = c(2,3,4,5,6,7)) +\n  coord_fixed(ratio=4) + \n  guides(fill = guide_colourbar(barwidth = 5, barheight = 0.5)) +\n  labs(fill = \"Indice de silhouette\") + \n  theme(legend.position = \"bottom\", legend.box = \"horizontal\",\n        legend.title = element_text( size=9), legend.text=element_text(size=8))\n\nplot3 &lt;- ggplot(df_scores) + \n  geom_raster(aes(x = k, y = m, fill = FukuyamaSugeno)) + \n  scale_fill_viridis() + \n  scale_x_continuous(breaks = c(2,3,4,5,6,7)) +\n  coord_fixed(ratio=4) + \n  guides(fill = guide_colourbar(barwidth = 5, barheight = 0.5)) +\n  labs(fill = \"Indice de Fukuyama et Sugeno\") + \n  theme(legend.position = \"bottom\", legend.box = \"horizontal\",\n        legend.title = element_text( size=9), legend.text=element_text(size=8))\n\nggarrange(plot1, plot2, plot3, ncol = 2, nrow = 2)\n\n\n\nFigure 13.26: Sélection des paramètres k et m pour l’algorithme c-means\n\n\n\nLes trois graphiques à la figure 13.26 semblent indiquer des solutions différentes. Sans surprise, augmenter le niveau de flou (m) réduit l’inertie expliquée, alors qu’augmenter le nombre de groupes (k) augmente l’inertie expliquée. L’indice de silhouette indique assez clairement que le nombre de trois groupes serait le meilleur choix, suivi par deux ou quatre groupes, si m est inférieur à 1,8. Cependant, ne retenir que trois groupes ne permet d’expliquer que 30% de l’inertie. Afin de nous rapprocher des résultats de l’article original (Gelb et Apparicio 2021), nous retenons m = 1,5 et k = 4.\n\n13.4.5.1.3 Application l’algorithme c-means\n\nAvec k et m définis, il ne reste plus qu’à appliquer l’algorithme à nos observations.\n\nset.seed(123)\ncmeans_resultats &lt;- FKM(X, 4, 1.5)\n\nL’objet obtenu cmeans_resultats contient les résultats de la classification. Plus spécifiquement, cmeans_resultats$U est la matrice d’appartenance, soit une matrice de taille n x k, dont chaque case \\(U_{ij}\\) indique la probabilité pour l’observation i d’appartenir au groupe j. cmeans_resultats$H contient le centre des groupes, et cmeans_resultats$Clus, le groupe auquel chaque observation à le plus de chances d’appartenir. Pour comparer plus facilement nos résultats avec ceux du k-means, nous pouvons changer l’ordre des groupes obtenus pour les faire coïncider avec les groupes les plus similaires obtenus avec la méthode k-means.\n\n# changeons l'ordre des groupes\nU &lt;- cmeans_resultats$U\nU2 &lt;- geocmeans::groups_matching(as.matrix(matrice_gp_kmeans), as.matrix(U))\n\n# mais aussi du centre des classes\nidx &lt;- as.integer(gsub(\"Clus \" , \"\", colnames(U2), fixed = TRUE))\nH2 &lt;- cmeans_resultats$H[idx,]\n\n# et recalcul du groupe le plus probable\nClus2 &lt;- data.frame(\n  \"Cluster\" = (1:4)[max.col(U2, ties.method=\"first\")],\n  \"Membership degree\" = apply(U2, MARGIN = 1, max)\n)\n\ncolnames(U2) &lt;- paste(\"Clus\",1:4, sep = \" \")\nrownames(H2) &lt;- paste(\"Clus\",1:4, sep = \" \")\n\ncmeans_resultats$U &lt;- U2\ncmeans_resultats$H &lt;- H2\ncmeans_resultats$Clus &lt;- Clus2\n\n\n13.4.5.1.4 Interprétation des résultats\nGlobalement, les approches pour interpréter les résultats issus d’une classification obtenue par c-means sont les mêmes que pour une classification obtenue par k-means.\nCommençons donc par créer plusieurs cartes des probabilités d’appartenir aux différents groupes.\n\nmaps &lt;- mapClusters(LyonIris, cmeans_resultats$U)\n\ntmap_arrange(maps$ProbaMaps, ncol = 2, nrow = 2)\n\n\n\nFigure 13.27: Cartographie des probabilités d’appartenir aux quatre groupes identifiés par l’algorithme c-means\n\n\n\nSur les cartes de la figure 13.27, l’intensité de bleu correspond à la probabilité pour chaque IRIS d’appartenir aux différents groupes. Nous retrouvons les principales structures spatiales que nous avons identifiées avec le k-means; cependant, nous pouvons à présent constater que le groupe 1 est bien plus incertain que les autres. Nous pouvons une fois encore générer un graphique en radar pour comparer les profils des quatre groupes.\n\npar(mfrow=c(3,2), mai = c(0.1,0.1,0.1,0.1))\nspiderPlots(X, cmeans_resultats$U,\n            chartcolors = c(\"#EFBE89\", \"#4A6A9F\", \"#7DB47C\", \"#FAF29C\"))\n\n\n\nFigure 13.28: Graphique en radar pour les résultats du c-means\n\n\n\nSans surprise, nous retrouvons essentiellement les profils que nous avons obtenus avec le k-means dans la figure 13.28. Pour compléter la lecture des résultats, il est nécessaire de se pencher sur le tableau des statistiques descriptives des différents groupes. Une fois encore, nous proposons d’utiliser la fonction summarizeClusters du package geocmeans. Notez que cette fonction calcule les statistiques descriptives pondérées en fonction de l’appartenance des observations aux groupes. Ainsi, une observation ayant une faible chance d’appartenir à un groupe ne contribue que faiblement aux statistiques descriptives de ce groupe.\n\ndf &lt;-  st_drop_geometry(LyonIris[c(\"Lden\" , \"NO2\" , \"PM25\" , \"VegHautPrt\" , \"Pct0_14\",\n                                   \"Pct_65\" , \"Pct_Img\", \"TxChom1564\",\n                                   \"Pct_brevet\" , \"NivVieMed\")])\n\ntableaux &lt;- summarizeClusters(data = df, \n                  belongmatrix = cmeans_resultats$U,\n                  weighted = TRUE, dec = 1)\n\ntableau_tot &lt;- do.call(rbind, tableaux)\n\n\n\n\n\nTableau 13.9: Description des groupes avec la méthode c-means\n\n\nLden\nNO2\nPM25\nVegHautPrt\nPct014\nPct65\nPctImg\nTxChom1564\nPctbrevet\nNivVieMed\n\n\n\ngroupe 1\n\n\nQ5\n48,7\n15,8\n13,5\n6,2\n12,2\n9,5\n4,3\n6,7\n10,7\n16 191,5\n\n\nQ10\n50,5\n18,7\n13,9\n7,4\n14,2\n11,4\n5,7\n7,6\n13,7\n17 616,0\n\n\nQ25\n52,4\n20,9\n14,7\n11,4\n16,8\n14,2\n7,8\n9,3\n18,4\n19 559,0\n\n\nQ50\n54,7\n25,0\n15,6\n15,8\n19,0\n17,7\n11,2\n12,1\n24,0\n21 947,5\n\n\nQ75\n57,6\n28,6\n16,8\n22,3\n21,3\n21,1\n15,6\n15,1\n29,8\n24 069,2\n\n\nQ90\n60,7\n33,0\n18,5\n29,8\n23,2\n24,4\n20,3\n18,5\n34,7\n26 164,0\n\n\nQ95\n63,1\n37,8\n19,0\n34,3\n25,4\n27,5\n23,5\n22,3\n39,0\n28 931,0\n\n\nMean\n55,1\n25,4\n15,8\n17,5\n18,9\n17,9\n12,4\n13,0\n24,7\n21 951,6\n\n\nStd\n4,4\n6,3\n1,7\n8,6\n4,5\n5,7\n6,8\n6,8\n10,3\n3 744,1\n\n\ngroupe 2\n\n\nQ5\n50,8\n19,6\n14,0\n6,4\n12,9\n7,5\n8,4\n9,4\n15,5\n12 392,0\n\n\nQ10\n52,1\n21,4\n14,6\n7,7\n16,6\n8,8\n12,9\n13,0\n22,0\n12 920,0\n\n\nQ25\n54,5\n23,2\n15,8\n10,8\n20,1\n11,1\n19,6\n16,8\n30,5\n14 078,0\n\n\nQ50\n57,1\n26,6\n16,6\n14,5\n23,6\n13,9\n25,8\n22,0\n37,5\n15 985,0\n\n\nQ75\n59,5\n31,9\n17,8\n19,0\n27,0\n17,4\n32,1\n30,1\n44,2\n18 566,2\n\n\nQ90\n63,3\n37,4\n18,8\n25,4\n29,7\n20,7\n37,8\n33,9\n48,6\n21 146,0\n\n\nQ95\n64,7\n39,6\n19,3\n30,7\n32,3\n23,3\n39,4\n37,7\n52,9\n23 712,5\n\n\nMean\n57,3\n28,1\n16,7\n15,8\n23,4\n14,4\n25,5\n23,0\n36,9\n16 658,7\n\n\nStd\n4,4\n6,6\n1,6\n7,6\n6,3\n5,1\n9,7\n9,3\n12,3\n3 611,9\n\n\ngroupe 3\n\n\nQ5\n50,6\n27,5\n16,3\n6,2\n8,6\n6,8\n6,0\n7,6\n7,5\n16 976,0\n\n\nQ10\n51,9\n28,8\n17,1\n7,7\n10,4\n8,4\n7,0\n8,6\n8,7\n18 434,0\n\n\nQ25\n53,8\n30,9\n18,3\n10,2\n12,6\n10,8\n9,1\n11,1\n11,0\n19 785,0\n\n\nQ50\n56,5\n35,0\n18,9\n13,4\n15,2\n14,1\n12,3\n13,1\n14,8\n22 289,0\n\n\nQ75\n59,4\n38,7\n19,6\n17,6\n17,9\n17,5\n15,9\n15,5\n21,5\n24 522,0\n\n\nQ90\n62,7\n41,1\n20,0\n24,8\n20,5\n20,5\n18,9\n18,4\n27,6\n27 600,0\n\n\nQ95\n64,3\n44,3\n20,2\n30,6\n21,8\n23,5\n21,0\n20,6\n32,2\n29 732,8\n\n\nMean\n56,8\n34,9\n18,7\n14,8\n15,3\n14,2\n12,8\n13,7\n16,9\n22 595,1\n\n\nStd\n4,4\n5,9\n1,3\n7,2\n4,6\n5,2\n5,8\n5,5\n9,1\n3 969,2\n\n\ngroupe 4\n\n\nQ5\n44,2\n14,7\n12,4\n11,3\n12,5\n11,1\n4,0\n6,7\n9,3\n18 686,5\n\n\nQ10\n45,7\n15,6\n12,9\n16,4\n14,1\n13,0\n4,5\n7,2\n11,2\n20 220,0\n\n\nQ25\n49,3\n18,7\n13,7\n24,7\n16,5\n15,8\n5,8\n7,9\n14,2\n22 622,0\n\n\nQ50\n52,3\n22,0\n14,6\n30,4\n18,6\n19,0\n7,5\n9,7\n17,9\n24 843,0\n\n\nQ75\n55,1\n26,3\n15,9\n37,9\n20,8\n22,3\n10,1\n12,1\n22,8\n28 590,0\n\n\nQ90\n58,9\n30,9\n17,1\n42,3\n22,4\n27,2\n14,4\n15,3\n30,1\n31 294,0\n\n\nQ95\n60,8\n34,5\n18,3\n45,7\n23,2\n28,9\n19,3\n18,6\n33,2\n34 574,0\n\n\nMean\n52,3\n22,8\n14,9\n30,3\n18,4\n19,4\n8,8\n10,9\n19,5\n25 547,4\n\n\nStd\n5,1\n6,3\n1,7\n10,0\n4,1\n5,9\n5,5\n6,2\n9,2\n4 603,5\n\n\n\n\n\n\n\n\n\n13.4.5.2 Mise en œuvre du c-medoids dans R\nLa méthode du c-medoids dans R peut être mise en œuvre avec la fonction FKM.med du package fclust. Le processus d’analyse et de validation est identique à celui présenté ci-dessus pour le c-means. Nous ne donnons donc pas un exemple complet de la méthode.\n\n\n\n\n\nStabilité des groupes obtenus par les méthodes de nuées dynamiques\n\n\nPuisque la méthode k-means et ses variantes reposent sur une initialisation aléatoire de leur algorithme, les résultats peuvent varier en fonction de cet état de départ. Dans certains contextes, il est possible que les résultats obtenus varient significativement, ce qui signifie que les groupes obtenus ne sont pas représentatifs de la population étudiée. Une solution pour vérifier si ce problème se pose est simplement de relancer l’algorithme un grand nombre de fois (généralement 1000) et de comparer les résultats obtenus au cours de ces réplications.\nCette méthode est rarement implémentée directement et requiert d’écrire sa propre fonction. geocmeans dispose d’une fonction déjà existante, mais ne pouvant être appliquée qu’avec l’algorithme c-means. Nous proposons ici une implémentation pour la méthode k-means qui peut facilement être adaptée aux autres méthodes de classifications heuristiques.\nLa démarche à suivre est la suivante :\n\nAppliquer l’algorithme une première fois pour obtenir une classification de référence à laquelle nous comparerons toutes les réplications.\n\nEffectuer 1000 itérations au cours desquelles :\n\nUne nouvelle classification est calculée.\nLes groupes obtenus sont comparés à ceux de la classification de référence.\nL’indice de Jacard est calculé entre les groupes des deux classifications.\nLes valeurs de l’indice de Jacard sont enregistrées.\nLes centres des groupes sont enregistrés.\n\n\n\nAinsi, nous obtenons 1000 valeurs de l’indice de Jacard pour chaque groupe. Cet indice permet de mesurer le degré d’accord entre deux variables (ici les probabilités d’appartenance des observations au même groupe pour deux classifications différentes.) Une valeur moyenne en dessous de 0,5 indique qu’un groupe est très instable, car nous obtenons des résultats très différents lors des réplications. Une valeur entre 0,6 et 0,75 indique qu’un groupe semble bien exister dans les données, bien que marqué par une certaine incertitude. Une valeur au-dessus de 0,8 indique un groupe bien identifié et stable.\nNous obtenons également les centres des groupes des 1000 classifications. Il est ainsi possible de représenter leurs histogrammes et de déterminer si les centres des groupes sont stables (unimodalité et faible variance) ou incertains (plusieurs modes et/ou forte variance).\n\n# X sera le jeu de données pour la classification\n# clust_ref sera le vecteur indiquant le groupe de chaque observation obtenu par kmeans\n# nsim sera le nombre de simulations à effectuer\nkmeans_stability &lt;- function(X, clust_ref, nsim, verbose = TRUE){\n  \n  # définition de la matrice d'appartenance originale\n  k &lt;- length(unique(clust_ref))\n  ref_mat &lt;- dummy_cols(clust_ref, remove_selected_columns = TRUE)\n  colnames(ref_mat) &lt;- paste0(\"groupe_\",1:k)\n  \n  # lancement des itérations\n  sim_resultats &lt;- lapply(1:nsim, function(i){\n    \n     # afficher la progression si requis\n    if(verbose){\n      print(paste0(\"iteration numeros : \", i, \"/\", nsim))\n    }\n    # calculer le kmeans\n    km_res &lt;- kmeans(X, k)\n    sim_mat &lt;- dummy_cols(km_res$cluster, remove_selected_columns = TRUE)\n    \n    # ajustement de l'ordre des groupes avec geocmeans\n    sim_mat &lt;- groups_matching(as.matrix(ref_mat), as.matrix(sim_mat))\n    \n    # calcul des indices de jacard\n    jac_idx &lt;- sapply(1:k, function(j){\n      calc_jaccard_idx(sim_mat[,j], ref_mat[,j])\n    })\n    \n    # récuperation des centres des groupes\n    idx &lt;- as.integer(gsub(\".data_\" , \"\", colnames(sim_mat), fixed = TRUE))\n    centers &lt;- data.frame(km_res$centers)\n    centers &lt;- centers[idx,]\n    centers$groupe &lt;- 1:k\n    \n    return(list(\n      \"jac_idx\" = jac_idx,\n      \"centers\" = centers\n    ))\n    \n  })\n  \n  # les simulations sont finies, nous pouvons combiner les résultats\n  all_jac_values &lt;- do.call(rbind, lapply(sim_resultats, function(x){x$jac_idx}))\n  all_centers &lt;- do.call(rbind, lapply(sim_resultats, function(x){x$centers}))\n  return(list(\n    \"jacard_values\" = all_jac_values,\n    \"centers\" = all_centers\n  ))\n}\n\nIl ne nous reste plus qu’à utiliser notre nouvelle fonction pour déterminer si les groupes obtenus avec notre k-means sont stables.\n\ndata(LyonIris)\nset.seed(123)\n\n# NB : LyonIris est un objet spatial, il faut donc extraire uniquement son DataFrame\nX &lt;- st_drop_geometry(LyonIris[c(\"Lden\" , \"NO2\" , \"PM25\" , \"VegHautPrt\" , \"Pct0_14\" , \"Pct_65\" , \"Pct_Img\",\n                     \"TxChom1564\" , \"Pct_brevet\" , \"NivVieMed\")])\n\n# Centrage et réduction de chaque colonne du DataFrame\nfor (col in names(X)){\n  X[[col]] &lt;- scale(X[[col]], center = TRUE, scale = TRUE)\n}\n\n# calcul du kmeans de référence\nkmeans_ref &lt;- kmeans(X, 4)\n\n# application de la fonction de stabilité\nstab_results &lt;- kmeans_stability(X, kmeans_ref$cluster, nsim = 1000, verbose = FALSE)\n\nNous pouvons à présent vérifier la stabilité de nos quatre groupes.\n\njacard_values &lt;- data.frame(stab_results$jacard_values)\nnames(jacard_values) &lt;- paste(\"groupe\", 1:4, sep = \"_\")\n\ndf &lt;- reshape2::melt(jacard_values)\ndf$groupes &lt;- as.factor(df$variable)\n\nggplot(df) + \n  geom_histogram(aes(x = value), bins = 30) + \n  facet_wrap(vars(groupes), ncol = 2) + \n  labs(x = \"\", y = \"Indice de Jacard\")\n\n\n\nFigure 13.29: Indices de Jacard obtenus sur 1000 réplications du k-means\n\n\n\nLa figure 13.29 indique clairement que les groupes 1 et 2 sont très stables, car les valeurs de Jacard obtenues sont le plus souvent supérieures à 0,75. Le groupe 3 a le plus souvent des valeurs légèrement inférieures aux deux premiers groupes, mais tout de même bien supérieures à 0,5. En revanche, le groupe 4 a un grand nombre de valeurs inférieures à 0,5 indiquant une tendance du groupe à se dissoudre lors des réplications.\nConsidérant que le dernier groupe est le plus instable, nous décidons d’observer les valeurs des centres qu’il obtient pour les différentes réplications.\n\ncenters_groupe4 &lt;- subset(stab_results$centers, stab_results$centers$groupe == 4)\ncenters_groupe4$groupe &lt;- NULL\n\ndf &lt;- reshape2::melt(centers_groupe4)\ndf$variable &lt;- as.factor(df$variable)\n\nggplot(df) + \n  geom_histogram(aes(x = value), bins = 30) + \n  facet_wrap(vars(variable), ncol = 3, scales = \"free\") + \n  labs(x = \"\", y = \"\")\n\n\n\nFigure 13.30: Distributions des valeurs des centres du groupe 4 sur 1000 itérations\n\n\n\nLes différents histogrammes de la figure 13.30 indiquent clairement que pour plusieurs variables (Lden, NO2, PM25, Pct_Img, et NivVieMed) les caractéristiques du groupe 4 varient grandement sur l’ensemble des réplications. Nous pouvons comparer ce graphique à celui du groupe 2 qui est bien plus stable.\n\ncenters_groupe2 &lt;- subset(stab_results$centers, stab_results$centers$groupe == 2)\ncenters_groupe2$groupe &lt;- NULL\n\ndf &lt;- reshape2::melt(centers_groupe2)\ndf$variable &lt;- as.factor(df$variable)\n\nggplot(df) + \n  geom_histogram(aes(x = value), bins = 30) + \n  facet_wrap(vars(variable), ncol = 3, scales = \"free\") + \n  labs(x = \"\", y = \"\")\n\n\n\nFigure 13.31: Distributions des valeurs des centres du groupe 2 sur 1000 itérations\n\n\n\nNous pouvons constater une plus faible variance des résultats obtenus (en regardant notamment l’axe horizontal) pour les centres des groupes à la figure 13.31."
  },
  {
    "objectID": "13-MethodeClassification.html#sec-135",
    "href": "13-MethodeClassification.html#sec-135",
    "title": "13  Méthodes de classification non supervisée",
    "section": "\n13.5 Conclusion sur la cinquième partie",
    "text": "13.5 Conclusion sur la cinquième partie\nDans le cadre de cette cinquième partie du livre, nous avons abordé les principales méthodes factorielles et les principales méthodes de classification non supervisée. Les premières sont des méthodes de réduction de données puisqu’elles permettent de résumer l’information d’un tableau en quelques nouvelles variables synthétiques. Les secondes permettent de regrouper les observations d’un tableau en plusieurs groupes homogènes. Il existe donc une complémentarité évidente entre ces deux groupes de méthodes : si le tableau initial comprend un grand nombre de variables, il est possible de lui appliquer une méthode factorielle produisant de nouvelles variables synthétiques qui sont ensuite utilisées pour calculer une méthode de classification non supervisée.\n\n\nFigure 13.32: Complémentarité entre les méthodes factorielles et les méthodes de classification non supervisée"
  },
  {
    "objectID": "13-MethodeClassification.html#sec-136",
    "href": "13-MethodeClassification.html#sec-136",
    "title": "13  Méthodes de classification non supervisée",
    "section": "\n13.6 Quiz de révision du chapitre",
    "text": "13.6 Quiz de révision du chapitre\n\n\n\n\n\nLes méthodes de classification non supervisée sont appelées ainsi puisque :\n\n\nRelisez au besoin la section 13.1.\n\n\n\n\n\n\nle nombre de groupes générés par ces méthodes est déterminé automatiquement\n\n\n\n\n\n\n\nles groupes sont inconnus au préalable et formés automatiquement par ces méthodes\n\n\n\n\n\n\n\nl’exécution de ces algorithmes ne nécessite pas de supervision\n\n\n\n\n\n\n\naucun paramètre n’est à définir pour exécuter ces méthodes\n\n\n\n\n\n\n\n\n\n\nEn quoi se distinguent les méthodes de classifications strictes et floues?\n\n\nRelisez au besoin la section 13.1.\n\n\n\n\n\n\nLes premières attribuent chaque observation à un seul groupe alors que les secondes évaluent le degré d’appartenance des observations à chaque groupe\n\n\n\n\n\n\n\nLes méthodes strictes produisent des classifications comportant un moins grand nombre de degrés de liberté\n\n\n\n\n\n\n\nLes méthodes strictes produisent toujours les mêmes résultats, alors que les méthodes floues reposent sur un état initial aléatoire pouvant conduire à des résultats différents\n\n\n\n\n\n\n\n\n\n\nQuels paramètres doivent être définis pour exécuter l’algorithme c-means?\n\n\nRelisez au besoin la section 13.4.4.\n\n\n\n\n\n\nk, soit le nombre de groupes à obtenir\n\n\n\n\n\n\n\nalpha, soit le paramètre contrôlant la vitesse de convergence\n\n\n\n\n\n\n\nlambda, soit la probabilité minimale qu’une observation appartiennent à un groupe\n\n\n\n\n\n\n\nm, soit le paramètre contrôlant le niveau de flou dans une classification floue\n\n\n\n\n\n\n\n\n\n\nLa classification ascendante hiérarchique nécessite de calculer :\n\n\nRelisez au besoin la section 13.3.\n\n\n\n\n\n\nla distance entre chaque observation et ses k plus proches voisins\n\n\n\n\n\n\n\nla distance entre l’ensemble des paires d’observations\n\n\n\n\n\n\n\nla probabilité pour chaque observation d’appartenir à chaque groupe\n\n\n\n\n\n\n\nun dendrogramme, soit une structure hiérarchique permettant de conserver l’ordre dans lequel les groupes sont formés par l’algorithme\n\n\n\n\n\n\n\n\n\n\nPour effectuer une classification non supervisée floue utilisant comme centres de groupes de réelles observations plutôt que des moyennes fictives, quelle méthode peut-on utiliser?\n\n\nRelisez au besoin la section 13.4.4.\n\n\n\n\n\n\nVérifier votre résultat\n\n\n\n\n\n\n\n\n\nAggarwal, Charu C, Alexander Hinneburg et Daniel A Keim. 2001. « On the surprising behavior of distance metrics in high dimensional space. » In International conference on database theory, 420‑434. Springer.\n\n\nApparicio, Philippe, Marie-Soleil Cloutier, Anne-Marie Séguin et Josefina Ades. 2010. « Accessibilité spatiale aux parcs urbains pour les enfants et injustice environnementale. Exploration du cas montréalais. » Revue internationale de géomatique 20 (3): 363‑389. http://rig.revuesonline.com/article.jsp?articleId=15208.\n\n\nBair, Eric. 2013. « Semi-supervised clustering methods. » Wiley Interdisciplinary Reviews: Computational Statistics 5 (5): 349‑361. https://dx.doi.org/10.1002%2Fwics.1270.\n\n\nChandra, Mahalanobis Prasanta. 1936. « On the generalised distance in statistics. » In Proceedings of the National Institute of Sciences of India, 2:49‑55. 1. s.n.\n\n\nFukuyama, Yoshiki. 1989. « A new method of choosing the number of clusters for the fuzzy c-mean method. » In Proc. 5th Fuzzy Syst. Symp., 1989, 247‑250. s.n.\n\n\nGelb, Jérémy et Philippe Apparicio. 2021. « Apport de la classification floue c-means spatiale en géographie: essai de taxinomie socio-résidentielle et environnementale à Lyon. » Cybergeo: European Journal of Geography. https://doi.org/10.4000/cybergeo.36414.\n\n\nGower, John C. 1971. « A general coefficient of similarity and some of its properties. » Biometrics: 857‑871. https://doi.org/10.2307/2528823.\n\n\nMacQueen, James. 1967. « Some methods for classification and analysis of multivariate observations. » In Proceedings of the fifth Berkeley symposium on mathematical statistics and probability, 1:281‑297. 14. Oakland, CA, USA.\n\n\nTibshirani, Robert, Guenther Walther et Trevor Hastie. 2001. « Estimating the number of clusters in a data set via the gap statistic. » Journal of the Royal Statistical Society: Series B (Statistical Methodology) 63 (2): 411‑423. https://doi.org/10.1111/1467-9868.00293.\n\n\nWard, Joe H. 1963. « Hierarchical grouping to optimize an objective function. » Journal of the American statistical association 58 (301): 236‑244. https://doi.org/10.1080/01621459.1963.10500845.\n\n\nXie, Xuanli Lisa et Gerardo Beni. 1991. « A validity measure for fuzzy clustering. » IEEE Transactions on pattern analysis and machine intelligence 13 (8): 841‑847. https://doi.org/10.1109/34.85677."
  },
  {
    "objectID": "14-Annexes.html#sec-141",
    "href": "14-Annexes.html#sec-141",
    "title": "14  Annexes",
    "section": "\n14.1 Table des valeurs critiques de khi-deux",
    "text": "14.1 Table des valeurs critiques de khi-deux\nLa courte syntaxe R ci-dessous permet de générer le tableau 14.1 avec les valeurs critiques du khi-deux pour différents degrés de signification (valeurs de p).\n\nlibrary(stargazer)\n\n# vecteur pour les degrés de liberté de 1 à 30, puis 40 et 50\ndl &lt;- c(1:30, 40, 50, 100, 250, 500) \n# la fonction qchisq permet d'obtenir la valeur théorique en fonction \n# d'une valeur de p et d'un nombre de degrés de liberté\ntableKhi2 &lt;- cbind(dl,\n                p0.10 = round(qchisq(p = 0.90,  df = dl, lower.tail = TRUE), 3),\n                p0.05 = round(qchisq(p = 0.95,  df = dl, lower.tail = TRUE), 3),\n                p0.01 = round(qchisq(p = 0.99,  df = dl, lower.tail = TRUE), 3),\n                p0.001 =round(qchisq(p = 0.999, df = dl, lower.tail = TRUE), 3))\n# Impression du tableau avec la library stargazer\nstargazer(tableKhi2, type = \"text\", summary = FALSE, rownames = FALSE, align = TRUE, digits = 2,\n           title = \"Distribution des valeurs critiques du Khi2\")\n\n\n\n\n\nTableau 14.1: Distribution des valeurs critiques du khi-deux\n\ndl\np = 0,10\np = 0,05\np = 0,01\np = 0,001\n\n\n\n1\n2,71\n3,84\n6,64\n10,83\n\n\n2\n4,61\n5,99\n9,21\n13,82\n\n\n3\n6,25\n7,82\n11,35\n16,27\n\n\n4\n7,78\n9,49\n13,28\n18,47\n\n\n5\n9,24\n11,07\n15,09\n20,52\n\n\n6\n10,64\n12,59\n16,81\n22,46\n\n\n7\n12,02\n14,07\n18,48\n24,32\n\n\n8\n13,36\n15,51\n20,09\n26,12\n\n\n9\n14,68\n16,92\n21,67\n27,88\n\n\n10\n15,99\n18,31\n23,21\n29,59\n\n\n11\n17,27\n19,68\n24,73\n31,26\n\n\n12\n18,55\n21,03\n26,22\n32,91\n\n\n13\n19,81\n22,36\n27,69\n34,53\n\n\n14\n21,06\n23,68\n29,14\n36,12\n\n\n15\n22,31\n25,00\n30,58\n37,70\n\n\n16\n23,54\n26,30\n32,00\n39,25\n\n\n17\n24,77\n27,59\n33,41\n40,79\n\n\n18\n25,99\n28,87\n34,80\n42,31\n\n\n19\n27,20\n30,14\n36,19\n43,82\n\n\n20\n28,41\n31,41\n37,57\n45,31\n\n\n21\n29,61\n32,67\n38,93\n46,80\n\n\n22\n30,81\n33,92\n40,29\n48,27\n\n\n23\n32,01\n35,17\n41,64\n49,73\n\n\n24\n33,20\n36,42\n42,98\n51,18\n\n\n25\n34,38\n37,65\n44,31\n52,62\n\n\n26\n35,56\n38,88\n45,64\n54,05\n\n\n27\n36,74\n40,11\n46,96\n55,48\n\n\n28\n37,92\n41,34\n48,28\n56,89\n\n\n29\n39,09\n42,56\n49,59\n58,30\n\n\n30\n40,26\n43,77\n50,89\n59,70\n\n\n40\n51,80\n55,76\n63,69\n73,40\n\n\n50\n63,17\n67,50\n76,15\n86,66\n\n\n100\n118,50\n124,34\n135,81\n149,45\n\n\n250\n279,05\n287,88\n304,94\n324,83\n\n\n500\n540,93\n553,13\n576,49\n603,45"
  },
  {
    "objectID": "14-Annexes.html#sec-142",
    "href": "14-Annexes.html#sec-142",
    "title": "14  Annexes",
    "section": "\n14.2 Table des valeurs critiques de Fisher",
    "text": "14.2 Table des valeurs critiques de Fisher\nLa courte syntaxe R ci-dessous permet de générer les tableaux 14.2, 14.3 et 14.4 avec les valeurs critiques de F avec p = 0,05.\n\nlibrary(stargazer)\n\ndl1 &lt;- c(1:10, 15, 20, 30, 40, 50, 60, 70, 80, 90, 100, 200, 300, 400, 500, 1000)\ndl2 &lt;- c(1:10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 200, 300, 500, 1000, 2000)\nmatrice &lt;- matrix(ncol = length(dl1), nrow = length(dl2), byrow = TRUE)\nfor(r in 1:length(dl1)){\n  for(c in 1:length(dl2)){\n    matrice[c,r] &lt;- round(qf(p = 0.05, dl1[r], dl2[c], lower.tail = FALSE), 2)\n  }\n}\n\ntableF_p0.05 &lt;- data.frame(dl2 = dl2, matrice)\nnames(tableF_p0.05) &lt;- c(\"dl2\", paste0(\"dl1=\",dl1))\n\nstargazer(tableF_p0.05, type = \"text\", summary = FALSE, rownames = FALSE, align = TRUE, digits = 3,\n          title = \"Distribution des valeurs critiques de F avec p = 0,05\")\n\n\n\n\n\nTableau 14.2: Distribution des valeurs critiques de F avec p = 0,05\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndl2\ndl1=1\ndl1=2\ndl1=3\ndl1=4\ndl1=5\ndl1=6\ndl1=7\ndl1=8\ndl1=9\ndl1=10\n\n\n\n1\n161,45\n199,50\n215,71\n224,58\n230,16\n233,99\n236,77\n238,88\n240,54\n241,88\n\n\n2\n18,51\n19,00\n19,16\n19,25\n19,30\n19,33\n19,35\n19,37\n19,38\n19,40\n\n\n3\n10,13\n9,55\n9,28\n9,12\n9,01\n8,94\n8,89\n8,85\n8,81\n8,79\n\n\n4\n7,71\n6,94\n6,59\n6,39\n6,26\n6,16\n6,09\n6,04\n6,00\n5,96\n\n\n5\n6,61\n5,79\n5,41\n5,19\n5,05\n4,95\n4,88\n4,82\n4,77\n4,74\n\n\n6\n5,99\n5,14\n4,76\n4,53\n4,39\n4,28\n4,21\n4,15\n4,10\n4,06\n\n\n7\n5,59\n4,74\n4,35\n4,12\n3,97\n3,87\n3,79\n3,73\n3,68\n3,64\n\n\n8\n5,32\n4,46\n4,07\n3,84\n3,69\n3,58\n3,50\n3,44\n3,39\n3,35\n\n\n9\n5,12\n4,26\n3,86\n3,63\n3,48\n3,37\n3,29\n3,23\n3,18\n3,14\n\n\n10\n4,96\n4,10\n3,71\n3,48\n3,33\n3,22\n3,14\n3,07\n3,02\n2,98\n\n\n20\n4,35\n3,49\n3,10\n2,87\n2,71\n2,60\n2,51\n2,45\n2,39\n2,35\n\n\n30\n4,17\n3,32\n2,92\n2,69\n2,53\n2,42\n2,33\n2,27\n2,21\n2,16\n\n\n40\n4,08\n3,23\n2,84\n2,61\n2,45\n2,34\n2,25\n2,18\n2,12\n2,08\n\n\n50\n4,03\n3,18\n2,79\n2,56\n2,40\n2,29\n2,20\n2,13\n2,07\n2,03\n\n\n60\n4,00\n3,15\n2,76\n2,53\n2,37\n2,25\n2,17\n2,10\n2,04\n1,99\n\n\n70\n3,98\n3,13\n2,74\n2,50\n2,35\n2,23\n2,14\n2,07\n2,02\n1,97\n\n\n80\n3,96\n3,11\n2,72\n2,49\n2,33\n2,21\n2,13\n2,06\n2,00\n1,95\n\n\n90\n3,95\n3,10\n2,71\n2,47\n2,32\n2,20\n2,11\n2,04\n1,99\n1,94\n\n\n100\n3,94\n3,09\n2,70\n2,46\n2,31\n2,19\n2,10\n2,03\n1,97\n1,93\n\n\n200\n3,89\n3,04\n2,65\n2,42\n2,26\n2,14\n2,06\n1,98\n1,93\n1,88\n\n\n300\n3,87\n3,03\n2,63\n2,40\n2,24\n2,13\n2,04\n1,97\n1,91\n1,86\n\n\n500\n3,86\n3,01\n2,62\n2,39\n2,23\n2,12\n2,03\n1,96\n1,90\n1,85\n\n\n1 000\n3,85\n3,00\n2,61\n2,38\n2,22\n2,11\n2,02\n1,95\n1,89\n1,84\n\n\n2 000\n3,85\n3,00\n2,61\n2,38\n2,22\n2,10\n2,01\n1,94\n1,88\n1,84\n\n\n\n\n\n\n\n\n\n\nTableau 14.3: Distribution des valeurs critiques de F avec p = 0,05 (suite)\n\n\n\n\n\n\n\n\n\n\n\n\n\ndl2\ndl1=15\ndl1=20\ndl1=30\ndl1=40\ndl1=50\ndl1=60\ndl1=70\ndl1=80\ndl1=90\n\n\n\n1\n245,95\n248,01\n250,10\n251,14\n251,77\n252,20\n252,50\n252,72\n252,90\n\n\n2\n19,43\n19,45\n19,46\n19,47\n19,48\n19,48\n19,48\n19,48\n19,48\n\n\n3\n8,70\n8,66\n8,62\n8,59\n8,58\n8,57\n8,57\n8,56\n8,56\n\n\n4\n5,86\n5,80\n5,75\n5,72\n5,70\n5,69\n5,68\n5,67\n5,67\n\n\n5\n4,62\n4,56\n4,50\n4,46\n4,44\n4,43\n4,42\n4,41\n4,41\n\n\n6\n3,94\n3,87\n3,81\n3,77\n3,75\n3,74\n3,73\n3,72\n3,72\n\n\n7\n3,51\n3,44\n3,38\n3,34\n3,32\n3,30\n3,29\n3,29\n3,28\n\n\n8\n3,22\n3,15\n3,08\n3,04\n3,02\n3,01\n2,99\n2,99\n2,98\n\n\n9\n3,01\n2,94\n2,86\n2,83\n2,80\n2,79\n2,78\n2,77\n2,76\n\n\n10\n2,85\n2,77\n2,70\n2,66\n2,64\n2,62\n2,61\n2,60\n2,59\n\n\n20\n2,20\n2,12\n2,04\n1,99\n1,97\n1,95\n1,93\n1,92\n1,91\n\n\n30\n2,01\n1,93\n1,84\n1,79\n1,76\n1,74\n1,72\n1,71\n1,70\n\n\n40\n1,92\n1,84\n1,74\n1,69\n1,66\n1,64\n1,62\n1,61\n1,60\n\n\n50\n1,87\n1,78\n1,69\n1,63\n1,60\n1,58\n1,56\n1,54\n1,53\n\n\n60\n1,84\n1,75\n1,65\n1,59\n1,56\n1,53\n1,52\n1,50\n1,49\n\n\n70\n1,81\n1,72\n1,62\n1,57\n1,53\n1,50\n1,49\n1,47\n1,46\n\n\n80\n1,79\n1,70\n1,60\n1,54\n1,51\n1,48\n1,46\n1,45\n1,44\n\n\n90\n1,78\n1,69\n1,59\n1,53\n1,49\n1,46\n1,44\n1,43\n1,42\n\n\n100\n1,77\n1,68\n1,57\n1,52\n1,48\n1,45\n1,43\n1,41\n1,40\n\n\n200\n1,72\n1,62\n1,52\n1,46\n1,41\n1,39\n1,36\n1,35\n1,33\n\n\n300\n1,70\n1,61\n1,50\n1,43\n1,39\n1,36\n1,34\n1,32\n1,31\n\n\n500\n1,69\n1,59\n1,48\n1,42\n1,38\n1,35\n1,32\n1,30\n1,29\n\n\n1 000\n1,68\n1,58\n1,47\n1,41\n1,36\n1,33\n1,31\n1,29\n1,27\n\n\n2 000\n1,67\n1,58\n1,46\n1,40\n1,36\n1,32\n1,30\n1,28\n1,27\n\n\n\n\n\n\n\n\n\n\nTableau 14.4: Distribution des valeurs critiques de F avec p = 0,05 (suite)\n\ndl2\ndl1=100\ndl1=200\ndl1=300\ndl1=400\ndl1=500\ndl1=1000\n\n\n\n1\n253,04\n253,68\n253,89\n254,00\n254,06\n254,19\n\n\n2\n19,49\n19,49\n19,49\n19,49\n19,49\n19,49\n\n\n3\n8,55\n8,54\n8,54\n8,53\n8,53\n8,53\n\n\n4\n5,66\n5,65\n5,64\n5,64\n5,64\n5,63\n\n\n5\n4,41\n4,39\n4,38\n4,38\n4,37\n4,37\n\n\n6\n3,71\n3,69\n3,68\n3,68\n3,68\n3,67\n\n\n7\n3,27\n3,25\n3,24\n3,24\n3,24\n3,23\n\n\n8\n2,97\n2,95\n2,94\n2,94\n2,94\n2,93\n\n\n9\n2,76\n2,73\n2,72\n2,72\n2,72\n2,71\n\n\n10\n2,59\n2,56\n2,55\n2,55\n2,55\n2,54\n\n\n20\n1,91\n1,88\n1,86\n1,86\n1,86\n1,85\n\n\n30\n1,70\n1,66\n1,65\n1,64\n1,64\n1,63\n\n\n40\n1,59\n1,55\n1,54\n1,53\n1,53\n1,52\n\n\n50\n1,52\n1,48\n1,47\n1,46\n1,46\n1,45\n\n\n60\n1,48\n1,44\n1,42\n1,41\n1,41\n1,40\n\n\n70\n1,45\n1,40\n1,39\n1,38\n1,37\n1,36\n\n\n80\n1,43\n1,38\n1,36\n1,35\n1,35\n1,34\n\n\n90\n1,41\n1,36\n1,34\n1,33\n1,33\n1,31\n\n\n100\n1,39\n1,34\n1,32\n1,31\n1,31\n1,30\n\n\n200\n1,32\n1,26\n1,24\n1,23\n1,22\n1,21\n\n\n300\n1,30\n1,23\n1,21\n1,20\n1,19\n1,17\n\n\n500\n1,28\n1,21\n1,18\n1,17\n1,16\n1,14\n\n\n1 000\n1,26\n1,19\n1,16\n1,14\n1,13\n1,11\n\n\n2 000\n1,25\n1,18\n1,15\n1,13\n1,12\n1,09"
  },
  {
    "objectID": "14-Annexes.html#sec-143",
    "href": "14-Annexes.html#sec-143",
    "title": "14  Annexes",
    "section": "\n14.3 Table des valeurs critiques de t\n",
    "text": "14.3 Table des valeurs critiques de t\n\nLa courte syntaxe R ci-dessous permet de générer le tableau 14.5 avec les valeurs critiques de t avec p = 0,10, 0,05, 0,01 et 0,01.\n\nlibrary(stargazer)\n\n# vecteur pour les degrés de liberté de 1 à 30, puis 40 et 50\ndl &lt;- c(1:30, 40, 50, 60, 70, 80, 90, 100, 250, 500, 1000, 2500) \n# la fonction qchisq permet d'obtenir la valeur théorique en fonction \n# d'une valeur de p et d'un nombre de degrés de liberté\ntableT &lt;- cbind(dl,\n                p0.10 =  round(qt(p = 1 - (0.10/2),  df = dl),2),\n                p0.05 =  round(qt(p = 1 - (0.05/2),  df = dl),2),\n                p0.01 =  round(qt(p = 1 - (0.01/2),  df = dl),2),\n                p0.001 = round(qt(p = 1 - (0.001/2), df = dl),2))\n# Impression du tableau avec la library stargazer\nstargazer(tableT, type = \"text\", summary = FALSE, rownames = FALSE, align = TRUE, digits = 2,\n          title=\"Distribution des valeurs critiques de t\")\n\n\n\n\n\nTableau 14.5: Distribution des valeurs critiques de t\n\ndl\np = 0,10\np = 0,05\np = 0,01\np = 0,001\n\n\n\n1\n6,31\n12,71\n63,66\n636,62\n\n\n2\n2,92\n4,30\n9,92\n31,60\n\n\n3\n2,35\n3,18\n5,84\n12,92\n\n\n4\n2,13\n2,78\n4,60\n8,61\n\n\n5\n2,02\n2,57\n4,03\n6,87\n\n\n6\n1,94\n2,45\n3,71\n5,96\n\n\n7\n1,89\n2,36\n3,50\n5,41\n\n\n8\n1,86\n2,31\n3,36\n5,04\n\n\n9\n1,83\n2,26\n3,25\n4,78\n\n\n10\n1,81\n2,23\n3,17\n4,59\n\n\n11\n1,80\n2,20\n3,11\n4,44\n\n\n12\n1,78\n2,18\n3,05\n4,32\n\n\n13\n1,77\n2,16\n3,01\n4,22\n\n\n14\n1,76\n2,14\n2,98\n4,14\n\n\n15\n1,75\n2,13\n2,95\n4,07\n\n\n16\n1,75\n2,12\n2,92\n4,01\n\n\n17\n1,74\n2,11\n2,90\n3,97\n\n\n18\n1,73\n2,10\n2,88\n3,92\n\n\n19\n1,73\n2,09\n2,86\n3,88\n\n\n20\n1,72\n2,09\n2,85\n3,85\n\n\n21\n1,72\n2,08\n2,83\n3,82\n\n\n22\n1,72\n2,07\n2,82\n3,79\n\n\n23\n1,71\n2,07\n2,81\n3,77\n\n\n24\n1,71\n2,06\n2,80\n3,75\n\n\n25\n1,71\n2,06\n2,79\n3,73\n\n\n26\n1,71\n2,06\n2,78\n3,71\n\n\n27\n1,70\n2,05\n2,77\n3,69\n\n\n28\n1,70\n2,05\n2,76\n3,67\n\n\n29\n1,70\n2,05\n2,76\n3,66\n\n\n30\n1,70\n2,04\n2,75\n3,65\n\n\n40\n1,68\n2,02\n2,70\n3,55\n\n\n50\n1,68\n2,01\n2,68\n3,50\n\n\n60\n1,67\n2,00\n2,66\n3,46\n\n\n70\n1,67\n1,99\n2,65\n3,44\n\n\n80\n1,66\n1,99\n2,64\n3,42\n\n\n90\n1,66\n1,99\n2,63\n3,40\n\n\n100\n1,66\n1,98\n2,63\n3,39\n\n\n250\n1,65\n1,97\n2,60\n3,33\n\n\n500\n1,65\n1,96\n2,59\n3,31\n\n\n1 000\n1,65\n1,96\n2,58\n3,30\n\n\n2 500\n1,65\n1,96\n2,58\n3,29"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "Bibliographie",
    "section": "",
    "text": "Aggarwal, Charu C, Alexander Hinneburg et Daniel A Keim. 2001.\n« On the surprising behavior of distance metrics in high\ndimensional space. » In International conference on database\ntheory, 420‑434. Springer.\n\n\nAllcott, Hunt et Matthew Gentzkow. 2017. « Social media and fake\nnews in the 2016 election. » Journal of economic\nperspectives 31 (2): 211‑36. https://doi.org/10.1257/jep.31.2.211.\n\n\nAly, Sharif S, Jianyang Zhao, Ben Li et Jiming Jiang. 2014.\n« Reliability of environmental sampling culture results using the\nnegative binomial intraclass correlation coefficient. »\nSpringerPlus 3 (1): 40. https://doi.org/10.1186/2193-1801-3-40.\n\n\nAnastasopoulos, Panagiotis C, John E Haddock, Matthew G Karlaftis et\nFred L Mannering. 2012. « Analysis of urban travel times:\nHazard-based approach to random parameters. » Transportation\nresearch record 2302 (1): 121‑129. https://doi.org/10.3141%2F2302-13.\n\n\nApparicio, Philippe. 2002. « Apport des systèmes\nd’information géographique à\nl’étude de l’insertion des HLM dans les quartiers\nmontréalais. » Thèse de doctorat, Université du\nMaine. http://www.theses.fr/2002LEMA3007.\n\n\nApparicio, Philippe, Marie-Soleil Cloutier, Anne-Marie Séguin et\nJosefina Ades. 2010. « Accessibilité spatiale aux\nparcs urbains pour les enfants et injustice environnementale.\nExploration du cas montréalais. » Revue\ninternationale de géomatique 20 (3): 363‑389. http://rig.revuesonline.com/article.jsp?articleId=15208.\n\n\nApparicio, Philippe et Jérémy Gelb. 2020. « Cyclists′ exposure to\nroad traffic noise: A comparison of three North American and European\ncities. » Acoustics 2 (1): 73‑86. https://doi.org/10.3390/acoustics2010006.\n\n\nApparicio, Philippe, Jérémy Gelb, Mathieu Carrier, Marie-Ève Mathieu et\nSimon Kingham. 2018. « Exposure to noise and air pollution by mode\nof transportation during rush hours in Montreal. » Journal of\nTransport Geography 70: 182‑192. https://doi.org/10.1016/j.jtrangeo.2018.06.007.\n\n\nApparicio, Philippe, Thi-Thanh-Hien Pham, Anne-Marie Séguin et Jean\nDubé. 2016. « Spatial distribution of vegetation in and around\ncity blocks on the Island of Montreal: A double environmental\ninequity? » Applied Geography 76: 128‑136. http://dx.doi.org/10.1016/j.apgeog.2016.09.023.\n\n\nAtkinson, Rowland et Keith Kintrea. 2001. « Disentangling area\neffects: Evidence from deprived and non-deprived\nneighbourhoods. » Urban studies 38 (12): 2277‑2298. https://doi.org/10.1080%2F00420980120087162.\n\n\nAudate, Pierre Paul, Geneviève Cloutier et Alexandre Lebel. 2021.\n« The motivations of urban agriculture practitioners in deprived\nneighborhoods: A comparative study of Montreal and Quito. »\nUrban Forestry & Urban Greening 62: 127171. https://doi.org/10.1016/j.ufug.2021.127171.\n\n\nAudrin, Thomas, Philippe Apparicio et Anne-Marie Séguin. 2021.\n« La localisation des écoles primaires et le bruit\naérien dans la région\nmétropolitaine de Toronto: un diagnostic\nd’équité environnementale et une analyse des\nimpacts sur la réussite scolaire. » Canadian\nJournal of Regional Science/Revue canadienne des sciences\nrégionales 44 (1): 22‑34. https://idjs.ca/images/rcsr/archives/V44N1_5-AUDRIN-APPARICIO-SEGUIN.pdf.\n\n\nBair, Eric. 2013. « Semi-supervised clustering methods. »\nWiley Interdisciplinary Reviews: Computational Statistics 5\n(5): 349‑361. https://dx.doi.org/10.1002%2Fwics.1270.\n\n\nBendixen, Mike T. 1995. « Compositional perceptual mapping using\nchi-squared trees analysis and correspondence analysis. »\nJournal of Marketing Management 11 (6): 571‑581. https://doi.org/10.1080/0267257X.1995.9964368.\n\n\nBenzécri, Jean-Paul. 1973. L’analyse des données. Tome\n1. La taxinomie. Tome 2. L’analyse des correspondances. Vol. 2.\nDunod.\n\n\nBhatt, Vikram et Leila Marie Farah. 2016. « Cultivating Montreal:\nA Brief History of Citizens and Institutions Integrating Urban\nAgriculture in the City. » Urban Agriculture & Regional\nFood Systems 1 (1): 1‑12. http://dx.doi.org/10.2134/urbanag2015.01.1511.\n\n\nBolker, Benjamin M, Mollie E Brooks, Connie J Clark, Shane W Geange,\nJohn R Poulsen, M Henry H Stevens et Jada-Simone S White. 2009.\n« Generalized linear mixed models: a practical guide for ecology\nand evolution. » Trends in ecology & evolution 24\n(3): 127‑135. https://doi.org/10.1016/j.tree.2008.10.008.\n\n\nBoulos, Maged N Kamel et Estella M Geraghty. 2020. « Geographical\ntracking and mapping of coronavirus disease COVID-19/severe acute\nrespiratory syndrome coronavirus 2 (SARS-CoV-2) epidemic and associated\nevents around the world: how 21st century GIS technologies are\nsupporting the global fight against outbreaks and epidemics. »\nInternational journal of health geographics 19 (1): 1‑12. https://doi.org/10.1186/s12942-020-00202-8.\n\n\nBrant, Rollin. 1990. « Assessing proportionality in the\nproportional odds model for ordinal logistic regression. »\nBiometrics: 1171‑1178. https://www.jstor.org/stable/2532457.\n\n\nBressoux, Pascal. 2010. Modélisation statistique\nappliquée aux sciences sociales. De boeck.\n\n\nBurdenski, Jr Thomas K. 2000. « Evaluating univariate, bivariate,\nand multivariate normality using graphical procedures. »\nERIC: 1‑62.\n\n\nCarrier, Mathieu, Philippe Apparicio, Anne-Marie Séguin et Dan Crouse.\n2014. « Ambient air pollution concentration in Montreal and\nenvironmental equity: Are children at risk at school? » Case\nStudies on Transport Policy 2 (2): 61‑69. https://doi.org/10.1016/j.cstp.2014.06.003.\n\n\nChandra, Mahalanobis Prasanta. 1936. « On the generalised distance\nin statistics. » In Proceedings of the National Institute of\nSciences of India, 2:49‑55. 1. s.n.\n\n\nChang, Winston. 2018. R Graphics Cookbook, 2nd edition. CRC\nPress.\n\n\nCloutier, Marie-soleil, Mathieu Tremblay, Patrick Morency et Philippe\nApparicio. 2014. « Carrefours en milieu urbain: quels risques pour\nles piétons? Exemple empirique des quartiers centraux de\nMontréal, Canada. » Recherche Transports\nSécurité 30: 3‑20.\n\n\nCohen, Jacob. 1992. « A power primer. » Psychological\nbulletin 112 (1): 155‑159. https://doi.org/10.1037/0033-2909.112.1.155.\n\n\n———. 2013. Statistical power analysis for the behavioral\nsciences. Academic press.\n\n\nDe Alvarenga, Bernardo, Philippe Apparicio et Anne-Marie Séguin. 2018.\n« L’accessibilité aux aires de jeux dans les parcs de\nla Communauté métropolitaine de\nMontréal. » Cahiers de géographie\ndu Québec 62 (176): 229‑246. https://doi.org/10.7202/1063104ar.\n\n\nDunn, Peter K. et Gordon K. Smyth. 1996. « Randomized Quantile\nResiduals. » Journal of Computational and Graphical\nStatistics 5 (3): 236‑244. https://doi.org/10.2307/1390802.\n\n\nEscofier, Brigitte. 1979. « Traitement simultané de\nvariables qualitatives et quantitatives en analyse factorielle. »\nCahiers de l’Analyse des Données 4 (2): 137‑146.\n\n\nEscofier, Brigitte et Jérôme Pagès. 1998. « Analyses factorielles\nsimples et multiples. » Dunod, Paris.\n\n\nField, Andy P, Jeremy Miles et Zoë Field. 2012. « Discovering\nstatistics using R. » Thousand Oaks.\n\n\nFox, John et Georges Monette. 1992. « Generalized collinearity\ndiagnostics. » Journal of the American Statistical\nAssociation 87 (417): 178‑183. https://doi.org/10.2307/2290467.\n\n\nFrank, Lawrence, Mark Bradley, Sarah Kavage, James Chapman et T Keith\nLawton. 2008. « Urban form, travel time, and cost relationships\nwith tour complexity and mode choice. » Transportation\n35 (1): 37‑54. https://doi.org/10.1007/s11116-007-9136-6.\n\n\nFukuyama, Yoshiki. 1989. « A new method of choosing the number of\nclusters for the fuzzy c-mean method. » In Proc. 5th Fuzzy\nSyst. Symp., 1989, 247‑250. s.n.\n\n\nGelb, Jérémy et Philippe Apparicio. 2020. « Modelling cyclists’\nmulti-exposure to air and noise pollution with low-cost sensors: The\ncase of Paris. » Atmosphere 11 (4): 422. https://doi.org/10.3390/atmos11040422.\n\n\n———. 2021. « Apport de la classification floue c-means spatiale en\ngéographie: essai de taxinomie\nsocio-résidentielle et environnementale à\nLyon. » Cybergeo: European Journal of Geography. https://doi.org/10.4000/cybergeo.36414.\n\n\nGelman, Andrew. 2005. « Analysis of variance—why it is more\nimportant than ever. » The annals of statistics 33 (1):\n1‑53. https://doi.org/10.1214/009053604000001048.\n\n\nGelman, Andrew et Jennifer Hill. 2006. Data analysis using\nregression and multilevel/hierarchical models. Cambridge university\npress.\n\n\nGilles, Alain et Pierre Maranda. 1994.\nÉléments de méthodologie et\nd’analyse statistique pour les sciences sociales. McGraw-Hill.\n\n\nGlass, Gene V, Percy D Peckham et James R Sanders. 1972.\n« Consequences of failure to meet assumptions underlying the fixed\neffects analyses of variance and covariance. » Review of\neducational research 42 (3): 237‑288.\n\n\nGower, John C. 1971. « A general coefficient of similarity and\nsome of its properties. » Biometrics: 857‑871. https://doi.org/10.2307/2528823.\n\n\nHanck, Christoph, Martin Arnold, Alexander Gerber et Martin Schmelzer.\n2019. Introduction to econometrics with R. s.n. https://www.econometrics-with-r.org/ITER.pdf.\n\n\nHarlan, Sharon L, Anthony J Brazel, G Darrel Jenerette, Nancy S Jones,\nLarissa Larsen, Lela Prashad et William L Stefanov. 2007. « In the\nshade of affluence: the inequitable distribution of the urban heat\nisland. » Research in Social Problems and Public Policy\n15: 173‑202. http://dx.doi.org/10.1016/S0196-1152(07)15005-5.\n\n\nHilbe, Joseph M. 2009. Logistic regression models. CRC press.\n\n\nHotelling, Harold. 1933. « Analysis of a complex of statistical\nvariables into principal components. » Journal of educational\npsychology 24 (6): 417. https://psycnet.apa.org/doi/10.1037/h0071325.\n\n\nHuang, Ganlin, Weiqi Zhou et ML Cadenasso. 2011. « Is everyone hot\nin the city? Spatial pattern of land surface temperatures, land cover\nand neighborhood socioeconomic characteristics in Baltimore,\nMD. » Journal of environmental management 92 (7):\n1753‑1759. https://doi.org/10.1016/j.jenvman.2011.02.006.\n\n\nHubert, Mia, Peter J Rousseeuw et Karlien Vanden Branden. 2005.\n« ROBPCA: a new approach to robust principal component\nanalysis. » Technometrics 47 (1): 64‑79. https://doi.org/10.1198/004017004000000563.\n\n\nIsmay, Chester et Albert Y Kim. 2019. Statistical inference via data\nscience: a ModernDive into R and the tidyverse. CRC Press.\n\n\nJoanes, DN et CA Gill. 1998. « Comparing measures of sample\nskewness and kurtosis. » Journal of the Royal Statistical\nSociety: Series D (The Statistician) 47 (1): 183‑189. https://www.jstor.org/stable/2988433.\n\n\nKaiser, Henry F. 1960. « The application of electronic computers\nto factor analysis. » Educational and psychological\nmeasurement 20 (1): 141‑151. https://doi.org/10.1177%2F001316446002000116.\n\n\nLê, Sébastien, Julie Josse et François Husson. 2008. « FactoMineR:\nA Package for Multivariate Analysis. » Journal of Statistical\nSoftware 25 (1): 1‑18. 10.18637/jss.v025.i01.\n\n\nLebart, Ludovic, Alain Morineau et Marie Piron. 1995. Statistique\nexploratoire multidimensionnelle. Dunod.\n\n\nLix, Lisa M, Joanne C Keselman et HJ Keselman. 1996.\n« Consequences of assumption violations revisited: A quantitative\nreview of alternatives to the one-way analysis of variance F\ntest. » Review of educational research 66 (4): 579‑619.\nhttps://doi.org/10.3102/00346543066004579.\n\n\nMacQueen, James. 1967. « Some methods for classification and\nanalysis of multivariate observations. » In Proceedings of\nthe fifth Berkeley symposium on mathematical statistics and\nprobability, 1:281‑297. 14. Oakland, CA, USA.\n\n\nMcClintock, Nathan. 2018. « Urban agriculture, racial capitalism,\nand resistance in the settler-colonial city. » Geography\nCompass 12 (6): 1‑16. https://doi.org/10.1111/gec3.12373.\n\n\nMcElreath, Richard. 2020. Statistical rethinking: A Bayesian course\nwith examples in R and Stan. CRC press.\n\n\nMcFadden, Brandon R. 2016. « Examining the gap between science and\npublic opinion about genetically modified food and global\nwarming. » PloS one 11 (11): e0166140. https://doi.org/10.1371/journal.pone.0166140.\n\n\nMesserli, Franz H. 2012. « Chocolate consumption, cognitive\nFunction, and Nobel laureates. » The new England Journal of\nMedicine 367 (16): 1563‑1564. https://doi.org/10.1056/nejmon1211064.\n\n\nMihalcea, Rada et Paul Tarau. 2004. « Textrank: Bringing order\ninto text. » In Proceedings of the 2004 conference on\nempirical methods in natural language processing, 404‑411. s.n.\n\n\nNakagawa, Shinichi, Paul C. D. Johnson et Holger Schielzeth. 2017.\n« The coefficient of determination R2 and intra-class correlation\ncoefficient from generalized linear mixed-effects models revisited and\nexpanded. » Journal of The Royal Society Interface 14\n(134): 20170213. https://doi.org/10.1098/rsif.2017.0213.\n\n\nNelder, John A. et Robert W. M. Wedderburn. 1972. « Generalized\nLinear Models. » Journal of the Royal Statistical Society.\nSeries A (General) 135 (3): 370‑384. http://www.jstor.org/stable/2344614.\n\n\nNeyman, Jerzy, Egon Sharpe Pearson et Karl Pearson. 1933. « IX. On\nthe problem of the most efficient tests of statistical\nhypotheses. » Philosophical Transactions of the Royal Society\nof London. Series A, Containing Papers of a Mathematical or Physical\nCharacter 231 (694-706): 289‑337. https://royalsocietypublishing.org/doi/abs/10.1098/rsta.1933.0009.\n\n\nPagès, Jérôme. 2002. « Analyse factorielle multiple\nappliquée aux variables qualitatives et aux\ndonnées mixtes. » Revue de statistique\nappliquée 50 (4): 5‑37.\n\n\n———. 2013. Analyse factorielle multiple avec R. EDP sciences.\n\n\nPham, Thi-Thanh-Hien, Philippe Apparicio, Shawn Landry et Joseph\nLewnard. 2017. « Disentangling the effects of urban form and\nsocio-demographic context on street tree cover: A multi-level analysis\nfrom Montréal. » Landscape and Urban\nPlanning 157: 422‑433. http://dx.doi.org/10.1016/j.landurbplan.2016.09.001.\n\n\nPham, Thi-Thanh-Hien, Philippe Apparicio, Anne-Marie Séguin, Shawn\nLandry et Martin Gagnon. 2012. « Spatial distribution of\nvegetation in Montreal: an uneven distribution or environmental\ninequity? » Landscape and urban planning 107 (3):\n214‑224. http://dx.doi.org/10.1016/j.landurbplan.2012.06.002.\n\n\nPhilibert, Mathieu D et Philippe Apparicio. 2007. « Statistiques\nspatiales appliquées à l’analyse de\ndonnées de santé. » In Géographie\nde la santé : un panorama, 111‑132. Economica.\n\n\nPumain, Denise et Michèle Béguin. 1994. La représentation des\ndonnées géographiques: statistique et cartographie. Armand Colin.\n\n\nRaudenbush, Stephen W et Anthony S Bryk. 2002. Hierarchical linear\nmodels: Applications and data analysis methods. Vol. 1. Sage.\n\n\nRazali, Nornadiah Mohd et Yap Bee Wah. 2011. « Power comparisons\nof Shapiro-Wilk, Kolmogorov-Smirnov, Lilliefors and Anderson-Darling\ntests. » Journal of statistical modeling and analytics 2\n(1): 21‑33.\n\n\nReed, William J. 2002. « On the rank-Size distribution for human\nsettlements. » Journal of Regional Science 42 (1): 1‑17.\nhttps://onlinelibrary.wiley.com/doi/abs/10.1111/1467-9787.00247.\n\n\nReed, William J. et Murray Jorgensen. 2004. « The souble\nPareto-Lognormal sistribution: A new parametric model for size\ndistributions. » Communications in Statistics - Theory and\nMethods 33 (8). Taylor & Francis: 1733‑1753. https://doi.org/10.1081/STA-120037438.\n\n\nRivest, Louis-Paul et Nathalie Plante. 1988. « L’analyse en\ncomposantes principales robuste. » Revue de statistique\nappliquée 36 (1): 55‑66. http://www.numdam.org/article/RSA_1988__36_1_55_0.pdf.\n\n\nRoback, Paul et Julie Legler. 2021. Beyond multiple linear\nregression: Applied generalized linear models and multilevel models in\nR. CRC Press.\n\n\nSanchez, Lino et Tony G Reames. 2019. « Cooling Detroit: A\nsocio-spatial analysis of equity in green roofs as an urban heat island\nmitigation strategy. » Urban Forestry & Urban\nGreening 44: 126331. https://doi.org/10.1016/j.ufug.2019.04.014.\n\n\nSanders, Lena. 1989. L’analyse statistique des données\nen géographie. GIP Reclus.\n\n\nSAS Institute Inc. 2020a. « SAS/STAT 15.2 User’s\nGuide Modeling Multinomial Overdispersion. » https://documentation.sas.com/?docsetId=statug&docsetTarget=statug_fmm_examples04.htm&docsetVersion=15.2&locale=en.\n\n\n———. 2020b. « SAS/STAT 15.2 User’s Guide Poisson\nRegression | SAS Annotated Output. » https://stats.idre.ucla.edu/sas/output/poisson-regression/.\n\n\nSawilowsky, Shlomo S. 2009. « New effect size rules of\nthumb. » Journal of Modern Applied Statistical Methods 8\n(2): 467‑474. https://doi.org/10.22237/jmasm/1257035100.\n\n\nSchwarzkopf, Dietrich, Benjamin de Haas et Geraint Rees. 2012.\n« Better ways to improve standards in brain-behavior correlation\nanalysis. » Frontiers in Human Neuroscience 6: 200. https://www.frontiersin.org/articles/10.3389/fnhum.2012.00200.\n\n\nSean, Owen. 2018. « Common probability distributions. » https://medium.com/@srowen/common-probability-distributions-347e6b945ce4.\n\n\nSmithson, Michael et Jay Verkuilen. 2006. « A better lemon\nsqueezer? Maximum-likelihood regression with beta-distributed dependent\nvariables. » Psychological methods 11 (1): 54. https://doi.org/10.1037/1082-989x.11.1.54.\n\n\nSobol, IM. 1993. « Sensitivity estimates for nonlinear\nmathematical models. » Mathematics and Computers in\nSimulation 1 (4): 407‑414.\n\n\nSpyratos, Spyridon, Michele Vespe, Fabrizio Natale, Ingmar Weber, Emilio\nZagheni et Marzia Rango. 2019. « Quantifying international human\nmobility patterns using Facebook Network data. » PloS\none 14 (10): e0224134. https://doi.org/10.1371/journal.pone.0224134.\n\n\nStryhn, H, J Sanchez, P Morley, C Booker et IR Dohoo. 2006.\n« Interpretation of variance parameters in multilevel Poisson\nregression models. » In Proceedings of the 11th International\nSymposium on Veterinary Epidemiology and Economics. Vol. 702. s.n.\n\n\nTabachnick, Barbara G, Linda S Fidell et Jodie B Ullman. 2007. Using\nmultivariate statistics. Pearson.\n\n\nTeubner, Timm, Florian Hawlitschek et David Dann. 2017. « Price\ndeterminants on AirBnB: How reputation pays off in the sharing\neconomy. » Journal of Self-Governance & Management\nEconomics 5 (4). http://dx.doi.org/10.22381/JSME5420173.\n\n\nTibshirani, Robert, Guenther Walther et Trevor Hastie. 2001.\n« Estimating the number of clusters in a data set via the gap\nstatistic. » Journal of the Royal Statistical Society: Series\nB (Statistical Methodology) 63 (2): 411‑423. https://doi.org/10.1111/1467-9868.00293.\n\n\nWang, Dan et Juan L Nicolau. 2017. « Price determinants of sharing\neconomy based accommodation rental: A study of listings from 33 cities\non Airbnb.com. » International Journal of Hospitality\nManagement 62: 120‑131. https://doi.org/10.1016/j.ijhm.2016.12.007.\n\n\nWard, Joe H. 1963. « Hierarchical grouping to optimize an\nobjective function. » Journal of the American statistical\nassociation 58 (301): 236‑244. https://doi.org/10.1080/01621459.1963.10500845.\n\n\nWickham, Hadley. 2010. « A layered grammar of graphics. »\nJournal of Computational and Graphical Statistics 19 (1): 3‑28.\nhttp://dx.doi.org/10.1198/jcgs.2009.07098.\n\n\nWilcox, Rand R. 1994. « The percentage bend correlation\ncoefficient. » Psychometrika 59 (4): 601‑616. https://doi.org/10.1007/BF02294395.\n\n\nWood, Simon N. 2004. « Stable and efficient multiple smoothing\nparameter estimation for generalized additive models. »\nJournal of the American Statistical Association 99 (467):\n673‑686. https://doi.org/10.1198/016214504000000980.\n\n\nWu, Sheng, Catherine M Crespi et Weng Kee Wong. 2012. « Comparison\nof methods for estimating the intraclass correlation coefficient for\nbinary responses in cancer prevention cluster randomized\ntrials. » Contemporary clinical trials 33 (5): 869‑880.\nhttps://doi.org/10.1016/j.cct.2012.05.004.\n\n\nXie, Xuanli Lisa et Gerardo Beni. 1991. « A validity measure for\nfuzzy clustering. » IEEE Transactions on pattern analysis and\nmachine intelligence 13 (8): 841‑847. https://doi.org/10.1109/34.85677.\n\n\nYap, Bee Wah et Chiaw Hock Sim. 2011. « Comparisons of various\ntypes of normality tests. » Journal of Statistical\nComputation and Simulation 81 (12): 2141‑2155. https://doi.org/10.1080/00949655.2010.520163.\n\n\nZeileis, Achim. 2004. Econometric computing with HC and HAC\ncovariance matrix estimators. Institut für Statistik\nund Mathematik.\n\n\nZhang, Zhihua, Rachel JC Chen, Lee D Han et Lu Yang. 2017. « Key\nfactors affecting the price of Airbnb listings: A geographically\nweighted approach. » Sustainability 9 (9): 1635. http://dx.doi.org/10.3390/su9091635."
  }
]